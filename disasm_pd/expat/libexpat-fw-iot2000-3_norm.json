{"sip24_update": {"disasm": {"9216": ["push ebp", "push edi", "push esi", "mov esi p", "push ebx", "mov ebx H", "sub esp imm", "lea H [p+imm]", "lea p [H+imm]", "lea edi [H+imm]", "mov [esp+imm] eax", "mov [esp+imm] edx", "mov func [H+imm]"], "9247": ["cmp p [esp+imm]", "jnb short addr"], "9253": ["cmp eax edi", "jnb short addr"], "9257": ["lea edx [eax+imm]", "inc esi", "mov [H+imm] edx", "mov dl [p-imm]", "cmp p [esp+imm]", "mov [eax] dl", "mov eax [H+imm]", "jb short addr"], "9278": ["cmp eax edi", "jb short addr"], "9282": ["mov edi [H+imm]", "mov eax [H+imm]", "xor eax edi", "mov p [H+imm]", "mov [H+imm] eax", "mov eax [H+imm]", "xor eax esi", "mov edx imm", "mov [H+imm] eax", "mov eax H", "call func", "mov eax [H]", "mov edx [H+imm]", "xor eax edi", "xor edx esi", "mov [H] eax", "add dword ptr [H+imm] imm", "adc dword ptr [H+imm] imm", "lea eax [H+imm]", "mov [H+imm] edx", "mov [H+imm] eax"], "9344": ["add esp imm", "mov eax H", "pop H", "pop esi", "pop edi", "pop ebp", "retn"], "9360": ["mov ecx [H+imm]", "mov ebp [H+imm]", "mov eax [H+imm]", "mov edx [H+imm]", "xor eax ecx", "xor edx ebp", "mov [H+imm] eax", "mov [H+imm] edx", "mov eax H", "mov edx imm", "mov [esp+imm] ecx", "call func", "mov eax [H]", "mov ecx [esp+imm]", "xor eax ecx", "mov edx [esp+imm]", "mov [H] eax", "mov eax [H+imm]", "xor eax ebp", "mov [H+imm] edx", "add dword ptr [H+imm] imm", "adc dword ptr [H+imm] imm", "mov [H+imm] eax", "mov eax edx", "jmp addr"]}, "preds": [9253], "succs": [9247]}, "sip24_final": {"disasm": {"9440": ["push edi", "call func", "add edx (offset func - $)", "push esi", "xor esi esi", "push ebx", "mov ebx H", "add H imm", "mov ecx [H+imm]", "mov edi [H+imm]", "sub ecx eax", "add edi left", "shl edi imm", "cmp cl imm", "ja short func"], "9479": ["mov eax left", "and eax 0FFh", "mov left func - 2DF78h)[edx+imm]", "add edx ecx", "jmp edx"], "9504": ["xor eax eax", "mov al [H+imm]", "shl eax imm", "or edi eax"], "9514": ["xor eax eax", "mov al [H+imm]", "shl eax imm", "or edi eax"], "9524": ["xor eax eax", "mov al [H+imm]", "or edi eax"], "9531": ["xor eax eax", "xor edx edx", "mov al [H+imm]", "shld edx eax imm", "shl eax imm", "or edi edx", "mov esi eax"], "9549": ["xor eax eax", "xor edx edx", "mov al [H+imm]", "shld edx eax imm", "shl eax imm", "or edi edx", "or esi eax"], "9567": ["xor eax eax", "xor edx edx", "mov al [H+imm]", "shld edx eax imm", "shl eax imm", "or edi edx", "or esi eax"], "9585": ["xor eax eax", "mov al [H+imm]", "or esi eax"], "9592": ["mov eax [H+imm]", "mov edx [H+imm]", "xor eax esi", "xor edx edi", "mov [H+imm] eax", "mov [H+imm] edx", "mov eax H", "mov edx imm", "call func", "mov ecx [H]", "xor ecx esi", "mov esi [H+imm]", "xor esi edi", "mov edi [H+imm]", "xor edi 0FFh", "mov [H] ecx", "mov [H+imm] esi", "mov [H+imm] edi", "mov eax H", "mov edx imm", "call func", "mov edx [H+imm]", "mov eax [H]", "mov ecx [H+imm]", "xor eax edx", "mov edx [H+imm]", "mov esi [H+imm]", "mov edi [H+imm]", "xor edx ecx", "xor eax esi", "xor edx edi", "mov esi [H+imm]", "mov ecx [H+imm]", "pop H", "xor edx esi", "pop esi", "xor eax ecx", "pop edi", "retn"]}, "preds": [9440, 9479, 9585], "succs": []}, "freeBindings": {"disasm": {"9712": ["test bindings bindings", "jz short addr"], "9716": ["push esi", "mov esi parser", "push ebx", "mov ebx bindings", "push ecx", "jmp short addr"], "9728": ["mov b bindings"], "9730": ["mov eax [parser+imm]", "test eax eax", "jz short addr"], "9737": ["push edx", "push edx", "mov edx [b]", "mov ecx [edx]", "push ecx", "mov edx [parser+imm]", "push edx", "call eax", "add esp imm"], "9753": ["mov edx [parser+imm]", "mov eax [b+imm]", "mov [b+imm] edx", "mov [parser+imm] b", "mov edx [b]", "mov ecx [b+imm]", "test bindings bindings", "mov [edx+imm] ecx", "jnz short addr"], "9783": ["pop bindings", "pop b", "pop parser", "retn"], "9792": ["retn"]}, "preds": [9712], "succs": []}, "normalizeLines": {"disasm": {"9824": ["mov dl [s]", "test dl dl", "jnz short addr"], "9830": ["jmp short addr"], "9832": ["mov dl [eax]", "test dl dl", "jz short addr"], "9838": ["mov ecx s", "inc s", "cmp dl imm", "jnz short addr"], "9846": ["push ebx", "mov edx s", "mov al [s]", "jmp short addr"], "9856": ["mov [ecx-imm] al", "mov al [edx+imm]", "mov edx ebx"], "9864": ["test al al", "jz short addr"], "9868": ["inc ecx", "lea ebx [s+imm]", "cmp al imm", "jnz short addr"], "9876": ["mov byte ptr [ecx-imm] imm", "mov al [edx+imm]", "cmp al imm", "jz short addr"], "9887": ["mov edx s", "test al al", "jnz short addr"], "9893": ["mov byte ptr [ecx] imm", "pop ebx", "retn"], "9898": ["retn"], "9904": ["mov al [edx+imm]", "add edx imm", "jmp short addr"], "9912": ["retn"]}, "preds": [9832], "succs": []}, "reportDefault": {"disasm": {"9920": ["push ebp", "push edi", "push esi", "push ebx", "mov ebx parser", "sub esp imm", "mov [esp+imm] func", "mov edi [esp+imm]", "mov parser large imm", "mov [esp+imm] parser", "xor parser parser", "cmp byte ptr [enc+imm] imm", "jnz addr"], "9959": ["cmp [parser+imm] enc", "mov ebp enc", "jz addr"], "9973": ["mov eax [parser+imm]", "mov [esp+imm] eax", "add func imm", "mov [esp+imm] eax"], "9990": ["lea func [esp+imm]", "mov [esp+imm] eax", "lea eax [esp+imm]", "mov [esp+imm] eax", "xchg ax ax"], "10008": ["mov eax [parser+imm]", "sub esp imm", "mov esi [parser+imm]", "mov [esp+imm] eax", "push esi", "mov eax [esp+imm]", "push eax", "push edi", "mov eax [esp+imm]", "push eax", "push enc", "call dword ptr [enc+imm]", "mov edx [esp+imm]", "mov esi eax", "mov func [esp+imm]", "add esp imm", "mov [edx] eax", "mov eax [esp+imm]", "mov ecx [parser+imm]", "sub eax ecx", "push eax", "mov eax [parser+imm]", "push ecx", "push eax", "call dword ptr [parser+imm]", "mov edx [esp+imm]", "mov eax [esp+imm]", "add esp imm", "cmp func imm", "mov [edx] eax", "ja short addr"], "10088": ["jmp short addr"], "10096": ["mov eax [esp+imm]", "push edx", "sub edi eax", "mov func [parser+imm]", "push edi", "push eax", "push ecx", "call dword ptr [parser+imm]", "add esp imm"], "10115": ["mov eax [esp+imm]", "xor eax large imm", "jnz short addr"], "10128": ["add esp imm", "pop parser", "pop esi", "pop edi", "pop ebp", "retn"], "10136": ["lea eax [parser+imm]", "mov [esp+imm] eax", "lea func [parser+imm]", "mov [esp+imm] eax", "jmp addr"], "10161": ["call func"]}, "preds": [10115], "succs": []}, "defineAttribute": {"disasm": {"10176": ["push ebp", "push edi", "mov edi type", "push esi", "mov esi attId", "push ebx", "sub esp imm", "mov attId [type+imm]", "mov type [esp+imm]", "mov ebp [esp+imm]", "test eax eax", "jnz short addr"], "10202": ["mov eax ebp", "test al al", "jnz short addr"], "10208": ["mov ebx [type+imm]", "cmp ebx edx", "jz short addr"], "10215": ["mov eax [type+imm]"], "10218": ["lea edx [edx+imm]", "test cl cl", "lea eax [eax+imm]", "mov edx [esp+imm]", "mov [att] attId", "mov [att+imm] edx", "mov [att+imm] cl", "jnz short addr"], "10240": ["mov byte ptr [attId+imm] imm"], "10244": ["mov att [type+imm]", "mov ebx imm", "inc eax", "mov [type+imm] eax"], "10256": ["add esp imm", "mov eax ebx", "pop ebx", "pop attId", "pop type", "pop ebp", "retn"], "10272": ["test edx edx", "jle short addr"], "10276": ["mov eax [type+imm]", "xor ebx ebx", "jmp short addr"], "10288": ["inc i", "add eax imm", "cmp i edx", "jz short addr"], "10296": ["cmp [eax] attId", "jnz short addr"], "10300": ["add esp imm", "mov i imm", "mov eax ebx", "pop ebx", "pop attId", "pop type", "pop ebp", "retn"], "10320": ["test edx edx", "jz short addr"], "10324": ["cmp edx imm", "jg addr"], "10336": ["lea ebx [edx+imm]", "mov [esp+imm] isCdata", "cmp count imm", "ja addr"], "10355": ["lea eax [count+imm]", "push ecx", "push ecx", "mov ebp [type+imm]", "shl eax imm", "push eax", "push ebp", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test temp temp", "jz short addr"], "10382": ["mov [type+imm] count", "mov [type+imm] temp", "jmp short addr"], "10392": ["mov eax ebp", "test al al", "jz addr"], "10402": ["mov eax [type+imm]", "test eax eax", "jnz addr"], "10413": ["cmp byte ptr [attId+imm] imm", "jnz addr"], "10423": ["mov [type+imm] attId", "jmp addr"], "10432": ["mov [esp+imm] isCdata", "sub esp imm", "mov dword ptr [type+imm] imm", "push imm", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "mov [type+imm] eax", "test eax eax", "jz short addr"], "10465": ["mov edx [type+imm]", "mov ecx [esp+imm]", "jmp addr"], "10480": ["xor ebx ebx", "jmp addr"], "10487": ["mov dword ptr [type+imm] imm", "jmp addr"]}, "preds": [10432], "succs": [10256]}, "normalizePublicId": {"disasm": {"10512": ["push ebp", "mov dl [s]", "push edi", "test dl dl", "push esi", "push ebx", "jz short addr"], "10522": ["mov esi s", "mov ebx s", "mov edi imm", "jmp short addr"], "10533": ["mov [ebx] dl", "inc ebx"], "10536": ["mov dl [s+imm]", "inc s", "test dl dl", "jz short addr"], "10544": ["lea ecx [edx-imm]", "cmp cl imm", "ja short addr"], "10552": ["mov ebp edi", "shl ebp cl", "mov ecx ebp", "and ecx imm", "jz short addr"], "10566": ["cmp publicId p", "jz short addr"], "10570": ["cmp byte ptr [p-imm] imm", "jz short addr"], "10576": ["inc s", "mov byte ptr [ebx] imm", "inc ebx", "mov dl [s]", "test dl dl", "jnz short addr"], "10587": ["cmp p publicId", "jz short addr"], "10591": ["cmp byte ptr [p-imm] imm", "jz short addr"], "10597": ["mov byte ptr [p] imm", "pop p", "pop s", "pop edi", "pop ebp", "retn"], "10608": ["mov byte ptr [p-imm] imm", "dec p", "pop p", "pop s", "pop edi", "pop ebp", "retn"], "10624": ["mov ebx publicId", "mov byte ptr [p] imm", "pop p", "pop esi", "pop edi", "pop ebp", "retn"]}, "preds": [10512, 10587], "succs": []}, "hash": {"disasm": {"10640": ["push ebx", "sub esp imm", "mov ecx [parser+imm]", "mov ebx large imm", "mov [esp+imm] ebx", "xor ebx ebx", "test ecx ecx", "jz short addr"], "10667": ["lea esi [esi+imm]", "nop"], "10672": ["mov eax ecx", "mov ecx [ecx+imm]", "test ecx ecx", "jnz short addr"], "10684": ["mov ecx [eax+imm]", "add eax 1ECh", "mov eax ecx", "xor ecx imm", "xor eax imm", "mov dword ptr [esp+imm] ecx", "mov dword ptr [esp+imm] eax", "lea eax [esp+imm]", "xor ecx ecx", "mov dword ptr [esp+imm] imm", "cmp byte ptr [s] imm", "mov dword ptr [esp+imm] imm", "mov dword ptr [esp+imm] imm", "mov dword ptr [esp+imm] imm", "mov dword ptr [esp+imm] imm", "mov dword ptr [esp+imm] imm", "mov [esp+imm] eax", "mov dword ptr [esp+imm] imm", "mov dword ptr [esp+imm] imm", "jz short addr"], "10795": ["lea esi [esi+imm]", "nop"], "10800": ["inc ecx", "cmp byte ptr [s+imm] imm", "jnz short addr"], "10807": ["lea ebx [esp+imm]", "mov eax ebx", "call func", "mov eax ebx", "call func", "mov ebx [esp+imm]", "xor ebx large imm", "jnz short addr"], "10838": ["add esp imm", "pop ebx", "retn"], "10843": ["call func"]}, "preds": [10807], "succs": []}, "poolDestroy": {"disasm": {"10912": ["push esi", "mov esi pool", "push ebx", "push edx", "mov ebx [pool]", "test p p", "jz short addr"], "10923": ["lea pool [pool+imm]", "nop"], "10928": ["sub esp imm", "mov edx p", "mov eax [pool+imm]", "mov p [p]", "push p", "call dword ptr [eax+imm]", "add esp imm", "test tem tem", "jnz short addr"], "10949": ["mov p [pool+imm]", "test p p", "jz short addr"], "10956": ["lea pool [pool+imm]"], "10960": ["sub esp imm", "mov edx p", "mov eax [pool+imm]", "mov p [p]", "push p", "call dword ptr [eax+imm]", "add esp imm", "test tem tem", "jnz short addr"], "10981": ["pop eax", "pop p", "pop pool", "retn"]}, "preds": [10949, 10960], "succs": []}, "nextScaffoldPart": {"disasm": {"10992": ["push ebp", "push edi", "push esi", "mov esi parser", "push ebx", "sub esp imm", "mov ebx [parser+imm]", "mov ebp [dtd+imm]", "test ebp ebp", "jz addr"], "11021": ["mov edx [dtd+imm]", "mov ecx [dtd+imm]", "mov eax [dtd+imm]", "cmp edx ecx", "jb short addr"], "11043": ["test eax eax", "jz addr"], "11051": ["cmp ecx imm", "ja addr"], "11063": ["lea edx ds:0[ecx*8]", "push edi", "sub edx ecx", "push edi", "shl edx imm", "push edx", "push eax", "call dword ptr [parser+imm]", "add esp imm", "test temp temp", "jz addr"], "11093": ["mov edx [dtd+imm]", "add edx edx", "mov [dtd+imm] edx"], "11107": ["mov [dtd+imm] temp", "mov edx [dtd+imm]"], "11119": ["lea ecx [edx+imm]", "mov edi [dtd+imm]", "mov [dtd+imm] ecx", "lea ecx ds:0[edx*8]", "sub ecx edx", "mov parser edx", "test edi edi", "lea ecx [eax+imm]", "jz short addr"], "11152": ["mov dtd [dtd+imm]", "mov edi [ebx+imm]", "lea ebx ds:0[edi*8]", "sub ebx edi", "lea ebx [eax+imm]", "mov edi [parent+imm]", "test edi edi", "jz short addr"], "11181": ["lea ebp ds:0[edi*8]", "sub ebp edi", "mov [eax+imm] next"], "11194": ["mov eax [parent+imm]", "test eax eax", "jnz short addr"], "11201": ["mov [parent+imm] next"], "11204": ["inc eax", "mov [parent+imm] next", "mov [parent+imm] eax"], "11211": ["mov dword ptr [me+imm] imm", "mov dword ptr [me+imm] imm", "mov dword ptr [me+imm] imm", "mov dword ptr [me+imm] imm"], "11239": ["add esp imm", "mov eax esi", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "11256": ["sub esp imm", "mov parser [parser+imm]", "shl eax imm", "push eax", "call dword ptr [parser+imm]", "add esp imm", "mov [dtd+imm] eax", "test eax eax", "jz short addr"], "11285": ["mov dword ptr [eax] imm", "jmp addr"], "11296": ["sub esp imm", "push 380h", "call dword ptr [parser+imm]", "add esp imm", "test temp temp", "jz short addr"], "11314": ["mov dword ptr [dtd+imm] imm", "jmp addr"], "11329": ["or parser imm", "jmp short addr"]}, "preds": [11051, 11063, 11256, 11296], "succs": [11239]}, "handleUnknownEncoding": {"disasm": {"11344": ["push ebp", "push edi", "push esi", "mov esi parser", "push ebx", "call func", "add ebx (offset func - $)", "sub esp 41Ch", "mov ebp [esi+imm]", "mov parser large imm", "mov [esp+imm] parser", "xor parser parser", "test ebp ebp", "jz short addr"], "11389": ["mov edi esp", "lea ecx [esp+imm]", "mov eax edi"], "11400": ["mov dword ptr [eax] imm", "add eax imm", "cmp eax ecx", "jnz short addr"], "11413": ["mov [esp+imm] imm", "mov [esp+imm] imm", "mov [esp+imm] imm", "push eax", "push edi", "push encodingName", "mov eax [parser+imm]", "push eax", "call ebp", "add esp imm", "test eax eax", "jnz short addr"], "11465": ["mov eax [esp+imm]", "test eax eax", "jz short addr"], "11476": ["sub esp imm", "mov edx [esp+imm]", "push edx", "call eax", "add esp imm"], "11492": ["mov eax imm"], "11497": ["mov ebx [esp+imm]", "xor ebx large imm", "jnz addr"], "11517": ["add esp 41Ch", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "11528": ["mov ebp [parser+imm]", "call XmlSizeOfUnknownEncoding", "sub esp imm", "push eax", "call ebp", "add esp imm", "mov [parser+imm] eax", "test eax eax", "jz short addr"], "11555": ["cmp byte ptr [parser+imm] imm", "jnz short addr"], "11564": ["lea edx (XmlInitUnknownEncoding - 2DF78h)[ebx]"], "11570": ["mov ecx [esp+imm]", "push ecx", "mov ebx [esp+imm]", "push ebx", "push edi", "push eax", "call edx", "add esp imm", "test enc enc", "jz addr"], "11601": ["mov edx [esp+imm]", "mov [parser+imm] enc", "mov [parser+imm] edx", "mov edx [esp+imm]", "mov [parser+imm] edx", "xor enc enc", "jmp addr"], "11640": ["lea edx (XmlInitUnknownEncodingNS - 2DF78h)[ebx]", "jmp short addr"], "11648": ["mov eax [esp+imm]", "test eax eax", "jz short addr"], "11659": ["sub esp imm", "mov parser [esp+imm]", "push esi", "call eax", "add esp imm", "mov eax imm", "jmp addr"], "11685": ["mov eax imm", "jmp addr"], "11695": ["call func"]}, "preds": [11497], "succs": []}, "unsignedCharToPrintable": {"disasm": {"11712": ["and c 0FFh", "call func", "add edx (offset func - $)", "sub esp imm", "mov ecx func - 2DF78h)[edx+imm]", "add ecx edx", "jmp ecx"], "11742": ["lea eax (aXfe - 2DF78h)[edx]"], "11748": ["add esp imm", "retn"], "11752": ["lea eax (aXfd - 2DF78h)[edx]", "jmp short addr"], "11760": ["lea eax (aXfc - 2DF78h)[edx]", "jmp short addr"], "11768": ["lea eax (aXfb - 2DF78h)[edx]", "jmp short addr"], "11776": ["lea eax (aXfa - 2DF78h)[edx]", "jmp short addr"], "11784": ["lea eax (aXf9 - 2DF78h)[edx]", "jmp short addr"], "11792": ["lea eax (aXf8 - 2DF78h)[edx]", "jmp short addr"], "11800": ["lea eax (aXf7 - 2DF78h)[edx]", "jmp short addr"], "11808": ["lea eax (aXf6 - 2DF78h)[edx]", "jmp short addr"], "11816": ["lea eax (aXf5 - 2DF78h)[edx]", "jmp short addr"], "11824": ["lea eax (aXf4 - 2DF78h)[edx]", "jmp short addr"], "11832": ["lea eax (aXf3 - 2DF78h)[edx]", "jmp short addr"], "11840": ["lea eax (aXf2 - 2DF78h)[edx]", "jmp short addr"], "11848": ["lea eax (aXf1 - 2DF78h)[edx]", "jmp short addr"], "11856": ["lea eax (aXf0 - 2DF78h)[edx]", "jmp short addr"], "11864": ["lea eax (aXef - 2DF78h)[edx]", "jmp short addr"], "11872": ["lea eax (aXee - 2DF78h)[edx]", "jmp addr"], "11883": ["lea eax (aXed - 2DF78h)[edx]", "jmp addr"], "11894": ["lea eax (aXec - 2DF78h)[edx]", "jmp addr"], "11905": ["lea eax (aXeb - 2DF78h)[edx]", "jmp addr"], "11916": ["lea eax (aXea - 2DF78h)[edx]", "jmp addr"], "11927": ["lea eax (aXe9 - 2DF78h)[edx]", "jmp addr"], "11938": ["lea eax (aXe8 - 2DF78h)[edx]", "jmp addr"], "11949": ["lea eax (aXe7 - 2DF78h)[edx]", "jmp addr"], "11960": ["lea eax (aXe6 - 2DF78h)[edx]", "jmp addr"], "11971": ["lea eax (aXe5 - 2DF78h)[edx]", "jmp addr"], "11982": ["lea eax (aXe4 - 2DF78h)[edx]", "jmp addr"], "11993": ["lea eax (aXe3 - 2DF78h)[edx]", "jmp addr"], "12004": ["lea eax (aXe2 - 2DF78h)[edx]", "jmp addr"], "12015": ["lea eax (aXe1 - 2DF78h)[edx]", "jmp addr"], "12026": ["lea eax (aXe0 - 2DF78h)[edx]", "jmp addr"], "12037": ["lea eax (aXdf - 2DF78h)[edx]", "jmp addr"], "12048": ["lea eax (aXde - 2DF78h)[edx]", "jmp addr"], "12059": ["lea eax (aXdd - 2DF78h)[edx]", "jmp addr"], "12070": ["lea eax (aXdc - 2DF78h)[edx]", "jmp addr"], "12081": ["lea eax (aXdb - 2DF78h)[edx]", "jmp addr"], "12092": ["lea eax (aXda - 2DF78h)[edx]", "jmp addr"], "12103": ["lea eax (aXd9 - 2DF78h)[edx]", "jmp addr"], "12114": ["lea eax (aXd8 - 2DF78h)[edx]", "jmp addr"], "12125": ["lea eax (aXd7 - 2DF78h)[edx]", "jmp addr"], "12136": ["lea eax (aXd6 - 2DF78h)[edx]", "jmp addr"], "12147": ["lea eax (aXd5 - 2DF78h)[edx]", "jmp addr"], "12158": ["lea eax (aXd4 - 2DF78h)[edx]", "jmp addr"], "12169": ["lea eax (aXd3 - 2DF78h)[edx]", "jmp addr"], "12180": ["lea eax (aXd2 - 2DF78h)[edx]", "jmp addr"], "12191": ["lea eax (aXd1 - 2DF78h)[edx]", "jmp addr"], "12202": ["lea eax (aXd0 - 2DF78h)[edx]", "jmp addr"], "12213": ["lea eax (aXcf - 2DF78h)[edx]", "jmp addr"], "12224": ["lea eax (aXce - 2DF78h)[edx]", "jmp addr"], "12235": ["lea eax (aXcd - 2DF78h)[edx]", "jmp addr"], "12246": ["lea eax (aXcc - 2DF78h)[edx]", "jmp addr"], "12257": ["lea eax (aXcb - 2DF78h)[edx]", "jmp addr"], "12268": ["lea eax (aXca - 2DF78h)[edx]", "jmp addr"], "12279": ["lea eax (aXc9 - 2DF78h)[edx]", "jmp addr"], "12290": ["lea eax (aXc8 - 2DF78h)[edx]", "jmp addr"], "12301": ["lea eax (aXc7 - 2DF78h)[edx]", "jmp addr"], "12312": ["lea eax (aXc6 - 2DF78h)[edx]", "jmp addr"], "12323": ["lea eax (aXc5 - 2DF78h)[edx]", "jmp addr"], "12334": ["lea eax (aXc4 - 2DF78h)[edx]", "jmp addr"], "12345": ["lea eax (aXc3 - 2DF78h)[edx]", "jmp addr"], "12356": ["lea eax (aXc2 - 2DF78h)[edx]", "jmp addr"], "12367": ["lea eax (aXc1 - 2DF78h)[edx]", "jmp addr"], "12378": ["lea eax (aXc0 - 2DF78h)[edx]", "jmp addr"], "12389": ["lea eax (aXbf - 2DF78h)[edx]", "jmp addr"], "12400": ["lea eax (aXbe - 2DF78h)[edx]", "jmp addr"], "12411": ["lea eax (aXbd - 2DF78h)[edx]", "jmp addr"], "12422": ["lea eax (aXbc - 2DF78h)[edx]", "jmp addr"], "12433": ["lea eax (aXbb - 2DF78h)[edx]", "jmp addr"], "12444": ["lea eax (aXba - 2DF78h)[edx]", "jmp addr"], "12455": ["lea eax (aXb9 - 2DF78h)[edx]", "jmp addr"], "12466": ["lea eax (aXb8 - 2DF78h)[edx]", "jmp addr"], "12477": ["lea eax (aXb7 - 2DF78h)[edx]", "jmp addr"], "12488": ["lea eax (aXb6 - 2DF78h)[edx]", "jmp addr"], "12499": ["lea eax (aXb5 - 2DF78h)[edx]", "jmp addr"], "12510": ["lea eax (aXb4 - 2DF78h)[edx]", "jmp addr"], "12521": ["lea eax (aXb3 - 2DF78h)[edx]", "jmp addr"], "12532": ["lea eax (aXb2 - 2DF78h)[edx]", "jmp addr"], "12543": ["lea eax (aXb1 - 2DF78h)[edx]", "jmp addr"], "12554": ["lea eax (aXb0 - 2DF78h)[edx]", "jmp addr"], "12565": ["lea eax (aXaf - 2DF78h)[edx]", "jmp addr"], "12576": ["lea eax (aXae - 2DF78h)[edx]", "jmp addr"], "12587": ["lea eax (aXad - 2DF78h)[edx]", "jmp addr"], "12598": ["lea eax (aXac - 2DF78h)[edx]", "jmp addr"], "12609": ["lea eax (aXab - 2DF78h)[edx]", "jmp addr"], "12620": ["lea eax (aXaa - 2DF78h)[edx]", "jmp addr"], "12631": ["lea eax (aXa9 - 2DF78h)[edx]", "jmp addr"], "12642": ["lea eax (aXa8 - 2DF78h)[edx]", "jmp addr"], "12653": ["lea eax (aXa7 - 2DF78h)[edx]", "jmp addr"], "12664": ["lea eax (aXa6 - 2DF78h)[edx]", "jmp addr"], "12675": ["lea eax (aXa5 - 2DF78h)[edx]", "jmp addr"], "12686": ["lea eax (aXa4 - 2DF78h)[edx]", "jmp addr"], "12697": ["lea eax (aXa3 - 2DF78h)[edx]", "jmp addr"], "12708": ["lea eax (aXa2 - 2DF78h)[edx]", "jmp addr"], "12719": ["lea eax (aXa1 - 2DF78h)[edx]", "jmp addr"], "12730": ["lea eax (aXa0 - 2DF78h)[edx]", "jmp addr"], "12741": ["lea eax (aX9f - 2DF78h)[edx]", "jmp addr"], "12752": ["lea eax (aX9e - 2DF78h)[edx]", "jmp addr"], "12763": ["lea eax (aX9d - 2DF78h)[edx]", "jmp addr"], "12774": ["lea eax (aX9c - 2DF78h)[edx]", "jmp addr"], "12785": ["lea eax (aX9b - 2DF78h)[edx]", "jmp addr"], "12796": ["lea eax (aX9a - 2DF78h)[edx]", "jmp addr"], "12807": ["lea eax (aX99 - 2DF78h)[edx]", "jmp addr"], "12818": ["lea eax (aX98 - 2DF78h)[edx]", "jmp addr"], "12829": ["lea eax (aX97 - 2DF78h)[edx]", "jmp addr"], "12840": ["lea eax (aX96 - 2DF78h)[edx]", "jmp addr"], "12851": ["lea eax (aX95 - 2DF78h)[edx]", "jmp addr"], "12862": ["lea eax (aX94 - 2DF78h)[edx]", "jmp addr"], "12873": ["lea eax (aX93 - 2DF78h)[edx]", "jmp addr"], "12884": ["lea eax (aX92 - 2DF78h)[edx]", "jmp addr"], "12895": ["lea eax (aX91 - 2DF78h)[edx]", "jmp addr"], "12906": ["lea eax (aX90 - 2DF78h)[edx]", "jmp addr"], "12917": ["lea eax (aX8f - 2DF78h)[edx]", "jmp addr"], "12928": ["lea eax (aX8e - 2DF78h)[edx]", "jmp addr"], "12939": ["lea eax (aX8d - 2DF78h)[edx]", "jmp addr"], "12950": ["lea eax (aX8c - 2DF78h)[edx]", "jmp addr"], "12961": ["lea eax (aX8b - 2DF78h)[edx]", "jmp addr"], "12972": ["lea eax (aX8a - 2DF78h)[edx]", "jmp addr"], "12983": ["lea eax (aX89 - 2DF78h)[edx]", "jmp addr"], "12994": ["lea eax (aX88 - 2DF78h)[edx]", "jmp addr"], "13005": ["lea eax (aX87 - 2DF78h)[edx]", "jmp addr"], "13016": ["lea eax (aX86 - 2DF78h)[edx]", "jmp addr"], "13027": ["lea eax (aX85 - 2DF78h)[edx]", "jmp addr"], "13038": ["lea eax (aX84 - 2DF78h)[edx]", "jmp addr"], "13049": ["lea eax (aX83 - 2DF78h)[edx]", "jmp addr"], "13060": ["lea eax (aX82 - 2DF78h)[edx]", "jmp addr"], "13071": ["lea eax (aX81 - 2DF78h)[edx]", "jmp addr"], "13082": ["lea eax (aX80 - 2DF78h)[edx]", "jmp addr"], "13093": ["lea eax (aX7f - 2DF78h)[edx]", "jmp addr"], "13104": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13115": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13126": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13137": ["lea eax (aVwz+6 - 2DF78h)[edx]", "jmp addr"], "13148": ["lea eax (aVwz+4 - 2DF78h)[edx]", "jmp addr"], "13159": ["lea eax imm - 2DF78h)[edx]", "jmp addr"], "13170": ["lea eax imm - 2DF78h)[edx]", "jmp addr"], "13181": ["lea eax (aVwz+2 - 2DF78h)[edx]", "jmp addr"], "13192": ["lea eax (aVwz - 2DF78h)[edx]", "jmp addr"], "13203": ["lea eax (aPqsu+6 - 2DF78h)[edx]", "jmp addr"], "13214": ["lea eax (aT+1 - 2DF78h)[edx]", "jmp addr"], "13225": ["lea eax (aPqsu+4 - 2DF78h)[edx]", "jmp addr"], "13236": ["lea eax (aR+1 - 2DF78h)[edx]", "jmp addr"], "13247": ["lea eax (aPqsu+2 - 2DF78h)[edx]", "jmp addr"], "13258": ["lea eax (aPqsu - 2DF78h)[edx]", "jmp addr"], "13269": ["lea eax (aJklo+6 - 2DF78h)[edx]", "jmp addr"], "13280": ["lea eax (aN+1 - 2DF78h)[edx]", "jmp addr"], "13291": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13302": ["lea eax (aJklo+4 - 2DF78h)[edx]", "jmp addr"], "13313": ["lea eax (aJklo+2 - 2DF78h)[edx]", "jmp addr"], "13324": ["lea eax (aJklo - 2DF78h)[edx]", "jmp addr"], "13335": ["lea eax (aCfhi+6 - 2DF78h)[edx]", "jmp addr"], "13346": ["lea eax (aCfhi+4 - 2DF78h)[edx]", "jmp addr"], "13357": ["lea eax imm - 2DF78h)[edx]", "jmp addr"], "13368": ["lea eax (aCfhi+2 - 2DF78h)[edx]", "jmp addr"], "13379": ["lea eax imm - 2DF78h)[edx]", "jmp addr"], "13390": ["lea eax imm - 2DF78h)[edx]", "jmp addr"], "13401": ["lea eax (aCfhi - 2DF78h)[edx]", "jmp addr"], "13412": ["lea eax (aAb+6 - 2DF78h)[edx]", "jmp addr"], "13423": ["lea eax (aAb+4 - 2DF78h)[edx]", "jmp addr"], "13434": ["lea eax (aAb+2 - 2DF78h)[edx]", "jmp addr"], "13445": ["lea eax (aAb - 2DF78h)[edx]", "jmp addr"], "13456": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13467": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13478": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13489": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13500": ["lea eax (aZ - 2DF78h)[edx]", "jmp addr"], "13511": ["lea eax (aY - 2DF78h)[edx]", "jmp addr"], "13522": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13533": ["lea eax (aW - 2DF78h)[edx]", "jmp addr"], "13544": ["lea eax (aV - 2DF78h)[edx]", "jmp addr"], "13555": ["lea eax (aU - 2DF78h)[edx]", "jmp addr"], "13566": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13577": ["lea eax imm - 2DF78h)[edx]", "jmp addr"], "13588": ["lea eax (aDir+2 - 2DF78h)[edx]", "jmp addr"], "13599": ["lea eax (aQ - 2DF78h)[edx]", "jmp addr"], "13610": ["lea eax imm - 2DF78h)[edx]", "jmp addr"], "13621": ["lea eax (aO - 2DF78h)[edx]", "jmp addr"], "13632": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13643": ["lea eax (aM - 2DF78h)[edx]", "jmp addr"], "13654": ["lea eax imm - 2DF78h)[edx]", "jmp addr"], "13665": ["lea eax (aK - 2DF78h)[edx]", "jmp addr"], "13676": ["lea eax (aJ - 2DF78h)[edx]", "jmp addr"], "13687": ["lea eax (aI - 2DF78h)[edx]", "jmp addr"], "13698": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13709": ["lea eax imm - 2DF78h)[edx]", "jmp addr"], "13720": ["lea eax (aX1f+3 - 2DF78h)[edx]", "jmp addr"], "13731": ["lea eax (aX1e+3 - 2DF78h)[edx]", "jmp addr"], "13742": ["lea eax (aX1d+3 - 2DF78h)[edx]", "jmp addr"], "13753": ["lea eax (aX1c+3 - 2DF78h)[edx]", "jmp addr"], "13764": ["lea eax (aX1b+3 - 2DF78h)[edx]", "jmp addr"], "13775": ["lea eax (aX1a+3 - 2DF78h)[edx]", "jmp addr"], "13786": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13797": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13808": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13819": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13830": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13841": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13852": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13863": ["lea eax imm - 2DF78h)[edx]", "jmp addr"], "13874": ["lea eax (aX18+3 - 2DF78h)[edx]", "jmp addr"], "13885": ["lea eax (aX17+3 - 2DF78h)[edx]", "jmp addr"], "13896": ["lea eax (aX16+3 - 2DF78h)[edx]", "jmp addr"], "13907": ["lea eax (aX15+3 - 2DF78h)[edx]", "jmp addr"], "13918": ["lea eax (aX14+3 - 2DF78h)[edx]", "jmp addr"], "13929": ["lea eax (aX13+3 - 2DF78h)[edx]", "jmp addr"], "13940": ["lea eax (aX12+3 - 2DF78h)[edx]", "jmp addr"], "13951": ["lea eax (aX11+3 - 2DF78h)[edx]", "jmp addr"], "13962": ["lea eax imm - 2DF78h)[edx]", "jmp addr"], "13973": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13984": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "13995": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "14006": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "14017": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "14028": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "14039": ["lea eax imm - 2DF78h)[edx]", "jmp addr"], "14050": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "14061": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "14072": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "14083": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "14094": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "14105": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "14116": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "14127": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "14138": ["lea eax func - 2DF78h)[edx]", "jmp addr"], "14149": ["lea eax (aX1f - 2DF78h)[edx]", "jmp addr"], "14160": ["lea eax (aX1e - 2DF78h)[edx]", "jmp addr"], "14171": ["lea eax (aX1d - 2DF78h)[edx]", "jmp addr"], "14182": ["lea eax (aX1c - 2DF78h)[edx]", "jmp addr"], "14193": ["lea eax (aX1b - 2DF78h)[edx]", "jmp addr"], "14204": ["lea eax (aX1a - 2DF78h)[edx]", "jmp addr"], "14215": ["lea eax (aX19 - 2DF78h)[edx]", "jmp addr"], "14226": ["lea eax (aX18 - 2DF78h)[edx]", "jmp addr"], "14237": ["lea eax (aX17 - 2DF78h)[edx]", "jmp addr"], "14248": ["lea eax (aX16 - 2DF78h)[edx]", "jmp addr"], "14259": ["lea eax (aX15 - 2DF78h)[edx]", "jmp addr"], "14270": ["lea eax (aX14 - 2DF78h)[edx]", "jmp addr"], "14281": ["lea eax (aX13 - 2DF78h)[edx]", "jmp addr"], "14292": ["lea eax (aX12 - 2DF78h)[edx]", "jmp addr"], "14303": ["lea eax (aX11 - 2DF78h)[edx]", "jmp addr"], "14314": ["lea eax (aX10 - 2DF78h)[edx]", "jmp addr"], "14325": ["lea eax (aXf - 2DF78h)[edx]", "jmp addr"], "14336": ["lea eax (aXe - 2DF78h)[edx]", "jmp addr"], "14347": ["lea eax (aR - 2DF78h)[edx]", "jmp addr"], "14358": ["lea eax (aXc - 2DF78h)[edx]", "jmp addr"], "14369": ["lea eax (aXb - 2DF78h)[edx]", "jmp addr"], "14380": ["lea eax (aN - 2DF78h)[edx]", "jmp addr"], "14391": ["lea eax (aT - 2DF78h)[edx]", "jmp addr"], "14402": ["lea eax (aX8 - 2DF78h)[edx]", "jmp addr"], "14413": ["lea eax (aX7 - 2DF78h)[edx]", "jmp addr"], "14424": ["lea eax (aX6 - 2DF78h)[edx]", "jmp addr"], "14435": ["lea eax (aX5 - 2DF78h)[edx]", "jmp addr"], "14446": ["lea eax (aX4 - 2DF78h)[edx]", "jmp addr"], "14457": ["lea eax (aX3 - 2DF78h)[edx]", "jmp addr"], "14468": ["lea eax (aX2 - 2DF78h)[edx]", "jmp addr"], "14479": ["lea eax (aX1 - 2DF78h)[edx]", "jmp addr"], "14490": ["lea eax (a0 - 2DF78h)[edx]", "jmp addr"], "14501": ["lea eax (aXff - 2DF78h)[edx]", "jmp addr"]}, "preds": [11712], "succs": [11748]}, "addBinding": {"disasm": {"14512": ["push ebp", "mov ebp parser", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "sub esp imm", "mov [esp+imm] edi", "mov edi [esp+imm]", "mov [esp+imm] func", "mov [esp+imm] func", "mov al byte ptr func - 2DF78h)[edi]", "mov func func", "test al al", "jnz addr"], "14560": ["xor esi esi", "mov eax imm", "test edx edx", "jnz addr"], "14575": ["cmp byte ptr [parser+imm] imm", "sbb esi imm", "mov edx [parser+imm]", "test edx edx", "jz addr"], "14599": ["cmp [b_0+imm] len", "jge short addr"], "14604": ["cmp len imm", "jg addr"], "14616": ["push ecx", "lea ebx [len+imm]", "push ecx", "push ebx", "mov eax [b_0+imm]", "push eax", "mov [esp+imm] func", "call dword ptr [parser+imm]", "add esp imm", "test temp temp", "jz addr"], "14644": ["mov edx [esp+imm]", "mov [edx+imm] temp", "mov [edx+imm] ebx"], "14654": ["mov eax [edx+imm]", "mov [parser+imm] eax", "mov eax [edx+imm]"], "14666": ["mov [esp+imm] func", "mov [b_0+imm] len", "push edx", "push len", "push edi", "push eax", "mov ebx [esp+imm]", "call func", "mov al [parser+imm]", "add esp imm", "test al al", "mov edx [esp+imm]", "jz short addr"], "14703": ["mov ecx [edx+imm]", "mov [ecx+imm] al"], "14710": ["mov ecx [esp+imm]", "mov eax [esp+imm]", "mov [edx] ecx", "mov [edx+imm] eax", "mov eax [ecx+imm]", "mov [edx+imm] eax", "mov eax edx", "cmp byte ptr func - 2DF78h)[edi] imm", "jnz short addr"], "14736": ["mov eax [parser+imm]", "add eax imm", "cmp ecx eax", "jz addr"], "14755": ["mov eax edx"], "14757": ["mov ecx [esp+imm]", "mov [ecx+imm] eax", "mov eax [esp+imm]", "mov eax [eax]", "mov [edx+imm] eax", "mov eax [esp+imm]", "mov [eax] edx", "mov eax [esp+imm]", "test eax eax", "jz addr"], "14791": ["mov eax [parser+imm]", "test eax eax", "jz addr"], "14802": ["mov len [ecx+imm]", "test esi esi", "jz addr"], "14813": ["push edx", "mov ebx [parser+imm]", "push edi", "mov edi [esp+imm]", "mov ecx func - 2DF78h)[edi]", "push ecx", "push ebx", "call eax", "add esp imm", "xor eax eax"], "14833": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop parser", "retn"], "14848": ["mov [esp+imm] imm", "test edx edx", "jz short addr"], "14857": ["cmp byte ptr [edx] imm", "jz addr"], "14866": ["mov bl [esp+imm]", "mov cl [parser+imm]", "xor ebx imm", "xor esi esi", "mov byte ptr [esp+imm] bl", "mov dl imm", "mov bl imm", "lea esi [esi+imm]"], "14896": ["test bl bl", "jz short addr"], "14900": ["cmp len imm", "jle short addr"], "14905": ["xor isXML isXML"], "14907": ["test byte ptr [esp+imm] dl", "jz short addr"], "14913": ["xor isXMLNS isXMLNS", "cmp len imm", "jg short addr"], "14920": ["mov edx [esp+imm]", "cmp [len+imm] al", "setz dl"], "14934": ["test cl cl", "jz short addr"], "14938": ["cmp [parser+imm] al", "jz short addr"], "14946": ["inc len", "mov al byte ptr func - 2DF78h)[edi+imm]", "test al al", "jnz short addr"], "14954": ["cmp len imm", "setz al", "and isXML eax", "mov al [esp+imm]", "cmp al bl", "jz short addr"], "14970": ["cmp al imm", "sbb eax eax", "add esp imm", "and eax imm", "pop isXML", "add eax imm", "pop len", "pop edi", "pop parser", "retn"], "14992": ["mov ebx [esp+imm]", "cmp [len+imm] al", "setz bl", "jmp short addr"], "15008": ["cmp len imm", "jnz addr"], "15017": ["mov eax imm", "test dl dl", "jz addr"], "15030": ["jmp addr"], "15040": ["add esp imm", "mov eax imm", "pop isXML", "pop len", "pop edi", "pop parser", "retn"], "15056": ["cmp byte ptr [edx+imm] imm", "jnz addr"], "15066": ["cmp byte ptr [edx+imm] imm", "jnz addr"], "15076": ["mov cl [edx+imm]", "cmp cl imm", "jz short addr"], "15084": ["test cl cl", "setz [esp+imm]", "jmp addr"], "15096": ["sub esp imm", "push imm", "call dword ptr [parser+imm]", "add esp imm", "test func func", "mov [esp+imm] func", "jz short addr"], "15115": ["cmp len imm", "jg short addr"], "15123": ["sub esp imm", "lea ebx [len+imm]", "push ebx", "call dword ptr [parser+imm]", "mov edx [esp+imm]", "add esp imm", "test eax eax", "mov [edx+imm] eax", "jz short addr"], "15147": ["mov [edx+imm] ebx", "jmp addr"], "15155": ["sub esp imm", "push edx", "call dword ptr [parser+imm]", "add esp imm"], "15165": ["mov eax imm", "jmp addr"], "15175": ["xor eax eax", "jmp addr"], "15182": ["xor edi edi", "jmp addr"], "15189": ["xor eax eax", "jmp addr"], "15196": ["cmp byte ptr [edx+imm] imm", "jnz addr"], "15206": ["cmp byte ptr [edx+imm] imm", "jnz addr"], "15216": ["mov eax imm", "jmp addr"]}, "preds": [15206], "succs": [14833]}, "poolGrow": {"disasm": {"15232": ["push ebp", "push edi", "push esi", "mov esi pool", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov ecx [pool+imm]", "mov ebp [pool+imm]", "test ecx ecx", "jz short addr"], "15262": ["test ebp ebp", "jz addr"], "15270": ["mov pool [pool+imm]", "mov edx [pool]", "sub eax ebp", "cmp eax [ecx+imm]", "jl addr"], "15286": ["test edx edx", "jz short addr"], "15290": ["lea ecx [edx+imm]", "cmp ebp ecx", "jz addr"], "15301": ["test eax eax", "js short addr"], "15305": ["cmp eax 3FFh", "jle short addr"], "15312": ["add eax eax", "mov edi eax", "js short addr"], "15318": ["add eax imm", "mov ebp edi", "jns short addr"], "15325": ["xor eax eax"], "15327": ["add esp imm", "pop ebx", "pop pool", "pop edi", "pop ebp", "retn"], "15336": ["mov pool [pool+imm]", "mov edx [pool]", "sub eax ebp", "jmp short addr"], "15352": ["mov ebp 400h", "mov eax 408h", "mov edi 400h"], "15367": ["sub esp imm", "mov edx [pool+imm]", "push bytesToAllocate", "call dword ptr [edx]", "add esp imm", "test tem tem", "jz short addr"], "15383": ["mov [tem+imm] ebp", "lea ebp [tem+imm]", "mov edx [pool]", "mov [tem] edx", "mov [pool] tem", "mov edx [pool+imm]", "mov ecx [pool+imm]", "mov tem edx", "cmp ecx edx", "jz short addr"], "15407": ["sub ecx edx", "push eax", "push ecx", "push edx", "push ebp", "call func", "mov edx [pool+imm]", "mov eax [pool+imm]", "add esp imm"], "15427": ["sub edx eax", "lea eax [ebp+imm]", "add edx ebp", "mov [pool+imm] ebp", "mov [pool+imm] eax", "mov [pool+imm] edx", "add esp imm", "mov al imm", "pop ebx", "pop pool", "pop edi", "pop ebp", "retn"], "15456": ["lea edi [eax+imm]", "test blockSize blockSize", "jle addr"], "15467": ["mov eax blockSize", "add eax imm", "js addr"], "15478": ["push ecx", "mov ebx [pool+imm]", "push ecx", "mov ecx [pool+imm]", "push bytesToAllocate", "push edx", "call dword ptr [ecx+imm]", "add esp imm", "test temp temp", "jz addr"], "15502": ["mov [pool] temp", "mov [temp+imm] blockSize", "mov edx [pool]", "sub ebx ebp", "lea temp [edx+imm]", "lea edx [edx+imm]", "mov [pool+imm] eax", "add eax blockSize", "mov [pool+imm] eax", "mov [pool+imm] edx", "mov al imm", "jmp addr"], "15536": ["mov edi [ecx]", "mov [ecx] edx", "mov ecx [pool+imm]", "mov edx [pool+imm]", "mov eax [pool+imm]", "sub edx ecx", "mov [pool+imm] tem", "push edi", "push edx", "mov [pool] eax", "push ecx", "add eax imm", "push eax", "call func", "mov ebp [pool+imm]", "mov ecx [pool+imm]", "mov edx [pool]", "sub ecx ebp", "add esp imm", "lea eax [edx+imm]", "lea ecx [edx+imm]", "mov [pool+imm] eax", "mov [pool+imm] ecx", "mov ecx [edx+imm]", "add eax ecx", "mov [pool+imm] eax", "add esp imm", "mov al imm", "pop ebx", "pop pool", "pop edi", "pop ebp", "retn"], "15616": ["mov [pool] ecx", "mov pool [ecx]", "mov [pool+imm] eax", "mov dword ptr [ecx] imm", "mov edx [pool]", "lea eax [edx+imm]", "mov [pool+imm] eax", "mov edi [edx+imm]", "mov [pool+imm] eax", "add edi eax", "mov al imm", "mov [pool+imm] edi", "add esp imm", "pop ebx", "pop pool", "pop edi", "pop ebp", "retn"]}, "preds": [15262], "succs": []}, "poolCopyString": {"disasm": {"15664": ["push esi", "mov esi pool", "push ebx", "mov ebx s", "push ecx", "jmp short addr"], "15680": ["lea edx [eax+imm]", "inc s", "mov [pool+imm] edx", "mov cl [ebx-imm]", "mov [eax] cl", "cmp byte ptr [s-imm] imm", "jz short addr"], "15698": ["mov eax [pool+imm]", "cmp eax [pool+imm]", "jnz short addr"], "15706": ["mov eax pool", "call poolGrow", "test al al", "jz short addr"], "15717": ["mov eax [pool+imm]", "jmp short addr"], "15728": ["mov edx [pool+imm]", "mov eax [pool+imm]", "mov [pool+imm] edx", "pop edx", "pop ebx", "pop pool", "retn"], "15741": ["pop edx", "xor eax eax", "pop s", "pop pool", "retn"]}, "preds": [15706], "succs": []}, "poolAppend": {"disasm": {"15760": ["push ebp", "push edi", "push esi", "mov esi enc", "push ebx", "mov ebx pool", "sub esp imm", "mov [esp+imm] func", "mov func [pool+imm]", "test ecx ecx", "jz short addr"], "15782": ["lea ebp [pool+imm]", "lea edi [esp+imm]", "jmp short addr"], "15792": ["mov func pool", "call poolGrow", "test al al", "jz short addr"], "15803": ["sub esp imm", "mov eax [pool+imm]", "push eax", "push ebp", "mov edx [esp+imm]", "push edx", "push edi", "push enc", "call dword ptr [enc+imm]", "add esp imm", "cmp func imm", "ja short addr"], "15829": ["mov func [pool+imm]", "add esp imm", "pop pool", "pop enc", "pop edi", "pop ebp", "retn"], "15840": ["call poolGrow", "test al al", "jnz short addr"], "15849": ["add esp imm", "xor eax eax", "pop pool", "pop enc", "pop edi", "pop ebp", "retn"]}, "preds": [15792, 15840], "succs": []}, "poolStoreString": {"disasm": {"15872": ["push ebx", "mov ebx pool", "sub esp imm", "push [esp+imm]", "call poolAppend", "add esp imm", "test eax eax", "jz short addr"], "15894": ["mov eax [pool+imm]", "cmp eax [pool+imm]", "jz short addr"], "15902": ["lea edx [eax+imm]", "mov [pool+imm] edx", "mov byte ptr [eax] imm", "mov eax [pool+imm]", "add esp imm", "pop pool", "retn"], "15920": ["mov eax pool", "call poolGrow", "test al al", "jz short addr"], "15931": ["mov eax [pool+imm]", "jmp short addr"], "15936": ["add esp imm", "xor eax eax", "pop pool", "retn"]}, "preds": [15872, 15920], "succs": []}, "reportProcessingInstruction": {"disasm": {"15952": ["push ebp", "push edi", "push esi", "mov esi enc", "push ebx", "mov ebx parser", "sub esp imm", "mov parser [parser+imm]", "test eax eax", "jz addr"], "15974": ["mov eax [enc+imm]", "lea func [start_0+imm]", "mov eax esi", "mov enc func", "mov [esp+imm] func", "call dword ptr [esi+imm]", "mov ecx [esp+imm]", "sub esp imm", "mov edx enc", "lea edi [ecx+imm]", "lea eax [parser+imm]", "mov [esp+imm] eax", "push tem", "call poolStoreString", "add esp imm", "mov ebp eax", "test target target", "jz addr"], "16032": ["mov target [parser+imm]", "mov edx [esp+imm]", "mov [parser+imm] eax", "mov eax [enc+imm]", "add eax eax", "sub edx eax", "mov eax enc", "mov [esp+imm] edx", "mov edx tem", "call dword ptr [enc+imm]", "sub esp imm", "mov tem [esp+imm]", "mov ecx eax", "push edi", "mov edx enc", "mov eax [esp+imm]", "call poolStoreString", "add esp imm", "mov enc eax", "test data data", "jz addr"], "16100": ["call normalizeLines", "mov edx [parser+imm]", "push eax", "push data", "push target", "push edx", "call dword ptr [parser+imm]", "mov ecx [parser+imm]", "add esp imm", "mov eax [parser+imm]", "test ecx ecx", "jz addr"], "16138": ["test eax eax", "jnz short addr"], "16142": ["jmp short addr"], "16144": ["mov eax edx"], "16146": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [parser+imm] eax", "mov ecx eax", "jnz short addr"], "16162": ["mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov edi imm"], "16207": ["add esp imm", "mov eax edi", "pop parser", "pop esi", "pop edi", "pop ebp", "retn"], "16224": ["add esp imm", "xor edi edi", "mov eax edi", "pop parser", "pop esi", "pop edi", "pop target", "retn"], "16240": ["mov eax [parser+imm]", "mov edi imm", "test eax eax", "jz short addr"], "16252": ["sub esp imm", "mov eax parser", "mov ebp [esp+imm]", "push ebp", "call reportDefault", "add esp imm", "jmp short addr"], "16272": ["mov [parser+imm] eax", "jmp short addr"]}, "preds": [16100], "succs": [16162]}, "lookup": {"disasm": {"16288": ["push ebp", "push edi", "push esi", "mov esi func", "push ebx", "sub esp imm", "mov edi [table_0+imm]", "mov [esp+imm] func", "mov [esp+imm] func", "test edi edi", "jnz addr"], "16316": ["mov ebx [esp+imm]", "test ebx ebx", "jz addr"], "16328": ["sub esp imm", "mov func [table_0+imm]", "mov byte ptr [table_0+imm] imm", "mov dword ptr [table_0+imm] imm", "push 100h", "call dword ptr [eax]", "add esp imm", "mov edi eax", "mov func eax", "test eax eax", "jz addr"], "16367": ["mov edx 100h", "test al imm", "jnz addr"], "16380": ["test edi imm", "jnz addr"], "16392": ["mov ecx edx", "xor eax eax", "shr ecx imm", "rep stosd", "test dl imm", "jz short addr"], "16406": ["mov word ptr [edi] imm", "add edi imm"], "16414": ["and edx imm", "jz short addr"], "16419": ["mov byte ptr [edi] imm"], "16422": ["mov edx [esp+imm]", "mov eax [esp+imm]", "call hash", "mov ebx [table_0+imm]", "dec ebx", "mov edi func", "and ebx eax", "shl i imm", "add edi ebx"], "16448": ["sub esp imm", "mov eax [esi+imm]", "mov edx [esp+imm]", "push edx", "call dword ptr [eax]", "mov [edi] eax", "add esp imm", "mov eax [esi]", "mov edi [eax+imm]", "test edi edi", "jz addr"], "16479": ["mov edx [esp+imm]", "cmp edx imm", "jnb addr"], "16492": ["test dl imm", "jz short addr"], "16497": ["mov word ptr [edi] imm", "add edi imm"], "16505": ["and edx imm", "jz short addr"], "16510": ["mov byte ptr [edi] imm"], "16513": ["mov eax [esi]", "mov edi [esp+imm]", "mov eax [eax+imm]", "mov [eax] edi", "mov eax [esi+imm]", "inc eax", "mov [esi+imm] eax", "mov eax [esi]", "mov edi [eax+imm]"], "16536": ["add esp imm", "mov eax edi", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "16552": ["mov ebp [esp+imm]", "mov func [esp+imm]", "mov func ebp", "call hash", "mov edi func", "mov edx eax", "mov [esp+imm] eax", "mov func [table_0+imm]", "mov ebx func", "mov [esp+imm] eax", "dec eax", "and ebx mask", "mov [esp+imm] edi", "mov edi [edi+imm]", "test edi edi", "jz addr"], "16602": ["shr mask imm", "mov cl [ebp+imm]", "mov [esp+imm] al", "mov eax [esp+imm]", "neg eax", "and eax func", "mov [esp+imm] func", "mov byte ptr [esp+imm] cl", "xor ebp ebp", "mov [esp+imm] eax", "mov func [esp+imm]", "xchg ax ax"], "16640": ["mov eax [edi]", "mov dl byte ptr [esp+imm]", "cmp [eax] dl", "jnz short addr"], "16650": ["mov ecx [esp+imm]", "xchg ax ax"], "16656": ["test dl dl", "jz short addr"], "16660": ["inc eax", "mov dl [ecx+imm]", "inc ecx", "cmp dl [eax]", "jz short addr"], "16669": ["mov eax step", "test al al", "jnz short addr"], "16675": ["mov step [esp+imm]", "xor ecx ecx", "mov step [esp+imm]", "mov cl [eax+imm]", "mov al [esp+imm]", "dec ecx", "shr ebp cl", "and ebp eax", "or ebp imm"], "16700": ["mov eax step", "and eax 0FFh", "cmp eax i", "jbe addr"], "16715": ["mov ecx [esp+imm]", "add i ecx", "sub ebx eax"], "16723": ["mov edi [esi+imm]", "test edi edi", "jnz short addr"], "16730": ["mov esi [esp+imm]"], "16734": ["mov edx [esp+imm]", "test edx edx", "jz addr"], "16746": ["mov al [esi+imm]", "mov edx [esi+imm]", "lea ecx [eax-imm]", "shr edx cl", "test edx edx", "jz addr"], "16765": ["lea ecx [eax+imm]", "mov [esp+imm] cl", "cmp cl imm", "ja addr"], "16781": ["mov ebp imm", "shl ebp cl", "mov edi ebp", "mov [esp+imm] ebp", "cmp ebp imm", "ja addr"], "16806": ["mov edx imm", "sub esp imm", "mov i edx", "mov eax [esi+imm]", "shl ebx cl", "push tsize", "call dword ptr [eax]", "add esp imm", "mov ebp eax", "test newV newV", "jz addr"], "16837": ["lea newV [newSize_0-imm]", "mov edx tsize", "mov [esp+imm] newMask", "mov func newV", "cmp tsize imm", "jnb addr"], "16857": ["test dl imm", "jz short addr"], "16862": ["mov word ptr [edi] imm", "add edi imm"], "16870": ["and edx imm", "jz short addr"], "16875": ["mov byte ptr [edi] imm"], "16878": ["mov eax [esi+imm]", "test eax eax", "jz addr"], "16889": ["mov eax [esp+imm]", "mov edx [esi]", "shr eax imm", "xor edi edi", "mov byte ptr [esp+imm] al", "xor eax eax", "mov al [esp+imm]", "dec eax", "mov [esp+imm] eax", "jmp short addr"], "16920": ["inc i", "cmp [esi+imm] i", "jbe addr"], "16930": ["lea ebx ds:0[i*4]", "mov eax [edx+imm]", "test eax eax", "jz short addr"], "16944": ["mov edx [eax]", "mov eax [esp+imm]", "call hash", "mov edx eax", "mov imm [esp+imm]", "and eax imm", "lea ecx [newV+imm]", "cmp dword ptr [ecx] imm", "jz short addr"], "16972": ["mov ecx [esp+imm]", "neg ecx", "and imm ecx", "mov cl byte ptr [esp+imm]", "shr edx cl", "mov ecx [esp+imm]", "and edx ecx", "or edx imm", "and edx 0FFh", "lea esi [esi+imm]"], "17008": ["cmp edx eax", "jbe short addr"], "17012": ["mov ecx [esp+imm]", "add eax ecx", "sub eax edx"], "17020": ["lea ecx [newV+imm]", "cmp dword ptr [ecx] imm", "jnz short addr"], "17029": ["mov j [esi]", "mov eax [eax+imm]", "mov [ecx] eax", "mov edx [esi]", "jmp short addr"], "17040": ["sub i eax", "jmp addr"], "17047": ["add esp imm", "xor edi edi", "mov eax edi", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "17059": ["mov dword ptr [table_0+imm] imm", "jmp addr"], "17071": ["test edi imm", "jnz addr"], "17083": ["test edi imm", "jnz addr"], "17095": ["mov ecx edx", "xor eax eax", "shr ecx imm", "rep stosd", "jmp addr"], "17109": ["shl i imm", "mov edi [esp+imm]", "add edi ebx", "jmp addr"], "17128": ["sub eax edx", "jmp short addr"], "17132": ["mov byte ptr [eax] imm", "inc edi", "mov edx 0FFh", "jmp addr"], "17146": ["mov word ptr [edi] imm", "sub edx imm", "add edi imm", "jmp addr"], "17162": ["mov edx [esi]"], "17164": ["sub esp imm", "mov eax [esi+imm]", "push edx", "call dword ptr [eax+imm]", "mov ebx [esp+imm]", "mov eax [esp+imm]", "and eax ebx", "mov cl [esp+imm]", "mov edx [esp+imm]", "mov [esi] newV", "lea ebx ds:0[eax*4]", "mov [esi+imm] cl", "mov [esi+imm] edx", "add esp imm", "lea edi [newV+imm]", "cmp dword ptr [edi] imm", "jz addr"], "17223": ["mov ebx edx", "mov edi [esp+imm]", "neg edx", "dec ecx", "and edx edi", "shr edx cl", "mov ecx [esp+imm]", "shr ecx imm", "and edx ecx", "mov ecx ebx", "or edx imm", "and edx 0FFh", "cmp edx eax", "jbe short addr"], "17260": ["add eax ecx", "sub eax edx"], "17264": ["lea ebx ds:0[i*4]", "lea edi [newV+imm]", "cmp dword ptr [edi] imm", "jz addr"], "17284": ["cmp edx eax", "ja short addr"], "17288": ["sub eax edx", "jmp short addr"], "17292": ["mov word ptr [edi] imm", "sub edx imm", "add edi imm", "jmp addr"], "17308": ["mov byte ptr [edi] imm", "dec edx", "inc edi", "jmp addr"], "17318": ["test ebp imm", "jnz short addr"], "17326": ["test edi imm", "jnz short addr"], "17334": ["mov ecx edx", "xor newMask newMask", "shr ecx imm", "rep stosd", "jmp addr"], "17348": ["mov word ptr [edi] imm", "sub edx imm", "add edi imm", "jmp short addr"], "17361": ["mov byte ptr [ebp+imm] imm", "lea newV [ebp+imm]", "dec tsize", "jmp short addr"]}, "preds": [17318], "succs": [17326]}, "getAttributeId": {"disasm": {"17376": ["push ebp", "push edi", "push esi", "push ebx", "sub esp imm", "mov ebx [parser_0+imm]", "mov [esp+imm] func", "lea edi [dtd+imm]", "mov func [dtd+imm]", "cmp eax [dtd+imm]", "mov [esp+imm] edi", "jz short addr"], "17407": ["sub esp imm", "lea esi [eax+imm]", "mov [dtd+imm] esi", "mov byte ptr [eax] imm", "mov eax [esp+imm]", "push eax", "lea eax [dtd+imm]", "call poolStoreString", "add esp imm", "mov esi eax", "test name name", "jz short addr"], "17441": ["sub esp imm", "lea edi [name+imm]", "lea edx [dtd+imm]", "mov ecx name", "push imm", "mov eax [esp+imm]", "call lookup", "add esp imm", "mov ebp eax", "test id id", "jz short addr"], "17472": ["cmp [id] name", "jz short addr"], "17476": ["mov id [dtd+imm]", "mov [dtd+imm] eax"], "17482": ["add esp imm", "mov eax id", "pop ebx", "pop esi", "pop edi", "pop id", "retn"], "17496": ["mov eax edi", "mov [esp+imm] func", "mov [esp+imm] func", "call poolGrow", "mov edx [esp+imm]", "test al al", "mov ecx [esp+imm]", "jz short addr"], "17523": ["mov eax [dtd+imm]", "jmp short addr"], "17528": ["add esp imm", "xor ebp ebp", "mov eax ebp", "pop dtd", "pop esi", "pop edi", "pop ebp", "retn"], "17544": ["mov id [dtd+imm]", "mov ecx [esp+imm]", "mov [dtd+imm] eax", "cmp byte ptr [ecx+imm] imm", "jz short addr"], "17562": ["mov dl [esi+imm]", "cmp dl imm", "jz addr"], "17574": ["test dl dl", "jz short addr"], "17578": ["xor ecx ecx", "jmp short addr"], "17584": ["inc i", "mov dl [esi+imm]", "test dl dl", "jz short addr"], "17593": ["cmp dl imm", "jnz short addr"], "17598": ["test i i", "jz short addr"], "17602": ["lea esi [name+imm]", "jmp short addr"], "17608": ["lea edx [eax+imm]", "inc edi", "mov [dtd+imm] edx", "mov cl [edi-imm]", "cmp esi edi", "mov [eax] cl", "mov eax [dtd+imm]", "jz short addr"], "17627": ["cmp [dtd+imm] eax", "jnz short addr"], "17632": ["mov eax [esp+imm]", "call poolGrow", "test al al", "jz short addr"], "17645": ["mov eax [dtd+imm]", "jmp short addr"], "17656": ["cmp [dtd+imm] eax", "jz addr"], "17665": ["sub esp imm", "lea edx [eax+imm]", "mov [dtd+imm] edx", "mov byte ptr [eax] imm", "mov ecx [dtd+imm]", "push imm", "mov eax [esp+imm]", "lea edx [dtd+imm]", "call lookup", "add esp imm", "mov [id+imm] eax", "test eax eax", "jz addr"], "17708": ["mov edx [dtd+imm]", "cmp [eax] edx", "jz addr"], "17719": ["mov [dtd+imm] edx", "jmp addr"], "17728": ["cmp byte ptr [esi+imm] imm", "jnz addr"], "17738": ["cmp byte ptr [esi+imm] imm", "jnz addr"], "17748": ["cmp byte ptr [esi+imm] imm", "jnz addr"], "17758": ["cmp byte ptr [esi+imm] imm", "jnz addr"], "17768": ["mov cl [esi+imm]", "test cl cl", "jz short addr"], "17775": ["cmp cl imm", "jnz addr"], "17784": ["test cl cl", "jz short addr"], "17788": ["sub esp imm", "lea ecx [esi+imm]", "lea edx [dtd+imm]", "push imm", "mov eax [esp+imm]", "call lookup", "add esp imm", "mov [id+imm] eax"], "17814": ["mov byte ptr [id+imm] imm", "jmp addr"], "17824": ["mov eax [esp+imm]", "call poolGrow", "test al al", "jz addr"], "17841": ["mov eax [dtd+imm]", "jmp addr"], "17856": ["mov eax [dtd+imm]", "mov [dtd+imm] eax", "jmp addr"], "17867": ["add dtd imm", "mov [id+imm] ebx", "jmp short addr"]}, "preds": [17768, 17784], "succs": [17814]}, "setContext": {"disasm": {"17888": ["push ebp", "push edi", "push esi", "push ebx", "mov ebx parser", "sub esp imm", "mov parser [parser+imm]", "mov cl [context]", "mov [esp+imm] eax", "test cl cl", "jz addr"], "17917": ["lea func [parser+imm]", "mov edi s", "mov esi s", "lea ebp [parser+imm]", "mov [esp+imm] eax", "jmp short addr"], "17944": ["test cl cl", "jz short addr"], "17948": ["cmp cl imm", "jz short addr"], "17953": ["cmp edx eax", "jz addr"], "17961": ["lea eax [edx+imm]", "inc s", "mov [parser+imm] eax", "mov al [edi-imm]", "mov [edx] al"], "17976": ["cmp byte ptr [context] imm", "jz addr"], "17985": ["mov cl [s]"], "17987": ["mov edx [parser+imm]", "mov eax [parser+imm]", "cmp cl imm", "jnz short addr"], "18004": ["cmp edx eax", "jz addr"], "18012": ["sub esp imm", "lea eax [edx+imm]", "mov [parser+imm] eax", "mov byte ptr [edx] imm", "push imm", "mov ecx [parser+imm]", "mov edx [esp+imm]", "mov eax parser", "call lookup", "add esp imm", "test e e", "jz short addr"], "18053": ["mov byte ptr [e+imm] imm"], "18057": ["cmp byte ptr [s] imm", "mov e [parser+imm]", "sbb s imm", "mov [parser+imm] eax", "mov esi s", "jmp short addr"], "18080": ["cmp [parser+imm] edx", "jz addr"], "18092": ["cmp edx eax", "jz addr"], "18100": ["lea eax [edx+imm]", "sub esp imm", "mov [parser+imm] eax", "mov eax [esp+imm]", "mov byte ptr [edx] imm", "push imm", "lea edx [eax+imm]", "mov ecx [parser+imm]", "mov eax parser", "call lookup", "mov [esp+imm] eax", "add esp imm", "test func func", "jz addr"], "18152": ["mov edx [parser+imm]", "cmp func edx", "jz addr"], "18166": ["mov [parser+imm] edx", "mov eax [parser+imm]"], "18178": ["mov cl [s+imm]", "lea context [s+imm]", "cmp cl imm", "jz short addr"], "18189": ["test cl cl", "jnz short addr"], "18193": ["jmp short addr"], "18200": ["lea eax [edx+imm]", "inc context", "mov [parser+imm] eax", "mov al [esi-imm]", "mov [edx] al", "mov al [context]", "mov edx [parser+imm]", "cmp al imm", "jz short addr"], "18227": ["test al al", "jz short addr"], "18231": ["mov eax [parser+imm]"], "18237": ["cmp edx eax", "jnz short addr"], "18241": ["mov eax ebp", "call poolGrow", "test al al", "jz addr"], "18256": ["mov edx [parser+imm]", "jmp short addr"], "18264": ["mov eax ebp", "call poolGrow", "test al al", "jz addr"], "18279": ["mov edx [parser+imm]", "jmp addr"], "18296": ["mov eax [parser+imm]"], "18302": ["cmp edx eax", "jz addr"], "18310": ["lea eax [edx+imm]", "mov [parser+imm] eax", "mov byte ptr [edx] imm", "push eax", "mov ecx [parser+imm]", "push eax", "mov eax parser", "mov edx [esp+imm]", "push edx", "push ecx", "xor ecx ecx", "mov edx [esp+imm]", "call addBinding", "add esp imm", "test eax eax", "jnz short addr"], "18356": ["mov eax [parser+imm]", "mov [parser+imm] eax", "cmp byte ptr [context] imm", "jz short addr"], "18373": ["inc context", "mov s context", "jmp addr"], "18384": ["add esp imm", "mov al imm", "pop parser", "pop esi", "pop edi", "pop ebp", "retn"], "18400": ["mov eax ebp", "call poolGrow", "test al al", "jz short addr"], "18411": ["mov edx [parser+imm]", "jmp addr"], "18424": ["mov eax ebp", "call poolGrow", "test al al", "jz short addr"], "18435": ["mov edx [parser+imm]", "jmp addr"], "18448": ["mov eax ebp", "call poolGrow", "test al al", "jz short addr"], "18459": ["mov edx [parser+imm]", "jmp addr"], "18472": ["add esp imm", "xor eax eax", "pop parser", "pop context", "pop s", "pop ebp", "retn"], "18482": ["mov func [esp+imm]", "add eax imm", "call poolCopyString", "mov ecx [esp+imm]", "test eax eax", "mov [ecx] eax", "jz short addr"], "18504": ["mov edx [parser+imm]", "jmp addr"], "18515": ["mov ecx [esp+imm]", "add ecx imm", "mov [esp+imm] ecx", "jmp addr"]}, "preds": [18080], "succs": [18178]}, "storeRawNames": {"disasm": {"18544": ["push ebp", "call func", "add ecx (offset func - $)", "push edi", "mov edi edx", "push esi", "push ebx", "sub esp imm", "test edx edx", "mov [esp+imm] ecx", "mov [esp+imm] eax", "jnz short addr"], "18576": ["jmp addr"], "18584": ["mov temp [tag+imm]", "test eax eax", "jz short addr"], "18591": ["sub eax edx", "add eax temp", "mov [tag+imm] eax"], "18598": ["lea eax [temp+imm]", "mov ecx [esp+imm]", "mov [tag+imm] eax", "mov eax [tag+imm]", "mov [tag+imm] temp", "mov [esp+imm] eax", "add temp ecx", "mov ecx [tag+imm]"], "18622": ["push eax", "mov edx [esp+imm]", "push edx", "push ecx", "push rawNameBuf", "mov bufSize [esp+imm]", "call func", "mov [tag+imm] rawNameBuf", "mov tag [tag]", "add esp imm", "test tag tag", "jz short addr"], "18651": ["mov eax [tag+imm]", "mov edx [tag+imm]", "mov ecx [tag+imm]", "lea ebx [eax+imm]", "lea esi [edx+imm]", "mov [esp+imm] ebx", "cmp rawNameBuf ecx", "jz short addr"], "18674": ["mov ebp imm", "mov eax [tag+imm]", "sub ebp func", "mov [esp+imm] eax", "cmp func ebp", "ja short addr"], "18692": ["mov func [esp+imm]", "add func func", "mov func [tag+imm]", "sub eax edx", "cmp bufSize eax", "jle short addr"], "18706": ["push esi", "push esi", "push bufSize", "push edx", "mov eax [esp+imm]", "call dword ptr [eax]", "add esp imm", "mov esi eax", "test temp temp", "jz short addr"], "18725": ["mov edx [tag+imm]", "cmp [tag+imm] edx", "jnz addr"], "18737": ["mov [tag+imm] temp", "jmp addr"], "18752": ["add esp imm", "mov al imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "18768": ["add esp imm", "xor eax eax", "pop ebx", "pop esi", "pop tag", "pop ebp", "retn"]}, "preds": [18674, 18706], "succs": []}, "setElementTypePrefix": {"disasm": {"18784": ["push ebp", "push edi", "push esi", "push ebx", "sub esp imm", "mov [esp+imm] func", "mov al [name]", "mov [esp+imm] ecx", "test al al", "jz addr"], "18809": ["mov ebx name", "mov edi name", "jmp short addr"], "18816": ["mov al [name+imm]", "inc name", "test al al", "jz addr"], "18828": ["cmp al imm", "jnz short addr"], "18832": ["mov eax [esp+imm]", "cmp ebx name", "mov esi [eax+imm]", "lea ebp [esi+imm]", "jnz short addr"], "18849": ["jmp short addr"], "18856": ["lea edx [eax+imm]", "inc s", "mov [esi+imm] edx", "mov cl [ebx-imm]", "cmp ebx name", "mov [eax] cl", "jz short addr"], "18872": ["mov eax [esi+imm]", "cmp eax [esi+imm]", "jnz short addr"], "18880": ["mov eax ebp", "call poolGrow", "test al al", "jz short addr"], "18891": ["mov eax [esi+imm]", "inc s", "lea edx [eax+imm]", "mov [esi+imm] edx", "mov cl [ebx-imm]", "cmp ebx name", "mov [eax] cl", "jnz short addr"], "18910": ["xchg ax ax"], "18912": ["mov eax [esi+imm]", "cmp eax [esi+imm]", "jz short addr"], "18920": ["sub esp imm", "lea edx [eax+imm]", "mov [esi+imm] edx", "mov byte ptr [eax] imm", "mov ecx [esi+imm]", "push imm", "mov eax [esp+imm]", "lea edx [esi+imm]", "call lookup", "add esp imm", "test prefix prefix", "jz short addr"], "18956": ["mov edx [esi+imm]", "cmp [prefix] edx", "jz short addr"], "18963": ["mov [esi+imm] edx"], "18966": ["mov ecx [esp+imm]", "mov [ecx] prefix", "add esp imm", "mov prefix imm", "pop s", "pop esi", "pop name", "pop ebp", "retn"], "18992": ["add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "19008": ["add esp imm", "xor eax eax", "pop s", "pop esi", "pop name", "pop ebp", "retn"], "19024": ["lea eax [esi+imm]", "call poolGrow", "test al al", "jz short addr"], "19036": ["mov eax [esi+imm]", "jmp short addr"], "19041": ["mov edx [esi+imm]", "mov [esi+imm] edx", "jmp short addr"]}, "preds": [18956], "succs": [18966]}, "getElementType": {"disasm": {"19056": ["push ebp", "push edi", "push esi", "mov esi parser", "push ebx", "sub esp imm", "mov edi [parser+imm]", "mov ebx [esp+imm]", "lea parser [dtd+imm]", "push ebx", "call poolStoreString", "add esp imm", "test name name", "jz short addr"], "19091": ["sub esp imm", "mov ecx name", "mov ebp name", "lea edx [dtd+imm]", "mov name parser", "push imm", "call lookup", "add esp imm", "mov ebx eax", "test ret ret", "jz short addr"], "19119": ["cmp [ret] name", "jz short addr"], "19123": ["mov ret [dtd+imm]", "mov [dtd+imm] eax"], "19129": ["add esp imm", "mov eax ret", "pop ret", "pop parser", "pop dtd", "pop name", "retn"], "19144": ["mov ret [dtd+imm]", "lea ecx [ret+imm]", "mov [dtd+imm] eax", "mov eax parser", "mov edx [ret]", "call setElementTypePrefix", "test eax eax", "jnz short addr"], "19166": ["add esp imm", "xor ebx ebx", "mov eax ebx", "pop ebx", "pop parser", "pop dtd", "pop ebp", "retn"]}, "preds": [19056, 19091, 19144], "succs": []}, "reportComment": {"disasm": {"19184": ["push edi", "push esi", "push ebx", "mov ebx parser", "mov parser [parser+imm]", "test eax eax", "jz addr"], "19200": ["sub esp imm", "mov eax [enc+imm]", "lea esi [parser+imm]", "mov edi [esp+imm]", "lea start [start+imm]", "lea eax [eax+imm]", "sub edi eax", "mov eax esi", "push edi", "call poolStoreString", "add esp imm", "mov esi eax", "test eax eax", "jz short addr"], "19241": ["call normalizeLines", "mov edx [parser+imm]", "push eax", "push eax", "push esi", "push edx", "call dword ptr [parser+imm]", "mov ecx [parser+imm]", "add esp imm", "mov eax [parser+imm]", "test ecx ecx", "jz addr"], "19279": ["test eax eax", "jnz short addr"], "19283": ["jmp short addr"], "19288": ["mov eax edx"], "19290": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [parser+imm] eax", "mov ecx eax", "jnz short addr"], "19306": ["mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov esi imm"], "19351": ["pop parser", "mov eax esi", "pop esi", "pop edi", "retn"], "19360": ["xor esi esi", "pop parser", "mov eax esi", "pop esi", "pop edi", "retn"], "19368": ["mov eax [parser+imm]", "mov esi imm", "test eax eax", "jz short addr"], "19380": ["sub esp imm", "mov eax parser", "mov edi [esp+imm]", "push edi", "call reportDefault", "add esp imm", "mov eax esi", "pop parser", "pop esi", "pop edi", "retn"], "19408": ["mov [parser+imm] eax", "jmp short addr"]}, "preds": [19241], "succs": [19306]}, "copyEntityTable": {"disasm": {"19424": ["push ebp", "mov ebp newPool", "push edi", "push esi", "push ebx", "sub esp imm", "mov [esp+imm] func", "mov ebx [esp+imm]", "mov func [esp+imm]", "mov [esp+imm] func", "mov [esp+imm] imm", "mov [esp+imm] imm", "lea eax [iter_0+imm]", "mov [esp+imm] eax", "jmp short addr"], "19480": ["mov esi [ebx]", "add ebx imm", "test esi esi", "jnz short addr"], "19489": ["cmp [esp+imm] ebx", "jnz short addr"], "19495": ["add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop newPool", "retn"], "19512": ["mov edx [oldE]", "mov eax newPool", "call poolCopyString", "mov ecx eax", "test name name", "jz addr"], "19531": ["sub esp imm", "push imm", "mov edx [esp+imm]", "mov name [esp+imm]", "call lookup", "mov [esp+imm] eax", "add esp imm", "test func func", "jz addr"], "19564": ["mov edx [oldE+imm]", "test edx edx", "jz addr"], "19575": ["mov func newPool", "call poolCopyString", "test tem tem", "jz addr"], "19590": ["mov edx [esp+imm]", "mov [edx+imm] tem", "mov edi [oldE+imm]", "test edi edi", "jz short addr"], "19604": ["cmp edi [esp+imm]", "jz addr"], "19614": ["mov edx func", "mov tem newPool", "call poolCopyString", "mov [esp+imm] eax", "test tem tem", "jz addr"], "19635": ["mov ecx [esp+imm]", "mov [esp+imm] func", "mov [ecx+imm] tem"], "19646": ["mov edx [oldE+imm]", "test edx edx", "jz short addr"], "19653": ["mov eax newPool", "call poolCopyString", "test tem tem", "jz addr"], "19668": ["mov edi [esp+imm]", "mov [edi+imm] tem"], "19675": ["mov edx [oldE+imm]", "test edx edx", "jz short addr"], "19682": ["mov eax newPool", "call poolCopyString", "test tem tem", "jz addr"], "19697": ["mov edi [esp+imm]", "mov [edi+imm] tem"], "19704": ["mov edx [esp+imm]", "mov al [oldE+imm]", "mov [edx+imm] al", "mov al [oldE+imm]", "mov byte ptr [esp+imm] al", "mov [edx+imm] al", "jmp addr"], "19736": ["mov func [newPool+imm]", "mov edx [oldE+imm]", "mov edi [oldE+imm]", "test eax eax", "jz addr"], "19753": ["test edx edx", "jle short addr"], "19757": ["add edx edi", "mov [esp+imm] ebx", "mov ebx edx", "jmp short addr"], "19768": ["lea ecx [eax+imm]", "inc edi", "mov [newPool+imm] ecx", "mov cl [edi-imm]", "cmp edi ebx", "mov [eax] cl", "jz short addr"], "19784": ["mov eax [newPool+imm]"], "19787": ["cmp [newPool+imm] eax", "jnz short addr"], "19792": ["mov eax newPool", "call poolGrow", "test al al", "jz short addr"], "19803": ["mov eax [newPool+imm]", "inc edi", "lea ecx [eax+imm]", "mov [newPool+imm] ecx", "mov cl [edi-imm]", "cmp edi ebx", "mov [eax] cl", "jnz short addr"], "19822": ["xchg ax ax"], "19824": ["mov ebx [esp+imm]", "mov eax [newPool+imm]"], "19831": ["mov edx [newPool+imm]", "mov [newPool+imm] eax", "test tem tem", "jz short addr"], "19841": ["mov edi [esp+imm]", "mov [edi+imm] tem", "mov eax [oldE+imm]", "mov [edi+imm] eax", "jmp addr"], "19864": ["mov tem [esp+imm]", "mov [edx+imm] eax", "jmp addr"], "19880": ["add esp imm", "xor eax eax", "pop ebx", "pop oldE", "pop edi", "pop newPool", "retn"], "19890": ["mov eax newPool", "mov [esp+imm] edx", "call poolGrow", "test al al", "jz short addr"], "19905": ["mov eax [newPool+imm]", "mov edx [esp+imm]", "jmp addr"]}, "preds": [19890], "succs": [19753]}, "copyString": {"disasm": {"19920": ["push ebp", "push edi", "push esi", "call func", "add esi (offset func - $)", "push ebx", "mov ebx func", "sub esp imm", "cmp byte ptr func imm", "jz short addr"], "19945": ["xor func func", "lea esi [esi+imm]", "nop"], "19952": ["mov ecx charsRequired", "inc charsRequired", "cmp byte ptr [s_0+imm] imm", "jnz short addr"], "19961": ["lea edi [ecx+imm]"], "19964": ["sub esp imm", "push edi", "call dword ptr [edx]", "add esp imm", "mov ebp eax", "test result result", "jz short addr"], "19979": ["push eax", "push edi", "push func", "mov func esi", "push result", "call func", "add esp imm"], "19993": ["add esp imm", "mov eax result", "pop ebx", "pop esi", "pop edi", "pop result", "retn"], "20008": ["mov edi imm", "jmp short addr"]}, "preds": [19920], "succs": [19964]}, "initializeEncoding": {"disasm": {"20016": ["push ebx", "call func", "add ecx (offset func - $)", "sub esp imm", "mov ebx parser", "cmp byte ptr [parser+imm] imm", "mov edx [parser+imm]", "jnz short addr"], "20048": ["lea parser (XmlInitEncoding - 2DF78h)[ecx]"], "20054": ["push ecx", "push func", "lea func [parser+imm]", "push edx", "lea edx [parser+imm]", "push edx", "call eax", "add esp imm", "test eax eax", "jz short addr"], "20079": ["add esp imm", "xor eax eax", "pop parser", "retn"], "20088": ["lea parser (XmlInitEncodingNS - 2DF78h)[ecx]", "jmp short addr"], "20096": ["mov edx [parser+imm]", "add esp imm", "mov eax parser", "pop parser", "jmp handleUnknownEncoding"]}, "preds": [20096], "succs": []}, "accountingGetCurrentAmplification": {"disasm": {"20128": ["push ebp", "call func", "add edx (offset func - $)", "push edi", "push esi", "push ebx", "sub esp imm", "mov edi [rootParser+imm]", "mov ebx [rootParser+imm]", "mov ecx [rootParser+imm]", "mov esi [rootParser+imm]", "mov dword ptr [esp+imm] edi", "mov edi ebx", "mov dword ptr [esp+imm] esi", "or edi ecx", "jz short addr"], "20183": ["mov edi dword ptr [esp+imm]", "mov ebp dword ptr [esp+imm]", "add edi ecx", "adc ebp ebx", "mov dword ptr [esp+imm] edi", "mov dword ptr [esp+imm] ebp", "test ebp ebp", "fild [esp+imm]", "js short addr"], "20208": ["fstp dword ptr [esp+imm]", "mov dword ptr [esp+imm] ecx", "mov dword ptr [esp+imm] ebx", "fild [esp+imm]", "test ebx ebx", "js short addr"], "20227": ["fstp dword ptr [esp+imm]", "fld dword ptr [esp+imm]", "fdiv dword ptr [esp+imm]"], "20238": ["mov rootParser [rootParser+imm]", "test eax eax", "jnz short addr"], "20248": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "20256": ["fld1", "jmp short addr"], "20264": ["fadd func - 2DF78h)[edx]", "jmp short addr"], "20272": ["fadd func - 2DF78h)[edx]", "jmp short addr"], "20280": ["fstp st", "lea eax func - 2DF78h)[edx]", "mov ebx edx", "push eax", "lea eax (aGitExpatLibXml - 2DF78h)[edx]", "push imm", "push eax", "lea eax (aRootparserMPar - 2DF78h)[edx]", "push eax", "call func"]}, "preds": [20238], "succs": []}, "accountingDiffTolerated": {"disasm": {"20448": ["push ebp", "mov ebp before", "push edi", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov before [originParser+imm]", "mov [esp+imm] func", "mov edi large imm", "mov [esp+imm] edi", "xor edi edi", "test edx edx", "jz addr"], "20499": ["lea esi [esi+imm]", "nop"], "20504": ["mov esi edx", "mov edx [edx+imm]", "inc edi", "test edx edx", "jnz short addr"], "20517": ["cmp originParser esi", "setz al"], "20522": ["mov func [esp+imm]", "mov edx [esp+imm]", "sub ecx before", "test edx edx", "mov [esp+imm] ecx", "jnz short addr"], "20540": ["test al al", "jz short addr"], "20544": ["lea eax [rootParser+imm]", "mov edx [rootParser+imm]", "mov [esp+imm] eax", "mov eax [rootParser+imm]", "mov [esp+imm] eax", "mov [esp+imm] edx"], "20573": ["mov edx [esp+imm]", "mov func edx", "mov [esp+imm] edx", "sar ecx imm", "mov [esp+imm] ecx", "mov ecx [esp+imm]", "xor ecx imm", "mov eax ecx", "mov ecx edx", "xor ecx imm", "mov edx [esp+imm]", "cmp ecx [esp+imm]", "mov ecx eax", "sbb ecx edx", "mov eax [esp+imm]", "mov byte ptr [esp+imm] imm", "jnb short addr"], "20624": ["mov eax [esp+imm]", "xor eax large imm", "jnz addr"], "20641": ["mov al byte ptr [esp+imm]", "add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "20656": ["lea eax [rootParser+imm]", "mov edx [rootParser+imm]", "mov [esp+imm] eax", "mov eax [rootParser+imm]", "mov [esp+imm] eax", "mov [esp+imm] edx", "jmp short addr"], "20688": ["add eax [esp+imm]", "mov ecx [esp+imm]", "adc edx [esp+imm]", "mov [ecx] eax", "mov [ecx+imm] edx", "mov eax [rootParser+imm]", "mov edx [rootParser+imm]", "add eax [rootParser+imm]", "adc edx [rootParser+imm]", "mov [esp+imm] eax", "mov eax rootParser", "mov [esp+imm] edx", "call accountingGetCurrentAmplification", "mov eax [esp+imm]", "cmp eax [rootParser+imm]", "mov edx [esp+imm]", "mov eax edx", "mov byte ptr [esp+imm] imm", "sbb eax [rootParser+imm]", "jb short addr"], "20770": ["fld dword ptr [rootParser+imm]", "fcompp", "fnstsw ax", "test imm imm", "setz byte ptr [esp+imm]", "jmp short addr"], "20792": ["fstp st"], "20794": ["cmp dword ptr [rootParser+imm] imm", "jle addr"], "20807": ["mov eax rootParser", "lea edx func - 2DF78h)[ebx]", "call accountingReportStats", "mov eax [rootParser+imm]", "test eax eax", "jnz addr"], "20834": ["mov eax [esp+imm]", "test eax eax", "jz addr"], "20846": ["lea eax (aExp - 2DF78h)[ebx]"], "20852": ["sub esp imm", "lea edx func - 2DF78h)[ebx]", "push edx", "push imm", "mov edx [esp+imm]", "push edx", "push func", "mov func func - 2DF78h)[ebx]", "push eax", "lea eax (a6dBytesSDXmlpa - 2DF78h)[ebx]", "mov ecx [esp+imm]", "push ecx", "push eax", "push imm", "mov eax [edi]", "push eax", "call func", "mov [esp+imm] imm", "mov [esp+imm] imm", "add esp imm", "cmp dword ptr [rootParser+imm] imm", "jg short addr"], "20924": ["cmp [esp+imm] imm", "lea rootParser [before+imm]", "jg short addr"], "20934": ["cmp [esp+imm] before", "mov esi [esp+imm]", "jbe short addr"], "20944": ["xor eax eax", "inc ebp", "mov al [ebp-imm]", "call unsignedCharToPrintable", "push edx", "push edx", "mov ecx [edi]", "push ecx", "push eax", "call func", "add esp imm", "cmp esi ebp", "jnz short addr"], "20973": ["mov esi [edi]", "lea eax func - 2DF78h)[ebx]", "push esi", "push imm", "push imm", "push eax", "call func", "add esp imm", "jmp addr"], "21000": ["xor eax eax", "inc ebp", "mov al [ebp-imm]", "call unsignedCharToPrintable", "push edx", "push edx", "mov ecx [edi]", "push ecx", "push eax", "call func", "add esp imm", "cmp ebp esi", "jnz short addr"], "21029": ["push esi", "lea eax [esp+imm]", "push eax", "push imm", "mov ebp [edi]", "push ebp", "call func", "mov ebp [esp+imm]", "add esp imm", "lea esi [ebp-imm]", "nop"], "21056": ["xor eax eax", "inc esi", "mov al [esi-imm]", "call unsignedCharToPrintable", "push edx", "push edx", "mov ecx [edi]", "push ecx", "push eax", "call func", "add esp imm", "cmp ebp esi", "jnz short addr"], "21085": ["jmp short addr"], "21088": ["lea eax (aDir - 2DF78h)[ebx]", "jmp addr"], "21104": ["mov esi originParser", "xor edi edi", "mov al imm", "jmp addr"], "21115": ["lea eax func - 2DF78h)[ebx]", "push eax", "lea eax (aGitExpatLibXml - 2DF78h)[ebx]", "push imm", "push eax", "lea eax (aRootparserMPar - 2DF78h)[ebx]", "push eax", "call func"], "21146": ["call func"]}, "preds": [20624], "succs": []}, "processXmlDecl": {"disasm": {"21152": ["push ebp", "call func", "add ebp (offset func - $)", "push edi", "push esi", "mov esi isGeneralTextEntity", "push ebx", "mov ebx parser", "sub esp imm", "mov isGeneralTextEntity func", "mov [esp+imm] func", "mov edi [esp+imm]", "mov parser large imm", "mov [esp+imm] parser", "xor parser parser", "mov func edi", "mov [esp+imm] imm", "mov [esp+imm] imm", "mov [esp+imm] imm", "mov [esp+imm] imm", "mov eax parser", "push imm", "push offset originParser", "call accountingDiffTolerated", "add esp imm", "test al al", "jz addr"], "21255": ["cmp byte ptr [parser+imm] imm", "jnz short addr"], "21264": ["lea eax (XmlParseXmlDecl - 2DF78h)[ebp]"], "21270": ["push edx", "mov ebp [parser+imm]", "push edx", "lea edx [esp+imm]", "push edx", "lea edx [esp+imm]", "push edx", "lea edx [esp+imm]", "push edx", "lea edx [esp+imm]", "push edx", "lea edx [esp+imm]", "push edx", "lea edx [parser+imm]", "push edx", "push edi", "mov ecx [esp+imm]", "push ecx", "push ebp", "push isGeneralTextEntity", "call eax", "add esp imm", "test eax eax", "jnz short addr"], "21327": ["lea eax [isGeneralTextEntity+imm]"], "21330": ["mov edi [esp+imm]", "xor edi large imm", "jnz addr"], "21347": ["add esp imm", "pop parser", "pop esi", "pop edi", "pop ebp", "retn"], "21360": ["lea eax (XmlParseXmlDeclNS - 2DF78h)[ebp]", "jmp short addr"], "21368": ["test isGeneralTextEntity isGeneralTextEntity", "jnz short addr"], "21372": ["cmp [esp+imm] imm", "jz addr"], "21383": ["mov eax [parser+imm]", "test eax eax", "jz addr"], "21397": ["mov isGeneralTextEntity [esp+imm]", "test esi esi", "jz short addr"], "21405": ["mov eax [parser+imm]", "mov edx esi", "lea edi [parser+imm]", "call dword ptr [eax+imm]", "sub esp imm", "add esi eax", "mov edx [parser+imm]", "push esi", "mov eax edi", "mov ecx [esp+imm]", "call poolStoreString", "add esp imm", "mov esi eax", "test storedEncName storedEncName", "jz addr"], "21458": ["mov storedEncName [parser+imm]", "mov [parser+imm] eax"], "21470": ["mov ecx [esp+imm]", "test ecx ecx", "jz addr"], "21482": ["sub esp imm", "mov edx [parser+imm]", "lea edi [parser+imm]", "mov eax [esp+imm]", "mov ebp [edx+imm]", "sub eax ebp", "push eax", "mov eax edi", "call poolStoreString", "add esp imm", "mov edi eax", "test storedversion storedversion", "jz addr"], "21527": ["mov storedversion [esp+imm]", "mov edx [parser+imm]", "push eax", "push storedEncName", "push storedversion", "push edx", "call dword ptr [parser+imm]", "mov ecx [parser+imm]", "add esp imm", "test ecx ecx", "jz addr"], "21561": ["mov ecx [parser+imm]", "mov eax [parser+imm]", "test ecx ecx", "jz addr"], "21581": ["test eax eax", "jnz short addr"], "21585": ["jmp short addr"], "21592": ["mov eax edx"], "21594": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [parser+imm] eax", "mov ecx eax", "jnz short addr"], "21610": ["mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm"], "21650": ["xor eax eax", "jmp addr"], "21664": ["mov edi [esp+imm]", "mov ebp [parser+imm]", "push edi", "push storedEncName", "push imm", "push ebp", "call dword ptr [parser+imm]", "mov edi [parser+imm]", "add esp imm", "test edi edi", "jz addr"], "21699": ["test esi esi", "jnz addr"], "21707": ["xor eax eax", "jmp addr"], "21720": ["mov eax [parser+imm]", "mov byte ptr [eax+imm] imm", "cmp dword ptr [parser+imm] imm", "jnz addr"], "21746": ["mov dword ptr [parser+imm] imm", "jmp addr"], "21768": ["mov eax imm", "jmp addr"], "21784": ["mov isGeneralTextEntity [parser+imm]", "test esi esi", "jz short addr"], "21791": ["sub esp imm", "mov edx [parser+imm]", "mov eax parser", "push edi", "mov ecx [esp+imm]", "call reportDefault", "add esp imm"], "21815": ["mov esi [parser+imm]", "test esi esi", "jnz addr"], "21829": ["mov eax [esp+imm]", "xor edi edi", "test eax eax", "jnz addr"], "21843": ["mov ebp [esp+imm]", "test ebp ebp", "jz addr"], "21855": ["mov eax [parser+imm]", "mov edx ebp", "call dword ptr [eax+imm]", "sub esp imm", "mov ecx eax", "mov edx [parser+imm]", "add ebp ecx", "lea eax [parser+imm]", "push ebp", "mov ecx [esp+imm]", "call poolStoreString", "add esp imm", "mov esi eax", "test storedEncName storedEncName", "jz addr"], "21908": ["mov edx storedEncName", "mov eax parser", "call handleUnknownEncoding", "mov storedEncName [parser+imm]", "mov edx [parser+imm]", "test esi esi", "jz addr"], "21937": ["test edx edx", "jnz short addr"], "21941": ["jmp short addr"], "21944": ["mov edx ecx"], "21946": ["mov ecx [edx]", "mov [edx] esi", "test ecx ecx", "mov [parser+imm] edx", "mov esi edx", "jnz short addr"], "21962": ["mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "cmp result imm", "jnz addr"], "22011": ["mov edx [esp+imm]", "mov [parser+imm] edx", "jmp addr"], "22032": ["mov eax parser", "lea edx (aAborting - 2DF78h)[ebp]", "call accountingReportStats", "mov eax imm", "jmp addr"], "22056": ["mov eax [esp+imm]", "test eax eax", "jz short addr"], "22064": ["mov edx [parser+imm]", "mov ecx [eax+imm]", "cmp ecx [edx+imm]", "jnz short addr"], "22078": ["cmp edx eax", "jz short addr"], "22082": ["cmp ecx imm", "jz short addr"], "22087": ["mov [parser+imm] eax", "or esi edi", "jmp addr"], "22104": ["mov [parser+imm] eax", "jmp addr"], "22120": ["mov eax [esp+imm]", "mov [parser+imm] eax", "mov eax imm", "jmp addr"], "22144": ["mov ebp [esp+imm]", "test ebp ebp", "jz short addr"], "22152": ["test storedEncName storedEncName", "jnz addr"], "22160": ["jmp addr"], "22165": ["or storedEncName edi", "jmp addr"], "22172": ["mov [parser+imm] edx", "jmp addr"], "22183": ["call func"]}, "preds": [21330], "succs": []}, "epilogProcessor": {"disasm": {"22192": ["push ebp", "call func", "add ebp (offset func - $)", "push edi", "push esi", "push ebx", "sub esp imm", "mov eax [esp+imm]", "mov esi [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov edi [esp+imm]", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "lea eax (epilogProcessor - 2DF78h)[ebp]", "mov [esi+imm] eax", "lea eax [esp+imm]", "mov [esi+imm] edi", "mov [esp+imm] eax"], "22272": ["mov edx [esp+imm]", "mov [esp+imm] imm", "mov eax [esi+imm]", "push edx", "mov ecx [esp+imm]", "push ecx", "push func", "push eax", "call dword ptr [eax]", "mov ecx [esp+imm]", "mov ebx eax", "add esp imm", "cmp tok imm", "jz addr"], "22318": ["jl short addr"], "22320": ["lea tok [tok+imm]", "cmp eax imm", "jbe short addr"], "22328": ["push eax", "mov edx func", "push eax", "mov eax esi", "push imm", "push (offset func", "call accountingDiffTolerated", "add esp imm", "test al al", "jz addr"], "22357": ["mov ecx [esp+imm]"], "22361": ["add tok imm", "mov [esi+imm] ecx", "cmp ebx imm", "ja short func"], "22375": ["mov eax func - 2DF78h)[ebp+imm]", "add eax ebp", "jmp eax"], "22392": ["mov eax imm"], "22397": ["mov edx [esp+imm]", "xor edx large imm", "jnz addr"], "22414": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "22424": ["sub esp imm", "mov edx [esi+imm]", "mov eax esi", "push ecx", "mov ecx func", "call reportComment", "add esp imm", "test eax eax", "jz addr"], "22454": ["mov func [esp+imm]"], "22458": ["mov eax [esi+imm]", "mov [esi+imm] edi", "cmp eax imm", "jz addr"], "22479": ["cmp eax imm", "jnz addr"], "22488": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp short addr"], "22504": ["mov edx [esi+imm]", "test edx edx", "jz short addr"], "22511": ["sub esp imm", "mov edx [esi+imm]", "mov eax esi", "push ecx", "mov ecx func", "call reportDefault", "add esp imm", "cmp dword ptr [esi+imm] imm", "jz addr"], "22546": ["mov ecx [esp+imm]"], "22550": ["mov eax [esp+imm]", "mov [eax] ecx", "xor eax eax", "jmp addr"], "22568": ["cmp byte ptr [esi+imm] imm", "mov eax imm", "jnz addr"], "22586": ["jmp short addr"], "22592": ["cmp byte ptr [esi+imm] imm", "mov eax imm", "jnz addr"], "22610": ["jmp short addr"], "22616": ["mov [esi+imm] ecx", "mov eax imm", "jmp addr"], "22632": ["sub esp imm", "mov edx [esi+imm]", "mov eax esi", "push ecx", "mov ecx func", "call reportProcessingInstruction", "add esp imm", "test eax eax", "jnz addr"], "22662": ["mov eax imm", "jmp addr"], "22672": ["mov eax [esi+imm]", "test eax eax", "jz short addr"], "22679": ["sub esp imm", "mov edx [esi+imm]", "mov eax esi", "push ecx", "mov ecx func", "call reportDefault", "mov func [esp+imm]", "add esp imm", "jmp addr"], "22712": ["mov eax imm", "jmp addr"], "22728": ["mov [esi+imm] ecx", "jmp addr"], "22744": ["mov func ecx", "jmp addr"], "22752": ["mov eax esi", "lea edx (aAborting - 2DF78h)[ebp]", "call accountingReportStats", "mov eax imm", "jmp addr"], "22775": ["call func"]}, "preds": [22397], "succs": []}, "doCdataSection": {"disasm": {"22784": ["push ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "mov esi enc", "push ebx", "mov ebx parser", "sub esp imm", "mov parser [esp+imm]", "mov [esp+imm] edi", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] func", "mov [esp+imm] eax", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "mov eax func", "cmp [parser+imm] enc", "mov [esp+imm] eax", "jz addr"], "22868": ["mov ebp [parser+imm]", "lea edi [eventPP+imm]", "mov [esp+imm] edi"], "22881": ["mov [eventPP+imm] eax", "mov eax [esp+imm]", "mov dword ptr [eax] imm", "lea eax [esp+imm]", "mov [esp+imm] eax", "lea eax [esp+imm]", "mov [esp+imm] eax", "lea eax [esp+imm]", "mov [esp+imm] eax"], "22918": ["mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "push enc", "call dword ptr [enc+imm]", "mov ecx [esp+imm]", "mov edi eax", "add esp imm", "cmp tok imm", "jz addr"], "22955": ["jl short addr"], "22957": ["lea tok [tok+imm]", "cmp eax imm", "jbe short addr"], "22965": ["push eax", "push eax", "mov eax [esp+imm]", "push eax", "mov eax parser", "push (offset aXmlSetnotstand+8)", "mov edx [esp+imm]", "call accountingDiffTolerated", "add esp imm", "test al al", "jz addr"], "22999": ["mov ecx [esp+imm]", "lea eax [tok+imm]"], "23006": ["mov edx [esp+imm]", "cmp eax imm", "mov [edx] ecx", "ja short func"], "23017": ["mov edx [esp+imm]", "mov tok func - 2DF78h)[edx+imm]", "add edi edx", "jmp edi"], "23032": ["lea enc [parser+imm]", "lea ebp [parser+imm]", "mov [parser+imm] eax", "mov [esp+imm] edx", "jmp addr"], "23064": ["mov [ebp+imm] ecx", "mov eax imm"], "23072": ["mov esi [esp+imm]", "xor esi large imm", "jnz addr"], "23089": ["add esp imm", "pop parser", "pop esi", "pop edi", "pop ebp", "retn"], "23104": ["cmp byte ptr [esp+imm] imm", "mov eax imm", "jz short addr"], "23116": ["mov enc [esp+imm]", "mov eax [esp+imm]", "mov [esi] eax", "xor eax eax", "jmp short addr"], "23136": ["mov [ebp+imm] ecx", "mov eax imm", "jmp short addr"], "23152": ["mov edi [parser+imm]", "test charDataHandler charDataHandler", "jz addr"], "23163": ["cmp byte ptr [enc+imm] imm", "jz addr"], "23173": ["mov eax [esp+imm]", "push edx", "sub ecx eax", "push ecx", "mov ecx [parser+imm]", "push eax", "push ecx", "call charDataHandler", "add esp imm"], "23191": ["mov eax [esp+imm]", "mov [esp+imm] eax", "mov [ebp+imm] eax", "mov eax [parser+imm]", "cmp eax imm", "jz addr"], "23217": ["cmp eax imm", "jnz addr"], "23226": ["mov enc [esp+imm]", "mov eax [esp+imm]", "mov [esi] eax", "xor eax eax", "jmp addr"], "23248": ["mov eax [parser+imm]", "test eax eax", "jz addr"], "23259": ["mov byte ptr [esp+imm] imm", "push edx", "push imm", "mov edi [parser+imm]", "mov ecx [esp+imm]", "push ecx", "push edi", "call eax", "add esp imm", "jmp short addr"], "23288": ["mov eax [parser+imm]", "test eax eax", "jz addr"], "23299": ["sub esp imm", "mov edx [parser+imm]", "push edx", "call eax", "add esp imm"], "23311": ["mov enc [esp+imm]", "mov eax [esp+imm]", "mov [esi] eax", "mov esi [esp+imm]", "mov [esi] eax", "xor eax eax", "cmp dword ptr [parser+imm] imm", "setnz al", "dec eax", "and eax imm", "jmp addr"], "23352": ["mov tok [esp+imm]", "mov [eax] ecx"], "23358": ["cmp byte ptr [esp+imm] imm", "mov eax imm", "jz addr"], "23374": ["jmp addr"], "23384": ["mov eax imm", "jmp addr"], "23400": ["mov eax [parser+imm]", "test eax eax", "jz addr"], "23411": ["sub esp imm", "mov edx enc", "mov eax parser", "push ecx", "mov ecx [esp+imm]", "call reportDefault", "add esp imm", "jmp addr"], "23436": ["mov eax [esp+imm]", "lea edx [eax-imm]", "mov eax parser", "call accountingReportStats", "mov eax imm", "jmp addr"], "23464": ["mov ebp [parser+imm]", "test ebp ebp", "jz addr"], "23475": ["sub esp imm", "mov edx enc", "mov eax parser", "push ecx", "mov ecx [esp+imm]", "call reportDefault", "add esp imm", "jmp addr"], "23504": ["mov [esp+imm] ebp", "mov ebp enc", "mov enc charDataHandler", "jmp short addr"], "23520": ["mov edx [esp+imm]", "mov eax [esp+imm]", "mov [edx] eax"], "23530": ["mov eax [parser+imm]", "sub esp imm", "mov edi [parser+imm]", "mov [esp+imm] eax", "push edi", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "push enc", "call dword ptr [enc+imm]", "mov edx [esp+imm]", "mov edi eax", "mov func [esp+imm]", "add esp imm", "mov [edx] eax", "mov eax [esp+imm]", "mov ecx [parser+imm]", "sub eax ecx", "push eax", "mov eax [parser+imm]", "push ecx", "push eax", "call charDataHandler", "add esp imm", "cmp func imm", "ja short addr"], "23603": ["mov charDataHandler enc", "mov enc [esp+imm]", "jmp addr"], "23614": ["call func"]}, "preds": [23072], "succs": []}, "doIgnoreSection": {"disasm": {"23632": ["push ebp", "mov ebp startPtr", "push edi", "call func", "add edi (offset func - $)", "push esi", "mov esi parser", "push ebx", "sub esp imm", "mov [esp+imm] edi", "mov startPtr [esp+imm]", "mov edi enc", "mov enc [esp+imm]", "mov [esp+imm] ecx", "mov [esp+imm] edx", "mov edx large imm", "mov [esp+imm] edx", "xor edx edx", "mov parser [esp+imm]", "cmp [parser+imm] enc", "mov edx [startPtr+imm]", "jz addr"], "23708": ["mov ebx [parser+imm]", "mov [esp+imm] ebx", "add func imm", "mov [esp+imm] ebx"], "23725": ["mov ecx [esp+imm]", "mov [ecx] func", "lea ecx [esp+imm]", "push ecx", "mov dword ptr [startPtr+imm] imm", "push eax", "push func", "mov [esp+imm] func", "push enc", "call dword ptr [enc+imm]", "mov ecx [esp+imm]", "mov ebx eax", "add esp imm", "cmp tok imm", "mov edx [esp+imm]", "jz addr"], "23775": ["jl short addr"], "23777": ["lea tok [tok+imm]", "cmp eax imm", "jbe short addr"], "23785": ["push eax", "push eax", "mov eax parser", "push imm", "push (offset aXmlSetelementd+7)", "mov [esp+imm] edx", "call accountingDiffTolerated", "add esp imm", "test al al", "jz addr"], "23816": ["mov ecx [esp+imm]", "mov edx [esp+imm]"], "23824": ["mov eax [esp+imm]", "test tok tok", "mov [eax] ecx", "jz addr"], "23838": ["jg short addr"], "23840": ["cmp tok imm", "jz addr"], "23849": ["inc tok", "jnz addr"], "23856": ["cmp byte ptr [esp+imm] imm", "mov eax imm", "jnz addr"], "23872": ["mov parser [esp+imm]", "xor parser large imm", "jnz addr"], "23889": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop startPtr", "retn"], "23904": ["cmp tok imm", "jnz addr"], "23913": ["mov eax [parser+imm]", "test eax eax", "jz short addr"], "23920": ["sub esp imm", "mov eax parser", "push ecx", "mov ecx edx", "mov edx enc", "call reportDefault", "add esp imm"], "23938": ["mov enc [esp+imm]", "mov eax [esp+imm]", "mov [startPtr+imm] eax", "mov func - 2DF78h)[edi] eax", "xor eax eax", "cmp dword ptr [parser+imm] imm", "setnz al", "dec eax", "and eax imm", "jmp short addr"], "23976": ["lea ecx [parser+imm]", "lea ebx [parser+imm]", "mov [esp+imm] ecx", "mov [parser+imm] func", "mov [esp+imm] ebx", "jmp addr"], "24008": ["cmp byte ptr [esp+imm] imm", "mov eax imm", "jz addr"], "24024": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "24040": ["mov eax [esp+imm]", "lea edx [eax-imm]", "mov eax parser", "call accountingReportStats", "mov eax imm", "jmp addr"], "24072": ["mov eax [esp+imm]", "mov [eax] ecx", "mov eax imm", "jmp addr"], "24088": ["mov eax [esp+imm]", "mov [eax] ecx", "mov eax imm", "jmp addr"], "24104": ["call func"], "24109": ["mov tok [esp+imm]", "mov [eax] ecx", "jmp addr"]}, "preds": [23725], "succs": [23856]}, "entityTrackingReportStats": {"disasm": {"24128": ["push ebp", "push edi", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov esi [rootParser_0+imm]", "test esi esi", "jnz short addr"], "24156": ["mov ebp [rootParser_0+imm]", "test ebp ebp", "jle short addr"], "24166": ["cmp byte ptr [entity+imm] imm", "mov esi [entity]", "mov edi [entity+imm]", "jnz short addr"], "24177": ["lea ebp func - 2DF78h)[ebx]"], "24183": ["sub esp imm", "mov entity [rootParser_0+imm]", "push [esp+imm]", "push edi", "push func", "lea func func - 2DF78h)[ebx]", "push func", "push ebp", "push ecx", "lea ecx [edx+imm]", "push ecx", "mov ecx [rootParser_0+imm]", "push ecx", "push edx", "mov func [rootParser_0+imm]", "push esi", "push func", "lea func (aExpatEntitiesP - 2DF78h)[ebx]", "push eax", "mov eax func - 2DF78h)[ebx]", "push imm", "mov edi [eax]", "push edi", "call func", "add esp imm"], "24254": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "24264": ["lea ebp func - 2DF78h)[ebx]", "jmp short addr"], "24272": ["lea func func - 2DF78h)[ebx]", "push eax", "lea eax (aGitExpatLibXml - 2DF78h)[ebx]", "push imm", "push eax", "lea eax (aRootparserMPar - 2DF78h)[ebx]", "push eax", "call func"]}, "preds": [24128], "succs": []}, "appendAttributeValue": {"disasm": {"24400": ["push ebp", "mov ebp enc", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "sub esp imm", "mov esi [esp+imm]", "mov [esp+imm] func", "mov [esp+imm] esi", "mov [esp+imm] cl", "mov [esp+imm] edi", "add func 1B4h", "mov enc large imm", "mov [esp+imm] enc", "xor enc enc", "lea func [esp+imm]", "mov edx [eax-imm]", "mov [esp+imm] eax", "lea eax func - 2DF78h)[edi]", "mov ebx [esp+imm]", "mov esi [esp+imm]", "mov [esp+imm] edx", "mov [esp+imm] ecx", "mov [esp+imm] eax"], "24495": ["mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "push func", "push enc", "call dword ptr [enc+imm]", "add esp imm", "mov edi eax", "cmp tok imm", "jz short addr"], "24520": ["jl short addr"], "24522": ["lea tok [tok+imm]", "cmp eax imm", "jbe short addr"], "24530": ["cmp [esp+imm] imm", "jz short addr"], "24537": ["push ecx", "mov edx func", "push ecx", "mov eax [esp+imm]", "push eax", "push offset func", "mov ecx [esp+imm]", "mov eax [esp+imm]", "call accountingDiffTolerated", "add esp imm", "test al al", "jz addr"], "24575": ["add tok imm", "cmp edi imm", "ja short func"], "24583": ["mov eax [esp+imm]", "mov edx func - 2DF78h)[eax+imm]", "add eax edx", "jmp eax"], "24600": ["xor edi edi"], "24602": ["mov eax [esp+imm]", "xor eax large imm", "jnz addr"], "24619": ["add esp imm", "mov eax edi", "pop ebx", "pop esi", "pop edi", "pop enc", "retn"], "24632": ["mov eax [esp+imm]", "mov edi imm", "cmp [eax+imm] enc", "jnz short addr"], "24649": ["mov [eax+imm] func", "jmp short addr"], "24664": ["mov eax [enc+imm]", "add func eax", "mov [esp+imm] ebx"], "24673": ["cmp [esp+imm] imm", "mov eax [esi+imm]", "jnz short addr"], "24683": ["cmp [esi+imm] eax", "jz short addr"], "24688": ["cmp byte ptr [eax-imm] imm", "jz short addr"], "24694": ["cmp [esi+imm] eax", "jz addr"], "24703": ["lea edx [eax+imm]", "mov [esi+imm] edx", "mov byte ptr [eax] imm"], "24712": ["mov ebx [esp+imm]", "jmp addr"], "24728": ["push edi", "mov eax [enc+imm]", "mov edx [esp+imm]", "sub edx eax", "add eax func", "push edx", "push eax", "push enc", "call dword ptr [enc+imm]", "mov [esp+imm] al", "add esp imm", "test al al", "jz addr"], "24761": ["lea edx [esp+imm]", "push ecx", "push ecx", "push imm", "push (offset func", "mov ecx [esp+imm]", "mov eax [esp+imm]", "call accountingDiffTolerated", "mov eax [esi+imm]", "add esp imm", "cmp eax [esi+imm]", "jz addr"], "24802": ["lea edx [eax+imm]", "mov cl [esp+imm]", "mov [esi+imm] edx", "mov [eax] cl", "mov func [esp+imm]", "jmp addr"], "24824": ["sub esp imm", "mov ecx func", "mov edx enc", "mov eax [esp+imm]", "push eax", "mov eax esi", "call poolAppend", "add esp imm", "test eax eax", "jnz addr"], "24854": ["mov edi imm", "jmp addr"], "24864": ["mov eax [esp+imm]", "mov edi imm", "cmp [eax+imm] enc", "jnz addr"], "24885": ["mov esi [esp+imm]", "mov eax [esp+imm]", "mov [esi+imm] eax", "jmp addr"], "24904": ["mov eax [esp+imm]", "mov edi imm", "cmp [eax+imm] enc", "jnz addr"], "24925": ["jmp addr"], "24936": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test n n", "js addr"], "24951": ["cmp [esp+imm] imm", "jnz short addr"], "24958": ["cmp n imm", "jnz short addr"], "24963": ["mov edx [esi+imm]", "cmp edx [esi+imm]", "jz addr"], "24975": ["cmp byte ptr [edx-imm] imm", "jz addr"], "24985": ["lea edi [esp+imm]", "mov func [esp+imm]", "mov edx edi", "call XmlUtf8Encode", "test eax eax", "jle addr"], "25008": ["mov ebx edi", "lea edi func - 2DF78h)[edi+imm]", "jmp short addr"], "25016": ["mov cl [ebx]", "lea edx [eax+imm]", "inc ebx", "mov [esi+imm] edx", "cmp edi ebx", "mov [eax] cl", "jz addr"], "25035": ["mov eax [esi+imm]", "cmp eax [esi+imm]", "jnz short addr"], "25043": ["mov eax esi", "call poolGrow", "test al al", "jz addr"], "25058": ["mov eax [esi+imm]", "jmp short addr"], "25064": ["sub esp imm", "mov eax [enc+imm]", "mov edx [esp+imm]", "lea ecx [ptr_0+imm]", "sub edx eax", "push edx", "mov edx enc", "mov eax [esp+imm]", "call poolStoreString", "add esp imm", "mov ecx eax", "test name name", "jz addr"], "25104": ["sub esp imm", "push imm", "mov edx [esp+imm]", "mov name [esp+imm]", "call lookup", "mov ecx [esp+imm]", "mov edi eax", "mov entity [ecx+imm]", "mov [ecx+imm] eax", "mov eax [esp+imm]", "add eax imm", "add esp imm", "cmp esi eax", "jz addr"], "25158": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz addr"], "25175": ["cmp byte ptr [eax+imm] imm", "jnz addr"], "25188": ["test entity entity", "jz addr"], "25196": ["cmp byte ptr [entity+imm] imm", "jnz addr"], "25206": ["mov eax [entity+imm]", "test eax eax", "jnz addr"], "25217": ["mov eax [entity+imm]", "test eax eax", "jz addr"], "25228": ["mov ecx [entity+imm]", "mov edx entity", "add eax ecx", "mov byte ptr [entity+imm] imm", "mov func eax", "mov ecx imm", "mov func [esp+imm]", "call entityTrackingOnOpen", "mov eax [esp+imm]", "xor ecx ecx", "mov edx [eax+imm]", "mov cl [esp+imm]", "push imm", "push esi", "push func", "mov func [entity+imm]", "push ebx", "mov [esp+imm] eax", "call appendAttributeValue", "add esp imm", "mov ebx eax", "mov edx [esp+imm]", "lea esi [esi+imm]"], "25304": ["mov eax edx", "mov edx [edx+imm]", "test edx edx", "jnz short addr"], "25316": ["sub esp imm", "mov edx entity", "push imm", "mov ecx [esp+imm]", "mov [esp+imm] eax", "call entityTrackingReportStats", "mov eax [esp+imm]", "mov edx [eax+imm]", "add esp imm", "dec edx", "test ebx ebx", "mov [eax+imm] edx", "mov byte ptr [entity+imm] imm", "jz addr"], "25371": ["mov entity ebx", "jmp addr"], "25384": ["mov eax esi", "call poolGrow", "test al al", "jz addr"], "25399": ["mov eax [esi+imm]", "jmp addr"], "25407": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jnz addr"], "25424": ["test entity entity", "jz addr"], "25432": ["cmp byte ptr [entity+imm] imm", "jnz addr"], "25442": ["mov entity imm", "jmp addr"], "25456": ["mov eax esi", "call poolGrow", "test al al", "jz addr"], "25471": ["mov eax [esi+imm]", "jmp addr"], "25480": ["mov eax [esp+imm]", "mov edx [eax+imm]", "test edx edx", "jz addr"], "25498": ["mov ecx [esp+imm]", "cmp byte ptr [ecx+imm] imm", "jz short addr"], "25511": ["mov eax [eax+imm]", "test eax eax", "jnz addr"], "25525": ["jmp short addr"], "25527": ["mov eax [esp+imm]", "mov tok imm", "lea edx [eax-imm]", "mov eax [esp+imm]", "call accountingReportStats", "jmp addr"], "25556": ["mov n [esp+imm]", "mov edi imm", "cmp [eax+imm] enc", "jnz addr"], "25577": ["jmp addr"], "25582": ["mov eax [esp+imm]", "mov entity imm", "cmp [eax+imm] enc", "jnz addr"], "25603": ["jmp addr"], "25608": ["mov eax [esp+imm]", "mov entity imm", "cmp [eax+imm] enc", "jnz addr"], "25629": ["jmp addr"], "25634": ["mov eax [esp+imm]", "mov entity imm", "cmp [eax+imm] enc", "jnz addr"], "25655": ["jmp addr"], "25660": ["call func"], "25665": ["mov entity imm", "jmp addr"]}, "preds": [25424], "succs": [24602]}, "storeEntityValue": {"disasm": {"25680": ["push ebp", "mov ebp enc", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "sub esp imm", "mov [esp+imm] edi", "mov edi parser", "mov parser [esp+imm]", "mov [esp+imm] func", "mov esi [parser+imm]", "mov [esp+imm] eax", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "lea eax [dtd+imm]", "mov [esp+imm] eax", "mov func [parser+imm]", "mov dword ptr [parser+imm] imm", "mov [esp+imm] eax", "mov func [dtd+imm]", "test eax eax", "jz addr"], "25774": ["lea eax [esp+imm]", "mov [esp+imm] eax", "lea eax [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "lea eax [eax-imm]", "mov [esp+imm] eax"], "25804": ["mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "push ebp", "call dword ptr [ebp+imm]", "add esp imm", "mov ebx eax", "cmp tok imm", "jz addr"], "25837": ["jl short addr"], "25839": ["lea tok [tok+imm]", "cmp eax imm", "jbe short addr"], "25847": ["cmp [esp+imm] imm", "jz short addr"], "25854": ["push ecx", "push ecx", "mov eax [esp+imm]", "push eax", "mov eax parser", "push offset func", "mov ecx [esp+imm]", "mov edx [esp+imm]", "call accountingDiffTolerated", "add esp imm", "test al al", "jz addr"], "25892": ["add tok imm", "cmp ebx imm", "ja short func"], "25900": ["mov eax [esp+imm]", "mov edx func - 2DF78h)[eax+imm]", "add eax edx", "jmp eax"], "25920": ["cmp dword ptr ds:(read - 2DF78h)[parser] ebp", "mov ebx imm", "jz addr"], "25937": ["lea esi [esi+imm]"], "25944": ["mov eax [esp+imm]", "mov [parser+imm] eax"], "25954": ["mov eax [esp+imm]", "xor eax large imm", "jnz addr"], "25971": ["add esp imm", "mov eax ebx", "pop ebx", "pop esi", "pop parser", "pop ebp", "retn"], "25984": ["sub esp imm", "mov edx ebp", "mov ecx [esp+imm]", "push ecx", "mov ecx [esp+imm]", "mov eax [esp+imm]", "call poolAppend", "add esp imm", "test eax eax", "jz addr"], "26018": ["mov eax [esp+imm]", "mov [esp+imm] eax", "jmp addr"], "26032": ["mov eax [esp+imm]", "mov edx [ebp+imm]", "add eax edx", "mov [esp+imm] eax"], "26045": ["mov eax [dtd+imm]", "cmp [dtd+imm] eax", "jz addr"], "26057": ["lea edx [eax+imm]", "mov [dtd+imm] edx", "mov byte ptr [eax] imm", "jmp short addr"], "26072": ["mov edx [esp+imm]", "mov eax ebp", "call dword ptr [ebp+imm]", "test n n", "js addr"], "26089": ["mov edx [esp+imm]", "mov ebx [esp+imm]", "call XmlUtf8Encode", "mov ecx [esp+imm]", "mov ebx ecx", "test eax eax", "lea edx [ecx+imm]", "jle short addr"], "26115": ["mov [esp+imm] ebp", "mov ebp edx", "jmp short addr"], "26128": ["lea ecx [eax+imm]", "inc ebx", "mov [dtd+imm] ecx", "mov dl [ebx-imm]", "cmp ebx ebp", "mov [eax] dl", "jz short addr"], "26144": ["mov eax [dtd+imm]", "cmp [dtd+imm] eax", "jnz short addr"], "26152": ["mov eax [esp+imm]", "call poolGrow", "test al al", "jz addr"], "26169": ["mov eax [dtd+imm]", "inc ebx", "lea ecx [eax+imm]", "mov [dtd+imm] ecx", "mov dl [ebx-imm]", "cmp ebx ebp", "mov [eax] dl", "jnz short addr"], "26188": ["lea dtd [dtd+imm]"], "26192": ["mov ebp [esp+imm]", "jmp addr"], "26208": ["cmp dword ptr ds:(read - 2DF78h)[parser] ebp", "mov ebx imm", "jnz endEntityValue"], "26225": ["mov eax [esp+imm]", "mov [parser+imm] eax", "jmp endEntityValue"], "26240": ["cmp dword ptr ds:(read - 2DF78h)[parser] ebp", "mov ebx imm", "jnz endEntityValue"], "26257": ["mov eax [esp+imm]", "mov [parser+imm] eax", "jmp endEntityValue"], "26272": ["cmp byte ptr [parser+imm] imm", "jnz short addr"], "26281": ["cmp dword ptr ds:(read - 2DF78h)[parser] ebp", "jz addr"], "26293": ["mov eax [esp+imm]", "sub esp imm", "mov edx [ebp+imm]", "mov ebx [esp+imm]", "lea ecx [eax+imm]", "sub ebx edx", "lea eax [parser+imm]", "mov edx ebp", "push ebx", "call poolStoreString", "add esp imm", "mov ecx eax", "test name name", "jz addr"], "26339": ["sub esp imm", "lea edx [dtd+imm]", "mov name parser", "push imm", "call lookup", "mov ebx eax", "mov entity [parser+imm]", "add esp imm", "mov [parser+imm] eax", "test entity entity", "jz addr"], "26382": ["cmp byte ptr [entity+imm] imm", "jnz addr"], "26392": ["mov edx [entity+imm]", "test edx edx", "jz addr"], "26403": ["mov eax [parser+imm]", "test eax eax", "jnz short addr"], "26410": ["mov al [dtd+imm]", "mov [dtd+imm] al", "jmp addr"], "26432": ["xor ebx ebx", "jmp endEntityValue"], "26440": ["lea eax [dtd+imm]", "call poolGrow", "test al al", "jnz addr"], "26456": ["mov ebx imm", "jmp addr"], "26472": ["mov eax [esp+imm]", "call poolGrow", "test al al", "jz addr"], "26489": ["mov eax [dtd+imm]", "jmp addr"], "26504": ["mov byte ptr [dtd+imm] imm", "mov ecx imm", "mov edx entity", "mov eax parser", "mov byte ptr [entity+imm] imm", "call entityTrackingOnOpen", "sub esp imm", "mov eax [entity+imm]", "push eax", "mov eax [entity+imm]", "push eax", "mov eax [entity+imm]", "push eax", "push imm", "mov eax [parser+imm]", "push eax", "call dword ptr [parser+imm]", "add esp imm", "test eax eax", "jz addr"], "26564": ["mov edx parser", "xchg ax ax"], "26568": ["mov eax edx", "mov edx [edx+imm]", "test edx edx", "jnz short addr"], "26580": ["sub esp imm", "mov edx entity", "push imm", "mov ecx [esp+imm]", "mov [esp+imm] eax", "call entityTrackingReportStats", "mov eax [esp+imm]", "mov edx [eax+imm]", "add esp imm", "dec edx", "mov [eax+imm] edx", "mov byte ptr [entity+imm] imm", "cmp byte ptr [dtd+imm] imm", "jnz addr"], "26640": ["jmp addr"], "26645": ["mov eax parser", "mov ecx imm", "mov edx entity", "mov byte ptr [entity+imm] imm", "call entityTrackingOnOpen", "mov ecx [entity+imm]", "mov edx dword ptr ds:(close - 2DF78h)[parser]", "push eax", "push eax", "push imm", "mov eax [entity+imm]", "add eax ecx", "push eax", "mov eax parser", "call storeEntityValue", "mov edx parser", "mov [esp+imm] eax", "add esp imm", "lea dtd [dtd+imm]"], "26704": ["mov eax edx", "mov edx [edx+imm]", "test edx edx", "jnz short addr"], "26716": ["sub esp imm", "mov edx entity", "push imm", "mov ecx [esp+imm]", "mov [esp+imm] eax", "call entityTrackingReportStats", "mov eax [esp+imm]", "mov edx [eax+imm]", "mov ecx [esp+imm]", "dec edx", "add esp imm", "mov [eax+imm] edx", "test ecx ecx", "mov byte ptr [entity+imm] imm", "jz addr"], "26775": ["mov entity [esp+imm]", "jmp endEntityValue"], "26784": ["mov eax [esp+imm]", "mov ebx imm", "mov [parser+imm] eax", "jmp endEntityValue"], "26808": ["mov ebx imm", "jmp endEntityValue"], "26818": ["mov eax [esp+imm]", "mov tok imm", "lea edx [eax-imm]", "mov eax parser", "call accountingReportStats", "jmp endEntityValue"], "26845": ["cmp dword ptr ds:(read - 2DF78h)[parser] ebp", "mov ebx imm", "jnz endEntityValue"], "26862": ["jmp addr"], "26867": ["mov al [dtd+imm]", "mov [dtd+imm] al", "jmp endEntityValue"], "26884": ["cmp dword ptr ds:(read - 2DF78h)[parser] ebp", "mov entity imm", "jnz endEntityValue"], "26901": ["jmp addr"], "26906": ["mov edx entity", "mov eax parser"], "26910": ["mov ebx eax", "mov eax [eax+imm]", "test eax eax", "jnz short addr"], "26922": ["sub esp imm", "mov dtd entity", "push imm", "mov eax [esp+imm]", "lea ecx [eax-imm]", "mov eax ebx", "call entityTrackingReportStats", "mov ecx [ebx+imm]", "dec ecx", "add esp imm", "mov [ebx+imm] ecx", "mov byte ptr [entity+imm] imm", "mov ebx imm", "jmp endEntityValue"], "26979": ["call func"]}, "preds": [25954], "succs": []}, "entityValueProcessor": {"disasm": {"26992": ["push ebp", "push edi", "push esi", "push ebx", "sub esp imm", "mov eax [esp+imm]", "mov ebp [esp+imm]", "mov edx [esp+imm]", "mov [esp+imm] eax", "mov [esp+imm] edx", "mov ebx [esp+imm]", "mov ecx large imm", "mov [esp+imm] ecx", "xor ecx ecx", "mov edi [ebp+imm]", "mov [esp+imm] start", "lea esi [esp+imm]", "jmp short addr"], "27056": ["mov tok [esp+imm]"], "27060": ["push esi", "push ebx", "push start", "push enc", "call dword ptr [enc]", "add esp imm", "test tok tok", "jg short addr"], "27073": ["cmp byte ptr [ebp+imm] imm", "jnz short addr"], "27082": ["test tok tok", "jnz short addr"], "27086": ["lea ecx [tok+imm]", "cmp ecx imm", "ja short addr"], "27094": ["mov edx imm", "sub edx tok", "mov tok edx"], "27103": ["mov ecx [esp+imm]", "xor ecx large imm", "jnz short addr"], "27116": ["add esp imm", "pop ebx", "pop esi", "pop enc", "pop ebp", "retn"], "27128": ["mov tok [esp+imm]", "mov ecx [esp+imm]", "mov [eax] ecx", "xor eax eax", "jmp short addr"], "27144": ["push eax", "mov edx enc", "push eax", "mov eax ebp", "push imm", "push ebx", "mov ecx [esp+imm]", "call storeEntityValue", "add esp imm", "jmp short addr"], "27167": ["call func"]}, "preds": [27103], "succs": []}, "entityValueInitProcessor": {"disasm": {"27184": ["push ebp", "call func", "add eax (offset func - $)", "push edi", "push esi", "push ebx", "sub esp imm", "mov [esp+imm] eax", "mov ecx [esp+imm]", "mov eax [esp+imm]", "mov ebx [esp+imm]", "mov [esp+imm] eax", "mov [esp+imm] ecx", "mov ecx large imm", "mov [esp+imm] ecx", "xor ecx ecx", "mov esi [esp+imm]", "mov [esp+imm] start", "mov [ebx+imm] start", "mov ebp start", "lea edi [esp+imm]", "jmp short addr"], "27264": ["cmp tok imm", "jz addr"], "27273": ["mov [ebx+imm] start", "mov ebp start"], "27281": ["mov eax [ebx+imm]", "push edi", "push esi", "push start", "push eax", "call func - 2DF78h)[eax]", "mov edx [esp+imm]", "add esp imm", "mov [ebx+imm] edx", "test tok tok", "jle short addr"], "27310": ["cmp tok imm", "jz addr"], "27319": ["cmp tok imm", "jnz short addr"], "27324": ["cmp edx esi", "jnz short addr"], "27328": ["cmp byte ptr [ebx+imm] imm", "jnz short addr"], "27337": ["mov tok edx", "push edx", "push edx", "mov ecx eax", "push imm", "mov eax ebx", "push (offset func", "mov edx [esp+imm]", "call accountingDiffTolerated", "add esp imm", "test al al", "jz addr"], "27372": ["mov ecx [esp+imm]", "mov eax [esp+imm]", "mov [ecx] eax", "xor eax eax", "jmp short addr"], "27392": ["cmp byte ptr [ebx+imm] imm", "mov edx tok", "jnz short addr"], "27403": ["test tok tok", "jz short addr"], "27407": ["mov tok [esp+imm]", "mov ecx [esp+imm]", "mov func - 2DF78h)[eax] ecx", "xor eax eax", "jmp short addr"], "27424": ["lea tok [edx+imm]", "cmp eax imm", "ja short addr"], "27432": ["mov eax imm", "sub eax tok"], "27439": ["mov ecx [esp+imm]", "xor ecx large imm", "jnz addr"], "27456": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop start", "retn"], "27464": ["sub esp imm", "mov ecx start", "mov tok ebx", "push edx", "xor edx edx", "call processXmlDecl", "add esp imm", "test result result", "jnz short addr"], "27486": ["cmp dword ptr [ebx+imm] imm", "jz short addr"], "27495": ["mov edi [esp+imm]", "mov ecx [esp+imm]", "mov result [esp+imm]", "lea edx [edi-imm]", "mov [ecx] eax", "mov [ebx+imm] edx", "push ecx", "push esi", "push eax", "push ebx", "call entityValueProcessor", "add esp imm", "jmp short addr"], "27536": ["mov ecx [esp+imm]", "mov tok imm", "mov [ecx] edx", "jmp short addr"], "27549": ["mov result imm", "jmp short addr"], "27556": ["mov tok [ebx+imm]", "push ecx", "push ecx", "mov eax ebx", "push imm", "push esi", "mov ecx [esp+imm]", "call storeEntityValue", "add esp imm", "jmp addr"], "27586": ["mov eax [esp+imm]", "lea edx (aAborting - 2DF78h)[eax]", "mov eax ebx", "call accountingReportStats", "mov eax imm", "jmp addr"], "27613": ["call func"]}, "preds": [27439], "succs": []}, "storeAttributeValue": {"disasm": {"27632": ["push edi", "push esi", "mov esi isCdata", "push ebx", "and isCdata 0FFh", "mov ebx [esp+imm]", "mov edi [esp+imm]", "push ebx", "push edi", "mov ebx [esp+imm]", "push ebx", "mov ebx [esp+imm]", "push ebx", "call appendAttributeValue", "add esp imm", "mov ebx eax", "test result result", "jnz short addr"], "27677": ["mov ecx esi", "mov result [edi+imm]", "test cl cl", "jz short addr"], "27686": ["cmp [edi+imm] eax", "jz short addr"], "27691": ["lea edx [eax+imm]", "mov [edi+imm] edx", "mov byte ptr [eax] imm"], "27700": ["mov eax ebx", "pop ebx", "pop esi", "pop edi", "retn"], "27712": ["cmp [edi+imm] eax", "jz short addr"], "27717": ["cmp byte ptr [eax-imm] imm", "jnz short addr"], "27723": ["dec eax", "mov [edi+imm] eax", "jmp short addr"], "27736": ["mov eax edi", "call poolGrow", "test al al", "jz short addr"], "27747": ["mov eax [edi+imm]", "jmp short addr"], "27752": ["mov result imm", "jmp short addr"]}, "preds": [27736], "succs": [27700]}, "storeAtts": {"disasm": {"27760": ["push ebp", "push edi", "mov edi parser", "push esi", "call func", "add esi (offset func - $)", "push ebx", "mov ebx attStr", "sub esp 0A8h", "mov [esp+imm] esi", "mov esi enc", "mov enc [esp+imm]", "mov parser [esp+imm]", "mov [esp+imm] edx", "mov edx [parser+imm]", "mov [esp+imm] eax", "mov attStr large imm", "mov [esp+imm] attStr", "xor attStr attStr", "lea ebp [edx+imm]", "mov [esp+imm] edx", "push imm", "mov ecx [eax]", "mov func ebp", "mov eax parser", "call lookup", "mov [esp+imm] eax", "add esp imm", "test func func", "jz addr"], "27870": ["mov eax [esp+imm]", "mov ebp [eax+imm]", "mov eax [parser+imm]", "mov [esp+imm] ebp", "push eax", "mov eax [parser+imm]", "push eax", "push attStr", "push enc", "call dword ptr [enc+imm]", "mov ecx eax", "mov [esp+imm] eax", "mov func imm", "add esp imm", "sub eax func", "cmp eax func", "jl addr"], "27924": ["mov eax func", "mov func [parser+imm]", "add func func", "cmp eax ebp", "jg addr"], "27942": ["mov eax [parser+imm]", "mov [esp+imm] eax"], "27952": ["mov eax [esp+imm]", "test eax eax", "jle addr"], "27964": ["lea eax [parser+imm]", "mov attStr [esp+imm]", "mov [esp+imm] imm", "mov [esp+imm] imm", "mov [esp+imm] imm", "mov [esp+imm] eax", "jmp addr"], "28008": ["cmp byte ptr [attId+imm] imm", "mov eax imm", "jnz addr"], "28023": ["mov edx [esp+imm]", "push edx", "mov edx [esp+imm]", "push edx", "mov edx [ecx+imm]", "push edx", "mov edx enc", "mov ecx [ecx+imm]", "push ecx", "mov ecx eax", "mov eax parser", "call storeAttributeValue", "add esp imm", "test result result", "jnz addr"], "28066": ["mov ecx [esp+imm]", "mov result [parser+imm]", "mov [ecx+imm] eax", "mov eax [parser+imm]", "mov [parser+imm] eax", "mov edx [attId+imm]", "test edx edx", "jz addr"], "28103": ["cmp byte ptr [attId+imm] imm", "jnz addr"], "28113": ["mov edx [esp+imm]", "mov ecx [esp+imm]", "mov eax [attId]", "add edx imm", "inc ecx", "mov [esp+imm] edx", "mov [esp+imm] ecx", "mov byte ptr [eax-imm] imm"], "28139": ["mov eax [esp+imm]", "inc eax", "mov [esp+imm] eax", "mov eax [esp+imm]", "cmp [esp+imm] func", "jz addr"], "28162": ["mov attId [parser+imm]"], "28168": ["mov eax [esp+imm]", "shl eax imm", "add ebx eax", "mov [esp+imm] eax", "mov eax enc", "mov ebp [currAtt]", "mov edx ebp", "call dword ptr [enc+imm]", "sub esp imm", "add ebp eax", "mov edx enc", "push ebp", "mov eax parser", "mov ecx [currAtt]", "call getAttributeId", "add esp imm", "mov currAtt eax", "test attId attId", "jz addr"], "28220": ["mov attId [attId]", "cmp byte ptr [eax-imm] imm", "jnz addr"], "28232": ["mov byte ptr [eax-imm] imm", "mov eax [esp+imm]", "mov ecx [esp+imm]", "lea ebp ds:0[eax*4]", "mov eax [attId]", "mov [ecx+imm] eax", "mov ecx [esp+imm]", "mov eax [parser+imm]", "add ecx eax", "cmp byte ptr [ecx+imm] imm", "jz addr"], "28278": ["sub esp imm", "mov edx [ecx+imm]", "mov eax [ecx+imm]", "push edx", "mov ecx eax", "mov edx enc", "mov eax [esp+imm]", "call poolStoreString", "mov ecx [esp+imm]", "lea edx [ecx+imm]", "add esp imm", "test eax eax", "mov [edx] eax", "jz short addr"], "28318": ["mov eax [parser+imm]", "mov [parser+imm] eax", "mov edx [attId+imm]", "test edx edx", "jnz addr"], "28341": ["mov eax [esp+imm]", "add eax imm", "mov [esp+imm] eax", "jmp addr"], "28357": ["mov [parser+imm] oldAttsSize", "lea esi [esi+imm]", "nop"], "28368": ["mov eax imm"], "28373": ["mov esi [esp+imm]", "xor esi large imm", "jnz addr"], "28393": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "28408": ["mov func [esp+imm]", "cmp ecx imm", "jg short addr"], "28420": ["mov edx imm", "sub edx ecx", "cmp edx [esp+imm]", "jl short addr"], "28433": ["add eax imm", "mov [parser+imm] eax", "cmp eax imm", "ja short addr"], "28449": ["shl eax imm", "push edx", "push edx", "push eax", "mov ecx [parser+imm]", "push ecx", "call dword ptr [parser+imm]", "mov [esp+imm] eax", "add esp imm", "test func func", "jz short addr"], "28476": ["mov func [esp+imm]", "mov edx [esp+imm]", "mov [parser+imm] func", "cmp oldAttsSize edx", "jge addr"], "28498": ["push func", "push edx", "push attStr", "push enc", "call dword ptr [enc+imm]", "mov eax [parser+imm]", "mov [esp+imm] eax", "add esp imm", "jmp addr"], "28528": ["push eax", "mov ecx attId", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "mov eax [eax+imm]", "push eax", "mov eax parser", "call addBinding", "add esp imm", "test result result", "jz addr"], "28564": ["jmp addr"], "28576": ["mov edx [esp+imm]", "test edx edx", "jle addr"], "28588": ["mov eax [esp+imm]", "xor edx edx", "mov eax [eax+imm]", "jmp short addr"], "28600": ["inc j", "add eax imm", "cmp [esp+imm] j", "jz short addr"], "28610": ["cmp [eax] attId", "jnz short addr"], "28614": ["xor j j", "mov dl [eax+imm]", "mov eax edx", "jmp addr"], "28632": ["mov eax imm", "jmp addr"], "28648": ["mov edx [esp+imm]", "mov func [esp+imm]", "add eax imm", "mov edx [edx]", "call poolCopyString", "mov ecx eax", "test name name", "jz addr"], "28676": ["sub esp imm", "mov edx ebp", "mov name parser", "push imm", "call lookup", "mov [esp+imm] eax", "add esp imm", "test func func", "jz addr"], "28705": ["cmp byte ptr [parser+imm] imm", "jz addr"], "28718": ["mov func [esp+imm]", "lea ecx [elementType_0+imm]", "mov edx func", "mov func parser", "call setElementTypePrefix", "test eax eax", "jnz addr"], "28742": ["jmp addr"], "28747": ["mov [esp+imm] imm", "mov [esp+imm] imm", "lea enc [enc+imm]", "nop"], "28768": ["mov enc [esp+imm]", "mov eax [esp+imm]", "mov [parser+imm] esi", "mov eax [eax+imm]", "test eax eax", "jz short addr"], "28789": ["mov edx [eax]", "cmp byte ptr [edx-imm] imm", "jnz addr"], "28801": ["mov dword ptr [parser+imm] imm"], "28811": ["mov eax [esp+imm]", "xor ebx ebx", "test eax eax", "jle addr"], "28825": ["mov esi [esp+imm]", "mov [esp+imm] parser", "jmp short addr"], "28840": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "28846": ["mov byte ptr [edx-imm] imm", "mov edx [esp+imm]", "inc edx", "mov [esp+imm] edx"], "28859": ["mov edi [esp+imm]", "mov ecx [da]", "mov ebp [esp+imm]", "lea edx ds:0[edi*4]", "mov ecx [ecx]", "add edi imm", "mov [ebp+imm] ecx", "mov [esp+imm] edi", "mov da [da+imm]", "mov [ebp+imm] eax"], "28896": ["inc func", "cmp [esp+imm] func", "jz short addr"], "28903": ["mov edx [esi+imm]", "lea eax [i_0+imm]", "lea eax [edx+imm]", "mov ecx [da]", "mov edx [ecx]", "cmp byte ptr [edx-imm] imm", "jnz short addr"], "28922": ["mov ebp [da+imm]", "test ebp ebp", "jz short addr"], "28929": ["mov edi [ecx+imm]", "test edi edi", "jnz short addr"], "28936": ["mov byte ptr [edx-imm] imm", "jmp short addr"], "28944": ["push eax", "mov edx edi", "push eax", "mov eax [esp+imm]", "push eax", "push ebp", "mov eax [esp+imm]", "call addBinding", "add esp imm", "test result result", "jz short addr"], "28970": ["jmp addr"], "28976": ["cmp [parser+imm] enc", "mov eax imm", "jnz addr"], "28993": ["mov edx [parser+imm]", "mov enc [esp+imm]", "mov edx func - 2DF78h)[edx+imm]", "mov [parser+imm] edx", "jmp addr"], "29024": ["mov edi [esp+imm]"], "29028": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov ebx [esp+imm]", "mov dword ptr [eax+imm] imm", "test ebx ebx", "jz addr"], "29055": ["mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "cmp cl imm", "ja addr"], "29074": ["lea eax [ebx+imm]", "sar eax cl", "test eax eax", "jz addr"], "29087": ["mov dl cl", "lea esi func - 2DF78h)[esi]"], "29096": ["mov cl dl", "mov eax ebx", "sar eax cl", "inc edx", "test eax eax", "jnz short addr"], "29107": ["cmp dl imm", "ja addr"], "29116": ["mov byte ptr [edi+imm] imm", "mov [esp+imm] imm", "mov ebx imm"], "29136": ["mov cl bl", "mov eax imm", "push esi", "push esi", "shl eax cl", "push eax", "mov ebp [edi+imm]", "push ebp", "call dword ptr [edi+imm]", "add esp imm", "mov edx eax", "test eax eax", "jz addr"], "29171": ["mov [edi+imm] eax"], "29177": ["mov eax [esp+imm]", "jmp short addr"], "29184": ["mov edx [edi+imm]"], "29190": ["dec j", "lea ecx [j+imm]", "mov dword ptr [edx+imm] imm", "jnz short addr"], "29203": ["mov [esp+imm] imm"], "29211": ["mov eax [esp+imm]", "mov ecx [esp+imm]", "mov [edi+imm] eax", "test ecx ecx", "jz addr"], "29233": ["mov eax [esp+imm]", "mov [esp+imm] imm", "dec eax", "mov [esp+imm] eax", "shr eax imm", "mov [esp+imm] al", "lea eax [edi+imm]", "mov [esp+imm] eax", "jmp short addr"], "29272": ["mov byte ptr [s-imm] imm"], "29276": ["mov eax [esp+imm]", "add eax imm", "mov [esp+imm] eax", "mov eax [esp+imm]", "cmp func [esp+imm]", "jge addr"], "29301": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov esi [eax+imm]", "cmp byte ptr [s-imm] imm", "jnz short addr"], "29318": ["mov eax [edi+imm]", "test eax eax", "jz addr"], "29332": ["lea s [s+imm]"], "29336": ["mov edx eax", "mov eax [eax+imm]", "test eax eax", "jnz short addr"], "29348": ["add edx 1ECh"], "29354": ["mov ecx [edx]", "mov dword ptr [esp+imm] imm", "mov eax ecx", "mov edx ecx", "xor eax imm", "xor edx imm", "mov dword ptr [esp+imm] eax", "lea eax [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov dword ptr [esp+imm] edx", "mov dword ptr [esp+imm] imm", "mov dword ptr [esp+imm] imm", "mov dword ptr [esp+imm] imm", "mov dword ptr [esp+imm] imm", "mov dword ptr [esp+imm] imm", "mov dword ptr [esp+imm] imm", "mov dword ptr [esp+imm] imm", "sub esp imm", "mov byte ptr [s-imm] imm", "lea edx [eax+imm]", "mov ecx s", "mov eax edi", "push imm", "call lookup", "add esp imm", "test id id", "jz addr"], "29496": ["mov id [id+imm]", "test eax eax", "jz addr"], "29507": ["mov ebx [eax+imm]", "test func func", "jz addr"], "29518": ["mov ecx [b_0+imm]", "test ecx ecx", "jle addr"], "29529": ["xor ebp ebp", "jmp short addr"], "29536": ["lea ecx [eax+imm]", "inc j", "mov [edi+imm] ecx", "mov [eax] dl", "mov ecx [b_0+imm]", "cmp ecx j", "jle addr"], "29559": ["mov eax [b_0+imm]", "mov dl [eax+imm]", "mov eax [edi+imm]", "cmp eax [edi+imm]", "jnz short addr"], "29579": ["mov eax [esp+imm]", "mov byte ptr [esp+imm] dl", "call poolGrow", "test al al", "jz addr"], "29600": ["mov eax [edi+imm]", "mov dl byte ptr [esp+imm]", "jmp short addr"], "29612": ["mov ebx [esp+imm]", "mov func [esp+imm]"], "29620": ["cmp byte ptr [edi+imm] imm", "mov j [edi+imm]", "jnz addr"], "29639": ["mov edx [edi+imm]", "mov ebx [esp+imm]", "mov [edi+imm] eax", "mov eax [esp+imm]", "dec [esp+imm]", "mov [eax+imm] s", "mov ebx [esp+imm]", "mov eax [edi+imm]", "mov func - 2DF78h)[eax+imm] ebx", "mov ebx [esp+imm]", "mov eax [edi+imm]", "mov [eax+imm] ebx", "mov eax [edi+imm]", "mov [eax+imm] s", "jnz addr"], "29709": ["mov eax [esp+imm]", "add eax imm", "mov [esp+imm] eax"], "29720": ["mov esi [esp+imm]", "cmp [esp+imm] esi", "jge short addr"], "29730": ["mov ecx [esp+imm]", "mov eax [esp+imm]", "mov ebx [esp+imm]", "xchg ax ax"], "29744": ["mov edx [ebx+imm]", "add func imm", "cmp eax ecx", "mov byte ptr [edx-imm] imm", "jl short addr"], "29758": ["mov eax [esp+imm]", "mov eax [eax]", "test func func", "jz short addr"], "29768": ["mov edx [binding_0+imm]", "mov edx [edx]", "mov byte ptr [edx-imm] imm", "mov func [binding_0+imm]", "test func func", "jnz short addr"], "29784": ["cmp byte ptr [edi+imm] imm", "jz addr"], "29797": ["mov func [esp+imm]", "mov eax [eax+imm]", "test eax eax", "jz addr"], "29812": ["mov ecx [eax+imm]", "test func func", "jz addr"], "29823": ["mov eax [esp+imm]", "mov edx [eax]", "lea esi [esi+imm]"], "29832": ["inc addr", "cmp byte ptr [localPart_0-imm] imm", "jnz short addr"], "29839": ["cmp byte ptr [edi+imm] imm", "jz addr"], "29852": ["mov eax func", "mov eax [eax]", "test eax eax", "jz addr"], "29864": ["xor ebp ebp", "lea esi func - 2DF78h)[esi]"], "29872": ["inc prefixLen", "cmp byte ptr [eax+imm] imm", "jnz short addr"], "29880": ["mov eax imm", "sub eax prefixLen"], "29887": ["mov esi [esp+imm]", "mov [esi+imm] addr", "mov ebx [binding_0+imm]", "mov [esi+imm] ebx", "mov ebx func", "mov ebx [ebx]", "mov [esi+imm] prefixLen", "mov [esi+imm] ebx", "xor esi esi"], "29912": ["mov ebx func", "inc func", "cmp byte ptr [localPart_0+imm] imm", "jnz short addr"], "29922": ["mov [esp+imm] ebx", "mov ebx [binding_0+imm]", "cmp ebx eax", "jg addr"], "29937": ["lea eax [ebx+imm]", "mov [esp+imm] eax", "mov eax imm", "sub eax [esp+imm]", "cmp eax func", "jl addr"], "29961": ["lea eax func - 2DF78h)[ebx+imm]", "add eax prefixLen", "cmp [binding_0+imm] func", "jge addr"], "29975": ["mov [esp+imm] addr", "mov [esp+imm] func", "cmp func imm", "jg addr"], "29994": ["sub esp imm", "lea ebx [n_0+imm]", "push ebx", "call dword ptr [edi+imm]", "mov [esp+imm] eax", "mov edx func", "add esp imm", "test func func", "jz addr"], "30021": ["mov ecx [esp+imm]", "mov [ecx+imm] ebx", "mov func [ecx+imm]", "push ebx", "mov ebx [ecx+imm]", "push ebx", "mov [esp+imm] ecx", "push eax", "push func", "mov ebx [esp+imm]", "call func", "mov eax [edi+imm]", "mov ecx [esp+imm]", "add esp imm", "test p p", "mov edx [esp+imm]", "mov ebx [ecx+imm]", "jnz short addr"], "30075": ["jmp addr"], "30080": ["mov p [p]", "test p p", "jz addr"], "30090": ["cmp [p+imm] ebx", "jnz short addr"], "30095": ["mov ebx [esp+imm]", "mov [p+imm] ebx", "mov ebx [ecx+imm]", "jmp short addr"], "30107": ["test esi esi", "jz addr"], "30115": ["xor eax eax", "mov ebx esi", "mov ecx [esp+imm]", "jmp short addr"], "30128": ["add func imm", "cmp func ebx", "jge addr"], "30139": ["cmp edx [ecx+imm]", "jnz short addr"], "30144": ["mov [parser+imm] func", "jmp addr"], "30155": ["lea ebp [esp+imm]", "mov edx [b_0+imm]", "mov eax ebp", "call func", "lea s func - 2DF78h)[s]"], "30176": ["inc s", "cmp byte ptr [s-imm] imm", "jnz short addr"], "30183": ["xor ecx ecx", "cmp byte ptr func - 2DF78h)[s] imm", "jz short addr"], "30190": ["xchg ax ax"], "30192": ["inc ecx", "cmp byte ptr func - 2DF78h)[s+imm] imm", "jnz short addr"], "30199": ["mov edx s", "mov eax ebp", "call func", "mov eax edi", "mov edi s", "mov s eax", "jmp short addr"], "30216": ["lea ecx [eax+imm]", "inc s", "mov [esi+imm] ecx", "mov cl [edi-imm]", "mov [eax] cl", "cmp byte ptr [s-imm] imm", "jz short addr"], "30237": ["mov eax [esi+imm]", "cmp eax [esi+imm]", "jnz short addr"], "30251": ["mov eax [esp+imm]", "call poolGrow", "test al al", "jz addr"], "30268": ["mov eax [esi+imm]", "jmp short addr"], "30276": ["mov eax ebp", "mov s esi", "call func", "mov edx [esi+imm]", "mov ebp eax", "mov [esp+imm] eax", "mov func [esp+imm]", "mov [esp+imm] edx", "and eax func", "mov ecx [esp+imm]", "lea esi [j+imm]", "shl esi imm", "add edx esi", "cmp [edx] ecx", "jnz addr"], "30327": ["mov esi [esp+imm]", "mov [esp+imm] edi", "neg esi", "mov ecx esi", "mov esi func", "and ecx func", "mov [esp+imm] func", "mov [esp+imm] ecx", "mov func j", "xor ecx ecx", "mov edi func", "jmp short addr"], "30360": ["mov ebx [esp+imm]", "add j ebx", "sub eax step", "mov j eax"], "30370": ["lea esi [j+imm]", "mov ebx [esp+imm]", "shl esi imm", "lea step func - 2DF78h)[ebx+imm]", "mov ebx [esp+imm]", "cmp [edx] ebx", "jnz addr"], "30395": ["cmp [edx+imm] func", "jz short addr"], "30400": ["test cl cl", "jnz short addr"], "30404": ["mov esi [esp+imm]", "xor step step", "mov dl [esp+imm]", "mov cl [esi+imm]", "mov esi [esp+imm]", "dec ecx", "shr esi cl", "mov ecx esi", "and ecx edx", "or ecx imm"], "30434": ["xor edx edx", "mov dl cl", "cmp edx ebp", "jg short addr"], "30442": ["sub ebp step", "mov eax j", "jmp short addr"], "30448": ["mov esi [esp+imm]", "mov ebx [edx+imm]", "mov esi [esi+imm]", "mov dl byte ptr func - 2DF78h)[s1]", "cmp dl [s2]", "jz short addr"], "30467": ["jmp short addr"], "30472": ["inc s2", "mov dl [s1+imm]", "inc s1", "cmp dl [s2]", "jnz short addr"], "30481": ["test dl dl", "jnz short addr"], "30485": ["mov j imm", "jmp addr"], "30495": ["test dl dl", "jnz short addr"], "30499": ["jmp short addr"], "30504": ["mov eax imm", "xor ebp ebp", "jmp addr"], "30516": ["xor eax eax", "jmp addr"], "30523": ["mov edx [edi+imm]", "mov eax imm", "mov cl byte ptr [esp+imm]", "shl eax cl", "mov [esp+imm] eax", "lea eax [edx-imm]", "mov [esp+imm] eax", "test edx edx", "jnz addr"], "30559": ["mov edx [edi+imm]", "jmp addr"], "30570": ["mov eax [esp+imm]", "mov ecx [eax+imm]", "test ecx ecx", "jz short addr"], "30584": ["mov eax [esp+imm]", "mov edx [eax]", "jmp addr"], "30595": ["mov eax imm", "cmp dl imm", "ja addr"], "30609": ["mov esi eax", "mov cl dl", "xor ebx ebx", "mov [edi+imm] dl", "shl esi cl", "mov bl dl", "mov [esp+imm] esi", "cmp func imm", "jbe addr"], "30641": ["mov cl byte ptr [esp+imm]", "mov [edi+imm] cl", "jmp addr"], "30656": ["mov cl [edi+imm]", "mov ebp [esp+imm]", "mov [eax-imm] cl", "mov eax [ebx]", "mov ebx [eax]", "jmp short addr"], "30680": ["lea edx [eax+imm]", "inc s", "mov [edi+imm] edx", "mov cl [ebx-imm]", "mov [eax] cl", "cmp byte ptr [s-imm] imm", "jz short addr"], "30701": ["mov eax [edi+imm]", "cmp eax [edi+imm]", "jnz short addr"], "30715": ["mov eax ebp", "call poolGrow", "test al al", "jz addr"], "30730": ["mov eax [edi+imm]", "jmp short addr"], "30738": ["mov eax [edi+imm]", "jmp addr"], "30749": ["mov [esp+imm] edx", "mov [esp+imm] ecx", "sub esp imm", "push ebx", "call dword ptr [edi+imm]", "mov ecx [esp+imm]", "mov eax [esp+imm]", "mov edx [esp+imm]", "add esp imm", "mov [ecx+imm] eax", "mov ebx [ecx+imm]"], "30785": ["mov eax [esp+imm]", "mov [esp+imm] ecx", "add ebx eax", "mov [esp+imm] ebx", "push eax", "push func", "push edx", "push func", "mov func [esp+imm]", "call func", "add esp imm", "test prefixLen prefixLen", "mov ecx [esp+imm]", "jnz short addr"], "30823": ["mov func [esp+imm]", "mov eax [ecx+imm]", "mov func - 2DF78h)[esi] eax", "xor eax eax", "jmp addr"], "30839": ["lea edx [edi+imm]", "jmp addr"], "30850": ["mov func [binding_0+imm]", "mov [esp+imm] eax", "jmp short addr"], "30859": ["mov eax imm", "jmp addr"], "30869": ["mov eax [esp+imm]", "mov edx [esp+imm]", "add eax edx", "mov dl [edi+imm]", "mov [esp+imm] ecx", "mov func dl", "lea edx [uri_0+imm]", "mov func [ecx]", "mov eax [eax]", "push ecx", "push prefixLen", "push eax", "push edx", "mov ebx [esp+imm]", "call func", "add esp imm", "mov ecx [esp+imm]", "jmp short addr"], "30920": ["mov al byte ptr [esp+imm]", "mov [edi+imm] al", "mov eax imm", "jmp addr"], "30940": ["call func"]}, "preds": [28373], "succs": []}, "doProlog": {"disasm": {"30960": ["push ebp", "mov ebp parser", "push edi", "mov edi func", "push esi", "call func", "add esi (offset func - $)", "push ebx", "sub esp imm", "cmp [ebp+imm] func", "mov al [esp+imm]", "mov [esp+imm] func", "mov [esp+imm] al", "mov al [esp+imm]", "mov [esp+imm] al", "mov eax [parser+imm]", "mov [esp+imm] eax", "jz addr"], "31023": ["mov func [parser+imm]", "mov [esp+imm] eax", "add func imm", "mov [esp+imm] eax"], "31040": ["lea func func - 2DF78h)[esi]", "mov [esp+imm] eax", "lea eax func - 2DF78h)[esi]", "mov [esp+imm] eax"], "31060": ["mov eax [esp+imm]", "mov ebx [esp+imm]", "mov ecx [esp+imm]", "mov [eax] ebx", "mov eax [esp+imm]", "mov edx [esp+imm]", "test ecx ecx", "mov [eax] edx", "jle addr"], "31091": ["sub esp imm", "push func", "mov eax [esp+imm]", "push eax"], "31100": ["mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "lea eax [ebp+imm]", "push eax", "call dword ptr [ebp+imm]", "add esp imm", "mov ebx eax", "cmp role imm", "jg short addr"], "31133": ["test role role", "jg short addr"], "31137": ["mov ecx [esp+imm]", "push eax", "push eax", "mov eax [esp+imm]", "push eax", "mov eax ebp", "push (offset func", "mov edx [esp+imm]", "call accountingDiffTolerated", "add esp imm", "test al al", "jz addr"], "31175": ["lea eax [role+imm]", "cmp eax imm", "ja func"], "31187": ["mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "31200": ["cmp ebx imm", "jnz short addr"], "31205": ["sub esp imm", "mov edx imm", "mov ecx [esp+imm]", "push ecx", "mov ecx [esp+imm]"], "31222": ["mov eax ebp", "call processXmlDecl", "add esp imm", "test result result", "jnz short addr"], "31236": ["mov func [ebp+imm]", "jmp addr"], "31248": ["jz short addr"], "31250": ["test [esp+imm] imm", "jnz addr"], "31261": ["mov func [esp+imm]", "add eax imm", "cmp eax imm", "ja func"], "31277": ["mov func func - 2DF78h)[esi+imm]", "add ebx esi", "jmp ebx"], "31288": ["mov eax imm"], "31293": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "31301": ["add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop func", "pop ebp", "retn"], "31320": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jnz addr"], "31337": ["mov edx [esp+imm]"], "31341": ["mov eax [edx+imm]", "mov [edx+imm] eax"], "31347": ["mov dword ptr [ebp+imm] imm", "lea esi [esi+imm]"], "31360": ["mov ebx [ebp+imm]", "test ebx ebx", "jz short addr"], "31367": ["sub esp imm", "mov edx func", "mov eax ebp", "mov ecx [esp+imm]", "push ecx", "mov ecx [esp+imm]", "call reportDefault", "add esp imm"], "31391": ["mov eax [ebp+imm]", "cmp eax imm", "jz short addr"], "31402": ["cmp eax imm", "mov eax [esp+imm]", "jnz short addr"], "31411": ["mov edi [esp+imm]", "mov [edi] eax", "add esp imm", "xor eax eax", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "31432": ["lea func [parser+imm]", "mov [esp+imm] eax", "lea func [parser+imm]", "mov [esp+imm] eax", "jmp addr"], "31464": ["mov [esp+imm] eax", "mov ecx eax", "lea eax [esp+imm]", "push eax", "mov edx [esp+imm]", "push edx", "push func", "push edi", "call dword ptr [edi]", "mov [esp+imm] eax", "add esp imm", "jmp addr"], "31496": ["add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "31509": ["mov eax [esp+imm]", "mov [eax] edx", "mov eax imm", "jmp addr"], "31525": ["neg [esp+imm]", "mov eax [esp+imm]", "mov [esp+imm] eax"], "31537": ["sub esp imm", "push func", "push eax", "jmp addr"], "31547": ["cmp [ebp+imm] func", "jz addr"], "31559": ["mov eax [ebp+imm]", "cmp byte ptr [eax+imm] imm", "jz short addr"], "31571": ["sub esp imm", "push func", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "lea eax [ebp+imm]", "push imm", "push eax", "call dword ptr [ebp+imm]", "add esp imm", "inc eax", "jz addr"], "31610": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov [eax] esi", "xor eax eax", "jmp addr"], "31626": ["mov eax [esp+imm]", "mov [esp+imm] imm", "jmp short addr"], "31640": ["sub esp imm", "mov edx func", "mov eax [esp+imm]", "push eax", "mov eax ebp", "mov ecx [esp+imm]", "call getAttributeId", "add esp imm", "mov [ebp+imm] eax", "test eax eax", "jz addr"], "31678": ["mov dword ptr [ebp+imm] imm", "mov word ptr [ebp+imm] imm", "lea esi func - 2DF78h)[esi]"], "31704": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "31721": ["mov eax [ebp+imm]", "test eax eax", "jnz addr"], "31735": ["jmp func"], "31744": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "31761": ["mov eax [ebp+imm]", "test eax eax", "jz func"], "31775": ["mov eax [ebp+imm]", "lea ecx func - 2DF78h)[esi]", "test eax eax", "jz addr"], "31795": ["lea role [ebp+imm]", "mov [esp+imm] func", "mov func ebp", "mov ebp prefix", "jmp short addr"], "31816": ["lea ecx [eax+imm]", "inc ebp", "mov [edi+imm] ecx", "mov cl [ebp-imm]", "mov [eax] cl", "cmp byte ptr [ebp+imm] imm", "jz addr"], "31841": ["mov eax [edi+imm]", "cmp eax [edi+imm]", "jnz short addr"], "31855": ["mov eax ebx", "call poolGrow", "test al al", "jz addr"], "31870": ["mov eax [edi+imm]", "jmp short addr"], "31880": ["mov edx [esp+imm]", "mov byte ptr [edx+imm] imm", "mov eax [ebp+imm]", "test eax eax", "jnz addr"], "31905": ["mov al [edx+imm]", "mov byte ptr [esp+imm] al", "mov [edx+imm] al", "test al al", "jnz func"], "31929": ["mov eax [ebp+imm]", "test eax eax", "jz func"], "31940": ["sub esp imm", "mov edx [ebp+imm]", "push edx", "call eax", "add esp imm", "test eax eax", "jnz func"], "31960": ["mov eax imm", "jmp addr"], "31976": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "31993": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "32007": ["sub esp imm", "push imm", "call dword ptr [ebp+imm]", "add esp imm", "test func func", "jz addr"], "32026": ["xor edx edx", "cmp role imm", "setz dl", "inc edx", "mov ecx [esp+imm]", "mov func edx", "mov edx [esp+imm]", "mov dword ptr [content_0+imm] imm", "mov dword ptr [content_0+imm] imm", "mov dword ptr [content_0+imm] imm", "mov dword ptr [content_0+imm] imm", "mov [edx] ecx", "push edx", "push func", "mov func [ebp+imm]", "mov ecx [eax]", "push ecx", "mov role [ebp+imm]", "push ebx", "call dword ptr [ebp+imm]", "mov eax [esp+imm]", "add esp imm", "mov byte ptr [eax+imm] imm", "jmp addr"], "32120": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "32137": ["mov eax [ebp+imm]", "xor ecx ecx", "mov [esp+imm] eax", "mov cl [ebp+imm]", "mov edx [ebp+imm]", "push eax", "push ebp", "xor eax eax", "push imm", "mov al [ebp+imm]", "push eax", "mov eax [esp+imm]", "call defineAttribute", "add esp imm", "test eax eax", "jz addr"], "32194": ["mov eax [ebp+imm]", "test eax eax", "jz func"], "32208": ["mov eax [ebp+imm]", "test eax eax", "jz func"], "32222": ["mov dl [eax]", "cmp dl imm", "jz addr"], "32233": ["cmp dl imm", "jz addr"], "32242": ["mov eax [esp+imm]", "mov edx [esp+imm]", "mov [eax] edx", "push ecx", "xor eax eax", "push ecx", "cmp role imm", "setz al", "push eax", "push imm", "mov role [ebp+imm]", "push ebx", "mov eax [ebp+imm]", "mov eax [eax]", "push eax", "mov eax [ebp+imm]", "mov eax [eax]", "push eax", "mov eax [ebp+imm]", "push eax", "call dword ptr [ebp+imm]", "mov ecx [ebp+imm]", "add esp imm", "mov eax [ebp+imm]", "test ecx ecx", "jz addr"], "32322": ["test eax eax", "jnz short addr"], "32326": ["jmp short addr"], "32328": ["mov eax edx"], "32330": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [ebp+imm] eax", "mov ecx eax", "jnz short addr"], "32346": ["lea esi func - 2DF78h)[esi]"], "32352": ["mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "jmp addr"], "32400": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "32417": ["xor ecx ecx", "mov eax [enc_0+imm]", "mov cl [ebp+imm]", "push imm", "mov edx [esp+imm]", "add edx imm", "push edx", "mov edx [esp+imm]", "sub edx eax", "push edx", "mov edx [esp+imm]", "add eax edx", "mov edx func", "push eax", "mov eax ebp", "call storeAttributeValue", "add esp imm", "test result result", "jnz addr"], "32472": ["mov result [esp+imm]", "sub esp imm", "xor ecx ecx", "mov edx [eax+imm]", "mov [esp+imm] edx", "mov edx eax", "mov eax [eax+imm]", "mov [edx+imm] eax", "mov cl [ebp+imm]", "mov edx [ebp+imm]", "mov eax [ebp+imm]", "push ebp", "push [esp+imm]", "push imm", "call defineAttribute", "add esp imm", "test eax eax", "jz addr"], "32537": ["mov ecx [ebp+imm]", "test ecx ecx", "jz func"], "32551": ["mov eax [ebp+imm]", "test eax eax", "jz func"], "32565": ["mov dl [eax]", "cmp dl imm", "jz addr"], "32576": ["cmp dl imm", "jz addr"], "32585": ["mov eax [esp+imm]", "mov edx [esp+imm]", "mov [eax] edx", "push eax", "push eax", "xor eax eax", "cmp role imm", "setz al", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [ebp+imm]", "push eax", "mov eax [ebp+imm]", "mov eax [eax]", "push eax", "mov eax [ebp+imm]", "mov eax [eax]", "push eax", "mov edx [ebp+imm]", "push edx", "call dword ptr [ebp+imm]", "mov ecx [ebp+imm]", "add esp imm", "mov eax [ebp+imm]", "test ecx ecx", "jz addr"], "32668": ["test eax eax", "jnz short addr"], "32672": ["jmp addr"], "32680": ["mov eax edx"], "32682": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [ebp+imm] eax", "mov ecx eax", "jnz short addr"], "32698": ["jmp addr"], "32704": ["mov ecx [esp+imm]", "cmp byte ptr [ecx+imm] imm", "jz func"], "32721": ["mov eax [ecx+imm]", "mov edx [ecx+imm]", "mov role [ecx+imm]", "mov edx [eax+imm]", "lea eax ds:0[edx*8]", "sub eax edx", "lea eax [ebx+imm]", "mov dword ptr [eax] imm"], "32761": ["mov eax [ebp+imm]", "test eax eax", "jnz addr"], "32775": ["jmp func"], "32784": ["mov eax [esp+imm]", "push eax", "mov edx [esp+imm]", "push edx", "mov role [esp+imm]", "push ebx", "push func", "call dword ptr [enc_0+imm]", "add esp imm", "test eax eax", "jz addr"], "32814": ["mov eax [ebp+imm]", "test eax eax", "jz func"], "32828": ["sub esp imm", "mov edx [enc_0+imm]", "mov ecx ebx", "lea eax [ebp+imm]", "mov ebx [esp+imm]", "add ecx edx", "sub ebx edx", "mov edx func", "push ebx", "call poolStoreString", "add esp imm", "test tem tem", "jz addr"], "32869": ["call normalizePublicId", "mov [ebp+imm] tem"], "32880": ["mov eax [ebp+imm]", "mov [ebp+imm] eax", "jmp addr"], "32904": ["mov eax [esp+imm]"], "32908": ["mov edx [esp+imm]", "push edx", "push eax", "mov ecx [esp+imm]", "push ecx", "push func", "call dword ptr [enc_0+imm]", "add esp imm", "test eax eax", "jz addr"], "32934": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "32951": ["mov eax [ebp+imm]", "test eax eax", "jz func"], "32965": ["mov eax [esp+imm]", "mov edx [enc_0+imm]", "add eax edx", "sub esp imm", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov ecx [esp+imm]", "add eax imm", "sub ecx edx", "mov edx func", "push ecx", "mov ecx [esp+imm]", "call poolStoreString", "add esp imm", "test tem tem", "jz addr"], "33016": ["call normalizePublicId", "mov edx [ebp+imm]", "mov [edx+imm] tem", "mov edx [esp+imm]", "mov tem [edx+imm]", "mov [edx+imm] eax", "mov eax [ebp+imm]", "test eax eax", "jz func"], "33054": ["cmp role imm", "jnz func"], "33063": ["jmp addr"], "33072": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "33089": ["mov edx imm"], "33094": ["mov eax [esp+imm]", "mov ecx [enc_0+imm]", "sub eax ecx", "mov [esp+imm] eax"], "33107": ["mov eax ebp", "mov [esp+imm] edx", "call nextScaffoldPart", "test myindex myindex", "js addr"], "33126": ["mov edx [esp+imm]", "lea role ds:0[myindex*8]", "sub ebx myindex", "sub esp imm", "shl ebx imm", "mov myindex [edx+imm]", "mov dword ptr [eax+imm] imm", "mov eax [edx+imm]", "mov edx [esp+imm]", "mov [eax+imm] edx", "mov eax [esp+imm]", "push eax", "mov edx func", "mov ecx [esp+imm]", "mov eax ebp", "call getElementType", "add esp imm", "test el el", "jz addr"], "33201": ["mov edx [el]", "mov el [esp+imm]", "mov eax [eax+imm]", "mov [eax+imm] edx", "xor eax eax", "lea esi [esi+imm]", "nop"], "33224": ["inc nameLen", "cmp byte ptr [edx+imm] imm", "jnz short addr"], "33232": ["mov ebx [esp+imm]", "mov edx [ebx+imm]", "mov ecx edx", "xor ecx imm", "cmp ecx nameLen", "jb addr"], "33255": ["add nameLen edx", "mov [ebx+imm] eax", "mov eax [ebp+imm]", "test eax eax", "jnz addr"], "33277": ["jmp func"], "33288": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "33305": ["mov eax [esp+imm]", "xor edx edx", "mov [esp+imm] eax", "jmp addr"], "33320": ["mov eax [ebp+imm]", "mov ecx [ebp+imm]", "add eax ecx", "cmp byte ptr [eax] imm", "jz addr"], "33343": ["mov byte ptr [eax] imm", "mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "33363": ["jmp func"], "33368": ["mov edx [ebp+imm]", "mov eax [ebp+imm]", "add eax edx", "mov edx eax", "mov al [eax]", "cmp al imm", "jz addr"], "33394": ["mov ecx [esp+imm]", "cmp byte ptr [ecx+imm] imm", "jz short addr"], "33407": ["test al al", "jz addr"], "33415": ["mov byte ptr [edx] imm", "jmp func"], "33424": ["mov edx imm"], "33429": ["mov role [esp+imm]", "cmp byte ptr [ebx+imm] imm", "jz func"], "33446": ["mov ecx [ebx+imm]", "mov eax [ebx+imm]", "mov ebx [ebx+imm]", "mov [esp+imm] ecx", "lea ecx [eax-imm]", "lea eax [ebx+imm]", "mov ebx [ebp+imm]", "test ebx ebx", "jz addr"], "33489": ["mov ebx [esp+imm]", "mov [ebx+imm] ecx", "mov ecx [eax]", "lea eax ds:0[ecx*8]", "sub eax ecx", "mov ecx [esp+imm]", "mov [ecx+imm] quant", "mov eax [ebx+imm]", "test eax eax", "jnz addr"], "33532": ["mov ebx [ebp+imm]", "mov eax [ebx+imm]", "cmp eax imm", "ja addr"], "33555": ["mov quant [ebx+imm]", "lea eax [eax+imm]", "shl eax imm", "mov ecx edx", "xor ecx imm", "cmp eax ecx", "ja addr"], "33580": ["sub esp imm", "add eax edx", "push eax", "call dword ptr [ebp+imm]", "mov [esp+imm] eax", "mov edx eax", "add esp imm", "test eax eax", "jz addr"], "33606": ["mov eax [ebx+imm]", "lea eax [eax+imm]", "lea ecx [edx+imm]", "mov eax edx", "lea edx [edx+imm]", "mov [esp+imm] ecx", "mov [esp+imm] edx", "mov dword ptr [eax+imm] imm", "cmp eax ecx", "jnb addr"], "33646": ["mov [esp+imm] ecx", "xor edx edx", "mov ecx [esp+imm]", "mov [esp+imm] func", "mov [esp+imm] ebp", "mov ebp eax", "lea esi func - 2DF78h)[esi]"], "33672": ["lea eax ds:0[edx*8]", "sub eax edx", "mov edx [ebx+imm]", "shl eax imm", "mov edx [edx+imm]", "mov [ebp+imm] edx", "cmp edx imm", "mov edi [ebx+imm]", "mov edi [edi+imm]", "mov [ebp+imm] edi", "jz addr"], "33718": ["mov dword ptr [ebp+imm] imm", "mov edx [ebx+imm]", "mov edi [edx+imm]", "mov [ebp+imm] ecx", "mov [ebp+imm] edi", "test edi edi", "mov edx [ebx+imm]", "mov edx [edx+imm]", "jz short addr"], "33755": ["xor edi edi", "lea esi [esi+imm]"], "33760": ["mov [ecx+imm] edx", "lea eax ds:0[edx*8]", "sub eax edx", "mov edx [ebx+imm]", "inc edi", "add ecx imm", "lea eax [edx+imm]", "cmp edi [ebp+imm]", "mov edx [eax+imm]", "jb short addr"], "33793": ["add ebp imm", "cmp [esp+imm] ebp", "jbe addr"], "33806": ["mov edx [ebp+imm]", "jmp addr"], "33816": ["lea eax func - 2DF78h)[esi]", "mov [ebp+imm] eax", "jmp func"], "33840": ["mov eax [esp+imm]", "mov byte ptr [ebp+imm] imm", "mov byte ptr [eax+imm] imm", "mov eax [ebp+imm]", "test eax eax", "jz addr"], "33869": ["mov eax [esp+imm]", "mov edx [enc_0+imm]", "sub esp imm", "lea ecx [eax+imm]", "mov eax [esp+imm]", "sub eax edx", "mov edx func", "push eax", "lea eax [ebp+imm]", "call poolStoreString", "add esp imm", "mov [ebp+imm] eax", "test eax eax", "jz addr"], "33918": ["mov eax [ebp+imm]", "mov byte ptr [esp+imm] imm", "mov [ebp+imm] eax"], "33935": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jnz short addr"], "33948": ["mov eax [ebp+imm]", "test eax eax", "jnz short addr"], "33958": ["mov eax [ebp+imm]", "test eax eax", "jz short addr"], "33965": ["sub esp imm", "mov ecx [ebp+imm]", "push ecx", "call eax", "add esp imm", "test eax eax", "jz addr"], "33985": ["lea esi func - 2DF78h)[esi]"], "33992": ["mov eax [ebp+imm]", "mov [esp+imm] eax", "test eax eax", "jz addr"], "34010": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jnz addr"], "34027": ["lea esi [esi+imm]", "nop"], "34032": ["cmp byte ptr [esp+imm] imm", "jz addr"], "34043": ["jmp func"], "34048": ["mov ecx [ebp+imm]", "test ecx ecx", "jz addr"], "34059": ["sub esp imm", "lea eax [ebp+imm]", "mov edx [esp+imm]", "push edx", "mov edx func", "mov ecx [esp+imm]", "call poolStoreString", "add esp imm", "mov [ebp+imm] eax", "test eax eax", "jz short addr"], "34097": ["mov eax [ebp+imm]", "mov dword ptr [ebp+imm] imm", "mov [ebp+imm] eax", "mov dword ptr [ebp+imm] imm", "jmp addr"], "34136": ["sub esp imm", "mov edx func", "mov eax [esp+imm]", "push eax", "mov eax ebp", "mov ecx [esp+imm]", "call getElementType", "add esp imm", "mov [ebp+imm] eax", "test eax eax", "jnz func"], "34174": ["mov eax imm", "jmp addr"], "34184": ["sub esp imm", "mov eax ebp", "mov edx [esp+imm]", "push edx", "mov edx func", "mov ecx [esp+imm]", "call reportComment", "add esp imm", "test eax eax", "jnz addr"], "34216": ["jmp short addr"], "34224": ["sub esp imm", "mov edx func", "mov eax ebp", "mov ecx [esp+imm]", "push ecx", "mov ecx [esp+imm]", "call reportProcessingInstruction", "add esp imm", "test eax eax", "jnz addr"], "34256": ["jmp short addr"], "34264": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "34281": ["mov edx imm", "jmp addr"], "34296": ["push ecx", "mov role [esp+imm]", "push ebx", "mov eax [esp+imm]", "push eax", "push func", "call dword ptr [enc_0+imm]", "add esp imm", "mov ebx eax", "test eax eax", "jnz addr"], "34324": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz addr"], "34341": ["sub esp imm", "lea eax [eax+imm]", "mov edx [esp+imm]", "push edx", "mov edx func", "mov ecx [esp+imm]", "call poolStoreString", "add esp imm", "mov ecx eax", "test func func", "jz addr"], "34376": ["sub esp imm", "push imm", "mov [esp+imm] func", "mov edx [esp+imm]", "mov func ebp", "call lookup", "add esp imm", "mov [ebp+imm] eax", "test eax eax", "jz addr"], "34413": ["mov ecx [esp+imm]", "cmp [eax] ecx", "jnz addr"], "34425": ["mov ecx [esp+imm]", "mov eax [ecx+imm]", "mov [ecx+imm] eax", "mov eax [ebp+imm]", "mov dword ptr [eax+imm] imm", "mov eax [ebp+imm]", "mov byte ptr [eax+imm] imm", "cmp dword ptr [ebp+imm] imm", "jz addr"], "34471": ["mov eax [ebp+imm]", "mov [eax+imm] bl", "cmp dword ptr [ebp+imm] imm", "jnz addr"], "34493": ["jmp func"], "34504": ["cmp [esp+imm] imm", "jnz addr"], "34515": ["mov edx [ebp+imm]", "mov eax [ebp+imm]", "test edx edx", "jz addr"], "34535": ["sub esp imm", "push imm", "mov role [ebp+imm]", "push ebx", "push eax", "push edx", "mov eax [ebp+imm]", "push eax", "call dword ptr [ebp+imm]", "mov ecx [ebp+imm]", "add esp imm", "mov eax [ebp+imm]", "test ecx ecx", "jz addr"], "34579": ["test eax eax", "jnz short addr"], "34583": ["jmp short addr"], "34592": ["mov eax edx"], "34594": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [ebp+imm] eax", "mov ecx eax", "jnz short addr"], "34610": ["mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "mov eax [ebp+imm]", "mov byte ptr [esp+imm] imm"], "34661": ["test eax eax", "jz addr"], "34669": ["mov eax [esp+imm]", "mov bl [eax+imm]", "mov byte ptr [eax+imm] imm", "mov ecx [ebp+imm]", "test ecx ecx", "jz addr"], "34700": ["mov edx [ebp+imm]", "test edx edx", "jz addr"], "34711": ["sub esp imm", "lea edx [eax+imm]", "mov eax ebp", "push imm", "mov ecx [esp+imm]", "call lookup", "add esp imm", "test entity entity", "jz addr"], "34744": ["cmp byte ptr [ebp+imm] imm", "jz short addr"], "34753": ["mov edx [ebp+imm]", "mov [entity+imm] edx"], "34762": ["mov ecx [esp+imm]", "sub esp imm", "mov byte ptr [ecx+imm] imm", "mov edx [entity+imm]", "push edx", "mov ecx [entity+imm]", "push ecx", "mov entity [entity+imm]", "push eax", "push imm", "mov eax [ebp+imm]", "push eax", "call dword ptr [ebp+imm]", "add esp imm", "test eax eax", "jz addr"], "34808": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz addr"], "34825": ["cmp byte ptr [eax+imm] imm", "jnz short addr"], "34834": ["mov eax [ebp+imm]", "test eax eax", "jz short addr"], "34841": ["sub esp imm", "push dword ptr [ebp+imm]", "call eax", "add esp imm", "test eax eax", "jz addr"], "34860": ["lea esi [esi+imm]"], "34864": ["mov byte ptr [ebp+imm] imm"], "34871": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "34882": ["sub esp imm", "mov edx [ebp+imm]", "push edx", "call eax", "add esp imm", "jmp addr"], "34904": ["mov eax [ebp+imm]", "test eax eax", "jz func"], "34915": ["sub esp imm", "push imm", "mov role [ebp+imm]", "push ebx", "mov edx [ebp+imm]", "push edx", "mov ecx [ebp+imm]", "push ecx", "mov ebx [ebp+imm]", "push ebx", "call eax", "mov ecx [ebp+imm]", "add esp imm", "mov dword ptr [ebp+imm] imm", "mov eax [ebp+imm]", "test ecx ecx", "jz addr"], "34980": ["test eax eax", "jnz short addr"], "34984": ["jmp addr"], "34992": ["mov eax edx"], "34994": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [ebp+imm] eax", "mov ecx eax", "jnz short addr"], "35010": ["jmp addr"], "35016": ["mov eax [esp+imm]", "sub esp imm", "mov byte ptr [ebp+imm] imm", "push imm", "lea edx [eax+imm]", "mov ecx [esp+imm]", "mov eax ebp", "call lookup", "add esp imm", "mov [ebp+imm] eax", "test eax eax", "jz addr"], "35066": ["mov eax [esp+imm]", "mov byte ptr [eax+imm] imm", "mov eax [esp+imm]", "mov edx [ebp+imm]", "test edx edx", "jz addr"], "35092": ["mov role [esp+imm]", "push ebx", "push eax", "mov eax [esp+imm]", "push eax", "push func", "call dword ptr [enc_0+imm]", "add esp imm", "test eax eax", "jz addr"], "35118": ["mov eax [esp+imm]", "sub esp imm", "mov edx [enc_0+imm]", "mov ebx [esp+imm]", "lea ecx [eax+imm]", "sub ebx edx", "lea eax [ebp+imm]", "mov edx func", "push ebx", "call poolStoreString", "add esp imm", "test func func", "jz addr"], "35161": ["call normalizePublicId", "mov edx [ebp+imm]", "mov [ebp+imm] func", "mov func [esp+imm]", "mov [ebp+imm] edx", "cmp byte ptr [eax+imm] imm", "jz addr"], "35201": ["mov ecx [ebp+imm]", "test ecx ecx", "jz addr"], "35215": ["mov ecx [esp+imm]", "mov eax [esp+imm]", "sub esp imm", "mov edx [enc_0+imm]", "add ecx edx", "add eax imm", "mov ebx [esp+imm]", "sub ebx edx", "mov edx func", "push ebx", "call poolStoreString", "add esp imm", "test tem tem", "jz addr"], "35258": ["call normalizePublicId", "mov edx [ebp+imm]", "mov ecx [esp+imm]", "mov [edx+imm] tem", "mov tem [ecx+imm]", "mov [ecx+imm] eax", "jmp addr"], "35288": ["lea eax func - 2DF78h)[esi]", "mov [ebp+imm] eax", "jmp func"], "35312": ["cmp [esp+imm] imm", "jnz func"], "35323": ["jmp addr"], "35328": ["mov eax [ebp+imm]", "test eax eax", "jz short addr"], "35335": ["sub esp imm", "mov edx func", "mov eax [esp+imm]", "push eax", "mov eax ebp", "mov ecx [esp+imm]", "call reportDefault", "add esp imm"], "35359": ["lea ecx [esp+imm]", "xor eax eax", "push ebx", "mov edx func", "mov al [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax ebp", "call doIgnoreSection", "add esp imm", "test result result", "jnz addr"], "35401": ["mov edx [esp+imm]", "test edx edx", "jnz addr"], "35413": ["lea edx (ignoreSectionProcessor - 2DF78h)[esi]", "mov [ebp+imm] edx", "jmp addr"], "35432": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "35446": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "35457": ["mov eax [esp+imm]", "mov ecx [esp+imm]", "sub esp imm", "mov [eax] ecx", "mov eax [ebp+imm]", "push eax", "push imm", "mov edx [ebp+imm]", "push edx", "mov ecx [ebp+imm]", "push ecx", "mov role [ebp+imm]", "push ebx", "call dword ptr [ebp+imm]", "add esp imm", "mov byte ptr [esp+imm] imm"], "35507": ["mov ecx [ebp+imm]", "mov eax [ebp+imm]", "test ecx ecx", "jz addr"], "35527": ["test eax eax", "jnz short addr"], "35531": ["jmp short addr"], "35536": ["mov eax edx"], "35538": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [ebp+imm] eax", "mov ecx eax", "jnz short addr"], "35554": ["mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "jmp addr"], "35600": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "35614": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "35625": ["mov role [esp+imm]", "sub esp imm", "mov edx [enc_0+imm]", "mov eax [esp+imm]", "sub eax edx", "lea ecx [ebx+imm]", "push eax", "mov edx func", "lea eax [ebp+imm]", "call poolStoreString", "add esp imm", "test func func", "jz addr"], "35668": ["mov ecx [esp+imm]", "sub esp imm", "mov [ecx] ebx", "mov edx [ebp+imm]", "push edx", "push func", "mov ecx [ebp+imm]", "push ecx", "mov ebx [ebp+imm]", "push ebx", "mov func [ebp+imm]", "push eax", "call dword ptr [ebp+imm]", "add esp imm", "mov byte ptr [esp+imm] imm"], "35714": ["mov ecx [ebp+imm]", "mov eax [ebp+imm]", "test ecx ecx", "jz addr"], "35734": ["test eax eax", "jnz short addr"], "35738": ["jmp addr"], "35744": ["mov eax edx"], "35746": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [ebp+imm] eax", "mov ecx eax", "jnz short addr"], "35762": ["jmp addr"], "35768": ["mov role [ebp+imm]", "mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "test ebx ebx", "jz func"], "35799": ["sub esp imm", "lea eax [ebp+imm]", "mov edx func", "mov ecx [esp+imm]", "push ecx", "mov ecx [esp+imm]", "call poolStoreString", "add esp imm", "mov [ebp+imm] eax", "test eax eax", "jnz addr"], "35841": ["jmp addr"], "35848": ["mov edx [esp+imm]", "cmp byte ptr [edx+imm] imm", "jz func"], "35865": ["mov role [ebp+imm]", "test ebx ebx", "jz func"], "35879": ["sub esp imm", "lea eax [edx+imm]", "mov edx [esp+imm]", "push edx", "mov edx func", "mov ecx [esp+imm]", "call poolStoreString", "add esp imm", "mov [ebx+imm] eax", "mov eax [ebp+imm]", "mov ecx [eax+imm]", "test ecx ecx", "jz addr"], "35924": ["mov edx [esp+imm]", "mov eax [edx+imm]", "mov [edx+imm] eax", "mov eax [ebp+imm]", "test eax eax", "jz addr"], "35945": ["mov edx [esp+imm]", "mov eax [esp+imm]", "mov [edx] eax", "mov eax [ebp+imm]", "push edx", "push edx", "mov ecx [eax+imm]", "push ecx", "mov ebx [eax+imm]", "push ebx", "mov edx [eax+imm]", "push edx", "mov ecx [eax+imm]", "push ecx", "mov ebx [eax]", "push ebx", "mov eax [ebp+imm]", "push eax", "call dword ptr [ebp+imm]", "add esp imm", "jmp addr"], "36000": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "36017": ["mov eax [ebp+imm]", "test eax eax", "jz func"], "36031": ["mov eax [ebp+imm]", "test eax eax", "jz func"], "36045": ["mov eax [esp+imm]", "mov edx [esp+imm]", "sub esp imm", "mov [eax] edx", "mov eax [ebp+imm]", "push imm", "mov role [eax+imm]", "push ebx", "mov edx [eax+imm]", "push edx", "xor edx edx", "mov ecx [eax+imm]", "push ecx", "push imm", "push imm", "mov dl [eax+imm]", "push edx", "mov ebx [eax]", "push ebx", "mov eax [ebp+imm]", "push eax", "call dword ptr [ebp+imm]", "add esp imm", "jmp addr"], "36112": ["mov eax [ebp+imm]", "test eax eax", "jnz addr"], "36123": ["jmp func"], "36128": ["cmp [esp+imm] imm", "jz addr"], "36139": ["xor eax eax", "cmp [esp+imm] imm", "setz al", "lea eax ds:2[eax*8]", "jmp addr"], "36168": ["sub esp imm", "xor edx edx", "mov role [esp+imm]", "push ebx", "mov ecx [esp+imm]", "jmp addr"], "36192": ["xor edx edx", "jmp closeGroup"], "36200": ["mov edx [ebp+imm]", "mov eax [ebp+imm]", "cmp edx eax", "jb addr"], "36220": ["test eax eax", "jz addr"], "36228": ["js addr"], "36234": ["add eax eax", "mov edx [ebp+imm]", "mov [ebp+imm] eax", "push ecx", "push ecx", "push eax", "mov role [ebp+imm]", "push ebx", "call edx", "add esp imm", "test func func", "jz addr"], "36268": ["mov ecx [esp+imm]", "mov [ebp+imm] func", "mov edx [ecx+imm]", "test edx edx", "jz short addr"], "36288": ["mov func [ebp+imm]", "cmp eax imm", "ja addr"], "36305": ["shl eax imm", "push ebx", "push ebx", "push eax", "push edx", "call dword ptr [ebp+imm]", "add esp imm", "test func func", "jz addr"], "36326": ["mov ecx [esp+imm]", "mov [ecx+imm] func", "mov func [ebp+imm]"], "36342": ["mov edx [ebp+imm]"], "36348": ["mov byte ptr [eax+imm] imm", "mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "36369": ["mov eax ebp", "call nextScaffoldPart", "test myindex myindex", "js addr"], "36384": ["mov edx [esp+imm]", "mov edx [edx+imm]", "test edx edx", "jz addr"], "36402": ["mov ebx [esp+imm]", "mov ecx [ebx+imm]", "mov [edx+imm] myindex", "mov ecx ebx", "lea edx ds:0[myindex*8]", "mov ebx [ebx+imm]", "sub edx myindex", "inc ebx", "mov myindex edx", "mov edx [ecx+imm]", "mov [ecx+imm] ebx", "lea eax [edx+imm]", "mov dword ptr [eax] imm", "mov ecx [ebp+imm]", "test ecx ecx", "jnz addr"], "36470": ["jmp func"], "36480": ["mov eax [esp+imm]", "mov edx imm", "cmp byte ptr [eax+imm] imm", "jz func"], "36502": ["jmp addr"], "36512": ["mov eax [ebp+imm]", "test eax eax", "jz func"], "36526": ["sub esp imm", "mov edx func", "mov eax [esp+imm]", "push eax", "mov eax ebp", "mov ecx [esp+imm]", "call getElementType", "add esp imm", "mov [ebp+imm] eax", "test eax eax", "jz addr"], "36564": ["mov eax [esp+imm]", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov byte ptr [eax+imm] imm", "jmp addr"], "36600": ["lea eax func - 2DF78h)[esi]", "mov [ebp+imm] eax", "jmp func"], "36624": ["lea eax func - 2DF78h)[esi]", "mov byte ptr [ebp+imm] imm", "mov [ebp+imm] eax", "jmp func"], "36648": ["lea eax func - 2DF78h)[esi]", "mov byte ptr [ebp+imm] imm", "mov [ebp+imm] eax", "jmp func"], "36672": ["mov eax [ebp+imm]", "test eax eax", "jnz addr"], "36683": ["jmp func"], "36688": ["cmp byte ptr [ebp+imm] imm", "jz addr"], "36701": ["mov func [esp+imm]", "mov bl [edi+imm]", "mov byte ptr [edi+imm] imm", "mov eax [ebp+imm]", "test eax eax", "jz addr"], "36732": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "36743": ["sub esp imm", "lea edx [edi+imm]", "lea ecx func - 2DF78h)[esi]", "mov eax ebp", "push imm", "call lookup", "add esp imm", "test entity entity", "jz addr"], "36778": ["mov edx [ebp+imm]", "sub esp imm", "mov [entity+imm] edx", "mov byte ptr [edi+imm] imm", "mov edx [entity+imm]", "push edx", "mov ecx [entity+imm]", "push ecx", "mov entity [entity+imm]", "push eax", "push imm", "mov eax [ebp+imm]", "push eax", "call dword ptr [ebp+imm]", "add esp imm", "test eax eax", "jz addr"], "36829": ["cmp byte ptr [edi+imm] imm", "jz addr"], "36842": ["cmp byte ptr [edi+imm] imm", "jnz short addr"], "36851": ["mov eax [ebp+imm]", "test eax eax", "jz short addr"], "36858": ["sub esp imm", "push dword ptr [ebp+imm]", "call eax", "add esp imm", "test eax eax", "jz addr"], "36877": ["lea esi [esi+imm]"], "36880": ["lea eax (contentProcessor - 2DF78h)[esi]", "mov [ebp+imm] eax", "mov eax [esp+imm]", "push eax", "mov edx [esp+imm]", "push edx", "mov ecx [esp+imm]", "push ecx", "push ebp", "call contentProcessor", "add esp imm", "jmp addr"], "36928": ["lea eax func - 2DF78h)[esi]", "mov [ebp+imm] eax", "jmp func"], "36952": ["lea eax func - 2DF78h)[esi]", "mov [ebp+imm] eax", "jmp func"], "36976": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "36993": ["mov eax [ebp+imm]", "mov byte ptr [esp+imm] imm", "mov [esp+imm] eax", "test eax eax", "jz func"], "37016": ["mov eax [esp+imm]", "mov edx [enc_0+imm]", "add eax edx", "sub esp imm", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov ecx [esp+imm]", "add eax imm", "sub ecx edx", "mov edx func", "push ecx", "mov ecx [esp+imm]", "call poolStoreString", "mov ecx [esp+imm]", "add esp imm", "mov [ecx+imm] eax", "mov eax [ebp+imm]", "mov edx [eax+imm]", "test edx edx", "jz addr"], "37083": ["mov edx [ebp+imm]", "mov [eax+imm] edx", "mov edx [esp+imm]", "mov eax [edx+imm]", "mov [edx+imm] eax", "mov eax [ebp+imm]", "test eax eax", "jz addr"], "37116": ["cmp role imm", "jnz addr"], "37125": ["jmp addr"], "37136": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "37153": ["mov eax [enc_0+imm]", "mov edx [esp+imm]", "push ebx", "push ebx", "lea ecx [edx+imm]", "push imm", "mov edx [esp+imm]", "sub edx eax", "mov eax ebp", "push edx", "mov edx func", "call storeEntityValue", "mov edx [ebp+imm]", "add esp imm", "test edx edx", "jz addr"], "37199": ["mov ebx [esp+imm]", "mov ecx [ebx+imm]", "mov [edx+imm] ecx", "mov edx [ebx+imm]", "mov ecx [ebp+imm]", "sub edx [ebx+imm]", "mov [ecx+imm] edx", "mov edx [ebx+imm]", "mov [ebx+imm] edx", "mov edx [ebp+imm]", "test edx edx", "jz addr"], "37244": ["mov [esp+imm] func", "mov func [esp+imm]", "mov ecx [esp+imm]", "sub esp imm", "mov [eax] ecx", "xor ecx ecx", "mov edx [ebp+imm]", "push imm", "push imm", "push imm", "mov eax [ebp+imm]", "push eax", "mov eax [edx+imm]", "push eax", "mov eax [edx+imm]", "push eax", "mov cl [edx+imm]", "push ecx", "mov edx [edx]", "push edx", "mov ecx [ebp+imm]", "push ecx", "call dword ptr [ebp+imm]", "mov eax [esp+imm]", "add esp imm", "test eax eax", "jz addr"], "37321": ["jmp addr"], "37328": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz func"], "37345": ["mov eax [ebp+imm]", "test eax eax", "jnz addr"], "37359": ["jmp func"], "37368": ["lea eax func - 2DF78h)[esi]", "mov [ebp+imm] eax", "jmp func"], "37392": ["mov edx imm", "jmp closeGroup"], "37408": ["mov edx imm", "jmp closeGroup"], "37424": ["mov eax imm", "jmp addr"], "37434": ["mov func [esp+imm]", "mov [eax] func", "xor eax eax", "jmp addr"], "37447": ["mov eax ebp", "lea edx (aAborting - 2DF78h)[esi]", "call accountingReportStats", "mov eax imm", "jmp addr"], "37472": ["cmp byte ptr [ebp+imm] imm", "mov eax imm", "jnz addr"], "37490": ["jmp addr"], "37495": ["mov byte ptr [esp+imm] imm", "jmp addr"], "37505": ["mov ebx [esp+imm]", "mov [ebx+imm] ecx", "mov ecx [eax]", "lea eax ds:0[ecx*8]", "sub eax ecx", "mov ecx [esp+imm]", "mov [ecx+imm] quant", "mov eax [ebx+imm]", "test eax eax", "jnz func"], "37548": ["mov byte ptr [ebx+imm] imm", "mov dword ptr [ebx+imm] imm", "jmp func"], "37570": ["mov [ebp+imm] eax", "jmp addr"], "37581": ["mov edi [esp+imm]", "mov [ebp+imm] edi", "mov edx [ebx+imm]", "mov eax [edx+imm]", "lea edx [edi+imm]", "mov [esp+imm] edx", "mov dl [eax]", "mov [edi] dl", "cmp byte ptr [eax] imm", "jz short addr"], "37614": ["mov edx [esp+imm]", "mov edi ecx", "lea esi [esi+imm]"], "37624": ["inc edx", "inc eax", "mov cl [eax]", "mov [edx-imm] cl", "cmp byte ptr [eax] imm", "jnz short addr"], "37636": ["mov [esp+imm] edx", "mov ecx edi"], "37642": ["mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "jmp addr"], "37661": ["mov byte ptr [esp+imm] imm", "jmp addr"], "37671": ["mov eax [ebp+imm]", "jmp addr"], "37682": ["mov eax [esp+imm]", "mov byte ptr [esp+imm] imm", "mov [ebp+imm] eax", "jmp addr"], "37702": ["mov dword ptr [ebp+imm] imm", "jmp func"], "37717": ["mov ebp edi", "mov edi [esp+imm]", "mov ecx [ebp+imm]", "test ecx ecx", "jz addr"], "37737": ["sub esp imm", "mov eax ebx", "mov edx [esp+imm]", "push edx", "mov edx edi", "mov ecx [esp+imm]", "call poolAppend", "add esp imm", "test eax eax", "jz addr"], "37769": ["mov eax [ebp+imm]", "mov [ebp+imm] eax", "jmp addr"], "37786": ["mov eax [esp+imm]", "mov edx [enc_0+imm]", "add eax edx", "sub esp imm", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov ecx [esp+imm]", "add eax imm", "sub ecx edx", "mov edx func", "push ecx", "mov ecx [esp+imm]", "call poolStoreString", "add esp imm", "mov ecx eax", "test func func", "jz addr"], "37839": ["mov func [esp+imm]", "sub esp imm", "lea edx [eax+imm]", "push imm", "mov eax ebp", "mov [esp+imm] func", "call lookup", "mov ecx [esp+imm]", "mov edx eax", "mov func [ecx+imm]", "mov [ecx+imm] eax", "add esp imm", "mov eax [ebp+imm]", "mov ecx [esp+imm]", "test eax eax", "jz short addr"], "37894": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz addr"], "37911": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "37925": ["test func func", "jz addr"], "37933": ["cmp byte ptr [entity_0+imm] imm", "jnz addr"], "37943": ["mov eax [entity_0+imm]", "test eax eax", "jz addr"], "37954": ["xor ecx ecx", "mov eax ebp", "cmp role imm", "setz cl", "call processInternalEntity", "test result result", "jz addr"], "37977": ["jmp addr"], "37984": ["mov eax imm", "jmp addr"], "37994": ["sub esp imm", "lea eax [eax+imm]", "mov edx func", "mov ecx [esp+imm]", "push ecx", "mov ecx [esp+imm]", "call poolStoreString", "add esp imm", "mov role eax", "test eax eax", "jz addr"], "38029": ["mov edx [esp+imm]", "sub esp imm", "add edx imm", "mov ecx eax", "mov eax ebp", "push imm", "call lookup", "add esp imm", "mov [ebp+imm] eax", "test eax eax", "jz addr"], "38070": ["cmp [eax] ebx", "mov edx [esp+imm]", "jnz addr"], "38082": ["mov eax [edx+imm]", "mov [edx+imm] eax", "mov eax [ebp+imm]", "mov dword ptr [eax+imm] imm", "mov eax [ebp+imm]", "mov byte ptr [eax+imm] imm", "xor eax eax", "mov edx [ebp+imm]", "test edx edx", "jz addr"], "38127": ["mov edx [ebp+imm]", "mov [edx+imm] al", "mov eax [ebp+imm]", "test eax eax", "jnz addr"], "38150": ["jmp func"], "38155": ["mov ebp [esp+imm]", "mov edi [esp+imm]"], "38163": ["mov eax [esp+imm]", "mov ecx [esp+imm]", "mov [eax] ecx", "push ebx", "mov eax [esp+imm]", "push eax", "mov eax [ebp+imm]", "mov eax [eax]", "push eax", "mov eax [ebp+imm]", "push eax", "call dword ptr [ebp+imm]", "mov eax [esp+imm]", "add esp imm", "mov byte ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "jmp addr"], "38226": ["mov [ebp+imm] eax", "jmp addr"], "38237": ["cmp byte ptr [ebp+imm] imm", "jz addr"], "38250": ["jmp addr"], "38255": ["mov byte ptr [esp+imm] imm", "jmp addr"], "38265": ["sub esp imm", "mov eax [ebp+imm]", "mov dword ptr [ebp+imm] imm", "push imm", "call eax", "add esp imm", "mov [ebp+imm] eax", "test eax eax", "jnz addr"], "38302": ["mov dword ptr [ebp+imm] imm", "mov eax imm", "jmp addr"], "38328": ["mov role [esp+imm]", "mov eax [ebx+imm]", "mov ecx [ebx+imm]", "mov ecx [eax+imm]", "lea eax ds:0[ecx*8]", "sub eax ecx", "mov ecx [ebx+imm]", "lea eax [ecx+imm]", "cmp dword ptr [eax] imm", "jz addr"], "38375": ["mov dword ptr [eax] imm", "mov eax [ebp+imm]", "mov edx [ebp+imm]", "test eax eax", "mov eax [ebp+imm]", "setz byte ptr [esp+imm]", "mov byte ptr [edx+imm] imm", "jmp addr"], "38415": ["mov [ebp+imm] eax", "jmp addr"], "38426": ["mov eax [esp+imm]", "sub esp imm", "push imm", "lea edx [eax+imm]", "mov ecx [esp+imm]", "mov eax ebp", "call lookup", "add esp imm", "mov [ebp+imm] eax", "test eax eax", "jz addr"], "38469": ["mov dword ptr [eax+imm] imm", "mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jz addr"], "38493": ["mov eax [ebp+imm]", "mov [esp+imm] eax", "test eax eax", "jz addr"], "38511": ["jmp addr"], "38520": ["mov ecx [esp+imm]", "mov edx [ecx+imm]", "mov [ecx+imm] edx"], "38530": ["test func func", "jz func"], "38538": ["jmp addr"], "38544": ["mov eax [esp+imm]", "mov byte ptr [eax+imm] imm", "jmp func"], "38560": ["mov eax [ebp+imm]", "test eax eax", "jnz addr"], "38571": ["mov ecx [esp+imm]", "mov al [ecx+imm]", "mov byte ptr [esp+imm] al", "mov [ecx+imm] al", "jmp func"], "38596": ["mov ecx [ebp+imm]", "test ecx ecx", "jnz addr"], "38610": ["mov eax [esp+imm]", "mov [eax+imm] bl", "jmp addr"], "38625": ["cmp role imm", "jz addr"], "38634": ["lea ecx func - 2DF78h)[esi]", "jmp addr"], "38645": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jnz addr"], "38662": ["test func func", "jz addr"], "38670": ["cmp byte ptr [entity_0+imm] imm", "jnz addr"], "38680": ["mov eax imm", "jmp addr"], "38696": ["mov eax [ebp+imm]", "test eax eax", "jz func"], "38710": ["mov eax [esp+imm]", "mov edx [esp+imm]", "sub esp imm", "mov [eax] edx", "mov eax [ebp+imm]", "push dword ptr [eax+imm]", "push dword ptr [eax+imm]", "push dword ptr [eax+imm]", "push dword ptr [eax+imm]", "push imm", "push imm", "push imm", "push dword ptr [eax]", "push dword ptr [ebp+imm]", "call dword ptr [ebp+imm]", "add esp imm", "jmp addr"], "38765": ["mov func [esp+imm]", "cmp role imm", "mov al [edx+imm]", "mov byte ptr [esp+imm] al", "mov [edx+imm] al", "jnz func"], "38794": ["mov eax [ebp+imm]", "test eax eax", "jz func"], "38805": ["push edx", "push imm", "push ecx", "push dword ptr [ebp+imm]", "call eax", "add esp imm", "jmp addr"], "38822": ["cmp byte ptr [eax+imm] imm", "jnz addr"], "38832": ["mov eax [ebp+imm]", "cmp eax [ebp+imm]", "jz addr"], "38850": ["lea edx [eax+imm]", "mov [ebp+imm] edx", "mov byte ptr [eax] imm", "mov eax [ebp+imm]", "cmp eax [ebp+imm]", "jz addr"], "38880": ["lea edx [eax+imm]", "mov [ebp+imm] edx", "mov byte ptr [eax] imm", "mov eax [ebp+imm]", "mov [ebp+imm] eax", "mov eax [ebp+imm]", "mov [ebp+imm] eax", "jmp addr"], "38921": ["cmp byte ptr [eax+imm] imm", "jnz addr"], "38931": ["mov eax [ebp+imm]", "cmp eax [ebp+imm]", "jz addr"], "38949": ["lea edx [eax+imm]", "mov [ebp+imm] edx", "mov byte ptr [eax] imm", "mov eax [ebp+imm]", "cmp eax [ebp+imm]", "jz addr"], "38979": ["lea edx [eax+imm]", "mov [ebp+imm] edx", "mov byte ptr [eax] imm", "mov eax [ebp+imm]", "mov [ebp+imm] eax", "mov eax [ebp+imm]", "mov [ebp+imm] eax", "jmp addr"], "39020": ["mov eax [esp+imm]", "mov [eax+imm] bl", "jmp addr"], "39035": ["mov eax imm", "jmp addr"], "39045": ["mov ebx ebp", "mov ebp [ebp+imm]", "test ebp ebp", "jnz short addr"], "39057": ["sub esp imm", "lea ecx func - 2DF78h)[esi]", "mov eax ebx", "push imm", "mov [esp+imm] edx", "call entityTrackingReportStats", "mov edx [esp+imm]", "dec dword ptr [ebx+imm]", "add esp imm", "mov byte ptr [edx+imm] imm"], "39099": ["mov eax imm", "jmp addr"], "39109": ["mov eax imm", "jmp addr"], "39119": ["mov eax [esp+imm]", "mov ecx imm", "mov [esp+imm] func", "mov byte ptr [eax+imm] imm", "mov byte ptr [entity_0+imm] imm", "mov eax ebp", "call entityTrackingOnOpen", "sub esp imm", "mov edx [esp+imm]", "push dword ptr [edx+imm]", "push dword ptr [edx+imm]", "push dword ptr [edx+imm]", "mov [esp+imm] edx", "push imm", "push dword ptr [ebp+imm]", "call dword ptr [ebp+imm]", "add esp imm", "test eax eax", "mov edx [esp+imm]", "jz addr"], "39191": ["mov eax ebp"], "39193": ["mov ebx eax", "mov eax [eax+imm]", "test eax eax", "jnz short addr"], "39205": ["sub esp imm", "mov eax ebx", "push imm", "mov ecx [esp+imm]", "mov [esp+imm] edx", "call entityTrackingReportStats", "mov edx [esp+imm]", "add esp imm", "dec dword ptr [ebx+imm]", "mov byte ptr [edx+imm] imm", "mov edx [esp+imm]", "cmp byte ptr [edx+imm] imm", "jnz short addr"], "39258": ["mov al [edx+imm]", "mov byte ptr [esp+imm] al", "mov [edx+imm] al", "jmp addr"], "39278": ["cmp dword ptr [ebp+imm] imm", "setz al", "jmp addr"], "39293": ["lea ecx func - 2DF78h)[esi]", "jmp addr"], "39304": ["mov eax imm", "jmp addr"], "39314": ["mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jnz addr"], "39331": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "39342": ["sub esp imm", "push dword ptr [ebp+imm]", "call eax", "add esp imm", "test eax eax", "jnz addr"], "39361": ["jmp addr"], "39366": ["xor ebx ebx", "cmp dword ptr [ebp+imm] imm", "setz bl", "jmp addr"], "39383": ["mov eax imm", "jmp addr"], "39393": ["lea eax [ebp+imm]", "call poolGrow", "test al al", "jz addr"], "39412": ["mov eax [ebp+imm]", "jmp addr"], "39423": ["lea eax [ebp+imm]", "call poolGrow", "test al al", "jz addr"], "39442": ["mov eax [ebp+imm]", "jmp addr"], "39453": ["shr dword ptr [ebp+imm] imm", "jmp addr"], "39464": ["lea eax [ebp+imm]", "call poolGrow", "test al al", "jz addr"], "39483": ["mov eax [ebp+imm]", "jmp addr"], "39494": ["lea eax [ebp+imm]", "call poolGrow", "test al al", "jz addr"], "39513": ["mov eax [ebp+imm]", "jmp addr"], "39524": ["lea myindex func - 2DF78h)[esi]", "mov ebx esi", "push eax", "lea eax (aGitExpatLibXml - 2DF78h)[esi]", "push imm", "push eax", "lea eax (aDtdScaffindexN - 2DF78h)[esi]", "push eax", "call func"], "39557": ["mov eax imm", "jmp addr"]}, "preds": [38662], "succs": [31293]}, "processInternalEntity": {"disasm": {"39840": ["push ebp", "mov ebp betweenDecl", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "mov ebx parser", "sub esp imm", "mov esi [ebx+imm]", "mov [esp+imm] edi", "mov edi entity", "mov parser large imm", "mov [esp+imm] parser", "xor parser parser", "test esi esi", "jz addr"], "39894": ["mov eax [openEntity+imm]", "mov [parser+imm] eax"], "39903": ["mov edx entity", "mov eax parser", "mov byte ptr [entity+imm] imm", "mov ecx imm", "call entityTrackingOnOpen", "mov dword ptr [entity+imm] imm", "mov eax [parser+imm]", "mov [openEntity+imm] eax", "mov [parser+imm] openEntity", "mov [openEntity+imm] entity", "mov eax [parser+imm]", "mov dword ptr [openEntity] imm", "mov [openEntity+imm] eax", "mov eax ebp", "mov [openEntity+imm] al", "mov dword ptr [openEntity+imm] imm", "mov ebp [entity+imm]", "mov edx [entity+imm]", "add edx textStart", "mov [esp+imm] textStart", "cmp byte ptr [entity+imm] imm", "mov [esp+imm] edx", "jz addr"], "39999": ["lea ecx [esp+imm]", "mov eax [parser+imm]", "push ecx", "mov [esp+imm] func", "mov [esp+imm] ecx", "push func", "push textStart", "push eax", "call dword ptr [eax]", "add esp imm", "mov edx [parser+imm]", "push imm", "push imm", "push imm", "mov ecx [esp+imm]", "push ecx", "mov ecx [esp+imm]", "push ecx", "mov ecx textStart", "push func", "mov func [esp+imm]", "push eax", "mov eax parser", "call doProlog", "mov [esp+imm] eax", "add esp imm"], "40070": ["mov ecx [esp+imm]", "test ecx ecx", "jnz short addr"], "40078": ["mov eax [esp+imm]", "mov edx parser", "cmp eax [esp+imm]", "jz short addr"], "40090": ["cmp dword ptr [ebx+imm] imm", "jz addr"], "40103": ["nop"], "40104": ["mov eax edx", "mov edx [edx+imm]", "test edx edx", "jnz short addr"], "40116": ["sub esp imm", "mov edx entity", "push imm", "mov ecx [esp+imm]", "mov [esp+imm] eax", "lea ecx [ecx-imm]", "call entityTrackingReportStats", "mov eax [esp+imm]", "mov edx [eax+imm]", "add esp imm", "dec edx", "mov [eax+imm] edx", "mov byte ptr [entity+imm] imm", "mov eax [openEntity+imm]", "mov [parser+imm] eax", "mov eax [parser+imm]", "mov [openEntity+imm] eax", "mov [parser+imm] openEntity"], "40193": ["mov eax [esp+imm]", "xor eax large imm", "jnz addr"], "40210": ["mov eax [esp+imm]", "add esp imm", "pop parser", "pop openEntity", "pop entity", "pop ebp", "retn"], "40224": ["sub esp imm", "mov ecx [parser+imm]", "mov func [parser+imm]", "push imm", "push imm", "lea eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax parser", "push textStart", "call doContent", "mov [esp+imm] eax", "add esp imm", "jmp addr"], "40280": ["sub esp imm", "push imm", "call dword ptr [parser+imm]", "add esp imm", "mov esi eax", "test openEntity openEntity", "jnz addr"], "40301": ["mov [esp+imm] imm", "jmp short addr"], "40312": ["sub eax textStart", "mov [entity+imm] eax", "mov eax [esp+imm]", "lea eax [eax-imm]", "mov [ebx+imm] eax", "jmp addr"], "40338": ["call func"]}, "preds": [40193], "succs": []}, "doContent": {"disasm": {"40352": ["push ebp", "mov ebp parser", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "sub esp imm", "mov parser [esp+imm]", "mov [esp+imm] edi", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov esi eax", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] func", "mov [esp+imm] eax", "mov eax esi", "mov [esp+imm] al", "mov edi enc", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "mov eax [parser+imm]", "cmp [parser+imm] enc", "mov [esp+imm] eax", "jz addr"], "40471": ["mov func [parser+imm]", "mov [esp+imm] eax", "add func imm", "mov [esp+imm] eax"], "40488": ["mov enc [esp+imm]", "mov eax [esp+imm]", "mov [ecx] eax", "lea eax [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "lea eax [eax-imm]", "mov [esp+imm] eax"], "40520": ["mov eax [esp+imm]", "mov edx [esp+imm]", "mov [esp+imm] eax", "push edx", "mov esi [esp+imm]", "push esi", "push eax", "push edi", "call dword ptr [edi+imm]", "add esp imm", "lea ebx [tok+imm]", "test ebx imm", "jnz short addr"], "40557": ["mov edx [esp+imm]", "cmp [esp+imm] imm", "mov ecx edx", "jz addr"], "40574": ["cmp tok imm", "jz short addr"], "40579": ["jl short addr"], "40581": ["add tok imm", "cmp eax imm", "jbe short addr"], "40589": ["push esi", "push esi", "mov eax [esp+imm]", "push eax", "mov eax ebp", "push offset func", "call accountingDiffTolerated", "add esp imm", "test al al", "jz addr"], "40622": ["mov ecx [esp+imm]", "mov eax [esp+imm]", "cmp ebx imm", "mov [ecx] eax", "ja func"], "40641": ["mov esi [esp+imm]", "mov edx func - 2DF78h)[esi+imm]", "add edx esi", "jmp edx"], "40656": ["mov ecx [esp+imm]", "mov edx [esp+imm]", "cmp tok imm", "jnz short addr"], "40669": ["mov edi [esp+imm]", "mov tok [esp+imm]", "cmp byte ptr [esp+imm] imm", "mov func - 2DF78h)[edi] eax", "jnz short addr"], "40686": ["mov eax [esp+imm]", "test eax eax", "jle addr"], "40698": ["cmp [ebp+imm] eax", "jnz addr"], "40710": ["xchg ax ax"], "40712": ["mov edi [esp+imm]", "mov eax [esp+imm]", "xor ebx ebx", "mov func - 2DF78h)[edi] eax", "jmp addr"], "40736": ["mov ecx esi", "jmp addr"], "40744": ["lea func [parser+imm]", "mov [esp+imm] eax", "lea func [parser+imm]", "mov [esp+imm] eax", "jmp addr"], "40776": ["mov eax [esp+imm]", "mov ecx [edi+imm]", "add ecx eax", "mov [esp+imm] imm", "mov edx func", "mov eax edi", "mov [esp+imm] func", "call dword ptr [edi+imm]", "sub esp imm", "mov edx eax", "lea eax [ebp+imm]", "mov ecx [esp+imm]", "add edx ecx", "push edx", "mov edx edi", "call poolStoreString", "mov [esp+imm] eax", "add esp imm", "test eax eax", "jz addr"], "40844": ["mov eax [ebp+imm]", "mov edx edi", "mov [ebp+imm] eax", "push eax", "push imm", "lea eax [esp+imm]", "push eax", "lea eax [esp+imm]", "push eax", "mov eax ebp", "mov ecx [esp+imm]", "call storeAtts", "add esp imm", "test result result", "jnz addr"], "40893": ["mov result [ebp+imm]", "mov [ebp+imm] eax", "mov eax [ebp+imm]", "test eax eax", "jz addr"], "40916": ["push edx", "mov ecx [ebp+imm]", "push ecx", "mov ebx [esp+imm]", "push ebx", "mov esi [ebp+imm]", "push esi", "call eax", "mov eax [ebp+imm]", "add esp imm", "test eax eax", "jz short addr"], "40945": ["mov esi [ebp+imm]", "test esi esi", "jz short addr"], "40952": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov eax [eax]", "mov [esi] eax", "mov eax [ebp+imm]"], "40967": ["push edx", "push edx", "mov ecx [esp+imm]", "push ecx", "mov ebx [ebp+imm]", "push ebx", "call eax", "add esp imm"], "40983": ["mov ecx [ebp+imm]", "mov eax [ebp+imm]", "test ecx ecx", "jz addr"], "41003": ["test eax eax", "jnz short addr"], "41007": ["jmp short addr"], "41016": ["mov eax edx"], "41018": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [ebp+imm] eax", "mov ecx eax", "jnz short addr"], "41034": ["mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "mov edx [esp+imm]", "mov eax ebp", "call freeBindings", "mov ebx [ebp+imm]", "test ebx ebx", "jnz addr"], "41099": ["mov eax [ebp+imm]", "mov edx [esp+imm]", "cmp eax imm", "jnz addr"], "41118": ["jmp addr"], "41128": ["mov esi [ebp+imm]", "test esi esi", "jz addr"], "41142": ["mov eax [tag]", "mov [ebp+imm] eax"], "41150": ["mov dword ptr [tag+imm] imm", "mov eax [ebp+imm]", "mov [tag] eax", "mov [ebp+imm] tag", "mov dword ptr [tag+imm] imm", "mov dword ptr [tag+imm] imm", "mov edx [edi+imm]", "mov ecx [esp+imm]", "add edx ecx", "mov eax edi", "mov [tag+imm] edx", "call dword ptr [edi+imm]", "mov [esp+imm] ebp", "mov [tag+imm] eax", "mov ebx [ebp+imm]", "inc ebx", "mov [ebp+imm] ebx", "mov ebp tag", "mov eax [tag+imm]", "mov ecx [tag+imm]", "mov [esp+imm] eax", "add ecx eax", "mov eax [tag+imm]", "mov [esp+imm] eax", "lea eax [esp+imm]", "mov [esp+imm] eax", "lea eax [esp+imm]", "mov ebx [tag+imm]", "mov [esp+imm] eax", "mov tag rawNameEnd", "jmp short addr"], "41272": ["dec func", "jz short addr"], "41275": ["mov ebx [tag+imm]", "push eax", "sub ebx ecx", "push eax", "add ebx ebx", "push bufSize", "push ecx", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test func func", "jz addr"], "41304": ["mov edx [esp+imm]", "mov [tag+imm] func", "add bufSize func", "add func edx", "mov [tag+imm] ebx", "mov [esp+imm] eax"], "41322": ["sub esp imm", "dec ebx", "push ebx", "mov eax [esp+imm]", "push eax", "push rawNameEnd", "mov eax [esp+imm]", "push eax", "push edi", "call dword ptr [edi+imm]", "mov ebx [esp+imm]", "mov ecx [tag+imm]", "mov edx ebx", "sub edx ecx", "mov [esp+imm] edx", "add esp imm", "cmp [esp+imm] rawNameEnd", "jb short addr"], "41366": ["mov rawNameEnd tag", "mov eax [esp+imm]", "mov tag [esp+imm]", "mov func edi", "mov [tag+imm] eax", "mov [tag+imm] ecx", "mov byte ptr [ebx] imm", "push eax", "mov eax [esp+imm]", "push eax", "lea eax [tag+imm]", "push eax", "lea eax [tag+imm]", "push eax", "mov eax ebp", "mov ecx [esp+imm]", "call storeAtts", "add esp imm", "test result result", "jnz addr"], "41426": ["mov result [ebp+imm]", "test eax eax", "jz addr"], "41437": ["push edx", "mov ecx [ebp+imm]", "push ecx", "mov ebx [tag+imm]", "push ebx", "mov tag [ebp+imm]", "push esi", "call eax", "add esp imm"], "41458": ["mov ecx [ebp+imm]", "mov eax [ebp+imm]", "test ecx ecx", "jz addr"], "41478": ["test eax eax", "jnz short addr"], "41482": ["jmp short addr"], "41488": ["mov eax edx"], "41490": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [ebp+imm] eax", "mov ecx eax", "jnz short addr"], "41506": ["mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "mov dword ptr [ebp+imm] imm", "mov edx [esp+imm]", "jmp addr"], "41560": ["mov eax [esp+imm]", "cmp [ebp+imm] eax", "jz addr"], "41576": ["mov esi [ebp+imm]", "mov eax [tag]", "mov [ebp+imm] eax", "mov eax [ebp+imm]", "mov [tag] eax", "mov [ebp+imm] tag", "mov edx [edi+imm]", "mov eax [esp+imm]", "lea ebx [eax+imm]", "mov eax edi", "mov edx ebx", "mov [esp+imm] ebx", "call dword ptr [edi+imm]", "cmp [tag+imm] len", "jnz addr"], "41634": ["push edx", "push len", "push func", "mov ecx [tag+imm]", "push ecx", "mov func [esp+imm]", "call func", "add esp imm", "test eax eax", "jnz addr"], "41661": ["mov ebx [ebp+imm]", "mov ecx [ebp+imm]", "dec ebx", "test ecx ecx", "mov [ebp+imm] ebx", "jz addr"], "41685": ["cmp byte ptr [ebp+imm] imm", "mov edx [tag+imm]", "mov eax [tag+imm]", "jz short addr"], "41700": ["test addr addr", "jnz addr"], "41708": ["push edx", "push edx", "push eax", "mov ebx [ebp+imm]", "push ebx", "call ecx", "add esp imm", "jmp short addr"], "41728": ["mov edx [ebp+imm]", "test edx edx", "jz short addr"], "41735": ["push ecx", "push ecx", "mov b [b]", "mov eax [eax]", "push eax", "mov eax [ebp+imm]", "push eax", "call edx", "add esp imm", "mov eax [tag+imm]"], "41754": ["mov eax [eax+imm]", "mov [tag+imm] eax", "mov eax [ebp+imm]", "mov [b+imm] eax", "mov [ebp+imm] b", "mov eax [b]", "mov edx [b+imm]", "mov [eax+imm] edx"], "41783": ["mov eax [tag+imm]", "mov ebx eax", "test eax eax", "jnz short addr"], "41792": ["mov eax [ebp+imm]", "mov edx [esp+imm]", "test eax eax", "jnz short addr"], "41806": ["mov eax [ebp+imm]", "cmp eax imm", "jz short addr"], "41817": ["cmp eax imm", "jnz addr"], "41826": ["mov eax [esp+imm]", "mov [ebp+imm] eax", "jmp short addr"], "41840": ["sub esp imm", "mov edx edi", "push eax", "mov eax ebp", "mov ecx [esp+imm]", "call reportProcessingInstruction", "add esp imm", "test eax eax", "jz addr"], "41868": ["mov edx [esp+imm]"], "41872": ["mov eax [esp+imm]", "mov [esp+imm] edx", "mov [eax] edx", "mov eax [ebp+imm]", "cmp eax imm", "jz addr"], "41897": ["cmp eax imm", "jnz addr"], "41906": ["mov edi [esp+imm]", "mov eax [esp+imm]", "xor ebx ebx", "mov func - 2DF78h)[edi] eax"], "41918": ["mov eax [esp+imm]", "xor eax large imm", "jnz addr"], "41935": ["add esp imm", "mov eax ebx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "41952": ["mov edi [esp+imm]", "mov ebx imm", "mov func - 2DF78h)[edi] eax", "jmp short addr"], "41968": ["mov edx [ebp+imm]", "test edx edx", "jz func"], "41979": ["mov byte ptr [esp+imm] imm", "push esi", "push imm", "lea eax [esp+imm]", "push eax", "mov eax [ebp+imm]", "push eax", "call edx", "mov edx [esp+imm]", "add esp imm", "jmp addr"], "42016": ["mov edx [ebp+imm]", "test edx edx", "jz addr"], "42027": ["sub esp imm", "mov ebx [ebp+imm]", "push ebx", "call edx", "add esp imm"], "42039": ["mov eax [esp+imm]", "push eax", "xor eax eax", "mov al [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax ebp", "mov edx [esp+imm]", "push edx", "mov edx edi", "mov ecx [esp+imm]", "call doCdataSection", "add esp imm", "test result result", "jnz addr"], "42088": ["mov edx [esp+imm]", "test edx edx", "jnz addr"], "42100": ["mov ebx result", "mov result [esp+imm]", "lea eax [eax-imm]", "mov [ebp+imm] eax", "jmp addr"], "42128": ["mov edx [edi+imm]", "push esi", "sub eax edx", "push eax", "mov eax [esp+imm]", "add edx eax", "push edx", "push edi", "call dword ptr [edi+imm]", "mov byte ptr [esp+imm] al", "add esp imm", "test al al", "jz addr"], "42161": ["lea esi [esp+imm]", "lea ecx [esp+imm]", "push ebx", "mov edx esi", "push ebx", "mov eax ebp", "push imm", "push (offset aGmonStart+5)", "call accountingDiffTolerated", "mov eax [ebp+imm]", "add esp imm", "test eax eax", "jz addr"], "42201": ["push edx", "push imm", "push esi", "mov ecx [ebp+imm]", "push ecx", "call eax", "mov edx [esp+imm]", "add esp imm", "jmp addr"], "42224": ["mov edx [esp+imm]", "mov eax edi", "call dword ptr [edi+imm]", "test n n", "js addr"], "42241": ["mov esi [ebp+imm]", "test esi esi", "jz addr"], "42252": ["lea edx [esp+imm]", "mov ebx [esp+imm]", "mov [esp+imm] edx", "call XmlUtf8Encode", "push edx", "push eax", "mov edx [esp+imm]", "jmp addr"], "42280": ["cmp byte ptr [esp+imm] imm", "jnz addr"], "42291": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "42302": ["cmp byte ptr [edi+imm] imm", "jnz addr"], "42312": ["mov eax [ebp+imm]", "sub esp imm", "mov [esp+imm] eax", "mov eax [ebp+imm]", "push eax", "lea eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "lea eax [esp+imm]", "push eax", "push edi", "call dword ptr [edi+imm]", "add esp imm", "mov edx [ebp+imm]", "mov eax [esp+imm]", "sub eax edx", "push eax", "push edx", "mov eax [ebp+imm]", "push eax", "call dword ptr [ebp+imm]", "add esp imm"], "42369": ["mov eax [esp+imm]", "test eax eax", "jz addr"], "42381": ["mov eax [esp+imm]", "cmp [ebp+imm] eax", "jnz addr"], "42397": ["mov eax [esp+imm]", "mov edi [esp+imm]", "xor ebx ebx", "mov [eax] edi", "jmp addr"], "42416": ["cmp byte ptr [esp+imm] imm", "jnz addr"], "42427": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov [eax] esi", "mov eax [ebp+imm]", "test eax eax", "jz addr"], "42448": ["mov byte ptr [esp+imm] imm", "push edx", "push imm", "lea edx [esp+imm]", "push edx", "mov ecx [ebp+imm]", "push ecx", "call eax", "add esp imm"], "42470": ["mov eax [esp+imm]", "test eax eax", "jz addr"], "42482": ["mov eax [esp+imm]", "cmp [ebp+imm] eax", "jz short addr"], "42494": ["mov ebx imm", "jmp addr"], "42504": ["sub esp imm", "mov edx edi", "push eax", "mov eax ebp", "mov ecx [esp+imm]", "call reportComment", "add esp imm", "test eax eax", "jnz addr"], "42532": ["lea esi [esi+imm]"], "42536": ["mov ebx imm", "jmp addr"], "42552": ["cmp byte ptr [esp+imm] imm", "mov ebx imm", "jz addr"], "42568": ["jmp addr"], "42576": ["mov esi [ebp+imm]", "test charDataHandler charDataHandler", "jz short func"], "42583": ["cmp byte ptr [edi+imm] imm", "jz addr"], "42593": ["mov edx [esp+imm]", "push ecx", "sub eax edx", "push eax"], "42601": ["push edx", "mov eax [ebp+imm]", "push eax", "call esi", "mov edx [esp+imm]", "add esp imm", "jmp addr"], "42624": ["cmp byte ptr [esp+imm] imm", "mov ebx imm", "jz addr"], "42640": ["jmp addr"], "42648": ["mov ebx imm", "jmp addr"], "42664": ["mov eax [ebp+imm]", "mov edx [esp+imm]", "test eax eax", "jz addr"], "42679": ["sub esp imm", "push edx", "jmp short addr"], "42688": ["mov esi [ebp+imm]", "test esi esi", "jz addr"], "42699": ["sub esp imm", "push eax"], "42703": ["mov ecx [esp+imm]", "mov edx edi", "mov eax ebp", "call reportDefault", "mov edx [esp+imm]", "add esp imm", "jmp addr"], "42728": ["mov ebx imm", "jmp addr"], "42744": ["mov ecx [esp+imm]", "mov esi [esp+imm]", "sub esp imm", "mov edx [edi+imm]", "add ecx edx", "lea eax [esi+imm]", "mov ebx [esp+imm]", "sub ebx edx", "mov edx edi", "push ebx", "call poolStoreString", "add esp imm", "mov ebx eax", "test name name", "jz addr"], "42790": ["sub esp imm", "mov ecx name", "mov edx esi", "mov name ebp", "push imm", "call lookup", "mov [esp+imm] eax", "mov func [esi+imm]", "add esp imm", "mov [esi+imm] eax", "cmp byte ptr [esi+imm] imm", "jz addr"], "42832": ["cmp byte ptr [esi+imm] imm", "jnz addr"], "42845": ["mov esi [esp+imm]", "test esi esi", "jz addr"], "42857": ["lea esi [esi+imm]"], "42864": ["mov esi [esp+imm]", "mov cl [esi+imm]", "test cl cl", "jnz addr"], "42879": ["mov eax [esi+imm]", "test eax eax", "jnz addr"], "42890": ["mov eax [esi+imm]", "test eax eax", "jz addr"], "42901": ["cmp byte ptr [ebp+imm] imm", "jnz addr"], "42914": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "42925": ["push edx", "push imm", "mov ecx [esi]", "push ecx", "mov name [ebp+imm]", "push ebx", "call eax", "mov edx [esp+imm]", "add esp imm", "jmp addr"], "42952": ["mov ecx [ebp+imm]", "test ecx ecx", "jz addr"], "42963": ["sub esp imm", "mov edx edi", "push eax", "mov eax ebp", "mov ecx [esp+imm]", "call reportDefault", "add esp imm", "jmp addr"], "42992": ["sub esp imm", "push imm", "call dword ptr [ebp+imm]", "add esp imm", "mov esi eax", "test tag tag", "jz addr"], "43013": ["sub esp imm", "push imm", "call dword ptr [ebp+imm]", "add esp imm", "mov [tag+imm] eax", "test eax eax", "jz addr"], "43035": ["add eax imm", "mov [tag+imm] eax", "jmp addr"], "43048": ["mov eax [ebp+imm]", "test eax eax", "jnz addr"], "43059": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "43070": ["sub esp imm", "mov edx edi", "mov eax ebp", "mov esi [esp+imm]", "push esi", "mov ecx [esp+imm]", "call reportDefault", "add esp imm", "jmp addr"], "43104": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "43115": ["sub esp imm", "mov edx edi", "mov eax [esp+imm]", "push eax", "mov eax ebp", "mov ecx [esp+imm]", "call reportDefault", "add esp imm", "jmp addr"], "43144": ["mov eax [esp+imm]", "mov edi [esp+imm]", "mov [eax] edi"], "43154": ["mov ebx imm", "jmp addr"], "43168": ["mov [ebp+imm] eax", "jmp addr"], "43184": ["mov eax [esp+imm]", "test eax eax", "jz addr"], "43196": ["cmp byte ptr [eax+imm] imm", "jnz addr"], "43206": ["mov name imm", "jmp addr"], "43216": ["mov edx [esp+imm]", "push ebx", "mov ecx [esp+imm]", "sub ecx edx", "push ecx", "push edx", "mov esi [ebp+imm]", "push esi", "call eax", "add esp imm", "jmp addr"], "43248": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "43259": ["sub esp imm", "mov edx edi", "mov eax [esp+imm]", "push eax", "mov eax ebp", "mov ecx [esp+imm]", "call reportDefault", "add esp imm", "jmp addr"], "43288": ["mov [ebp+imm] eax", "jmp addr"], "43304": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "43315": ["sub esp imm", "mov edx edi", "mov eax [esp+imm]", "push eax", "mov eax ebp", "mov ecx [esp+imm]", "call reportDefault", "add esp imm", "jmp addr"], "43344": ["mov ecx [ebp+imm]", "test ecx ecx", "jz addr"], "43355": ["sub esp imm", "mov eax ebp", "mov edx [esp+imm]", "push edx", "mov edx edi", "mov ecx [esp+imm]", "call reportDefault", "add esp imm", "jmp addr"], "43384": ["lea eax [esp+imm]", "mov [esp+imm] eax", "lea eax [esp+imm]", "mov [esp+imm] eax", "jmp short addr"], "43408": ["mov ecx [esp+imm]", "mov eax [esp+imm]", "mov [ecx] eax"], "43418": ["mov eax [ebp+imm]", "sub esp imm", "mov ebx [ebp+imm]", "mov [esp+imm] eax", "push ebx", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "push edi", "call dword ptr [edi+imm]", "mov ecx [esp+imm]", "mov ebx eax", "mov func [esp+imm]", "add esp imm", "mov [ecx] eax", "mov eax [esp+imm]", "mov ecx [ebp+imm]", "sub eax ecx", "push eax", "push ecx", "mov eax [ebp+imm]", "push eax", "call charDataHandler", "add esp imm", "cmp func imm", "ja short addr"], "43491": ["jmp addr"], "43496": ["mov eax [esp+imm]", "mov ebx imm", "lea edx [eax-imm]", "mov eax ebp", "call accountingReportStats", "jmp addr"], "43523": ["mov eax [esp+imm]", "mov edi [esp+imm]", "mov [eax] edi", "jmp addr"], "43538": ["mov ecx [tag+imm]", "add eax ecx", "mov cl [localPart]", "test cl cl", "jz short addr"], "43549": ["lea tag [tag+imm]"], "43552": ["inc addr", "mov [uri] cl", "inc uri", "mov cl [localPart]", "test cl cl", "jnz short addr"], "43562": ["cmp byte ptr [ebp+imm] imm", "mov addr [tag+imm]", "jz short addr"], "43574": ["test prefix prefix", "jnz addr"], "43582": ["mov byte ptr [uri] imm", "mov ecx [ebp+imm]", "mov uri [tag+imm]", "jmp addr"], "43596": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "43607": ["mov eax [esp+imm]", "mov byte ptr [eax+imm] imm", "mov eax [ebp+imm]", "mov [esp+imm] eax", "mov eax [eax+imm]", "test eax eax", "jz addr"], "43639": ["mov eax [ebp+imm]", "cmp eax [ebp+imm]", "jz addr"], "43657": ["lea edx [eax+imm]", "mov [ebp+imm] edx", "mov byte ptr [eax] imm", "mov eax [esp+imm]", "cmp byte ptr [ebp+imm] imm", "mov eax [eax+imm]", "mov esi [eax+imm]", "lea eax [ebp+imm]", "adc esi imm", "mov [esp+imm] eax", "xor name name", "test esi esi", "jle addr"], "43712": ["mov [esp+imm] edi", "mov edi [esp+imm]", "jmp short addr"], "43728": ["mov edx dword ptr ds:(free - 2DF78h)[edi]", "mov ecx [edx+imm]", "add ecx ebx", "inc ebx", "mov edx ecx", "lea ecx [eax+imm]", "mov [ebp+imm] ecx", "cmp ebx esi", "mov cl [edx]", "mov [eax] cl", "jz short addr"], "43759": ["mov eax [ebp+imm]", "cmp eax [ebp+imm]", "jnz short addr"], "43773": ["mov eax [esp+imm]", "call poolGrow", "test al al", "jz short addr"], "43786": ["mov eax [ebp+imm]", "jmp short addr"], "43794": ["xor ecx ecx", "mov edx [esp+imm]", "mov eax ebp", "call processInternalEntity", "test result result", "jz addr"], "43815": ["mov ebx eax", "jmp addr"], "43822": ["mov eax [esp+imm]", "call poolGrow", "test al al", "jnz addr"], "43839": ["mov eax [esp+imm]", "mov byte ptr [eax+imm] imm", "jmp addr"], "43852": ["mov edi [esp+imm]"], "43856": ["mov cl imm"], "43858": ["mov eax [esp+imm]", "lea ebx [ebp+imm]", "mov [esp+imm] edi", "mov edx [ebp+imm]", "mov esi [eax+imm]", "mov eax [eax+imm]", "mov [esp+imm] ebx", "mov edi esi", "lea eax [esi+imm]", "mov [esp+imm] eax", "mov eax [ebp+imm]", "mov [esp+imm] eax", "jmp short addr"], "43912": ["mov esi func - 2DF78h)[edi]", "add edi imm", "test esi esi", "jnz addr"], "43925": ["cmp [esp+imm] edi", "jnz short addr"], "43931": ["mov eax [esp+imm]", "mov edi [esp+imm]", "mov ebx [eax]", "mov eax [eax+imm]", "lea eax [ebx+imm]", "mov [esp+imm] eax", "lea eax [ebp+imm]", "mov [esp+imm] eax", "jmp short addr"], "43968": ["mov esi [ebx]", "add ebx imm", "test esi esi", "jnz addr"], "43981": ["cmp [esp+imm] ebx", "jnz short addr"], "43987": ["mov eax [ebp+imm]", "cmp eax [ebp+imm]", "mov [esp+imm] eax", "jz addr"], "44009": ["mov esi [esp+imm]", "lea eax [esi+imm]", "mov [ebp+imm] eax", "mov byte ptr [esi] imm", "mov esi [esp+imm]", "mov eax [ebp+imm]", "test context context", "mov byte ptr [esi+imm] imm", "jz addr"], "44047": ["sub esp imm", "mov edx [esi+imm]", "push edx", "mov ecx [esi+imm]", "push ecx", "mov ebx [esi+imm]", "push ebx", "push context", "mov esi [ebp+imm]", "push esi", "call dword ptr [ebp+imm]", "add esp imm", "test eax eax", "jz addr"], "44081": ["mov eax [ebp+imm]", "mov [ebp+imm] eax", "jmp addr"], "44098": ["mov ebx [esi+imm]", "test ebx ebx", "jz addr"], "44109": ["test cl cl", "jz short addr"], "44113": ["cmp [esp+imm] edx", "jz addr"], "44123": ["lea edx [eax+imm]", "mov [ebp+imm] edx", "mov byte ptr [eax] imm", "mov eax [ebp+imm]", "mov edx [ebp+imm]", "mov [esp+imm] eax"], "44151": ["mov ebx [esi]", "cmp byte ptr [ebx] imm", "jz short addr"], "44158": ["mov ecx ebp", "mov ebp ebx", "mov ebx ecx", "jmp short addr"], "44168": ["lea edx [eax+imm]", "inc ebp", "mov [ebx+imm] edx", "mov cl [ebp-imm]", "mov [eax] cl", "cmp byte ptr [ebp+imm] imm", "jz short addr"], "44189": ["mov eax [ebx+imm]", "mov edx [ebx+imm]"], "44201": ["cmp eax edx", "jnz short addr"], "44205": ["mov eax [esp+imm]", "call poolGrow", "test al al", "jz addr"], "44222": ["mov eax [ebx+imm]", "jmp short addr"], "44230": ["mov eax [ebx+imm]", "mov ebp ebx", "mov [esp+imm] eax"], "44242": ["mov eax [esp+imm]", "cmp eax [ebp+imm]", "jz addr"], "44258": ["lea edx [eax+imm]", "mov [ebp+imm] edx", "mov byte ptr [eax] imm", "mov eax [esi+imm]", "mov edx [ebp+imm]", "cmp byte ptr [ebp+imm] imm", "mov ecx [eax+imm]", "mov eax [ebp+imm]", "adc ecx imm", "mov [esp+imm] eax", "test ecx ecx", "jle short addr"], "44306": ["mov [esp+imm] edi", "xor ebx ebx", "mov edi ecx", "jmp short addr"], "44320": ["mov edx [esi+imm]", "mov ecx [edx+imm]", "add ecx ebx", "inc ebx", "mov edx ecx", "lea ecx [eax+imm]", "mov [ebp+imm] ecx", "cmp ebx edi", "mov cl [edx]", "mov [eax] cl", "jz short addr"], "44348": ["mov eax [ebp+imm]", "mov edx [ebp+imm]"], "44360": ["cmp eax edx", "jnz short addr"], "44364": ["mov eax [esp+imm]", "call poolGrow", "test al al", "jz addr"], "44381": ["mov eax [ebp+imm]", "jmp short addr"], "44389": ["mov eax [ebp+imm]", "mov edi [esp+imm]", "mov edx [ebp+imm]", "mov [esp+imm] eax"], "44409": ["mov cl imm", "jmp addr"], "44416": ["mov eax [esp+imm]", "mov edi [esp+imm]", "mov ebx imm", "mov [eax] edi", "jmp addr"], "44436": ["mov cl [ebp+imm]", "lea ebx [uri+imm]", "mov [eax] cl", "mov eax uri", "mov cl [prefix]", "test cl cl", "jz addr"], "44459": ["lea tag [tag+imm]", "nop"], "44464": ["inc prefix", "mov [uri] cl", "inc uri", "mov cl [prefix]", "test cl cl", "jnz short addr"], "44474": ["jmp addr"], "44479": ["cmp byte ptr [esi+imm] imm", "jz addr"], "44489": ["test cl cl", "jz short addr"], "44493": ["mov eax [ebp+imm]", "cmp [ebp+imm] eax", "jz addr"], "44511": ["mov eax [ebp+imm]", "lea edx [eax+imm]", "mov [ebp+imm] edx", "mov byte ptr [eax] imm"], "44529": ["mov esi [esi]", "cmp byte ptr [esi] imm", "jnz short addr"], "44536": ["jmp addr"], "44544": ["lea edx [eax+imm]", "inc esi", "mov [ebp+imm] edx", "mov cl [esi-imm]", "mov [eax] cl", "cmp byte ptr [esi] imm", "jz addr"], "44568": ["mov eax [ebp+imm]", "cmp eax [ebp+imm]", "jnz short addr"], "44582": ["mov eax [esp+imm]", "call poolGrow", "test al al", "jz addr"], "44599": ["mov eax [ebp+imm]", "jmp short addr"], "44607": ["mov eax [ebp+imm]", "test eax eax", "jz addr"], "44618": ["push edx", "push imm", "push name", "mov ecx [ebp+imm]", "push ecx", "call eax", "mov edx [esp+imm]", "add esp imm", "jmp addr"], "44640": ["mov ebx imm", "jmp addr"], "44650": ["mov eax [esp+imm]", "call poolGrow", "test al al", "jz addr"], "44667": ["mov eax [ebp+imm]", "jmp addr"], "44678": ["mov ebx result", "mov edx [esp+imm]", "mov result ebp", "call freeBindings", "jmp addr"], "44696": ["mov eax [esp+imm]", "call poolGrow", "test al al", "jz addr"], "44713": ["mov eax [ebp+imm]", "jmp addr"], "44724": ["mov cl imm", "jmp addr"], "44731": ["push [esp+imm]", "push [esp+imm]", "push edx", "push ebp", "call epilogProcessor", "add esp imm", "mov ebx eax", "jmp addr"], "44756": ["sub esp imm", "mov ebx imm", "push tag", "call dword ptr [ebp+imm]", "add esp imm", "jmp addr"], "44776": ["mov name imm", "jmp addr"], "44786": ["mov name imm", "jmp addr"], "44796": ["lea eax [ebp+imm]", "call poolGrow", "test al al", "jz addr"], "44815": ["mov eax [ebp+imm]", "jmp addr"], "44826": ["call func"], "44831": ["mov name imm", "jmp addr"], "44841": ["mov ebx imm", "jmp addr"], "44851": ["lea eax [ebp+imm]", "call poolGrow", "test al al", "jz addr"], "44870": ["mov eax [ebp+imm]", "mov [esp+imm] eax", "jmp addr"]}, "preds": [44851], "succs": [44009]}, "cdataSectionProcessor": {"disasm": {"45120": ["push ebp", "xor eax eax", "push edi", "call func", "add ebp (offset func - $)", "push esi", "push ebx", "sub esp imm", "mov ebx [esp+imm]", "mov esi [esp+imm]", "mov edi [esp+imm]", "lea ecx [esp+imm]", "mov edx [ebx+imm]", "push imm", "cmp byte ptr [ebx+imm] imm", "setz al", "push eax", "mov eax ebx", "push edi", "push esi", "call doCdataSection", "add esp imm", "test result result", "jnz short addr"], "45191": ["mov edx [esp+imm]", "test edx edx", "jz short addr"], "45199": ["mov result [ebx+imm]", "test eax eax", "jz short addr"], "45209": ["lea eax (externalEntityContentProcessor - 2DF78h)[ebp]", "mov [ebx+imm] eax", "push edi", "push esi", "push edx", "push ebx", "call externalEntityContentProcessor", "add esp imm"], "45233": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "45248": ["lea eax (contentProcessor - 2DF78h)[ebp]", "mov [ebx+imm] eax", "push edi", "push esi", "push edx", "push ebx", "call contentProcessor", "add esp imm", "add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"]}, "preds": [45199], "succs": []}, "externalEntityInitProcessor3": {"disasm": {"45280": ["push ebp", "call func", "add eax (offset func - $)", "push edi", "push esi", "push ebx", "sub esp imm", "mov ebx [esp+imm]", "mov ebp [esp+imm]", "mov [esp+imm] eax", "lea edx [esp+imm]", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "mov esi [esp+imm]", "mov edi [esp+imm]", "mov [esp+imm] ebp", "mov [ebx+imm] ebp", "mov eax [ebx+imm]", "push edx", "push esi", "push ebp", "push eax", "call dword ptr [eax+imm]", "mov edx [esp+imm]", "add esp imm", "mov [ebx+imm] edx", "cmp tok imm", "jz short addr"], "45374": ["cmp tok imm", "jz short addr"], "45379": ["cmp tok imm", "jz short addr"], "45384": ["mov eax [esp+imm]", "mov dword ptr [ebx+imm] imm", "lea eax (externalEntityContentProcessor - 2DF78h)[eax]", "mov [ebx+imm] eax", "push edi", "push esi", "push func", "push ebx", "call externalEntityContentProcessor", "add esp imm"], "45422": ["mov ecx [esp+imm]", "xor ecx large imm", "jnz addr"], "45439": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "45448": ["cmp byte ptr [ebx+imm] imm", "mov tok imm", "jnz short addr"], "45462": ["mov [edi] ebp", "xor eax eax", "jmp short addr"], "45472": ["cmp byte ptr [ebx+imm] imm", "mov tok imm", "jnz short addr"], "45486": ["mov [edi] ebp", "xor eax eax", "jmp short addr"], "45496": ["sub esp imm", "mov ecx ebp", "mov tok ebx", "push edx", "mov edx imm", "call processXmlDecl", "add esp imm", "test result result", "jnz short addr"], "45521": ["mov edx [ebx+imm]", "cmp edx imm", "jz short addr"], "45532": ["cmp edx imm", "jnz short addr"], "45537": ["mov edx [esp+imm]", "mov [edi] edx", "jmp short addr"], "45552": ["mov result imm", "jmp addr"], "45568": ["mov ebp [esp+imm]", "jmp addr"], "45577": ["call func"]}, "preds": [45422], "succs": []}, "externalEntityInitProcessor2": {"disasm": {"45584": ["push ebp", "call func", "add ebp (offset func - $)", "push edi", "push esi", "push ebx", "sub esp imm", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "mov ebx [esp+imm]", "mov edx [esp+imm]", "lea ecx [esp+imm]", "mov [esp+imm] edx", "mov esi [esp+imm]", "mov edi [esp+imm]", "mov eax [ebx+imm]", "push ecx", "push esi", "push edx", "mov [esp+imm] edx", "push eax", "call dword ptr [eax+imm]", "add esp imm", "cmp tok imm", "mov edx [esp+imm]", "jz short addr"], "45667": ["cmp tok imm", "jz short addr"], "45672": ["cmp tok imm", "jz short addr"], "45677": ["lea eax (externalEntityInitProcessor3 - 2DF78h)[ebp]", "mov [ebx+imm] eax", "push edi", "push esi", "push func", "push ebx", "call externalEntityInitProcessor3", "add esp imm"], "45701": ["mov edi [esp+imm]", "xor edi large imm", "jnz addr"], "45718": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "45728": ["cmp byte ptr [ebx+imm] imm", "jz short addr"], "45737": ["mov [ebx+imm] edx", "mov tok imm", "jmp short addr"], "45752": ["cmp byte ptr [ebx+imm] imm", "jnz short addr"], "45761": ["mov [edi] edx", "xor eax eax", "jmp short addr"], "45768": ["push eax", "push eax", "mov eax ebx", "push imm", "push offset func", "mov ecx [esp+imm]", "call accountingDiffTolerated", "add esp imm", "test al al", "jz short addr"], "45795": ["mov edx [esp+imm]", "cmp edx esi", "jnz short addr"], "45803": ["cmp byte ptr [ebx+imm] imm", "jnz addr"], "45816": ["jmp short addr"], "45824": ["mov [ebx+imm] edx", "mov tok imm", "jmp addr"], "45840": ["mov eax ebx", "lea edx (aAborting - 2DF78h)[ebp]", "call accountingReportStats", "mov eax imm", "jmp addr"], "45863": ["call func"]}, "preds": [45701], "succs": []}, "externalParEntProcessor": {"disasm": {"45872": ["push ebp", "call func", "add eax (offset func - $)", "push edi", "push esi", "push ebx", "sub esp imm", "mov [esp+imm] eax", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov esi [esp+imm]", "mov [esp+imm] eax", "lea ebp [esp+imm]", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "mov edi [esp+imm]", "mov [esp+imm] esi", "mov eax [ebx+imm]", "push ebp", "push edi", "push esi", "push eax", "call func - 2DF78h)[eax]", "add esp imm", "test func func", "jle short addr"], "45952": ["mov ecx [esp+imm]", "cmp func imm", "jz addr"], "45965": ["cmp byte ptr [ebx+imm] imm", "setz dl", "mov ebp edx"], "45977": ["mov edx [esp+imm]", "sub esp imm", "and ebp 0FFh", "lea edx [edx-imm]", "mov [ebx+imm] edx", "mov edx [ebx+imm]", "push imm", "push imm", "push ebp", "mov ebp [esp+imm]", "push ebp", "push ecx", "mov ecx func", "push func", "mov func ebx", "push edi", "call doProlog", "add esp imm"], "46033": ["mov ecx [esp+imm]", "xor ecx large imm", "jnz addr"], "46050": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "46064": ["cmp byte ptr [ebx+imm] imm", "setz dl", "mov ebp edx", "test func func", "jz short addr"], "46080": ["test dl dl", "jnz short addr"], "46084": ["lea edx [tok_0+imm]", "cmp edx imm", "ja short addr"], "46092": ["mov edx imm", "sub edx func", "mov func edx", "jmp short addr"], "46104": ["push eax", "mov edx esi", "push eax", "mov eax ebx", "push imm", "push offset func", "call accountingDiffTolerated", "add esp imm", "test al al", "jz short addr"], "46129": ["mov esi [esp+imm]", "mov eax [ebx+imm]", "push ebp", "push edi", "push func", "push eax", "call func - 2DF78h)[eax]", "add esp imm", "cmp byte ptr [ebx+imm] imm", "setz cl", "mov ebp ecx"], "46160": ["mov ecx [esp+imm]", "jmp addr"], "46176": ["mov func [esp+imm]", "mov func - 2DF78h)[eax] esi", "xor eax eax", "jmp addr"], "46192": ["mov eax [esp+imm]", "lea edx (aAborting - 2DF78h)[eax]", "mov eax ebx", "call accountingReportStats", "mov eax imm", "jmp addr"], "46219": ["call func"]}, "preds": [46033], "succs": []}, "internalEntityProcessor": {"disasm": {"46224": ["push ebp", "call func", "add eax (offset func - $)", "push edi", "push esi", "push ebx", "sub esp imm", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov ebp [ebx+imm]", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "test openEntity openEntity", "jz addr"], "46299": ["mov esi [openEntity+imm]", "mov edi [entity+imm]", "mov ecx [entity+imm]", "add ecx edi", "mov eax [entity+imm]", "add edi eax", "mov [esp+imm] func", "cmp byte ptr [entity+imm] imm", "mov eax [ebx+imm]", "jz addr"], "46335": ["lea edx [esp+imm]", "mov [esp+imm] edx", "push edx", "push textEnd", "push func", "mov [esp+imm] func", "push eax", "call func - 2DF78h)[eax]", "add esp imm", "mov edx [ebx+imm]", "push imm", "push imm", "push imm", "mov ecx [esp+imm]", "push ecx", "mov ecx [esp+imm]", "push ecx", "push func", "mov func ebx", "push textEnd", "mov ecx [esp+imm]", "call doProlog", "add esp imm"], "46394": ["test result result", "jnz addr"], "46402": ["mov ecx [esp+imm]", "mov edx ebx", "cmp ecx textEnd", "jz short addr"], "46412": ["cmp dword ptr [ebx+imm] imm", "jz addr"], "46425": ["lea entity [entity+imm]"], "46432": ["mov edi edx", "mov edx [edx+imm]", "test edx edx", "jnz short addr"], "46444": ["sub esp imm", "mov edx entity", "push imm", "mov result [esp+imm]", "lea ecx func - 2DF78h)[eax]", "mov eax edi", "call entityTrackingReportStats", "mov eax [edi+imm]", "dec eax", "add esp imm", "mov [edi+imm] eax", "mov byte ptr [entity+imm] imm", "mov eax [openEntity+imm]", "mov [ebx+imm] eax", "mov eax [ebx+imm]", "mov [openEntity+imm] eax", "mov [ebx+imm] openEntity", "cmp byte ptr [entity+imm] imm", "mov eax [esp+imm]", "jz addr"], "46529": ["mov edx [esp+imm]", "lea eax (prologProcessor - 2DF78h)[eax]", "mov [ebx+imm] eax", "mov eax [ebx+imm]", "push edx", "mov edi [esp+imm]", "push edi", "mov entity [esp+imm]", "push esi", "push eax", "call func - 2DF78h)[eax]", "add esp imm", "mov edx [ebx+imm]", "xor ecx ecx", "push imm", "push imm", "cmp byte ptr [ebx+imm] imm", "setz cl", "push ecx", "mov ecx [esp+imm]", "push ecx", "mov ecx esi", "mov openEntity [esp+imm]", "push ebp", "push func", "mov func ebx", "push edi", "call doProlog", "add esp imm"], "46615": ["mov esi [esp+imm]", "xor esi large imm", "jnz addr"], "46632": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "46640": ["mov edx [openEntity+imm]", "sub esp imm", "mov [esp+imm] edx", "push imm", "push imm", "lea edx [esp+imm]", "mov [esp+imm] edx", "push edx", "push textEnd", "push func", "mov func eax", "mov edx [esp+imm]", "mov eax ebx", "call doContent", "add esp imm", "jmp addr"], "46688": ["lea eax (contentProcessor - 2DF78h)[eax]", "xor edx edx", "mov [ebx+imm] eax", "mov eax [ebx+imm]", "test eax eax", "mov ecx [ebx+imm]", "setnz dl", "sub esp imm", "xor eax eax", "push imm", "cmp byte ptr [ebx+imm] imm", "setz al", "push eax", "mov eax ebx", "mov entity [esp+imm]", "push esi", "mov edi [esp+imm]", "push edi", "mov openEntity [esp+imm]", "push ebp", "call doContent", "add esp imm", "jmp addr"], "46768": ["mov edx [entity+imm]", "sub ecx edx", "mov [entity+imm] ecx", "jmp addr"], "46784": ["mov eax imm", "jmp addr"], "46794": ["call func"]}, "preds": [46615], "succs": []}, "startParsing": {"disasm": {"47296": ["push ebp", "mov ebp func", "push edi", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov esi [ebp+imm]", "mov func large imm", "mov [esp+imm] func", "xor func func", "test esi esi", "jz short addr"], "47338": ["cmp byte ptr [parser_0+imm] imm", "mov al imm", "jnz addr"], "47353": ["mov ecx [esp+imm]", "xor ecx large imm", "jnz addr"], "47370": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "47384": ["lea eax [esp+imm]", "xor edi edi", "mov [esp+imm] eax", "lea esi [esi+imm]"], "47400": ["push eax", "mov eax imm", "push imm", "sub eax edi", "push eax", "mov eax [esp+imm]", "add eax edi", "push eax", "call func", "add esp imm", "test eax eax", "jle short addr"], "47430": ["add edi eax", "cmp edi imm", "ja addr"], "47441": ["call func", "cmp dword ptr [eax] imm", "jz short addr"], "47451": ["mov [esp+imm] eax", "push eax", "push eax", "lea eax (aDevUrandom - 2DF78h)[ebx]", "push imm", "push eax", "call func", "add esp imm", "mov edi eax", "test eax eax", "js short addr"], "47480": ["mov edx [esp+imm]", "mov [esp+imm] func", "mov func edx", "lea esi [esi+imm]"], "47496": ["mov eax imm", "push ecx", "sub eax esi", "push eax", "mov eax [esp+imm]", "add eax esi", "push eax", "push edi", "call func", "add esp imm", "test eax eax", "jle short addr"], "47525": ["add esi eax", "cmp esi imm", "ja addr"], "47536": ["cmp dword ptr [ebp+imm] imm", "jz short addr"], "47542": ["mov ebp [esp+imm]", "sub esp imm", "push edi", "call func", "add esp imm"], "47558": ["push edx", "push edx", "push imm", "lea eax [esp+imm]", "push eax", "call func", "add esp imm", "test eax eax", "jnz addr"], "47583": ["mov esi [esp+imm]", "call func", "xor eax esi", "mov edx eax", "mov [esp+imm] eax", "shl edx imm", "sub edx eax", "lea eax (aFallback4 - 2DF78h)[ebx]", "call func"], "47616": ["mov [ebp+imm] eax", "mov al imm", "cmp byte ptr [ebp+imm] imm", "jz addr"], "47637": ["lea edx (implicitContext - 2DF78h)[ebx]", "mov eax ebp", "call setContext", "jmp addr"], "47656": ["mov edx [esp+imm]", "lea eax func - 2DF78h)[ebx]", "call func", "jmp short addr"], "47680": ["mov ebp [esp+imm]", "sub esp imm", "push edi", "call func", "add esp imm", "lea eax (aDevUrandom - 2DF78h)[ebx]", "mov edx [esp+imm]", "call func", "jmp short addr"], "47713": ["call func"], "47718": ["lea eax func - 2DF78h)[ebx]", "push eax", "lea eax (aGitExpatLibXml - 2DF78h)[ebx]", "push 34Fh", "push eax", "lea eax (aGettimeofdayRe - 2DF78h)[ebx]", "push eax", "call func"]}, "preds": [47558], "succs": []}, "getDebugLevel": {"disasm": {"47760": ["push edi", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov ecx large imm", "mov [esp+imm] ecx", "xor ecx ecx", "push variableName", "call func", "add esp imm", "test valueOrNull valueOrNull", "jz short addr"], "47803": ["mov esi valueOrNull", "call func", "mov [esp+imm] value", "mov edi eax", "mov dword ptr [eax] imm", "push eax", "push imm", "lea eax [esp+imm]", "push eax", "push value", "call func", "mov edx [edi]", "add esp imm", "test edx edx", "jnz short addr"], "47845": ["mov edx [esp+imm]", "cmp byte ptr [edx] imm", "jnz short addr"], "47854": ["mov edx [esp+imm]", "xor edx large imm", "jnz short addr"], "47867": ["add esp imm", "pop ebx", "pop esi", "pop edi", "retn"], "47880": ["mov dword ptr [edi] imm", "xor debugLevel debugLevel", "jmp short addr"], "47896": ["xor valueOrNull valueOrNull", "jmp short addr"], "47900": ["call func"]}, "preds": [47854], "succs": []}, "parserInit": {"disasm": {"47920": ["push ebp", "mov ebp esp", "push edi", "push esi", "mov esi parser", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "lea parser (prologInitProcessor - 2DF78h)[ebx]", "mov [parser+imm] eax", "lea eax [parser+imm]", "mov edi encodingName", "push eax", "call XmlPrologStateInit", "add esp imm", "test encodingName encodingName", "jz short addr"], "47975": ["lea edx [parser+imm]", "mov eax encodingName", "call copyString", "mov [parser+imm] eax"], "47991": ["push eax", "lea eax [parser+imm]", "push imm", "mov dword ptr [parser+imm] imm", "push eax", "lea eax [parser+imm]", "push eax", "call XmlInitEncoding", "mov eax [parser+imm]", "mov dword ptr [parser] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov [parser+imm] parser", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov [parser+imm] eax", "mov [parser+imm] eax", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "lea encodingName [parser+imm]", "mov dword ptr [parser+imm] imm", "mov edx imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov byte ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov word ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov word ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "test parser imm", "jnz addr"], "48539": ["test edi imm", "jnz addr"], "48551": ["mov ecx edx", "xor eax eax", "shr ecx imm", "rep stosd", "test dl imm", "jz short addr"], "48565": ["mov word ptr [edi] imm", "add edi imm"], "48573": ["and edx imm", "jz short addr"], "48578": ["mov byte ptr [edi] imm"], "48581": ["lea eax func - 2DF78h)[ebx]", "call getDebugLevel", "mov dword ptr [parser+imm] imm", "mov [parser+imm] eax", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "lea eax (aExpatEntityDeb - 2DF78h)[ebx]", "call getDebugLevel", "add esp imm", "mov [parser+imm] eax", "lea esp [ebp-imm]", "pop ebx", "pop parser", "pop edi", "pop ebp", "retn"], "48696": ["lea edi [parser+imm]", "mov byte ptr [parser+imm] imm", "mov edx imm", "test edi imm", "jz addr"], "48726": ["xchg ax ax"], "48728": ["mov word ptr [edi] imm", "sub edx imm", "add edi imm", "jmp addr"]}, "preds": [48539, 48726], "succs": [48551]}, "XML_ParserReset": {"disasm": {"48752": ["push ebp", "xor eax eax", "push edi", "push esi", "push ebx", "sub esp imm", "mov edi [esp+imm]", "test edi edi", "jz short addr"], "48769": ["mov ebx [edi+imm]", "test ebx ebx", "jz short addr"], "48779": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "48792": ["mov ebx [edi+imm]", "test tStk tStk", "jz short addr"], "48802": ["mov eax [edi+imm]"], "48808": ["mov esi [tag]", "mov [tag] eax", "mov eax [tag+imm]", "test eax eax", "jz short addr"], "48819": ["mov ecx [edi+imm]", "jmp short addr"], "48832": ["mov eax edx"], "48834": ["mov edx [eax+imm]", "mov [eax+imm] ecx", "test edx edx", "mov [edi+imm] eax", "mov ecx eax", "jnz short addr"], "48852": ["mov dword ptr [tag+imm] imm", "mov eax tag", "mov [edi+imm] tag", "test tStk tStk", "jz short addr"], "48871": ["mov ebx tStk", "jmp short addr"], "48880": ["mov eax [edi+imm]", "test openEntityList openEntityList", "jz short addr"], "48890": ["mov ecx [edi+imm]", "jmp short addr"], "48904": ["mov openEntity openEntityList"], "48906": ["mov edx [openEntity+imm]", "mov [openEntity+imm] ecx", "test openEntityList openEntityList", "mov [edi+imm] openEntity", "mov ecx openEntity", "jnz short addr"], "48924": ["mov eax [edi+imm]", "test eax eax", "jz short addr"], "48934": ["mov ecx [edi+imm]", "jmp short addr"], "48944": ["mov eax edx"], "48946": ["mov edx [eax+imm]", "mov [eax+imm] ecx", "test edx edx", "mov [edi+imm] eax", "mov ecx eax", "jnz short addr"], "48964": ["sub esp imm", "mov ecx [edi+imm]", "push ecx", "call dword ptr [edi+imm]", "mov eax [edi+imm]", "add esp imm", "test eax eax", "jz short addr"], "48990": ["sub esp imm", "mov edx [edi+imm]", "push edx", "call eax", "add esp imm"], "49005": ["mov ecx [edi+imm]", "mov eax [edi+imm]", "test ecx ecx", "jz addr"], "49025": ["test eax eax", "jnz short addr"], "49029": ["jmp short addr"], "49032": ["mov eax edx"], "49034": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [edi+imm] eax", "mov ecx eax", "jnz short addr"], "49050": ["mov ecx [edi+imm]", "mov dword ptr [edi+imm] imm", "mov dword ptr [edi+imm] imm", "mov dword ptr [edi+imm] imm", "mov dword ptr [edi+imm] imm", "mov eax [edi+imm]", "test ecx ecx", "jz addr"], "49110": ["test eax eax", "jnz short addr"], "49114": ["jmp short addr"], "49120": ["mov eax edx"], "49122": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [edi+imm] eax", "mov ecx eax", "jnz short addr"], "49138": ["sub esp imm", "mov eax [edi+imm]", "mov dword ptr [edi+imm] imm", "mov dword ptr [edi+imm] imm", "mov dword ptr [edi+imm] imm", "mov dword ptr [edi+imm] imm", "push eax", "call dword ptr [edi+imm]", "add esp imm", "mov eax edi", "mov dword ptr [edi+imm] imm", "mov edx [esp+imm]", "call parserInit", "mov esi [edi+imm]", "mov ebx [esi+imm]", "mov eax [esi+imm]", "lea ebp [ebx+imm]", "jmp short addr"], "49232": ["mov eax [ebx]", "add ebx imm", "test eax eax", "jnz addr"], "49245": ["cmp ebp ebx", "jnz short addr"], "49249": ["mov ebp [esi+imm]", "xor ebx ebx", "test ebp ebp", "jz short addr"], "49258": ["lea ebp ds:0[ebx*4]", "mov edx [esi]", "sub esp imm", "mov eax [esi+imm]", "mov edx [edx+imm]", "inc ebx", "push edx", "call dword ptr [eax+imm]", "mov eax [esi]", "add esp imm", "mov dword ptr [eax+imm] imm", "cmp ebx [esi+imm]", "jb short addr"], "49298": ["mov ecx [esi+imm]", "xor ebx ebx", "mov dword ptr [esi+imm] imm", "mov byte ptr [esi+imm] imm", "test ecx ecx", "jz short addr"], "49324": ["lea esi [esi+imm]"], "49328": ["lea ebp ds:0[ebx*4]", "mov edx [esi+imm]", "sub esp imm", "mov eax [esi+imm]", "mov edx [edx+imm]", "inc ebx", "push edx", "call dword ptr [eax+imm]", "mov eax [esi+imm]", "add esp imm", "mov dword ptr [eax+imm] imm", "cmp ebx [esi+imm]", "jb short addr"], "49382": ["mov ecx [esi+imm]", "xor ebx ebx", "mov dword ptr [esi+imm] imm", "test ecx ecx", "jz short addr"], "49401": ["lea esi [esi+imm]"], "49408": ["lea ebp ds:0[ebx*4]", "mov edx [esi+imm]", "sub esp imm", "mov eax [esi+imm]", "mov edx [edx+imm]", "inc ebx", "push edx", "call dword ptr [eax+imm]", "mov eax [esi+imm]", "add esp imm", "mov dword ptr [eax+imm] imm", "cmp ebx [esi+imm]", "jb short addr"], "49450": ["mov ecx [esi+imm]", "xor ebx ebx", "mov dword ptr [esi+imm] imm", "test ecx ecx", "jz short addr"], "49466": ["lea esi [esi+imm]"], "49472": ["lea ebp ds:0[ebx*4]", "mov edx [esi+imm]", "sub esp imm", "mov eax [esi+imm]", "mov ecx [edx+imm]", "inc ebx", "push ecx", "call dword ptr [eax+imm]", "mov eax [esi+imm]", "add esp imm", "mov dword ptr [eax+imm] imm", "cmp ebx [esi+imm]", "jb short addr"], "49514": ["mov ebp [esi+imm]", "xor ebx ebx", "mov dword ptr [esi+imm] imm", "test ebp ebp", "jz short addr"], "49530": ["lea esi [esi+imm]"], "49536": ["lea ebp ds:0[ebx*4]", "mov edx [esi+imm]", "sub esp imm", "mov eax [esi+imm]", "mov edx [edx+imm]", "inc ebx", "push edx", "call dword ptr [eax+imm]", "mov eax [esi+imm]", "add esp imm", "mov dword ptr [eax+imm] imm", "cmp ebx [esi+imm]", "jb short addr"], "49578": ["mov ecx [esi+imm]", "mov dword ptr [esi+imm] imm", "mov eax [esi+imm]", "test ecx ecx", "jz addr"], "49599": ["test eax eax", "jnz short addr"], "49603": ["jmp short addr"], "49608": ["mov eax edx"], "49610": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [esi+imm] eax", "mov ecx eax", "jnz short addr"], "49623": ["mov ecx [esi+imm]", "mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "mov eax [esi+imm]", "test ecx ecx", "jz addr"], "49665": ["test eax eax", "jnz short addr"], "49669": ["jmp short addr"], "49672": ["mov eax edx"], "49674": ["mov edx [eax]", "mov [eax] ecx", "test edx edx", "mov [esi+imm] eax", "mov ecx eax", "jnz short addr"], "49687": ["sub esp imm", "mov eax [esi+imm]", "mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "mov byte ptr [esi+imm] imm", "push eax", "call dword ptr [edi+imm]", "mov dword ptr [esi+imm] imm", "pop edx", "mov ecx [esi+imm]", "push ecx", "call dword ptr [edi+imm]", "add esp imm", "mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "mov word ptr [esi+imm] imm", "mov byte ptr [esi+imm] imm", "add esp imm", "mov al imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "49856": ["mov edx [eax+imm]", "test edx edx", "jz addr"], "49867": ["sub esp imm", "mov ecx [eax+imm]", "push ecx", "call dword ptr [edi+imm]", "add esp imm", "jmp addr"], "49885": ["mov [edi+imm] eax", "jmp addr"], "49896": ["mov [esi+imm] eax", "jmp addr"], "49904": ["mov [esi+imm] eax", "jmp addr"], "49912": ["mov [edi+imm] eax", "jmp addr"]}, "preds": [49050], "succs": [49138]}, "XML_SetEncoding": {"disasm": {"49936": ["push ebx", "sub esp imm", "mov ebx [esp+imm]", "test ebx ebx", "jz short addr"], "49948": ["mov eax [ebx+imm]", "and eax imm", "dec eax", "jz short addr"], "49960": ["sub esp imm", "mov eax [ebx+imm]", "push eax", "call dword ptr [ebx+imm]", "mov eax [esp+imm]", "add esp imm", "test eax eax", "jz short addr"], "49984": ["lea edx [ebx+imm]", "mov eax [esp+imm]", "call copyString", "mov [ebx+imm] eax", "test eax eax", "setnz al", "add esp imm", "and eax 0FFh", "pop ebx", "retn"], "50024": ["mov dword ptr [ebx+imm] imm", "add esp imm", "mov eax imm", "pop ebx", "retn"], "50048": ["add esp imm", "xor eax eax", "pop ebx", "retn"]}, "preds": [49936, 49948], "succs": []}, "XML_ParserFree": {"disasm": {"50064": ["push ebp", "push edi", "push esi", "push ebx", "sub esp imm", "mov esi [esp+imm]", "test esi esi", "jz addr"], "50083": ["mov edi [esi+imm]", "test tagList tagList", "jz short addr"], "50093": ["lea esi [esi+imm]"], "50096": ["mov eax [p]", "sub esp imm", "mov ebx [p+imm]", "mov [esp+imm] eax", "push ebx", "call dword ptr [esi+imm]", "mov ebx [p+imm]", "add esp imm", "test ebx ebx", "jz short addr"], "50122": ["lea esi [esi+imm]"], "50128": ["mov ebp ebx", "sub esp imm", "mov ebx [ebx+imm]", "mov ecx [ebp+imm]", "push ecx", "call dword ptr [esi+imm]", "mov [esp+imm] ebp", "call dword ptr [esi+imm]", "add esp imm", "test ebx ebx", "jnz short addr"], "50156": ["sub esp imm", "push p", "call dword ptr [esi+imm]", "mov p [esp+imm]", "add esp imm", "test tagList tagList", "jnz short addr"], "50174": ["mov tagList [esi+imm]", "test edi edi", "jz short addr"], "50184": ["mov dword ptr [esi+imm] imm", "jmp short addr"], "50196": ["mov eax [esi+imm]", "jmp short addr"], "50208": ["sub esp imm", "mov ebx [openEntity+imm]", "push openEntity", "call dword ptr [esi+imm]", "add esp imm", "mov eax entityList"], "50223": ["test entityList entityList", "jnz short addr"], "50227": ["mov entityList [esi+imm]", "test eax eax", "jz short addr"], "50237": ["mov dword ptr [esi+imm] imm", "jmp short addr"], "50249": ["mov ebx [esi+imm]", "test ebx ebx", "jz short addr"], "50259": ["lea esi [esi+imm]", "nop"], "50264": ["mov edi ebx", "sub esp imm", "mov ebx [ebx+imm]", "mov edx [edi+imm]", "push edx", "call dword ptr [esi+imm]", "mov [esp+imm] edi", "call dword ptr [esi+imm]", "add esp imm", "test ebx ebx", "jnz short addr"], "50292": ["mov ebx [esi+imm]", "test ebx ebx", "jz short addr"], "50302": ["xchg ax ax"], "50304": ["mov edi ebx", "sub esp imm", "mov ebx [ebx+imm]", "mov eax [edi+imm]", "push eax", "call dword ptr [esi+imm]", "mov [esp+imm] edi", "call dword ptr [esi+imm]", "add esp imm", "test ebx ebx", "jnz short addr"], "50332": ["lea eax [esi+imm]", "call poolDestroy", "lea eax [esi+imm]", "call poolDestroy", "sub esp imm", "mov eax [esi+imm]", "push eax", "call dword ptr [esi+imm]", "add esp imm", "cmp byte ptr [esi+imm] imm", "jnz addr"], "50383": ["mov edi [esi+imm]", "test edi edi", "jz addr"], "50397": ["mov eax [esi+imm]", "mov ebx [edi+imm]", "mov [esp+imm] eax", "mov eax [edi+imm]", "lea ebp [ebx+imm]", "jmp short addr"], "50424": ["mov eax [ebx]", "add ebx imm", "test eax eax", "jnz addr"], "50437": ["cmp ebp ebx", "jnz short addr"], "50441": ["mov eax edi", "call hashTableDestroy", "lea eax [edi+imm]", "call hashTableDestroy", "lea eax [edi+imm]", "call hashTableDestroy", "lea eax [edi+imm]", "call hashTableDestroy", "lea eax [edi+imm]", "call hashTableDestroy", "lea eax [edi+imm]", "call poolDestroy", "lea eax [edi+imm]", "call poolDestroy", "mov eax [esp+imm]", "test eax eax", "jnz short addr"], "50507": ["sub esp imm", "mov ebp [edi+imm]", "push ebp", "call dword ptr [esi+imm]", "pop eax", "mov eax [edi+imm]", "push eax", "call dword ptr [esi+imm]", "add esp imm"], "50534": ["sub esp imm", "push edi", "call dword ptr [esi+imm]", "add esp imm"], "50544": ["sub esp imm", "mov ebx [esi+imm]", "push ebx", "call dword ptr [esi+imm]", "pop edi", "mov ebp [esi+imm]", "push ebp", "call dword ptr [esi+imm]", "pop eax", "mov eax [esi+imm]", "push eax", "call dword ptr [esi+imm]", "pop eax", "mov eax [esi+imm]", "push eax", "call dword ptr [esi+imm]", "pop eax", "mov edx [esi+imm]", "push edx", "call dword ptr [esi+imm]", "pop ecx", "mov ebx [esi+imm]", "push ebx", "call dword ptr [esi+imm]", "mov eax [esi+imm]", "add esp imm", "test eax eax", "jz short addr"], "50619": ["sub esp imm", "mov ecx [esi+imm]", "push ecx", "call eax", "add esp imm"], "50634": ["mov [esp+imm] esi", "mov eax [esi+imm]", "add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "jmp eax"], "50650": ["mov edx [eax+imm]", "test edx edx", "jz addr"], "50661": ["sub esp imm", "mov eax [eax+imm]", "push eax", "call dword ptr [esi+imm]", "add esp imm", "jmp addr"], "50679": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"]}, "preds": [50064], "succs": []}, "parserCreate": {"disasm": {"50688": ["push ebp", "push edi", "mov edi nameSep", "push esi", "mov esi encodingName", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "test func func", "jz addr"], "50718": ["sub esp imm", "push 220h", "mov [esp+imm] func", "call dword ptr func", "add esp imm", "mov ebp eax", "test parser parser", "mov edx [esp+imm]", "jz addr"], "50749": ["mov parser [edx]", "mov [parser+imm] eax", "mov ecx [edx+imm]", "mov [parser+imm] ecx", "mov edx [edx+imm]", "mov [parser+imm] edx"], "50766": ["sub esp imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "push 100h", "call eax", "add esp imm", "mov [parser+imm] eax", "test eax eax", "jz addr"], "50817": ["sub esp imm", "push 400h", "call dword ptr [parser+imm]", "add esp imm", "mov [parser+imm] eax", "test eax eax", "jz addr"], "50842": ["add eax 400h", "lea edx [parser+imm]", "mov [parser+imm] eax", "mov eax [esp+imm]", "test eax eax", "jz addr"], "50865": ["mov eax [esp+imm]", "mov [parser+imm] eax"], "50875": ["mov [parser+imm] edx", "mov [parser+imm] edx", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov byte ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov byte ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov word ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov dword ptr [parser+imm] imm", "mov edx encodingName", "mov eax parser", "call parserInit", "test encodingName encodingName", "jz short addr"], "51120": ["mov encodingName [parser+imm]", "test esi esi", "jz addr"], "51134": ["test nameSep nameSep", "jz short addr"], "51138": ["mov byte ptr [parser+imm] imm", "call XmlGetUtf8InternalEncodingNS", "mov [parser+imm] eax", "mov al [nameSep]", "mov [parser+imm] al"], "51164": ["add esp imm", "mov eax ebp", "pop ebx", "pop esi", "pop nameSep", "pop ebp", "retn"], "51176": ["sub esp imm", "push parser", "call dword ptr [parser+imm]", "add esp imm"], "51186": ["add esp imm", "xor parser parser", "mov eax ebp", "pop ebx", "pop encodingName", "pop nameSep", "pop ebp", "retn"], "51200": ["call XmlGetUtf8InternalEncoding", "mov [parser+imm] eax", "add esp imm", "mov eax ebp", "pop ebx", "pop esi", "pop nameSep", "pop ebp", "retn"], "51224": ["sub esp imm", "push 220h", "call func", "add esp imm", "mov ebp eax", "test parser parser", "jz short addr"], "51246": ["mov edx func - 2DF78h)[ebx]", "mov parser func - 2DF78h)[ebx]", "mov [parser+imm] edx", "mov edx func - 2DF78h)[ebx]", "mov [parser+imm] eax", "mov [parser+imm] edx", "jmp addr"], "51280": ["mov [esp+imm] edx", "sub esp imm", "push 0BCh", "call dword ptr [parser+imm]", "add esp imm", "test eax eax", "jz addr"], "51306": ["mov edx [esp+imm]", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov [eax+imm] edx", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov [eax+imm] edx", "mov byte ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax] imm", "mov [eax+imm] edx", "mov byte ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov [eax+imm] edx", "mov byte ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov [eax+imm] edx", "mov byte ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov [eax+imm] edx", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov [eax+imm] edx", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov byte ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov dword ptr [eax+imm] imm", "mov byte ptr [eax+imm] imm", "mov [parser+imm] eax", "jmp addr"], "51648": ["sub esp imm"], "51651": ["mov eax [parser+imm]", "push eax", "call dword ptr [parser+imm]", "mov [esp+imm] parser", "call dword ptr [parser+imm]", "add esp imm", "xor parser parser", "jmp addr"], "51680": ["sub esp imm", "push parser", "xor parser parser", "call func", "add esp imm", "jmp addr"], "51704": ["sub esp imm", "mov edx [parser+imm]", "mov dword ptr [parser+imm] imm", "push edx", "call dword ptr [parser+imm]", "pop ecx", "jmp short addr"]}, "preds": [51280], "succs": [51651]}, "XML_ExternalEntityParserCreate": {"disasm": {"51904": ["push ebp", "call func", "add eax (offset func - $)", "push edi", "push esi", "push ebx", "sub esp imm", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov edi [esp+imm]", "mov ebx large imm", "mov [esp+imm] ebx", "xor ebx ebx", "mov eax [esp+imm]", "test func func", "jz addr"], "51977": ["mov esi [parser_0+imm]", "mov edx [parser_0+imm]", "mov [esp+imm] esi", "mov func [parser_0+imm]", "mov [esp+imm] edx", "mov [esp+imm] esi", "mov func [parser_0+imm]", "mov func [parser_0+imm]", "mov [esp+imm] edx", "mov [esp+imm] esi", "mov func [parser_0+imm]", "mov func [parser_0+imm]", "mov [esp+imm] edx", "mov [esp+imm] esi", "mov func [parser_0+imm]", "mov func [parser_0+imm]", "mov [esp+imm] edx", "mov [esp+imm] esi", "mov func [parser_0+imm]", "mov func [parser_0+imm]", "mov [esp+imm] edx", "mov [esp+imm] esi", "mov func [parser_0+imm]", "mov func [parser_0+imm]", "mov [esp+imm] edx", "mov [esp+imm] esi", "mov func [parser_0+imm]", "mov func [parser_0+imm]", "mov ecx [parser_0+imm]", "mov [esp+imm] edx", "mov [esp+imm] esi", "mov [esp+imm] ecx", "mov func [parser_0+imm]", "mov func [parser_0+imm]", "mov [esp+imm] ecx", "mov func [parser_0+imm]", "mov [esp+imm] edx", "mov [esp+imm] ecx", "mov func [parser_0+imm]", "mov cl [parser_0+imm]", "mov [esp+imm] edx", "mov [esp+imm] cl", "mov edx [parser_0+imm]", "mov ecx [parser_0+imm]", "mov func [parser_0+imm]", "mov [esp+imm] ecx", "mov [esp+imm] edx", "mov ecx [parser_0+imm]", "mov edx [parser_0+imm]", "mov [esp+imm] esi", "mov [esp+imm] ecx", "mov func [parser_0+imm]", "mov cl [parser_0+imm]", "mov [esp+imm] edx", "mov edx [esp+imm]", "mov [esp+imm] esi", "xor ebp ebp", "mov func func", "mov ebx [parser_0+imm]", "mov [esp+imm] cl", "test edx edx", "jz addr"], "52225": ["cmp byte ptr [parser_0+imm] imm", "lea edx [parser_0+imm]", "jnz addr"], "52241": ["sub esp imm", "xor func func", "push newDtd", "call parserCreate", "add esp imm", "mov newDtd eax"], "52257": ["test ebp ebp", "jz addr"], "52265": ["mov func [esp+imm]", "cmp oldUserData oldHandlerArg", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov [parser_0+imm] oldUserData", "jz short addr"], "52434": ["mov oldHandlerArg func"], "52436": ["mov eax [esp+imm]", "mov [parser_0+imm] ebx", "cmp edi eax", "jz short addr"], "52447": ["mov [parser_0+imm] eax"], "52450": ["mov al [esp+imm]", "mov ecx [esp+imm]", "mov [parser_0+imm] al", "mov al [esp+imm]", "mov [parser_0+imm] al", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] eax", "mov eax [esp+imm]", "mov [parser_0+imm] edi", "mov [parser_0+imm] eax", "test ecx ecx", "jz addr"], "52518": ["mov eax [esp+imm]", "mov oldUserData [parser_0+imm]", "mov [esp+imm] esi", "mov ebx [eax+imm]", "mov eax [eax+imm]", "lea eax [ebx+imm]", "mov [esp+imm] eax", "lea eax [esi+imm]", "mov [esp+imm] eax", "add esi imm", "jmp short addr"], "52560": ["mov eax [ebx]", "add ebx imm", "test eax eax", "jnz addr"], "52573": ["cmp [esp+imm] ebx", "jnz short addr"], "52579": ["mov ebx [esp+imm]", "mov esi [ebx+imm]", "mov eax [ebx+imm]", "mov [esp+imm] esi", "lea eax [esi+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "add eax imm", "mov [esp+imm] eax", "lea eax [ebx+imm]", "mov [esp+imm] eax", "jmp short addr"], "52624": ["mov edx [esp+imm]", "add edx imm", "mov [esp+imm] edx", "mov eax [esp+imm]", "mov esi [eax-imm]", "test esi esi", "jnz addr"], "52650": ["mov esi [esp+imm]", "cmp [esp+imm] esi", "jnz short addr"], "52660": ["mov eax [esp+imm]", "mov [esp+imm] func", "mov [esp+imm] edi", "mov esi [eax+imm]", "mov eax [eax+imm]", "mov [esp+imm] esi", "lea eax [esi+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "lea edx [eax+imm]", "add eax imm", "mov [esp+imm] edx", "mov [esp+imm] eax", "jmp short addr"], "52712": ["mov eax [esp+imm]", "add eax imm", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov ebp [eax-imm]", "test ebp ebp", "jnz addr"], "52738": ["mov edx [esp+imm]", "cmp [esp+imm] edx", "jnz short addr"], "52748": ["mov edi [esp+imm]", "mov ebp [esp+imm]", "push eax", "push eax", "mov eax [esp+imm]", "mov edx [eax+imm]", "push edx", "mov ecx func - 2DF78h)[eax]", "mov eax edi", "push ecx", "mov ecx [esp+imm]", "mov edx [esp+imm]", "call copyEntityTable", "add esp imm", "test eax eax", "jnz addr"], "52795": ["lea esi [esi+imm]", "nop"], "52800": ["sub esp imm", "push ebp", "mov ebx [esp+imm]", "call func", "add esp imm"], "52816": ["xor ebp ebp"], "52818": ["mov eax [esp+imm]", "xor eax large imm", "jnz addr"], "52838": ["add esp imm", "mov eax ebp", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "52856": ["mov cl [parser_0+imm]", "mov [esp+imm] imm", "mov [esp+imm] cl", "lea ecx [esp+imm]", "sub esp imm", "push newDtd", "call parserCreate", "add esp imm", "mov newDtd eax", "jmp addr"], "52904": ["mov edx func - 2DF78h)[eax]", "mov eax [esp+imm]", "call poolCopyString", "mov ecx eax", "test eax eax", "jz short addr"], "52921": ["sub esp imm", "mov edx esi", "mov eax edi", "push imm", "call lookup", "add esp imm", "test eax eax", "jnz addr"], "52946": ["sub esp imm", "push func", "mov ebx [esp+imm]", "call func", "add esp imm", "jmp addr"], "52968": ["mov edx [esp+imm]", "mov eax [edx+imm]", "cmp eax [edx+imm]", "jz addr"], "52984": ["mov ecx [esp+imm]", "lea edx [eax+imm]", "mov [ecx+imm] edx", "mov byte ptr func - 2DF78h)[eax] imm", "mov edx [esi]", "mov eax [esp+imm]", "call poolCopyString", "test eax eax", "jz addr"], "53016": ["sub esp imm", "lea ecx [eax+imm]", "mov eax edi", "push imm", "mov edx [esp+imm]", "call lookup", "add esp imm", "mov ebx eax", "test eax eax", "jz addr"], "53048": ["mov al [esi+imm]", "mov [ebx+imm] al", "mov eax [esi+imm]", "test eax eax", "jz addr"], "53065": ["mov al [esi+imm]", "mov [ebx+imm] al", "mov eax [esi+imm]", "cmp eax [esp+imm]", "jz short addr"], "53080": ["mov esi [esp+imm]", "sub esp imm", "push imm", "lea edx [esi+imm]", "mov ecx func - 2DF78h)[eax]", "mov eax edi", "call lookup", "add esp imm", "mov [ebx+imm] eax", "jmp addr"], "53112": ["mov ecx [esp+imm]", "lea eax [ecx+imm]", "mov [ebx+imm] eax", "jmp addr"], "53136": ["mov eax [esp+imm]", "call poolGrow", "test al al", "jz addr"], "53153": ["mov eax [esp+imm]", "mov eax [eax+imm]", "jmp addr"], "53168": ["mov ebp [esp+imm]", "jmp addr"], "53184": ["sub esp imm", "lea eax [parser_0+imm]", "mov byte ptr [parser_0+imm] imm", "push eax", "mov ebx [esp+imm]", "call XmlPrologStateInitExternalEntity", "add esp imm", "lea eax [ebx-imm]", "mov [parser_0+imm] eax", "jmp addr"], "53232": ["mov edx [ebp+imm]", "mov eax [esp+imm]", "call poolCopyString", "mov ecx eax", "test eax eax", "jz addr"], "53254": ["sub esp imm", "push imm", "mov edx [esp+imm]", "mov eax [esp+imm]", "call lookup", "add esp imm", "mov esi eax", "test eax eax", "jz addr"], "53285": ["mov eax [ebp+imm]", "test eax eax", "jz short addr"], "53292": ["sub esp imm", "lea eax [eax+imm]", "shl eax imm", "push eax", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "mov [esi+imm] eax", "test eax eax", "jz addr"], "53323": ["mov eax [ebp+imm]", "test eax eax", "jz short addr"], "53330": ["sub esp imm", "push imm", "mov ecx func - 2DF78h)[eax]", "mov edx [esp+imm]", "mov eax [esp+imm]", "call lookup", "add esp imm", "mov [esi+imm] eax"], "53356": ["mov eax [ebp+imm]", "mov [esi+imm] eax", "mov [esi+imm] eax", "mov edx [ebp+imm]", "test edx edx", "jz short addr"], "53372": ["mov eax [esp+imm]", "sub esp imm", "add eax imm", "push imm", "mov ecx [edx]", "mov edx eax", "mov eax [esp+imm]", "call lookup", "add esp imm", "mov [esi+imm] eax", "mov eax [esi+imm]"], "53406": ["test eax eax", "jle addr"], "53414": ["xor edi edi", "jmp short addr"], "53424": ["mov eax [esi+imm]", "add eax ebx", "mov [esp+imm] eax", "mov eax [esp+imm]", "call poolCopyString", "mov edx [esp+imm]", "mov [edx+imm] eax", "mov eax [esi+imm]", "mov eax [eax+imm]", "test eax eax", "jz short addr"], "53460": ["inc edi", "cmp edi [esi+imm]", "jge addr"], "53470": ["lea ebx [edi+imm]", "mov eax [esi+imm]", "shl ebx imm", "sub esp imm", "add eax ebx", "mov [esp+imm] eax", "mov eax [ebp+imm]", "mov eax func - 2DF78h)[eax+imm]", "push imm", "mov edx [esp+imm]", "mov ecx func - 2DF78h)[eax]", "mov eax [esp+imm]", "call lookup", "mov edx [esp+imm]", "add esp imm", "mov [edx] eax", "mov eax [ebp+imm]", "mov dl [eax+imm]", "mov eax [esi+imm]", "mov [eax+imm] dl", "mov eax [ebp+imm]", "mov edx [eax+imm]", "test edx edx", "jnz short addr"], "53545": ["mov eax [esi+imm]", "mov dword ptr [eax+imm] imm", "jmp short addr"], "53560": ["mov ebp [esp+imm]", "jmp addr"], "53576": ["mov ebx [esp+imm]", "push esi", "push esi", "mov esi [esp+imm]", "lea edx [ebx+imm]", "mov eax [esi+imm]", "push eax", "mov eax [esi+imm]", "push eax", "mov eax edi", "mov ecx [esp+imm]", "call copyEntityTable", "add esp imm", "test eax eax", "jz addr"], "53628": ["mov al [esi+imm]", "mov edx [esp+imm]", "mov [ebx+imm] al", "mov al [esi+imm]", "mov [ebx+imm] al", "mov al [esi+imm]", "mov [ebx+imm] al", "mov al [esi+imm]", "mov [ebx+imm] al", "mov al [esi+imm]", "mov [ebx+imm] al", "mov byte ptr [esp+imm] al", "mov eax [esi+imm]", "mov [ebx+imm] eax", "mov eax [esi+imm]", "mov [ebx+imm] eax", "mov eax [esi+imm]", "mov [ebx+imm] eax", "mov eax [esi+imm]", "mov [ebx+imm] eax", "mov eax [esi+imm]", "mov [ebx+imm] eax", "mov eax ebp", "call setContext", "test al al", "jz addr"], "53771": ["mov eax [esp+imm]", "lea eax (externalEntityInitProcessor - 2DF78h)[eax]", "mov [ebp+imm] eax", "jmp addr"], "53792": ["call func"]}, "preds": [52818], "succs": []}, "XML_SetBase": {"disasm": {"53968": ["push ebx", "sub esp imm", "mov ebx [esp+imm]", "mov edx [esp+imm]", "test ebx ebx", "jz short addr"], "53984": ["test edx edx", "jz short addr"], "53988": ["mov eax [ebx+imm]", "add eax imm", "call poolCopyString", "test func func", "jz short addr"], "54006": ["mov [ebx+imm] func", "add esp imm", "mov func imm", "pop ebx", "retn"], "54024": ["mov dword ptr [ebx+imm] imm", "add esp imm", "mov eax imm", "pop ebx", "retn"], "54048": ["add esp imm", "xor eax eax", "pop ebx", "retn"]}, "preds": [53968, 53988], "succs": []}, "XML_SetHashSalt": {"disasm": {"54848": ["mov eax [esp+imm]", "jmp short addr"], "54856": ["mov edx [eax+imm]", "test edx edx", "jz short addr"], "54866": ["mov eax edx"], "54868": ["test eax eax", "jnz short addr"], "54872": ["xor eax eax", "retn"], "54880": ["mov edx [eax+imm]", "and edx imm", "dec edx", "jz short addr"], "54892": ["mov edx [esp+imm]", "mov [eax+imm] edx", "mov eax imm", "retn"]}, "preds": [54880], "succs": []}, "XML_ParseBuffer": {"disasm": {"54912": ["push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "mov ebx [esp+imm]", "test ebx ebx", "jz addr"], "54938": ["mov esi [ebx+imm]", "cmp esi imm", "jz addr"], "54953": ["cmp esi imm", "jz addr"], "54962": ["test esi esi", "jz addr"], "54970": ["mov ecx [esp+imm]", "mov eax [ebx+imm]", "mov esi [ebx+imm]", "add eax ecx", "mov ecx [esp+imm]", "mov edx [ebx+imm]", "add esi ecx", "mov cl byte ptr [esp+imm]", "mov [ebx+imm] cl", "lea ecx [ebx+imm]", "mov dword ptr [ebx+imm] imm", "mov [ebx+imm] edx", "mov [ebx+imm] eax", "mov [ebx+imm] eax", "mov [ebx+imm] esi", "push ecx", "push eax", "push edx", "push ebx", "call dword ptr [ebx+imm]", "add esp imm", "mov [ebx+imm] eax", "test eax eax", "jnz addr"], "55056": ["mov eax [ebx+imm]", "cmp eax imm", "jbe addr"], "55071": ["cmp eax imm", "setz al", "and eax 0FFh", "mov esi eax", "inc esi"], "55085": ["lea edx [ebx+imm]", "mov eax [ebx+imm]", "push edx", "mov edx [ebx+imm]", "push edx", "mov ecx [ebx+imm]", "push ecx", "push eax", "call dword ptr [eax+imm]", "mov eax [ebx+imm]", "add esp imm", "mov [ebx+imm] eax"], "55125": ["pop ebx", "mov eax esi", "pop esi", "pop edi", "retn"], "55136": ["mov eax [parser_0+imm]", "test eax eax", "jnz addr"], "55150": ["mov eax func", "call startParsing", "test al al", "jnz addr"], "55165": ["mov dword ptr [parser_0+imm] imm", "jmp short addr"], "55184": ["mov dword ptr [parser_0+imm] imm", "xor esi esi", "pop func", "mov eax esi", "pop esi", "pop edi", "retn"], "55208": ["mov dword ptr [parser_0+imm] imm", "xor esi esi", "pop func", "mov eax esi", "pop esi", "pop edi", "retn"], "55232": ["mov eax [ebx+imm]", "xor esi esi", "mov [ebx+imm] eax", "lea eax (errorProcessor - 2DF78h)[edi]", "mov [ebx+imm] eax", "mov eax esi", "pop ebx", "pop esi", "pop edi", "retn"], "55264": ["mov edi [esp+imm]", "mov esi imm", "test edi edi", "jz addr"], "55281": ["mov dword ptr [ebx+imm] imm", "jmp addr"], "55296": ["xor esi esi", "pop func", "mov eax esi", "pop esi", "pop edi", "retn"]}, "preds": [54912], "succs": []}, "XML_GetBuffer": {"disasm": {"55312": ["push ebp", "push edi", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov esi [esp+imm]", "test esi esi", "jz addr"], "55342": ["mov ecx [esp+imm]", "test ecx ecx", "js addr"], "55354": ["mov edx [esi+imm]", "cmp edx imm", "jz addr"], "55369": ["cmp edx imm", "jnz short addr"], "55374": ["mov dword ptr [esi+imm] imm", "xor eax eax"], "55386": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "55400": ["mov ecx [esi+imm]", "mov eax [esi+imm]", "test ecx ecx", "jz addr"], "55414": ["test eax eax", "jz addr"], "55422": ["mov edi ecx", "sub edi eax", "cmp [esp+imm] edi", "jle short addr"], "55432": ["mov edi [esi+imm]", "test edi edi", "jz addr"], "55443": ["mov ebp eax", "sub ebp edi", "add [esp+imm] ebp", "js addr"], "55457": ["mov edx [esi+imm]", "test edx edx", "jz addr"], "55468": ["mov ebp edi", "sub ebp edx", "mov [esp+imm] ebp", "mov [esp+imm] ebp", "cmp ebp 400h", "jg addr"], "55492": ["mov ebp imm", "sub ebp [esp+imm]", "cmp [esp+imm] ebp", "jg addr"], "55511": ["mov ebp [esp+imm]", "add [esp+imm] ebp", "test ecx ecx", "jz addr"], "55527": ["mov ebp ecx", "sub ebp edx", "cmp ebp [esp+imm]", "jl addr"], "55541": ["test edx edx", "jz addr"], "55549": ["mov ebp edi", "sub ebp edx", "cmp ebp [esp+imm]", "jle short addr"], "55559": ["mov ecx [esp+imm]", "sub eax edi", "sub esp imm", "sub ebp ecx", "add eax ecx", "push eax", "lea eax [edx+imm]", "push eax", "push edx", "call func", "mov eax [esi+imm]", "mov edx [esi+imm]", "sub eax ebp", "sub edx ebp", "mov [esi+imm] eax", "mov [esi+imm] edx", "add esp imm"], "55602": ["mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "mov dword ptr [esi+imm] imm", "jmp addr"], "55640": ["mov dword ptr [esi+imm] imm", "add esp imm", "xor eax eax", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "55664": ["mov edx [esp+imm]", "test edx edx", "jz addr"], "55676": ["mov edi [esi+imm]", "test eax eax", "jz addr"], "55687": ["test edi edi", "jnz addr"], "55695": ["mov ecx [esp+imm]", "test ecx ecx", "jz short addr"], "55703": ["mov [esp+imm] imm"], "55711": ["mov ecx 400h", "mov eax [esp+imm]"], "55720": ["lea ebp [ecx+imm]", "mov ecx ebp", "cmp ebp eax", "jge short addr"], "55729": ["test ebp ebp", "jg short addr"], "55733": ["test ebp ebp", "jle short addr"], "55737": ["sub esp imm", "push ebp", "call dword ptr [esi+imm]", "add esp imm", "mov edi eax", "test eax eax", "jz short addr"], "55753": ["add ebp eax", "mov eax [esi+imm]", "mov [esi+imm] ebp", "test eax eax", "jz addr"], "55769": ["mov edx [esi+imm]", "test edx edx", "jz addr"], "55780": ["sub edx eax", "mov ecx [esp+imm]", "add edx ecx"], "55788": ["mov ecx [esp+imm]", "push ebp", "push edx", "sub eax ecx", "push eax", "push edi", "call func", "pop eax", "mov eax [esi+imm]", "push eax", "call dword ptr [esi+imm]", "mov edx [esi+imm]", "add esp imm", "mov [esi+imm] edi", "test edx edx", "jz addr"], "55828": ["mov eax [esi+imm]", "test eax eax", "jz addr"], "55839": ["sub edx eax"], "55841": ["mov ebx [esp+imm]", "add edx ebx", "lea eax [edi+imm]", "add edi ebx", "mov [esi+imm] eax", "mov [esi+imm] edi", "jmp addr"], "55864": ["mov dword ptr [esi+imm] imm", "add esp imm", "xor eax eax", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "55888": ["xor eax eax", "jmp addr"], "55896": ["mov edx [esp+imm]", "test edx edx", "jz addr"], "55908": ["mov edi [esi+imm]", "test edi edi", "jnz addr"], "55919": ["nop"], "55920": ["mov edi [esi+imm]", "test edi edi", "jz addr"], "55931": ["sub ecx edi", "cmp [esp+imm] ecx", "jle addr"], "55943": ["jmp addr"], "55952": ["mov [esp+imm] 400h", "jmp addr"], "55968": ["test ecx ecx", "jz addr"], "55976": ["mov edx [esp+imm]", "test edx edx", "jz addr"], "55988": ["mov [esp+imm] imm"], "55996": ["sub ecx edi", "jz addr"], "56004": ["mov eax [esp+imm]", "jmp addr"], "56016": ["xor edx edx", "jmp addr"], "56024": ["test edi edi", "jnz addr"], "56032": ["jmp addr"], "56040": ["mov [esi+imm] edi", "mov [esi+imm] edi", "mov [esi+imm] edi", "mov eax edi", "jmp addr"], "56056": ["mov ebp [esp+imm]", "test ebp ebp", "jle addr"], "56068": ["jmp addr"], "56073": ["mov edx [esp+imm]", "jmp addr"], "56082": ["mov ecx [esp+imm]", "xor ebp ebp", "test ecx ecx", "js addr"], "56096": ["jmp addr"]}, "preds": [56082], "succs": [55602]}, "XML_Parse": {"disasm": {"56112": ["push ebp", "call func", "add ebp (offset func - $)", "push edi", "push esi", "push ebx", "sub esp imm", "mov esi [esp+imm]", "mov edi [esp+imm]", "test esi esi", "jz short addr"], "56142": ["test edi edi", "js addr"], "56150": ["mov eax [esp+imm]", "test eax eax", "jnz short addr"], "56158": ["test edi edi", "jz short addr"], "56162": ["mov dword ptr [esi+imm] imm"], "56172": ["xor ebx ebx"], "56174": ["add esp imm", "mov eax ebx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "56184": ["mov ebx [esi+imm]", "cmp ebx imm", "jz addr"], "56199": ["cmp ebx imm", "jz addr"], "56208": ["test ebx ebx", "jz addr"], "56216": ["mov dword ptr [esi+imm] imm", "test edi edi", "jnz addr"], "56234": ["mov al byte ptr [esp+imm]", "mov ebx [esp+imm]", "mov [esi+imm] al", "test ebx ebx", "jz addr"], "56256": ["mov eax [esi+imm]", "mov edx [esi+imm]", "lea ecx [esi+imm]", "mov [esi+imm] eax", "mov [esi+imm] edx", "push ecx", "push edx", "push eax", "push esi", "call dword ptr [esi+imm]", "add esp imm", "mov [esi+imm] eax", "test eax eax", "jnz addr"], "56301": ["mov eax [esi+imm]", "cmp eax imm", "jbe addr"], "56316": ["cmp eax imm", "jnz short addr"], "56321": ["lea edx [esi+imm]", "mov eax [esi+imm]", "push edx", "mov ebx imm", "mov edx [esi+imm]", "push edx", "mov ecx [esi+imm]", "push ecx", "push eax", "call dword ptr [eax+imm]", "mov eax [esi+imm]", "add esp imm", "mov [esi+imm] eax", "jmp addr"], "56376": ["push eax", "mov ebx ebp", "push eax", "push edi", "push esi", "call func", "add esp imm", "test buff buff", "jz addr"], "56398": ["push edx", "push edi", "mov ecx [esp+imm]", "push ecx", "push buff", "call func", "add esp imm", "mov ebp [esp+imm]", "push ebp", "push edi", "push esi", "call func", "add esp imm", "mov ebx eax", "jmp addr"], "56440": ["mov ebx imm", "jmp addr"], "56456": ["test esi esi", "jnz addr"], "56464": ["jmp addr"], "56472": ["mov eax [esi+imm]", "test eax eax", "jnz addr"], "56486": ["mov eax esi", "call startParsing", "test al al", "jnz addr"], "56501": ["mov dword ptr [esi+imm] imm", "jmp addr"], "56520": ["mov dword ptr [esi+imm] imm", "add esp imm", "xor ebx ebx", "mov eax ebx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "56544": ["mov dword ptr [esi+imm] imm", "add esp imm", "xor ebx ebx", "mov eax ebx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "56568": ["mov dword ptr [esi+imm] imm", "mov ebx imm", "jmp addr"], "56592": ["mov eax [esi+imm]", "xor ebx ebx", "mov [esi+imm] eax", "lea eax (errorProcessor - 2DF78h)[ebp]", "mov [esi+imm] eax", "jmp addr"]}, "preds": [56256], "succs": [56174]}, "XML_StopParser": {"disasm": {"56624": ["mov eax [esp+imm]", "mov ecx [esp+imm]", "test eax eax", "jz short addr"], "56636": ["mov edx [eax+imm]", "cmp edx imm", "jz short addr"], "56647": ["cmp edx imm", "jz short addr"], "56652": ["test cl cl", "jz short addr"], "56656": ["cmp byte ptr [eax+imm] imm", "jnz short addr"], "56665": ["mov dword ptr [eax+imm] imm", "mov eax imm", "retn"], "56688": ["test cl cl", "jnz short addr"], "56692": ["mov dword ptr [parser_0+imm] imm", "mov func imm", "retn"], "56712": ["mov dword ptr [parser_0+imm] imm", "xor func func", "retn"], "56728": ["mov dword ptr [parser_0+imm] imm", "xor func func", "retn"], "56744": ["xor func func", "retn"], "56752": ["mov dword ptr [parser_0+imm] imm", "xor func func", "retn"]}, "preds": [56656], "succs": []}, "XML_ResumeParser": {"disasm": {"56768": ["push esi", "call func", "add esi (offset func - $)", "push ebx", "sub esp imm", "mov ebx [esp+imm]", "test ebx ebx", "jz addr"], "56796": ["cmp dword ptr [ebx+imm] imm", "jz short addr"], "56805": ["mov dword ptr [ebx+imm] imm", "xor eax eax"], "56817": ["add esp imm", "pop ebx", "pop esi", "retn"], "56824": ["lea eax [ebx+imm]", "mov dword ptr [ebx+imm] imm", "push eax", "mov eax [ebx+imm]", "push eax", "mov eax [ebx+imm]", "push eax", "push ebx", "call dword ptr [ebx+imm]", "add esp imm", "mov [ebx+imm] eax", "test eax eax", "jnz short addr"], "56866": ["mov eax [ebx+imm]", "cmp eax imm", "jbe short addr"], "56877": ["cmp eax imm", "setz al", "and eax 0FFh", "inc eax"], "56889": ["lea ecx [ebx+imm]", "mov [esp+imm] eax", "mov edx [ebx+imm]", "push ecx", "mov func [ebx+imm]", "push eax", "mov ecx [ebx+imm]", "push ecx", "push edx", "call dword ptr [edx+imm]", "mov edx [ebx+imm]", "add esp imm", "mov [ebx+imm] edx", "mov eax [esp+imm]", "add esp imm", "pop ebx", "pop esi", "retn"], "56944": ["cmp byte ptr [ebx+imm] imm", "mov eax imm", "jz short addr"], "56958": ["mov dword ptr [ebx+imm] imm", "jmp addr"], "56976": ["add esp imm", "xor eax eax", "pop ebx", "pop esi", "retn"], "56984": ["mov eax [ebx+imm]", "mov [ebx+imm] eax", "lea eax (errorProcessor - 2DF78h)[esi]", "mov [ebx+imm] eax", "add esp imm", "xor eax eax", "pop ebx", "pop esi", "retn"]}, "preds": [56824], "succs": []}, "XML_GetCurrentByteCount": {"disasm": {"57200": ["mov eax [esp+imm]", "test eax eax", "jz short addr"], "57208": ["mov edx [eax+imm]", "test edx edx", "jz short addr"], "57218": ["mov ecx [eax+imm]", "xor eax eax", "test ecx ecx", "jz short addr"], "57230": ["mov eax edx", "sub eax ecx", "retn"], "57240": ["xor func func"], "57242": ["retn"]}, "preds": [57218, 57240], "succs": []}, "XML_GetInputContext": {"disasm": {"57248": ["mov eax [esp+imm]", "test eax eax", "jz short addr"], "57256": ["mov ecx [eax+imm]", "test ecx ecx", "jz short addr"], "57266": ["mov edx [eax+imm]", "test edx edx", "jz short addr"], "57273": ["cmp [esp+imm] imm", "jz short addr"], "57280": ["sub ecx edx", "mov edx [esp+imm]", "mov [edx] ecx", "mov edx [eax+imm]"], "57291": ["mov ecx [esp+imm]", "test ecx ecx", "jz short addr"], "57299": ["mov ecx [eax+imm]", "sub ecx edx", "mov edx ecx", "mov ecx [esp+imm]", "mov [ecx] edx", "mov edx [eax+imm]"], "57315": ["mov func edx", "retn"], "57320": ["xor edx edx", "mov func edx", "retn"]}, "preds": [57248, 57256], "succs": []}, "XML_GetCurrentLineNumber": {"disasm": {"57328": ["push esi", "push ebx", "push ecx", "mov ebx [esp+imm]", "test ebx ebx", "jz short addr"], "57339": ["mov eax [ebx+imm]", "test eax eax", "jz short addr"], "57349": ["mov edx [ebx+imm]", "cmp eax edx", "jnb short addr"], "57359": ["mov eax [ebx+imm]", "pop edx", "pop ebx", "inc eax", "pop esi", "retn"], "57376": ["lea esi [ebx+imm]", "mov ecx [ebx+imm]", "push esi", "push eax", "push edx", "push ecx", "call dword ptr [ecx+imm]", "mov eax [ebx+imm]", "add esp imm", "mov [ebx+imm] eax", "jmp short addr"], "57416": ["pop edx", "xor eax eax", "pop ebx", "pop esi", "retn"]}, "preds": [57328], "succs": []}, "XML_GetCurrentColumnNumber": {"disasm": {"57424": ["push esi", "push ebx", "push ecx", "mov ebx [esp+imm]", "test ebx ebx", "jz short addr"], "57435": ["mov eax [ebx+imm]", "test eax eax", "jz short addr"], "57445": ["mov edx [ebx+imm]", "cmp eax edx", "jnb short addr"], "57455": ["mov eax [ebx+imm]", "pop edx", "pop ebx", "pop esi", "retn"], "57472": ["lea esi [ebx+imm]", "mov ecx [ebx+imm]", "push esi", "push eax", "push edx", "push ecx", "call dword ptr [ecx+imm]", "mov eax [ebx+imm]", "add esp imm", "mov [ebx+imm] eax", "jmp short addr"], "57512": ["pop edx", "xor eax eax", "pop ebx", "pop esi", "retn"]}, "preds": [57424], "succs": []}, "XML_DefaultCurrent": {"disasm": {"57664": ["push ebx", "mov eax [esp+imm]", "test eax eax", "jz short addr"], "57673": ["mov edx [eax+imm]", "test edx edx", "jz short addr"], "57680": ["mov ecx [eax+imm]", "test ecx ecx", "jz short addr"], "57690": ["mov ebx [ecx+imm]", "mov edx [eax+imm]", "mov [esp+imm] ebx", "pop ebx", "mov ecx [ecx]", "jmp reportDefault"], "57712": ["pop ebx", "retn"], "57720": ["mov ebx [parser_0+imm]", "mov ecx [parser_0+imm]", "mov edx [parser_0+imm]", "mov [esp+imm] ebx", "pop ebx", "jmp reportDefault"]}, "preds": [57690, 57720], "succs": []}, "XML_ErrorString": {"disasm": {"57760": ["mov edx [esp+imm]", "call func", "add eax (offset func - $)", "cmp edx imm", "ja func"], "57783": ["mov ecx func - 2DF78h)[eax+imm]", "add ecx eax", "jmp ecx"], "57800": ["lea eax (aOutOfMemory - 2DF78h)[eax]", "retn"], "57808": ["lea eax (aLimitOnInputAm - 2DF78h)[eax]", "retn"], "57816": ["lea eax (aInvalidArgumen - 2DF78h)[eax]", "retn"], "57824": ["lea eax (aPrefixMustNotB - 2DF78h)[eax]", "retn"], "57832": ["lea eax (aReservedPrefix - 2DF78h)[eax]", "retn"], "57840": ["lea eax func - 2DF78h)[eax]", "retn"], "57848": ["lea eax (aCannotSuspendI - 2DF78h)[eax]", "retn"], "57856": ["lea eax (aParsingFinishe - 2DF78h)[eax]", "retn"], "57864": ["lea eax (aParsingAborted - 2DF78h)[eax]", "retn"], "57872": ["lea eax (aParserNotSuspe - 2DF78h)[eax]", "retn"], "57880": ["lea eax (aParserSuspende - 2DF78h)[eax]", "retn"], "57888": ["lea eax (aIllegalCharact - 2DF78h)[eax]", "retn"], "57896": ["lea eax (aTextDeclaratio - 2DF78h)[eax]", "retn"], "57904": ["lea eax (aXmlDeclaration - 2DF78h)[eax]", "retn"], "57912": ["lea eax (aIncompleteMark - 2DF78h)[eax]", "retn"], "57920": ["lea eax (aMustNotUndecla - 2DF78h)[eax]", "retn"], "57928": ["lea eax (aUnboundPrefix - 2DF78h)[eax]", "retn"], "57936": ["lea eax (aCannotChangeSe - 2DF78h)[eax]", "retn"], "57944": ["lea eax (aRequestedFeatu - 2DF78h)[eax]", "retn"], "57952": ["lea eax (aEntityDeclared - 2DF78h)[eax]", "retn"], "57960": ["lea eax (aUnexpectedPars - 2DF78h)[eax]", "retn"], "57968": ["lea eax (aDocumentIsNotS - 2DF78h)[eax]", "retn"], "57976": ["lea eax (aErrorInProcess - 2DF78h)[eax]", "retn"], "57984": ["lea eax (aUnclosedCdataS - 2DF78h)[eax]", "retn"], "57992": ["lea eax (aEncodingSpecif - 2DF78h)[eax]", "retn"], "58000": ["lea eax (aUnknownEncodin - 2DF78h)[eax]", "retn"], "58008": ["lea eax (aXmlOrTextDecla - 2DF78h)[eax]", "retn"], "58016": ["lea eax (aReferenceToExt - 2DF78h)[eax]", "retn"], "58024": ["lea eax (aReferenceToBin - 2DF78h)[eax]", "retn"], "58032": ["lea eax (aReferenceToInv - 2DF78h)[eax]", "retn"], "58040": ["lea eax (aAsynchronousEn - 2DF78h)[eax]", "retn"], "58048": ["lea eax (aRecursiveEntit - 2DF78h)[eax]", "retn"], "58056": ["lea eax (aUndefinedEntit - 2DF78h)[eax]", "retn"], "58064": ["lea eax (aIllegalParamet - 2DF78h)[eax]", "retn"], "58072": ["lea eax (aJunkAfterDocum - 2DF78h)[eax]", "retn"], "58080": ["lea eax (aDuplicateAttri - 2DF78h)[eax]", "retn"], "58088": ["lea eax (aMismatchedTag - 2DF78h)[eax]", "retn"], "58096": ["lea eax (aPartialCharact - 2DF78h)[eax]", "retn"], "58104": ["lea eax (aUnclosedToken - 2DF78h)[eax]", "retn"], "58112": ["lea eax (aNotWellFormedI - 2DF78h)[eax]", "retn"], "58120": ["lea eax (aNoElementFound - 2DF78h)[eax]", "retn"], "58128": ["lea eax (aSyntaxError - 2DF78h)[eax]", "retn"], "58135": ["xor eax eax", "retn"]}, "preds": [57760, 57783], "succs": []}, "XML_SetBillionLaughsAttackProtectionMaximumAmplification": {"disasm": {"58240": ["mov edx [esp+imm]", "fld [esp+imm]", "test edx edx", "jz short addr"], "58252": ["mov eax [edx+imm]", "test eax eax", "jnz short addr"], "58262": ["fucom st", "fnstsw ax", "test imm imm", "jnz short addr"], "58271": ["fld1", "fcomp st(1)", "fnstsw ax", "test imm imm", "jz short addr"], "58282": ["fstp dword ptr [edx+imm]", "mov al imm", "retn"], "58296": ["fstp st", "jmp short addr"], "58304": ["fstp st", "jmp short addr"], "58312": ["fstp st", "jmp short addr"], "58320": ["fstp st"], "58322": ["xor eax eax", "retn"]}, "preds": [58296, 58304, 58312, 58320], "succs": []}, "utf8_isInvalid3": {"disasm": {"58848": ["push ebx", "mov ebx imm", "mov al [p+imm]", "test al al", "js short addr"], "58861": ["mov eax ebx", "pop ebx", "retn"], "58872": ["mov cl [p]", "cmp cl 0EFh", "jz short addr"], "58879": ["and eax imm", "cmp al 0C0h", "jz short addr"], "58886": ["mov dl [p+imm]", "cmp cl 0E0h", "jnz short addr"], "58894": ["cmp dl imm", "jbe short addr"], "58899": ["xor ebx ebx", "and edx imm", "cmp dl 0C0h", "setz bl", "jmp short addr"], "58912": ["mov dl [p+imm]", "cmp dl 0BFh", "jz short addr"], "58920": ["and eax imm", "cmp al 0C0h", "jz short addr"], "58927": ["test dl dl", "jns short addr"], "58931": ["jmp short addr"], "58936": ["test dl dl", "jns short addr"], "58940": ["cmp cl 0EDh", "jnz short addr"], "58945": ["xor ebx ebx", "cmp dl imm", "setnbe bl", "jmp short addr"], "58960": ["xor ebx ebx", "cmp al 0BDh", "setnbe bl", "jmp short addr"]}, "preds": [58912], "succs": [58861]}, "normal_cdataSectionTok": {"disasm": {"58976": ["push ebp", "call func", "add ebp (offset func - $)", "push edi", "push esi", "push ebx", "sub esp imm", "mov edx [esp+imm]", "mov edi [esp+imm]", "mov ebx [esp+imm]", "cmp edx edi", "jnb addr"], "59014": ["xor eax eax", "mov al [edx]", "cmp byte ptr [ebx+imm] imm", "ja short func"], "59025": ["xor ecx ecx", "mov cl [ebx+imm]", "mov eax ecx", "mov esi func - 2DF78h)[ebp+imm]", "add esi ebp", "jmp esi"], "59048": ["mov eax edi", "sub eax edx", "dec eax", "jle addr"], "59059": ["mov eax ebx", "mov [esp+imm] edx", "call dword ptr [ebx+imm]", "mov edx [esp+imm]", "test eax eax", "lea esi [edx+imm]", "jz short addr"], "59082": ["lea esi [esi+imm]"], "59088": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax"], "59096": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "59104": ["lea esi [edx+imm]", "lea func [ptr_0+imm]", "nop"], "59112": ["mov ecx edi", "sub ecx func", "test ecx ecx", "jle short func"], "59120": ["mov al func"], "59122": ["and eax 0FFh", "cmp byte ptr [ebx+imm] imm", "ja func"], "59138": ["xor edx edx", "mov dl [ebx+imm]", "mov eax edx", "mov edx func - 2DF78h)[ebp+imm]", "add edx ebp", "jmp edx"], "59160": ["mov eax [esp+imm]", "mov [eax] func", "add esp imm", "mov eax imm", "pop ebx", "pop func", "pop edi", "pop ebp", "retn"], "59184": ["cmp ecx imm", "jle short func"], "59189": ["mov edx func", "mov eax ebx", "call dword ptr [ebx+imm]", "test eax eax", "jnz short func"], "59203": ["add func imm", "jmp short addr"], "59208": ["cmp ecx imm", "jle short func"], "59213": ["mov edx func", "mov eax ebx", "call dword ptr [ebx+imm]", "test eax eax", "jnz short func"], "59227": ["add func imm", "jmp short addr"], "59232": ["dec ecx", "jz short func"], "59235": ["mov edx func", "mov eax ebx", "call dword ptr [ebx+imm]", "test eax eax", "jnz short func"], "59249": ["add func imm", "jmp addr"], "59264": ["inc func", "jmp addr"], "59272": ["lea esi [edx+imm]", "mov ecx edi", "sub ecx func", "test ecx ecx", "jle addr"], "59287": ["mov al [edx+imm]", "mov [esp+imm] al", "cmp al imm", "jz addr"], "59302": ["mov al [esp+imm]", "jmp addr"], "59312": ["mov eax edi", "sub eax edx", "cmp eax imm", "jle addr"], "59325": ["mov eax ebx", "mov [esp+imm] edx", "call dword ptr [ebx+imm]", "mov edx [esp+imm]", "test eax eax", "jnz func"], "59349": ["lea esi [edx+imm]", "jmp addr"], "59360": ["mov eax edi", "sub eax edx", "cmp eax imm", "jle addr"], "59373": ["mov eax ebx", "mov [esp+imm] edx", "call dword ptr [ebx+imm]", "mov edx [esp+imm]", "test eax eax", "jnz func"], "59397": ["lea esi [edx+imm]", "jmp addr"], "59408": ["lea eax [edx+imm]", "sub edi func", "test edi edi", "jle addr"], "59421": ["xor ecx ecx", "mov cl [edx+imm]", "cmp byte ptr [ebx+imm] imm", "jnz short addr"], "59433": ["lea func [edx+imm]"], "59436": ["mov edi [esp+imm]", "mov [edi] func", "add esp imm", "mov func imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "59456": ["mov eax [esp+imm]", "inc edx", "mov [eax] edx", "add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "59480": ["lea eax [edx+imm]", "mov [esp+imm] func", "mov func edi", "sub eax [esp+imm]", "test eax eax", "jle short addr"], "59497": ["cmp byte ptr [edx+imm] imm", "jnz addr"], "59507": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "59526": ["mov eax imm", "jmp addr"], "59536": ["mov eax imm", "jmp addr"], "59546": ["or eax imm", "jmp addr"]}, "preds": [59272, 59408, 59480], "succs": [59096]}, "normal_scanRef": {"disasm": {"59568": ["push ebp", "call func", "add ebp (offset func - $)", "push edi", "push esi", "push ebx", "mov ebx ptr", "mov ptr end", "sub esp imm", "sub edx ptr", "test edx edx", "jle addr"], "59600": ["mov esi enc", "xor enc enc", "mov al [ptr]", "mov al [enc+imm]", "sub eax imm", "cmp al imm", "ja short func"], "59617": ["and eax 0FFh", "mov edi end", "mov end func - 2DF78h)[ebp+imm]", "add ecx ebp", "jmp ecx"], "59640": ["add ptr imm", "mov eax end", "sub eax ebx", "test eax eax", "jle addr"], "59655": ["xor eax eax", "mov al [ebx]", "mov al [enc+imm]", "cmp al imm", "jz addr"], "59671": ["cmp al imm", "jz addr"], "59679": ["nop"], "59680": ["mov eax [esp+imm]", "mov [eax] ebx", "xor eax eax"], "59688": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "59696": ["inc ptr"], "59697": ["mov edx end", "sub edx ptr", "test edx edx", "jle addr"], "59709": ["xor eax eax", "mov al [ptr]", "mov al [enc+imm]", "sub eax imm", "cmp al imm", "ja short func"], "59724": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebp+imm]", "add ecx ebp", "jmp ecx"], "59744": ["lea edx [ptr+imm]", "mov eax end", "sub eax edx", "test eax eax", "jle addr"], "59759": ["mov al [ptr+imm]", "cmp al imm", "jz addr"], "59770": ["and eax 0FFh", "cmp byte ptr [enc+imm] imm", "jz addr"], "59786": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp short addr"], "59800": ["dec edx", "jz addr"], "59807": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "59825": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jz func"], "59843": ["add ptr imm", "jmp addr"], "59856": ["cmp edx imm", "jle addr"], "59865": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "59883": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jz func"], "59901": ["add ptr imm", "jmp addr"], "59912": ["cmp edx imm", "jle addr"], "59921": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "59939": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jz func"], "59957": ["add ptr imm", "jmp addr"], "59968": ["mov eax [esp+imm]", "inc ptr", "mov [eax] ebx", "mov eax imm", "jmp addr"], "59992": ["cmp edx imm", "jle addr"], "60001": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "60019": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz short addr"], "60033": ["jmp func"], "60040": ["cmp edx imm", "jle addr"], "60049": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "60067": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz addr"], "60085": ["jmp func"], "60096": ["dec edx", "jz addr"], "60103": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "60121": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz addr"], "60139": ["jmp func"], "60144": ["inc ebx", "mov eax end", "sub eax ebx", "test eax eax", "jg addr"], "60157": ["lea esi [esi+imm]"], "60160": ["or eax imm", "jmp addr"], "60168": ["lea edx [ptr+imm]", "mov eax end", "sub eax edx", "test eax eax", "jle short addr"], "60179": ["xor eax eax", "xor ecx ecx", "mov al [ptr+imm]", "mov cl [enc+imm]", "mov eax ecx", "sub eax imm", "cmp eax imm", "ja addr"], "60204": ["add ptr imm", "mov eax end", "sub eax ebx", "test eax eax", "jg short addr"], "60215": ["jmp short addr"], "60224": ["sub eax imm", "cmp al imm", "ja func"], "60235": ["inc ebx", "mov eax end", "sub eax ebx", "test eax eax", "jle short addr"], "60244": ["xor eax eax", "mov al [ebx]", "mov al [enc+imm]", "cmp al imm", "jnz short addr"], "60256": ["mov eax [esp+imm]", "inc ebx", "mov [eax] ebx", "mov eax imm", "jmp addr"], "60273": ["mov eax imm", "jmp addr"]}, "preds": [59800, 59856, 59912, 59992, 60040, 60096], "succs": [59688]}, "normal_scanPercent": {"disasm": {"60288": ["push ebp", "call func", "add ebp (offset func - $)", "push edi", "push esi", "push ebx", "mov ebx func", "mov func end", "sub esp imm", "sub edx func", "test edx edx", "jle addr"], "60320": ["mov esi enc", "xor enc enc", "mov al func", "mov al [enc+imm]", "sub eax imm", "cmp al imm", "ja short func"], "60337": ["and eax 0FFh", "mov edi end", "mov end func - 2DF78h)[ebp+imm]", "add ecx ebp", "jmp ecx"], "60360": ["dec edx", "jz addr"], "60367": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz short func"], "60381": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz addr"], "60399": ["nop"], "60400": ["mov eax [esp+imm]", "mov [eax] func", "xor eax eax"], "60408": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "60416": ["inc func"], "60417": ["mov edx end", "sub edx func", "test edx edx", "jle addr"], "60429": ["xor eax eax", "mov al func", "mov al [enc+imm]", "sub eax imm", "cmp al imm", "ja short func"], "60444": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebp+imm]", "add ecx ebp", "jmp ecx"], "60464": ["mov eax [esp+imm]", "mov [eax] func", "add esp imm", "mov eax imm", "pop func", "pop enc", "pop end", "pop ebp", "retn"], "60488": ["dec edx", "jz addr"], "60495": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz short func"], "60509": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jz short func"], "60523": ["add func imm", "jmp short addr"], "60528": ["cmp edx imm", "jle addr"], "60537": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "60555": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jz func"], "60573": ["add func imm", "jmp addr"], "60584": ["cmp edx imm", "jle addr"], "60593": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "60611": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jz func"], "60629": ["add func imm", "jmp addr"], "60640": ["mov eax [esp+imm]", "inc func", "mov [eax] ebx", "mov eax imm", "jmp addr"], "60664": ["cmp edx imm", "jle short addr"], "60669": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "60687": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz short addr"], "60701": ["jmp func"], "60712": ["cmp edx imm", "jle short addr"], "60717": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "60735": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz addr"], "60753": ["jmp func"], "60760": ["or eax imm", "jmp addr"], "60768": ["mov eax imm", "jmp addr"]}, "preds": [60360, 60488, 60528, 60584, 60664, 60712], "succs": [60408]}, "normal_scanLit": {"disasm": {"60784": ["push ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "mov esi enc", "push ebx", "sub esp imm", "mov ebp [esp+imm]", "mov [esp+imm] func", "mov enc ebp", "sub edx ptr", "test edx edx", "jle short addr"], "60820": ["mov ebx ptr"], "60822": ["xor eax eax", "mov al [ptr]", "mov al [enc+imm]", "cmp al imm", "ja short func"], "60834": ["xor ecx ecx", "mov cl al", "mov ebp func - 2DF78h)[edi+imm]", "add ebp edi", "jmp ebp"], "60856": ["mov eax [esp+imm]", "mov [eax] ptr", "xor eax eax"], "60864": ["add esp imm", "pop ebx", "pop enc", "pop edi", "pop ebp", "retn"], "60872": ["inc ptr"], "60873": ["mov edx [esp+imm]", "sub edx ptr", "test edx edx", "jg short addr"], "60883": ["or eax imm", "jmp short addr"], "60888": ["and eax 0FFh", "lea edx [ptr+imm]", "cmp eax [esp+imm]", "jz short addr"], "60902": ["mov ebx ptr", "jmp short addr"], "60912": ["cmp edx imm", "jle short addr"], "60917": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz short func"], "60931": ["add ptr imm", "jmp short addr"], "60936": ["cmp edx imm", "jle short addr"], "60941": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz short func"], "60955": ["add ptr imm", "jmp short addr"], "60960": ["dec edx", "jz short addr"], "60963": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz short func"], "60977": ["add ptr imm", "jmp short addr"], "60982": ["mov eax imm", "jmp short addr"], "60989": ["mov ebp [esp+imm]", "sub ebp ptr", "test ebp ebp", "jle short addr"], "60999": ["mov eax [esp+imm]", "mov [eax] ptr", "xor eax eax", "mov al [ebx+imm]", "mov cl [enc+imm]", "cmp cl imm", "ja short addr"], "61019": ["mov eax imm", "shl eax cl", "and eax imm", "cmp eax imm", "sbb eax eax", "add esp imm", "xor eax imm", "pop ebx", "and eax imm", "pop enc", "pop edi", "pop ebp", "retn"], "61050": ["xor eax eax", "jmp addr"], "61057": ["mov eax imm", "jmp addr"]}, "preds": [60989], "succs": [60864]}, "normal_ignoreSectionTok": {"disasm": {"61072": ["push ebp", "call func", "add ebp (offset func - $)", "push edi", "push esi", "push ebx", "sub esp imm", "mov edi [esp+imm]", "mov ebx [esp+imm]", "mov edx edi", "mov esi [esp+imm]", "sub edx func", "test edx edx", "jle addr"], "61114": ["mov al func", "mov [esp+imm] imm"], "61124": ["and eax 0FFh", "cmp byte ptr [esi+imm] imm", "ja short func"], "61136": ["xor ecx ecx", "mov cl [esi+imm]", "mov eax ecx", "mov ecx func - 2DF78h)[ebp+imm]", "add ecx ebp", "jmp ecx"], "61160": ["mov eax [esp+imm]", "mov [eax] func", "xor eax eax"], "61168": ["add esp imm", "pop func", "pop esi", "pop edi", "pop ebp", "retn"], "61176": ["cmp edx imm", "jle addr"], "61185": ["mov edx func", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz short func"], "61199": ["add func imm"], "61202": ["mov edx edi", "sub edx func", "test edx edx", "jle addr"], "61214": ["mov al func", "and eax 0FFh", "cmp byte ptr [esi+imm] imm", "jbe short addr"], "61228": ["inc func", "jmp short addr"], "61232": ["cmp edx imm", "jle addr"], "61241": ["mov edx func", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz short func"], "61255": ["add ebx imm", "jmp short addr"], "61264": ["dec edx", "jz addr"], "61271": ["mov edx func", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz short func"], "61285": ["add func imm", "jmp short addr"], "61296": ["lea ecx [ptr_0+imm]", "mov edx edi", "sub edx func", "test edx edx", "jle short addr"], "61307": ["mov al [ebx+imm]", "cmp al imm", "jz short addr"], "61314": ["mov ebx ecx", "jmp addr"], "61328": ["lea ecx [ptr_0+imm]", "mov edx edi", "sub edx func", "test edx edx", "jle short addr"], "61339": ["mov al [ebx+imm]", "cmp al imm", "jnz short addr"], "61346": ["lea func [ebx+imm]", "mov edx edi", "sub edx func", "test edx edx", "jle short addr"], "61357": ["mov al [ebx+imm]", "cmp al imm", "jnz short addr"], "61364": ["mov func [esp+imm]", "inc ecx", "mov [esp+imm] ecx", "jmp short addr"], "61376": ["lea func [ebx+imm]", "mov edx edi", "sub edx func", "test edx edx", "jle short addr"], "61387": ["mov al [ebx+imm]", "cmp al imm", "jnz short addr"], "61394": ["mov edx [esp+imm]", "add ebx imm", "test edx edx", "jz short addr"], "61405": ["mov eax [esp+imm]", "dec eax", "mov [esp+imm] eax", "jmp addr"], "61424": ["add esp imm", "or eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "61435": ["mov eax imm", "jmp addr"], "61445": ["mov eax [esp+imm]", "mov [eax] func", "mov eax imm", "jmp addr"]}, "preds": [61394], "succs": [61168]}, "normal_isPublicId": {"disasm": {"61472": ["push ebp", "push edi", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "mov eax [esp+imm]", "mov edi [esp+imm]", "lea edx [eax+imm]", "mov eax [esp+imm]", "lea esi [eax-imm]", "mov eax func", "sub eax func", "test eax eax", "jle short addr"], "61513": ["lea func [end_0+imm]"], "61520": ["xor eax eax", "mov cl func", "mov al cl", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja short func"], "61537": ["and eax 0FFh", "mov ebp func - 2DF78h)[ebx+imm]", "add ebp ebx", "jmp ebp"], "61560": ["cmp cl imm", "jz short func"], "61565": ["cmp cl imm", "jnz short addr"], "61570": ["inc func", "mov eax func", "sub eax func", "test eax eax", "jg short addr"], "61579": ["pop ebx", "mov eax imm", "pop func", "pop func", "pop ebp", "retn"], "61592": ["test cl cl", "jns short func"], "61596": ["mov eax [esp+imm]", "mov [eax] func", "xor eax eax", "pop ebx", "pop func", "pop func", "pop ebp", "retn"], "61616": ["cmp cl imm", "jz short addr"], "61621": ["inc func", "mov eax func", "sub eax func", "test eax eax", "jg short addr"], "61630": ["jmp short addr"]}, "preds": [61621], "succs": [61579]}, "normal_getAtts": {"disasm": {"61632": ["push ebp", "push edi", "mov edi imm", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov eax [esp+imm]", "mov ebp [esp+imm]", "mov [esp+imm] imm", "mov [esp+imm] imm", "mov cl [eax+imm]", "lea edx [eax+imm]", "xor eax eax", "mov al cl", "mov al [ebp+imm]", "lea esi [esi+imm]"], "61696": ["sub eax imm", "cmp al imm", "ja short func"], "61703": ["and eax 0FFh", "mov esi func - 2DF78h)[ebx+imm]", "add esi ebx", "jmp esi"], "61720": ["cmp state imm", "jnz addr"], "61729": ["lea esi [esi+imm]"], "61736": ["mov cl [ptr_0+imm]", "xor eax eax", "mov al cl", "inc func", "mov al [ebp+imm]", "jmp short addr"], "61752": ["lea esi [ptr_0+imm]", "test state state", "jnz addr"], "61763": ["mov eax [esp+imm]", "cmp eax [esp+imm]", "jge short addr"], "61772": ["mov eax [esp+imm]", "mov ecx [esp+imm]", "shl eax imm", "add eax ecx", "mov [eax] func", "mov byte ptr [eax+imm] imm"], "61790": ["mov cl [ptr_0+imm]", "xor eax eax", "mov al cl", "mov func esi", "mov state imm", "mov al [ebp+imm]", "jmp short addr"], "61816": ["lea esi [ptr_0+imm]", "cmp state imm", "jz addr"], "61828": ["cmp state imm", "jnz addr"], "61837": ["mov eax [esp+imm]", "cmp eax [esp+imm]", "jge addr"], "61850": ["mov eax [esp+imm]", "mov state [esp+imm]", "shl eax imm", "mov byte ptr [edi+imm] imm"], "61865": ["mov cl [ptr_0+imm]", "xor eax eax", "mov al cl", "mov al [ebp+imm]"], "61876": ["mov func esi", "mov edi imm", "jmp addr"], "61888": ["lea esi [ptr_0+imm]", "cmp state imm", "jz addr"], "61900": ["cmp state imm", "jnz addr"], "61909": ["mov eax [esp+imm]", "cmp eax [esp+imm]", "jge addr"], "61922": ["mov eax [esp+imm]", "mov state [esp+imm]", "shl eax imm", "add edi eax", "mov [esp+imm] edi", "mov edi [esp+imm]", "cmp byte ptr [edi+imm] imm", "jz short addr"], "61949": ["mov eax [esp+imm]", "cmp [eax+imm] func", "jz short addr"], "61958": ["cmp cl imm", "jz addr"], "61967": ["mov eax [esp+imm]", "mov byte ptr [eax+imm] imm", "jmp short addr"], "61984": ["test state state", "jnz short addr"], "61988": ["mov eax [esp+imm]", "mov state imm", "cmp eax [esp+imm]", "jge short addr"], "62002": ["shl eax imm", "mov esi [esp+imm]", "add eax esi", "mov [eax] func", "mov byte ptr [eax+imm] imm"], "62017": ["mov cl [edx+imm]", "xor eax eax", "mov al cl", "add edx imm", "mov al [ebp+imm]", "jmp addr"], "62040": ["test state state", "jnz short addr"], "62044": ["mov eax [esp+imm]", "mov state imm", "cmp eax [esp+imm]", "jge short addr"], "62058": ["shl eax imm", "mov ecx [esp+imm]", "add eax ecx", "mov [eax] func", "mov byte ptr [eax+imm] imm"], "62073": ["mov cl [edx+imm]", "xor eax eax", "mov al cl", "add edx imm", "mov al [ebp+imm]", "jmp addr"], "62096": ["test state state", "jnz short addr"], "62100": ["mov eax [esp+imm]", "mov state imm", "cmp eax [esp+imm]", "jge short addr"], "62114": ["shl eax imm", "mov esi [esp+imm]", "add eax esi", "mov [eax] func", "mov byte ptr [eax+imm] imm"], "62129": ["mov cl [edx+imm]", "xor eax eax", "mov al cl", "add edx imm", "mov al [ebp+imm]", "jmp addr"], "62152": ["mov eax [esp+imm]", "lea esi [ptr_0+imm]", "cmp eax [esp+imm]", "jge short addr"], "62164": ["mov eax [esp+imm]", "mov ecx [esp+imm]", "shl eax imm", "mov byte ptr [ecx+imm] imm", "lea esi [esi+imm]", "nop"], "62184": ["mov cl [ptr_0+imm]", "xor eax eax", "mov al cl", "mov func esi", "mov al [ebp+imm]", "jmp addr"], "62208": ["lea esi [ptr_0+imm]", "cmp state imm", "jz addr"], "62220": ["mov eax [esp+imm]", "cmp eax [esp+imm]", "jge short addr"], "62229": ["mov eax [esp+imm]", "mov state [esp+imm]", "shl eax imm", "mov [edi+imm] esi"], "62243": ["mov cl [ptr_0+imm]", "xor eax eax", "mov al cl", "mov func esi", "mov [esp+imm] imm", "mov edi imm", "mov al [ebp+imm]", "jmp addr"], "62280": ["lea esi [ptr_0+imm]", "cmp state imm", "jz addr"], "62292": ["mov eax [esp+imm]", "cmp eax [esp+imm]", "jge short addr"], "62301": ["mov eax [esp+imm]", "mov state [esp+imm]", "shl eax imm", "mov [edi+imm] esi"], "62315": ["mov cl [ptr_0+imm]", "xor eax eax", "mov al cl", "mov func esi", "mov [esp+imm] imm", "mov edi imm", "mov al [ebp+imm]", "jmp addr"], "62346": ["mov eax [esp+imm]", "add esp imm", "pop ebx", "pop esi", "pop state", "pop ebp", "retn"], "62360": ["cmp [esp+imm] imm", "jnz addr"], "62371": ["mov eax [esp+imm]", "cmp eax [esp+imm]", "jge short addr"], "62380": ["shl eax imm", "mov edi [esp+imm]", "mov [edi+imm] func"], "62391": ["mov eax [esp+imm]", "inc eax", "mov [esp+imm] eax"], "62398": ["mov cl [ptr_0+imm]", "xor eax eax", "mov al cl", "mov func esi", "xor edi edi", "mov al [ebp+imm]", "jmp addr"], "62424": ["cmp [esp+imm] imm", "jnz addr"], "62435": ["jmp short addr"], "62437": ["mov cl [ptr_0+imm]", "cmp cl imm", "jz addr"], "62449": ["xor eax eax", "mov al cl", "mov al [ebp+imm]", "mov edi eax", "and edi 0FFh", "cmp edi [esp+imm]", "jnz addr"], "62475": ["jmp addr"]}, "preds": [62449], "succs": [61967]}, "normal_charRefNumber": {"disasm": {"62480": ["push esi", "push ebx", "call func", "add ebx (offset func - $)", "movsx enc byte ptr [edx+imm]", "cmp al imm", "jz short addr"], "62501": ["cmp al imm", "jz short addr"], "62505": ["lea ecx [edx+imm]", "sub eax imm", "jmp short addr"], "62520": ["lea result [result+imm]", "lea eax [edx+imm]", "cmp result imm", "jg short addr"], "62534": ["movsx edx byte ptr [ptr+imm]", "inc ptr", "cmp dl imm", "jnz short addr"], "62544": ["mov edx result", "sar edx imm", "cmp result imm", "jg short addr"], "62556": ["cmp edx 0D7h", "jg short addr"], "62564": ["test edx edx", "jnz short addr"], "62568": ["cmp func - 2DF78h)[ebx+imm] imm", "jnz short addr"], "62578": ["lea esi [esi+imm]"], "62584": ["or eax imm"], "62587": ["pop ebx", "pop esi", "retn"], "62592": ["cmp edx 0FFh", "jnz short addr"], "62600": ["lea edx [result-imm]", "cmp edx imm", "jbe short addr"], "62611": ["pop ebx", "pop esi", "retn"], "62616": ["lea ecx [edx+imm]", "mov dl [edx+imm]", "cmp dl imm", "jz short addr"], "62627": ["xor eax eax", "jmp short addr"], "62632": ["cmp dl imm", "jg short addr"], "62637": ["sub edx imm", "cmp dl imm", "ja short addr"], "62645": ["shl result imm", "sub c imm", "or result esi"], "62653": ["cmp result imm", "jg short addr"], "62660": ["mov dl [ptr+imm]", "inc ptr", "cmp dl imm", "jz short addr"], "62669": ["movsx esi dl", "cmp dl imm", "jle short addr"], "62677": ["sub edx imm", "cmp dl imm", "ja short addr"], "62685": ["shl result imm", "lea result [c+imm]", "jmp short addr"], "62696": ["shl result imm", "lea result [c+imm]", "jmp short addr"]}, "preds": [62632], "succs": [62653]}, "normal_nameMatchesAscii": {"disasm": {"62720": ["push esi", "push ebx", "mov ecx [esp+imm]", "mov eax [esp+imm]", "mov esi [esp+imm]", "mov dl [ecx]", "test dl dl", "jnz short addr"], "62740": ["jmp short addr"], "62744": ["cmp func dl", "jnz short addr"], "62748": ["mov dl [ptr2_0+imm]", "inc func", "inc func", "test dl dl", "jz short addr"], "62757": ["mov ebx func", "sub ebx func", "test ebx ebx", "jg short addr"], "62765": ["pop ebx", "xor func func", "pop func", "retn"], "62776": ["cmp func func", "pop ebx", "setz al", "and eax 0FFh", "pop func", "retn"]}, "preds": [62740, 62748], "succs": []}, "normal_nameLength": {"disasm": {"62800": ["push edi", "push esi", "mov esi enc", "mov enc start", "push ebx", "call func", "add ebx (offset func - $)", "lea enc [enc+imm]"], "62824": ["xor ecx ecx", "mov cl [ptr]", "mov cl [enc+imm]", "sub ecx imm", "cmp cl imm", "ja short func"], "62840": ["and ecx 0FFh", "mov edi func - 2DF78h)[ebx+imm]", "add edi ebx", "jmp edi"], "62864": ["pop ebx", "sub ptr start", "pop enc", "pop edi", "retn"], "62872": ["inc ptr", "jmp short addr"], "62880": ["add ptr imm", "jmp short addr"], "62888": ["add ptr imm", "jmp short addr"], "62896": ["add ptr imm", "jmp short addr"]}, "preds": [62840], "succs": [62824]}, "normal_skipS": {"disasm": {"62912": ["push ebx", "mov ebx enc", "mov enc ptr", "lea esi [esi+imm]"], "62920": ["xor edx edx", "mov dl [ptr]", "mov cl [enc+imm]", "cmp cl imm", "ja short addr"], "62933": ["cmp cl imm", "ja short addr"], "62938": ["pop enc", "retn"], "62944": ["cmp cl imm", "jnz short addr"], "62949": ["inc ptr", "jmp short addr"]}, "preds": [62933, 62944], "succs": [62920]}, "normal_updatePosition": {"disasm": {"62960": ["push ebp", "push edi", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "mov ebp [esp+imm]", "mov eax [esp+imm]", "mov ecx ebp", "mov esi [esp+imm]", "sub ecx eax", "test ecx ecx", "jle short addr"], "62995": ["lea esi [esi+imm]", "nop"], "63000": ["xor ecx ecx", "mov cl func", "mov cl [esi+imm]", "sub ecx imm", "cmp cl imm", "ja func"], "63020": ["and ecx 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "63040": ["mov edi [esp+imm]", "inc func", "mov ecx [edi]", "inc ecx", "mov [edi] ecx", "mov ecx ebp", "sub ecx func", "xor edi edi"], "63056": ["mov edx [esp+imm]", "test ecx ecx", "mov [edx+imm] edi", "jg short addr"], "63067": ["pop ebx", "pop func", "pop edi", "pop func", "retn"], "63072": ["mov edi [esp+imm]", "mov ecx func", "mov edx [edi]", "inc edx", "mov [edi] edx", "lea edi [ptr_0+imm]", "sub ecx func", "test ecx ecx", "jle short addr"], "63092": ["xor edx edx", "mov dl [eax+imm]", "cmp byte ptr [enc_0+imm] imm", "jnz short addr"], "63104": ["lea func [eax+imm]", "mov ecx func", "sub ecx func"], "63111": ["mov eax func", "xor func func", "jmp short addr"], "63120": ["add func imm"], "63123": ["mov edi [esp+imm]", "mov ecx func", "sub ecx func", "mov edi [edi+imm]", "inc edi", "jmp short addr"], "63144": ["add func imm", "jmp short addr"], "63152": ["add func imm", "jmp short addr"], "63160": ["mov edi [esp+imm]", "inc func", "mov ecx func", "mov edx [edi+imm]", "sub ecx func", "lea edi [edx+imm]", "jmp short addr"]}, "preds": [63000, 63020], "succs": [63056]}, "utf8_toUtf16": {"disasm": {"63184": ["push ebp", "push edi", "push esi", "push ebx", "mov eax [esp+imm]", "mov ebp [esp+imm]", "mov esi [esp+imm]", "mov edi [esp+imm]", "mov ecx [eax]", "mov eax [esp+imm]", "mov edx [eax]", "lea esi [esi+imm]"], "63216": ["cmp from esi", "jnb short addr"], "63220": ["cmp to edi", "jnb short addr"], "63224": ["movsx ax byte ptr [from]", "xor ebx ebx", "mov bl al", "mov bl [ebp+imm]", "cmp bl imm", "jz addr"], "63245": ["cmp bl imm", "jz short addr"], "63250": ["cmp bl imm", "jz short addr"], "63255": ["inc from", "mov [ecx] ax", "add ecx imm", "cmp from esi", "jb short addr"], "63266": ["lea func [fromLim_0+imm]"], "63272": ["xor eax eax", "cmp func from", "setnbe al", "add eax eax"], "63281": ["mov func [esp+imm]", "mov [edi] from", "mov edi [esp+imm]", "mov [edi] to", "pop ebx", "pop func", "pop edi", "pop func", "retn"], "63304": ["mov ebx func", "sub ebx from", "dec ebx", "jle addr"], "63315": ["mov bl [from+imm]", "add ecx imm", "shl eax imm", "and ebx imm", "and eax 7C0h", "add from imm", "or eax ebx", "mov [to-imm] ax", "jmp short addr"], "63344": ["mov ebx func", "sub ebx to", "cmp ebx imm", "jle addr"], "63357": ["mov ebx func", "sub ebx from", "cmp ebx imm", "jle addr"], "63370": ["movsx ebx byte ptr [from+imm]", "shl eax imm", "add to imm", "shl ebx imm", "and eax imm", "and ebx imm", "add from imm", "or eax ebx", "mov bl [edx-imm]", "and ebx imm", "or eax ebx", "movsx ebx byte ptr [edx-imm]", "shl ebx imm", "and ebx imm", "or eax ebx", "sub n offset addr", "mov ebx n", "and n 3FFh", "shr n imm", "or eax imm", "or ebx imm", "mov [ecx-imm] ax", "mov [ecx-imm] bx", "jmp addr"], "63464": ["mov ebx func", "sub ebx from", "cmp ebx imm", "jle short addr"], "63473": ["mov bl [from+imm]", "add ecx imm", "and ebx imm", "add from imm", "shl eax imm", "or eax ebx", "movsx ebx byte ptr [edx-imm]", "shl ebx imm", "and ebx imm", "or eax ebx", "mov [to-imm] ax", "jmp addr"], "63520": ["mov eax imm", "jmp after"], "63530": ["mov eax imm", "jmp after"]}, "preds": [63344], "succs": [63281]}, "latin1_toUtf8": {"disasm": {"63552": ["push ebp", "push edi", "push esi", "push ebx", "mov ebx [esp+imm]", "mov esi [esp+imm]", "mov ecx [esp+imm]", "mov edi [esp+imm]", "mov eax [ebx]", "cmp esi eax", "jnz short addr"], "63578": ["jmp short addr"], "63584": ["cmp edi ebp", "jz short addr"], "63588": ["lea c [eax+imm]", "mov [ebx] edx", "mov edx func", "lea ebp [edx+imm]", "mov func ebp", "mov al [eax]", "mov [edx] al", "mov eax [ebx]", "cmp esi eax", "jz short addr"], "63610": ["mov dl [eax]", "mov ebp func", "test dl dl", "jns short addr"], "63618": ["mov eax func", "sub eax ebp", "dec eax", "jle short addr"], "63625": ["lea eax [ebp+imm]", "mov func eax", "mov al dl", "shr al imm", "and c imm", "or eax imm", "or edx imm", "mov [ebp+imm] al", "mov eax func", "lea ebp [eax+imm]", "mov func ebp", "mov [eax] dl", "mov eax func", "inc eax", "mov func eax", "cmp func eax", "jnz short addr"], "63665": ["pop func", "xor eax eax", "pop func", "pop func", "pop ebp", "retn"], "63672": ["pop func", "mov eax imm", "pop func", "pop func", "pop ebp", "retn"]}, "preds": [63584, 63618], "succs": []}, "latin1_toUtf16": {"disasm": {"63696": ["push ebp", "push edi", "push esi", "push ebx", "mov ecx [esp+imm]", "mov ebx [esp+imm]", "mov edx [esp+imm]", "mov esi [esp+imm]", "mov eax [ecx]", "cmp ebx eax", "ja short addr"], "63722": ["jmp short addr"], "63728": ["lea edi [eax+imm]", "mov [ecx] edi", "mov edi func", "mov al [eax]", "and eax 0FFh", "lea ebp [edi+imm]", "mov func ebp", "mov [edi] ax", "mov eax [ecx]", "cmp eax ebx", "jnb short addr"], "63756": ["cmp func func", "jb short addr"], "63760": ["jz short addr"], "63762": ["pop func", "xor eax eax", "pop func", "pop edi", "pop ebp", "retn"], "63776": ["pop func", "mov eax imm", "pop func", "pop edi", "pop ebp", "retn"]}, "preds": [63760], "succs": []}, "ascii_toUtf8": {"disasm": {"63792": ["push ebp", "push edi", "push esi", "push ebx", "mov ebx [esp+imm]", "mov edi [esp+imm]", "mov edx [esp+imm]", "mov ebp [esp+imm]", "mov eax [ebx]", "cmp edi eax", "ja short addr"], "63818": ["jmp short addr"], "63824": ["lea ecx [eax+imm]", "mov [ebx] ecx", "mov ecx func", "lea esi [ecx+imm]", "mov func esi", "mov al [eax]", "mov [ecx] al", "mov eax [ebx]", "cmp eax edi", "jnb short addr"], "63846": ["cmp func func", "jb short addr"], "63850": ["jz short addr"], "63852": ["pop func", "xor eax eax", "pop esi", "pop func", "pop func", "retn"], "63864": ["pop func", "mov eax imm", "pop esi", "pop func", "pop func", "retn"]}, "preds": [63850], "succs": []}, "little2_toUtf8": {"disasm": {"63888": ["push ebp", "push edi", "push esi", "push ebx", "sub esp imm", "mov eax [esp+imm]", "mov esi [esp+imm]", "mov ecx [eax]", "mov eax [esp+imm]", "sub eax from", "and eax imm", "add eax from", "mov [esp+imm] eax", "cmp from func", "jb short addr"], "63924": ["jmp addr"], "63936": ["test bl bl", "jnz addr"], "63944": ["test dl dl", "js addr"], "63952": ["cmp [esp+imm] edi", "jz addr"], "63962": ["lea eax [edi+imm]", "mov [esi] eax", "mov [edi] dl", "lea esi [esi+imm]"], "63976": ["add from imm", "cmp [esp+imm] from", "jbe addr"], "63989": ["mov bl [from+imm]", "mov dl [from]", "mov al bl", "mov edi [esi]", "and eax 0FFh", "cmp bl imm", "mov [esp+imm] eax", "jbe short addr"], "64011": ["lea ebp [hi+imm]", "mov eax ebp", "cmp al imm", "ja addr"], "64024": ["mov hi [esp+imm]", "sub ebx edi", "cmp ebx imm", "jle addr"], "64039": ["mov ebx [esp+imm]", "sub ebx from", "cmp ebx imm", "jle addr"], "64054": ["mov bl dl", "mov eax [esp+imm]", "shl eax imm", "add from imm", "shr bl imm", "and eax imm", "and ebx 0FFh", "or eax ebx", "lea ebx [edi+imm]", "inc eax", "mov [esi] ebx", "mov ebx plane", "sar ebx imm", "shl plane imm", "or ebx imm", "mov [edi] bl", "and eax imm", "mov edi [esi]", "lea ebx [edi+imm]", "mov [esi] ebx", "mov bl dl", "shr bl imm", "shl lo imm", "and ebx imm", "or ebx eax", "and edx imm", "or ebx imm", "mov [edi] bl", "xor ebx ebx", "mov bl [ecx+imm]", "mov al [ecx]", "shl ebx imm", "add ecx imm", "and ebx imm", "or edx ebx", "mov bl al", "shr bl imm", "and lo2 imm", "or edx ebx", "mov ebx [esi]", "or edx imm", "or eax imm", "lea edi [ebx+imm]", "cmp [esp+imm] ecx", "mov [esi] edi", "mov [ebx] dl", "mov edx [esi]", "lea ebx [edx+imm]", "mov [esi] ebx", "mov [edx] al", "ja addr"], "64191": ["mov eax [esp+imm]", "mov [eax] from", "add esp imm", "xor eax eax", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "64208": ["mov hi [esp+imm]", "sub ebx edi", "dec ebx", "jle short addr"], "64217": ["lea ebx [edi+imm]", "mov eax [esp+imm]", "shl eax imm", "mov [esi] ebx", "mov bl dl", "shr bl imm", "or eax ebx", "or eax imm", "mov [edi] al"], "64240": ["mov eax [esi]", "and lo imm", "or edx imm", "lea ebx [eax+imm]", "mov [esi] ebx", "mov [eax] dl", "jmp addr"], "64264": ["mov ebp [esp+imm]", "sub ebp edi", "cmp ebp imm", "jle short addr"], "64275": ["shr bl imm", "lea ebp [edi+imm]", "or ebx imm", "mov [esi] ebp", "mov eax [esp+imm]", "mov [edi] bl", "shl eax imm", "mov ebx [esi]", "mov ebp eax", "mov al dl", "lea edi [ebx+imm]", "and ebp imm", "shr al imm", "mov [esi] edi", "mov edi eax", "mov eax ebp", "or eax edi", "or eax imm", "mov [ebx] al", "jmp short addr"], "64328": ["mov eax [esp+imm]", "mov [eax] from", "add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "64347": ["mov eax [esp+imm]", "mov [eax] from", "add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"]}, "preds": [64039], "succs": []}, "little2_toUtf16": {"disasm": {"64368": ["push ebp", "push edi", "push esi", "push ebx", "push ecx", "mov eax [esp+imm]", "mov ebx [esp+imm]", "mov edi [esp+imm]", "mov ebp [esp+imm]", "mov eax [eax]", "mov edx [ebx]", "sub ebp eax", "mov ecx edi", "and ebp imm", "sub ecx edx", "and ecx imm", "mov [esp+imm] imm", "lea esi [eax+imm]", "cmp ebp ecx", "jle short addr"], "64419": ["mov cl [fromLim_0-imm]", "and ecx imm", "cmp cl 0D8h", "jz short addr"], "64430": ["cmp eax func", "jnb short addr"], "64434": ["mov ecx [esp+imm]", "mov [esp+imm] ebx", "jmp short addr"], "64448": ["movzx ebp byte ptr [eax+imm]", "xor ebx ebx", "and ebp 0FFh", "shl ebp imm", "mov bl [eax]", "mov eax ebx", "mov ebx [esp+imm]", "or eax ebp", "lea ebp [edx+imm]", "mov [ebx] ebp", "mov [edx] ax", "mov eax [ecx]", "add eax imm", "mov [ecx] eax", "cmp eax func", "jnb short addr"], "64492": ["mov edx [ebx]"], "64494": ["cmp edi edx", "ja short addr"], "64498": ["jz short addr"], "64500": ["mov eax [esp+imm]", "pop edx", "pop ebx", "pop func", "pop edi", "pop ebp", "retn"], "64512": ["sub func imm", "mov [esp+imm] imm", "jmp short addr"], "64528": ["mov [esp+imm] imm", "mov eax [esp+imm]", "pop edx", "pop ebx", "pop func", "pop edi", "pop ebp", "retn"]}, "preds": [64498], "succs": []}, "big2_toUtf8": {"disasm": {"64544": ["push ebp", "push edi", "push esi", "push ebx", "sub esp imm", "mov eax [esp+imm]", "mov esi [esp+imm]", "mov ecx [eax]", "mov eax [esp+imm]", "sub eax from", "and eax imm", "add eax from", "mov [esp+imm] eax", "cmp from func", "jb short addr"], "64580": ["jmp addr"], "64592": ["test bl bl", "jnz addr"], "64600": ["test dl dl", "js addr"], "64608": ["cmp [esp+imm] edi", "jz addr"], "64618": ["lea eax [edi+imm]", "mov [esi] eax", "mov [edi] dl", "lea esi [esi+imm]"], "64632": ["add from imm", "cmp [esp+imm] from", "jbe addr"], "64645": ["mov bl [from]", "mov dl [from+imm]", "mov al bl", "mov edi [esi]", "and eax 0FFh", "cmp bl imm", "mov [esp+imm] eax", "jbe short addr"], "64667": ["lea ebp [hi+imm]", "mov eax ebp", "cmp al imm", "ja addr"], "64680": ["mov hi [esp+imm]", "sub ebx edi", "cmp ebx imm", "jle addr"], "64695": ["mov ebx [esp+imm]", "sub ebx from", "cmp ebx imm", "jle addr"], "64710": ["mov bl dl", "mov eax [esp+imm]", "shl eax imm", "add from imm", "shr bl imm", "and eax imm", "and ebx 0FFh", "or eax ebx", "lea ebx [edi+imm]", "inc eax", "mov [esi] ebx", "mov ebx plane", "sar ebx imm", "shl plane imm", "or ebx imm", "mov [edi] bl", "and eax imm", "mov edi [esi]", "lea ebx [edi+imm]", "mov [esi] ebx", "mov bl dl", "shr bl imm", "shl lo imm", "and ebx imm", "or ebx eax", "and edx imm", "or ebx imm", "mov [edi] bl", "xor ebx ebx", "mov bl [ecx]", "mov al [ecx+imm]", "shl ebx imm", "add ecx imm", "and ebx imm", "or edx ebx", "mov bl al", "shr bl imm", "and lo2 imm", "or edx ebx", "mov ebx [esi]", "or edx imm", "or eax imm", "lea edi [ebx+imm]", "cmp [esp+imm] ecx", "mov [esi] edi", "mov [ebx] dl", "mov edx [esi]", "lea ebx [edx+imm]", "mov [esi] ebx", "mov [edx] al", "ja addr"], "64847": ["mov eax [esp+imm]", "mov [eax] from", "add esp imm", "xor eax eax", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "64864": ["mov hi [esp+imm]", "sub ebx edi", "dec ebx", "jle short addr"], "64873": ["lea ebx [edi+imm]", "mov eax [esp+imm]", "shl eax imm", "mov [esi] ebx", "mov bl dl", "shr bl imm", "or eax ebx", "or eax imm", "mov [edi] al"], "64896": ["mov eax [esi]", "and lo imm", "or edx imm", "lea ebx [eax+imm]", "mov [esi] ebx", "mov [eax] dl", "jmp addr"], "64920": ["mov ebp [esp+imm]", "sub ebp edi", "cmp ebp imm", "jle short addr"], "64931": ["shr bl imm", "lea ebp [edi+imm]", "or ebx imm", "mov [esi] ebp", "mov eax [esp+imm]", "mov [edi] bl", "shl eax imm", "mov ebx [esi]", "mov ebp eax", "mov al dl", "lea edi [ebx+imm]", "and ebp imm", "shr al imm", "mov [esi] edi", "mov edi eax", "mov eax ebp", "or eax edi", "or eax imm", "mov [ebx] al", "jmp short addr"], "64984": ["mov eax [esp+imm]", "mov [eax] from", "add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "65003": ["mov eax [esp+imm]", "mov [eax] from", "add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"]}, "preds": [64695], "succs": []}, "big2_toUtf16": {"disasm": {"65024": ["push ebp", "push edi", "push esi", "push ebx", "push ecx", "mov eax [esp+imm]", "mov ebx [esp+imm]", "mov edi [esp+imm]", "mov ebp [esp+imm]", "mov eax [eax]", "mov edx [ebx]", "sub ebp eax", "mov ecx edi", "and ebp imm", "sub ecx edx", "and ecx imm", "mov [esp+imm] imm", "lea esi [eax+imm]", "cmp ebp ecx", "jle short addr"], "65075": ["mov cl [fromLim_0-imm]", "and ecx imm", "cmp cl 0D8h", "jz short addr"], "65086": ["cmp eax func", "jnb short addr"], "65090": ["mov ecx [esp+imm]", "mov [esp+imm] ebx", "jmp short addr"], "65104": ["movzx ebp byte ptr [eax]", "xor ebx ebx", "and ebp 0FFh", "shl ebp imm", "mov bl [eax+imm]", "mov eax ebx", "mov ebx [esp+imm]", "or eax ebp", "lea ebp [edx+imm]", "mov [ebx] ebp", "mov [edx] ax", "mov eax [ecx]", "add eax imm", "mov [ecx] eax", "cmp eax func", "jnb short addr"], "65148": ["mov edx [ebx]"], "65150": ["cmp edi edx", "ja short addr"], "65154": ["jz short addr"], "65156": ["mov eax [esp+imm]", "pop edx", "pop ebx", "pop func", "pop edi", "pop ebp", "retn"], "65168": ["sub func imm", "mov [esp+imm] imm", "jmp short addr"], "65184": ["mov [esp+imm] imm", "mov eax [esp+imm]", "pop edx", "pop ebx", "pop func", "pop edi", "pop ebp", "retn"]}, "preds": [65154], "succs": []}, "little2_cdataSectionTok": {"disasm": {"65200": ["push ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "push eax", "mov ecx [esp+imm]", "cmp ecx [esp+imm]", "jnb addr"], "65230": ["mov eax [esp+imm]", "sub eax ecx", "test al imm", "jz short addr"], "65240": ["and eax imm", "jz addr"], "65249": ["add n ecx", "mov [esp+imm] eax"], "65255": ["mov al [ecx+imm]", "mov dl [ecx]", "test al al", "jz short addr"], "65264": ["cmp al 0DFh", "ja short addr"], "65268": ["cmp al 0DBh", "ja short func"], "65272": ["add eax imm", "cmp al imm", "ja short func"], "65279": ["mov eax [esp+imm]", "sub eax ecx", "cmp eax imm", "jle addr"], "65294": ["lea edx [ecx+imm]", "jmp short addr"], "65304": ["and edx 0FFh", "mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "ja short func"], "65321": ["mov esi eax", "xor eax eax", "mov al [esi+imm]", "mov ebx func - 2DF78h)[edi+imm]", "add ebx edi", "jmp ebx"], "65344": ["inc al", "jnz short func"], "65348": ["and edx 0FFh", "sub edx 0FEh", "cmp edx imm", "ja short func"], "65365": ["mov eax [esp+imm]", "mov [eax] ecx", "xor eax eax"], "65373": ["pop edx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "65384": ["mov eax [esp+imm]", "sub eax ecx", "dec eax", "jle addr"], "65397": ["lea esi [esi+imm]"], "65400": ["lea edx [ecx+imm]", "lea esi [esi+imm]", "nop"], "65408": ["mov ebp [esp+imm]", "sub ebp func", "cmp ebp imm", "jle short func"], "65419": ["mov al [ptr_0+imm]", "mov bl func"], "65424": ["test al al", "jnz short addr"], "65428": ["and ebx 0FFh", "mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "ja short func"], "65445": ["mov esi eax", "xor eax eax", "mov al [esi+imm]", "mov ebx func - 2DF78h)[edi+imm]", "add ebx edi", "jmp ebx"], "65464": ["inc al", "jnz short func"], "65468": ["and ebx 0FFh", "sub ebx 0FEh", "cmp ebx imm", "ja short func"], "65485": ["mov eax [esp+imm]", "mov [eax] func", "mov eax imm", "pop func", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "65504": ["lea edx [ecx+imm]", "mov ebp [esp+imm]", "sub ebp func", "cmp ebp imm", "jle addr"], "65522": ["mov al [ecx+imm]", "mov bl [ecx+imm]", "test al al", "jz addr"], "65536": ["cmp al 0DFh", "ja short addr"], "65540": ["cmp al 0DBh", "ja short func"], "65544": ["add eax imm", "cmp al imm", "jbe short func"], "65551": ["add func imm", "jmp addr"], "65560": ["cmp ebp imm", "jle short func"], "65565": ["add func imm", "jmp addr"], "65576": ["cmp ebp imm", "jz short func"], "65581": ["add func imm", "jmp addr"], "65592": ["mov eax [esp+imm]", "add ecx imm", "mov [eax] ecx", "mov eax imm", "jmp addr"], "65616": ["lea eax [ecx+imm]", "mov edx [esp+imm]", "sub edx func", "dec edx", "jle addr"], "65632": ["cmp byte ptr [ecx+imm] imm", "mov dl [ecx+imm]", "jnz short addr"], "65641": ["and edx 0FFh", "mov esi [esp+imm]", "cmp byte ptr [esi+imm] imm", "jnz short addr"], "65658": ["lea func [ecx+imm]"], "65661": ["mov edi [esp+imm]", "mov func - 2DF78h)[edi] func", "mov func imm", "jmp addr"], "65680": ["mov eax [esp+imm]", "sub eax ecx", "cmp eax imm", "jle short addr"], "65691": ["lea edx [ecx+imm]", "jmp addr"], "65704": ["cmp bl imm", "jnz addr"], "65713": ["lea esi [ecx+imm]", "mov [esp+imm] func", "mov func [esp+imm]", "sub esi [esp+imm]", "dec esi", "jle short addr"], "65729": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "65739": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "65749": ["mov eax [esp+imm]", "add ecx imm", "mov [eax] ecx", "mov eax imm", "jmp addr"], "65768": ["mov eax imm", "jmp addr"], "65778": ["mov eax imm", "jmp addr"], "65788": ["or eax imm", "jmp addr"]}, "preds": [65240, 65504, 65616, 65713], "succs": [65373]}, "little2_scanRef": {"disasm": {"65808": ["push ebp", "push edi", "mov edi end", "push esi", "sub edi ptr", "push ebx", "call func", "add esi (offset func - $)", "sub esp imm", "cmp edi imm", "mov [esp+imm] func", "jle addr"], "65842": ["mov bl [ptr+imm]", "mov ebp end", "test bl bl", "mov cl [ptr]", "jz short addr"], "65853": ["cmp bl 0DFh", "ja addr"], "65862": ["cmp bl 0DBh", "ja short func"], "65867": ["lea func [ebx+imm]", "cmp al imm", "ja short addr"], "65874": ["cmp edi imm", "jle addr"], "65883": ["lea esi [esi+imm]", "nop"], "65888": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax"], "65896": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "65904": ["xor ebx ebx", "mov bl cl", "mov bl [enc_0+imm]", "sub ebx imm", "cmp bl imm", "ja short func"], "65920": ["and ebx 0FFh", "mov func func - 2DF78h)[esi+imm]", "add eax esi", "jmp eax"], "65944": ["xor ebx ebx", "lea esi func - 2DF78h)[esi]"], "65952": ["and ebx 0FFh", "movzx edi ds:(nmstrtPages - 2DF78h)[esi+imm]", "mov bl cl", "and edi 0FFh", "shr bl imm", "and ebx 0FFh", "lea ebx [ebx+imm]", "mov ebx ds:(namingBitmap - 2DF78h)[esi+imm]", "shr ebx cl", "and ebx imm", "jz short func"], "66000": ["add ptr imm", "mov eax end", "sub eax ptr", "mov [esp+imm] eax", "dec eax", "jle addr"], "66018": ["lea eax (namePages - 2DF78h)[esi]", "mov [esp+imm] eax", "lea eax (namingBitmap - 2DF78h)[esi]", "mov [esp+imm] eax"], "66038": ["mov bl [ptr+imm]", "mov cl [ptr]", "test bl bl", "jz short addr"], "66047": ["cmp bl 0DFh", "ja addr"], "66056": ["cmp bl 0DBh", "ja func"], "66065": ["lea edi [ebx+imm]", "mov eax edi", "cmp al imm", "ja short addr"], "66074": ["cmp [esp+imm] imm", "jg func"], "66085": ["jmp addr"], "66096": ["cmp bl 0FFh", "jnz addr"], "66105": ["mov edi ecx", "and edi 0FFh", "sub edi 0FEh", "cmp edi imm", "jbe func"], "66128": ["jmp addr"], "66136": ["xor ebx ebx", "mov eax [esp+imm]", "mov bl cl", "mov bl [eax+imm]", "sub ebx imm", "cmp bl imm", "ja func"], "66159": ["and ebx 0FFh", "mov eax func - 2DF78h)[esi+imm]", "add eax esi", "jmp eax"], "66176": ["xor ebx ebx", "lea esi func - 2DF78h)[esi]"], "66184": ["and ebx 0FFh", "mov eax [esp+imm]", "movzx edi byte ptr [eax+imm]", "mov bl cl", "and edi 0FFh", "shr bl imm", "mov eax [esp+imm]", "and ebx 0FFh", "lea ebx [ebx+imm]", "mov ebx [eax+imm]", "shr ebx cl", "and ebx imm", "jz func"], "66236": ["add ptr imm", "mov eax end", "sub eax ptr", "mov [esp+imm] eax", "dec eax", "jg addr"], "66254": ["xchg ax ax"], "66256": ["or eax imm", "jmp addr"], "66264": ["lea ebx [ptr+imm]", "mov ecx end", "sub ecx ebx", "dec ecx", "jle short addr"], "66274": ["cmp byte ptr [ptr+imm] imm", "jnz addr"], "66284": ["mov cl [ptr+imm]", "cmp cl imm", "jz addr"], "66296": ["and ecx 0FFh", "mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jnz short addr"], "66312": ["add ptr imm", "mov ecx end", "sub ecx edx", "dec ecx", "jle short addr"], "66322": ["mov eax [esp+imm]"], "66325": ["cmp byte ptr [edx+imm] imm", "jnz func"], "66335": ["xor ecx ecx", "mov cl [edx]", "mov cl [eax+imm]", "cmp cl imm", "jz addr"], "66352": ["cmp cl imm", "jnz func"], "66361": ["add edx imm", "mov ecx end", "sub ecx edx", "dec ecx", "jg short addr"], "66371": ["jmp short addr"], "66376": ["cmp edi imm", "jnz func"], "66385": ["jmp short addr"], "66392": ["cmp bl 0FFh", "jnz addr"], "66401": ["mov edi ecx", "and edi 0FFh", "sub edi 0FEh", "cmp edi imm", "jbe func"], "66424": ["jmp addr"], "66432": ["mov eax [esp+imm]", "mov [eax] ebx", "xor eax eax", "jmp addr"], "66445": ["mov eax [esp+imm]", "add ptr imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "66464": ["cmp [esp+imm] imm", "jnz func"], "66475": ["mov eax imm", "jmp addr"], "66485": ["xor ebx ebx", "mov esi [esp+imm]", "mov bl [ptr+imm]", "xor eax eax", "mov al [esi+imm]", "mov ebx eax", "sub ebx imm", "cmp ebx imm", "ja short addr"], "66509": ["add ptr imm", "mov ecx end", "sub ecx edx", "dec ecx", "jle addr"], "66523": ["mov eax [esp+imm]", "jmp short addr"], "66528": ["sub ecx imm", "cmp cl imm", "ja func"], "66540": ["add edx imm", "mov ecx end", "sub ecx edx", "dec ecx", "jle addr"], "66554": ["cmp byte ptr [edx+imm] imm", "jnz func"], "66564": ["xor ecx ecx", "mov cl [edx]", "mov cl [eax+imm]", "cmp cl imm", "jnz short addr"], "66577": ["lea esi func - 2DF78h)[esi]"], "66584": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "66603": ["lea ecx [ptr+imm]", "mov ebx end", "sub ebx ecx", "dec ebx", "jle addr"], "66617": ["cmp byte ptr [ptr+imm] imm", "jz addr"], "66627": ["mov eax [esp+imm]", "mov [eax] ecx", "xor eax eax", "jmp addr"]}, "preds": [66485, 66617], "succs": [65896]}, "little2_scanPercent": {"disasm": {"66640": ["push ebp", "push edi", "mov edi func", "push esi", "sub edi ptr", "push ebx", "call func", "add esi (offset func - $)", "sub esp imm", "cmp edi imm", "jle addr"], "66671": ["mov ebp enc", "mov ebx func", "mov al [ptr+imm]", "mov cl [ptr]", "mov byte ptr [esp+imm] cl", "test al al", "jz short addr"], "66687": ["cmp al 0DFh", "ja addr"], "66695": ["cmp al 0DBh", "ja short func"], "66699": ["lea ecx [eax+imm]", "cmp cl imm", "ja short addr"], "66707": ["cmp edi imm", "jle addr"], "66716": ["lea esi [esi+imm]"], "66720": ["mov eax [esp+imm]", "mov [eax] ptr", "xor eax eax"], "66728": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "66736": ["xor eax eax", "mov al cl", "mov al [enc+imm]", "sub eax imm", "cmp al imm", "ja short func"], "66751": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "66768": ["xor eax eax", "lea esi func - 2DF78h)[esi]"], "66776": ["and eax 0FFh", "mov cl byte ptr [esp+imm]", "movzx edi ds:(nmstrtPages - 2DF78h)[esi+imm]", "mov al cl", "and edi 0FFh", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov eax ds:(namingBitmap - 2DF78h)[esi+imm]", "shr eax cl", "test al imm", "jz short func"], "66824": ["add ptr imm", "mov eax func", "sub eax ptr", "mov [esp+imm] eax", "dec eax", "jle addr"], "66841": ["lea eax (namePages - 2DF78h)[esi]", "mov [esp+imm] func", "mov [esp+imm] eax", "lea eax (namingBitmap - 2DF78h)[esi]", "mov [esp+imm] eax"], "66865": ["mov al [ptr+imm]", "mov cl [ptr]", "test al al", "jz short addr"], "66874": ["cmp al 0DFh", "ja addr"], "66882": ["cmp al 0DBh", "ja func"], "66890": ["lea edi [eax+imm]", "mov ebx edi", "cmp bl imm", "ja short addr"], "66900": ["cmp [esp+imm] imm", "jg func"], "66910": ["jmp addr"], "66920": ["cmp al 0FFh", "jnz addr"], "66928": ["movzx edi byte ptr [esp+imm]", "and edi 0FFh", "sub edi 0FEh", "cmp edi imm", "jbe func"], "66953": ["jmp addr"], "66960": ["xor eax eax", "mov al cl", "mov al [enc+imm]", "sub eax imm", "cmp al imm", "ja func"], "66979": ["and eax 0FFh", "mov ebx func - 2DF78h)[esi+imm]", "add ebx esi", "jmp ebx"], "67000": ["mov eax [esp+imm]", "mov [eax] ptr", "mov eax imm", "jmp addr"], "67016": ["xor eax eax", "lea esi func - 2DF78h)[esi]"], "67024": ["and eax 0FFh", "mov ebx [esp+imm]", "movzx edi byte ptr [ebx+imm]", "mov al cl", "and edi 0FFh", "shr al imm", "mov ebx [esp+imm]", "and eax 0FFh", "lea eax [eax+imm]", "mov eax [ebx+imm]", "shr eax cl", "test al imm", "jz func"], "67073": ["add ptr imm", "mov ebx [esp+imm]", "sub ebx ptr", "mov [esp+imm] ebx", "dec ebx", "jg addr"], "67092": ["lea esi [esi+imm]"], "67096": ["or eax imm", "jmp addr"], "67104": ["cmp edi imm", "jnz func"], "67113": ["jmp short addr"], "67120": ["cmp al 0FFh", "jnz short addr"], "67124": ["mov edi ecx", "and edi 0FFh", "sub edi 0FEh", "cmp edi imm", "jbe func"], "67147": ["jmp short addr"], "67149": ["mov eax [esp+imm]", "add ptr imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "67168": ["cmp [esp+imm] imm", "jnz func"], "67178": ["mov eax imm", "jmp addr"]}, "preds": [66707, 66910, 67113, 67168], "succs": [66728]}, "little2_scanLit": {"disasm": {"67200": ["push ebp", "push edi", "push esi", "call func", "add esi (offset func - $)", "push ebx", "sub esp imm", "mov ebp [esp+imm]", "mov [esp+imm] func", "mov edi ebp", "sub edi func", "cmp edi imm", "jle short addr"], "67235": ["mov [esp+imm] func", "xchg ax ax"], "67240": ["mov al [ptr_0+imm]", "mov bl func", "test al al", "jnz short addr"], "67249": ["and ebx 0FFh", "mov eax [esp+imm]", "mov al [eax+imm]", "cmp al imm", "ja short func"], "67266": ["xor ebx ebx", "mov bl al", "mov edx func - 2DF78h)[esi+imm]", "add edx esi", "jmp edx"], "67288": ["inc al", "jnz short func"], "67292": ["and ebx 0FFh", "sub ebx 0FEh", "cmp ebx imm", "jbe short func"], "67309": ["lea esi [esi+imm]"], "67312": ["add func imm"], "67315": ["mov edi ebp", "sub edi func", "cmp edi imm", "jg short addr"], "67324": ["add esp imm", "or eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "67336": ["mov eax [esp+imm]", "mov [eax] func", "xor eax eax"], "67344": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "67352": ["and eax 0FFh", "lea ebx [ptr_0+imm]", "cmp eax [esp+imm]", "jz short addr"], "67366": ["mov ecx func", "jmp short addr"], "67376": ["cmp al 0DFh", "ja short addr"], "67380": ["cmp al 0DBh", "ja short func"], "67384": ["add eax imm", "cmp al imm", "ja short func"], "67391": ["cmp edi imm", "jle short addr"], "67396": ["add func imm", "jmp short addr"], "67408": ["cmp edi imm", "jz short addr"], "67413": ["add func imm", "jmp short addr"], "67418": ["mov eax imm", "jmp short addr"], "67425": ["sub ebp func", "mov edx [esp+imm]", "dec ebp", "jle short addr"], "67433": ["mov eax [esp+imm]", "mov [eax] func", "xor eax eax", "cmp byte ptr [ecx+imm] imm", "jnz short addr"], "67447": ["xor func func", "mov bl [ecx+imm]", "mov ecx ebx", "mov cl [edx+imm]", "cmp cl imm", "ja short addr"], "67463": ["mov eax imm", "shl eax cl", "and eax imm", "cmp eax imm", "sbb eax eax", "add esp imm", "xor eax imm", "pop ebx", "and eax imm", "pop esi", "pop edi", "pop ebp", "retn"], "67494": ["mov eax imm", "jmp addr"]}, "preds": [67425], "succs": [67344]}, "little2_ignoreSectionTok": {"disasm": {"67504": ["push ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "sub esp imm", "mov ebp [esp+imm]", "mov edx [esp+imm]", "mov ebx ebp", "mov esi [esp+imm]", "sub ebx edx", "test bl imm", "jz short addr"], "67543": ["and n imm", "lea ebp [edx+imm]"], "67549": ["cmp n imm", "jle addr"], "67558": ["mov al [ptr_0+imm]", "mov cl func", "mov [esp+imm] imm"], "67570": ["test al al", "jz short addr"], "67574": ["cmp al 0DFh", "ja short addr"], "67578": ["cmp al 0DBh", "ja short func"], "67582": ["add eax imm", "cmp al imm", "ja short func"], "67589": ["cmp ebx imm", "jle addr"], "67598": ["add edx imm"], "67601": ["mov ebx func", "sub ebx func", "cmp ebx imm", "jle addr"], "67614": ["mov al [ptr_0+imm]", "mov cl func", "test al al", "jnz short addr"], "67623": ["and ecx 0FFh", "cmp byte ptr [esi+imm] imm", "ja short func"], "67636": ["xor eax eax", "mov al [esi+imm]", "mov ecx func - 2DF78h)[edi+imm]", "add ecx edi", "jmp ecx"], "67656": ["inc al", "jnz short func"], "67660": ["and ecx 0FFh", "sub ecx 0FEh", "cmp ecx imm", "ja short func"], "67677": ["lea esi [esi+imm]"], "67680": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax"], "67688": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "67696": ["add edx imm", "jmp short addr"], "67704": ["cmp ebx imm", "jz addr"], "67713": ["add edx imm", "jmp short addr"], "67720": ["lea eax [edx+imm]", "mov ebx ebp", "sub ebx eax", "mov [esp+imm] eax", "cmp ebx imm", "jle addr"], "67740": ["mov al [edx+imm]", "mov cl [edx+imm]", "test al al", "jnz short addr"], "67750": ["cmp cl imm", "jnz short addr"], "67755": ["lea eax [edx+imm]", "mov ebx ebp", "sub ebx eax", "mov [esp+imm] eax", "cmp ebx imm", "jle short addr"], "67771": ["mov al [edx+imm]", "mov cl [edx+imm]", "test al al", "jnz short addr"], "67781": ["cmp cl imm", "jnz short addr"], "67786": ["mov eax [esp+imm]", "add edx imm", "test eax eax", "jz addr"], "67800": ["mov ebx [esp+imm]", "dec ebx", "mov [esp+imm] ebx", "jmp addr"], "67816": ["lea eax [edx+imm]", "mov ebx ebp", "sub ebx eax", "mov [esp+imm] eax", "cmp ebx imm", "jle short addr"], "67832": ["mov al [edx+imm]", "mov cl [edx+imm]", "test al al", "jnz short addr"], "67842": ["cmp cl imm", "jz short addr"], "67847": ["mov edx [esp+imm]", "jmp addr"], "67856": ["mov edx [esp+imm]", "jmp addr"], "67872": ["or eax imm", "jmp addr"], "67880": ["lea eax [edx+imm]", "mov ebx ebp", "sub ebx eax", "mov [esp+imm] eax", "cmp ebx imm", "jle short addr"], "67896": ["mov al [edx+imm]", "mov cl [edx+imm]", "test al al", "jnz short addr"], "67906": ["cmp cl imm", "jnz short addr"], "67911": ["mov eax [esp+imm]", "add edx imm", "inc eax", "mov [esp+imm] eax", "jmp addr"], "67926": ["mov eax imm", "jmp addr"], "67936": ["mov eax [esp+imm]", "mov [eax] func", "mov eax imm", "jmp addr"]}, "preds": [67786], "succs": [67688]}, "little2_isPublicId": {"disasm": {"67952": ["push ebp", "push edi", "push esi", "call func", "add esi (offset func - $)", "push ebx", "mov ebx [esp+imm]", "mov eax [esp+imm]", "sub ebx imm", "add eax imm", "mov edx func", "mov edi [esp+imm]", "sub edx func", "dec edx", "jle short addr"], "67992": ["cmp byte ptr [ptr_0+imm] imm", "jz short addr"], "67998": ["mov edi [esp+imm]", "mov [edi] func", "xor func func", "pop func", "pop esi", "pop edi", "pop ebp", "retn"], "68016": ["xor edx edx", "mov cl func", "mov dl cl", "mov dl [enc_0+imm]", "sub edx imm", "cmp dl imm", "ja short func"], "68034": ["and edx 0FFh", "mov ebp func - 2DF78h)[esi+imm]", "add ebp esi", "jmp ebp"], "68056": ["cmp cl imm", "jz short addr"], "68061": ["lea esi [esi+imm]"], "68064": ["add func imm", "mov edx func", "sub edx func", "dec edx", "jg short addr"], "68074": ["pop func", "mov func imm", "pop esi", "pop func", "pop ebp", "retn"], "68088": ["cmp cl imm", "jz short func"], "68093": ["cmp cl imm", "jnz short addr"], "68098": ["add func imm", "mov edx func", "sub edx func", "dec edx", "jg short addr"], "68108": ["jmp short addr"], "68112": ["test cl cl", "js short addr"], "68116": ["add func imm", "mov edx func", "sub edx func", "dec edx", "jg addr"], "68130": ["jmp short addr"]}, "preds": [68116], "succs": [68074]}, "little2_getAtts": {"disasm": {"68144": ["push ebp", "xor ebp ebp", "push edi", "mov edi imm", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov ecx [esp+imm]", "mov [esp+imm] imm", "lea edx [ecx+imm]", "mov al [ecx+imm]", "mov cl [ecx+imm]", "mov [esp+imm] cl", "lea esi [esi+imm]"], "68200": ["test al al", "jnz short addr"], "68204": ["xor eax eax", "mov ecx [esp+imm]", "mov al [esp+imm]", "mov al [ecx+imm]", "sub eax imm", "cmp al imm", "ja short func"], "68225": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "68248": ["cmp state imm", "jnz addr"], "68257": ["lea esi [esi+imm]"], "68264": ["mov cl [ptr_0+imm]", "mov al [ptr_0+imm]", "mov [esp+imm] cl", "add func imm", "test al al", "jz short addr"], "68281": ["lea esi [esi+imm]"], "68288": ["lea esi [edx+imm]", "cmp al 0DFh", "ja addr"], "68299": ["cmp al 0DBh", "ja addr"], "68307": ["add eax imm", "cmp al imm", "jbe addr"], "68318": ["test edi edi", "jz short addr"], "68322": ["mov cl [edx+imm]", "mov al [edx+imm]", "mov [esp+imm] cl", "mov edx esi", "jmp addr"], "68344": ["lea esi [ptr_0+imm]", "lea esi [esi+imm]", "nop"], "68352": ["test edi edi", "jnz short addr"], "68356": ["cmp nAtts [esp+imm]", "jl addr"], "68366": ["mov al [edx+imm]", "mov dl [edx+imm]", "mov [esp+imm] dl", "mov edi imm", "mov edx esi", "jmp addr"], "68392": ["lea esi [ptr_0+imm]", "cmp state imm", "jz addr"], "68404": ["cmp state imm", "jnz addr"], "68413": ["cmp nAtts [esp+imm]", "jge addr"], "68423": ["mov eax nAtts", "mov state [esp+imm]", "shl eax imm", "mov byte ptr [edi+imm] imm", "mov edi imm", "mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "mov edx esi", "jmp addr"], "68464": ["lea eax [ptr_0+imm]", "cmp state imm", "mov [esp+imm] eax", "jz addr"], "68480": ["cmp state imm", "jnz addr"], "68489": ["cmp nAtts [esp+imm]", "jge addr"], "68499": ["mov eax nAtts", "mov state [esp+imm]", "shl eax imm", "mov ecx [esp+imm]", "add edi eax", "mov [esp+imm] edi", "cmp byte ptr [ecx+imm] imm", "jnz addr"], "68529": ["mov cl [ptr_0+imm]", "mov al [ptr_0+imm]", "mov [esp+imm] cl", "mov func [esp+imm]", "mov edi imm", "jmp addr"], "68560": ["lea esi [ptr_0+imm]", "lea esi [esi+imm]", "nop"], "68568": ["test edi edi", "jnz short addr"], "68572": ["cmp nAtts [esp+imm]", "mov edi imm", "jge short addr"], "68583": ["mov eax nAtts", "mov ecx [esp+imm]", "shl eax imm", "add eax ecx", "mov [eax] edx", "mov byte ptr [eax+imm] imm"], "68600": ["mov cl [edx+imm]", "mov al [edx+imm]", "mov [esp+imm] cl", "lea edx [esi+imm]", "jmp addr"], "68624": ["lea esi [ptr_0+imm]", "test state state", "jz addr"], "68635": ["lea esi [esi+imm]", "nop"], "68640": ["mov al [edx+imm]", "mov dl [edx+imm]", "mov [esp+imm] dl", "mov edx esi", "jmp addr"], "68664": ["cmp nAtts [esp+imm]", "lea esi [ptr_0+imm]", "jge short addr"], "68673": ["mov eax nAtts", "mov ecx [esp+imm]", "shl eax imm", "mov byte ptr [ecx+imm] imm", "mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "mov edx esi", "jmp addr"], "68704": ["lea esi [ptr_0+imm]", "cmp state imm", "jz addr"], "68716": ["cmp nAtts [esp+imm]", "jl addr"], "68726": ["mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "mov [esp+imm] imm", "mov edx esi", "mov state imm", "jmp addr"], "68760": ["lea esi [ptr_0+imm]", "cmp state imm", "jz addr"], "68772": ["cmp nAtts [esp+imm]", "jl addr"], "68782": ["mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "mov [esp+imm] imm", "mov edx esi", "mov state imm", "jmp addr"], "68816": ["test state state", "jnz short addr"], "68820": ["cmp nAtts [esp+imm]", "mov state imm", "jge short addr"], "68831": ["mov eax nAtts", "mov esi [esp+imm]", "shl eax imm", "add eax esi", "mov [eax] func", "mov byte ptr [eax+imm] imm"], "68848": ["mov cl [edx+imm]", "mov al [edx+imm]", "mov [esp+imm] cl", "add edx imm", "jmp addr"], "68866": ["add esp imm", "mov eax nAtts", "pop ebx", "pop esi", "pop state", "pop nAtts", "retn"], "68880": ["inc al", "jnz addr"], "68888": ["xor ecx ecx", "mov cl [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "jbe addr"], "68909": ["jmp addr"], "68920": ["mov eax nAtts", "mov ecx [esp+imm]", "shl eax imm", "mov edi imm", "add eax ecx", "mov [eax] edx", "mov byte ptr [eax+imm] imm", "mov cl [edx+imm]", "mov al [edx+imm]", "mov [esp+imm] cl", "mov edx esi", "jmp addr"], "68960": ["cmp [esp+imm] imm", "jnz addr"], "68971": ["cmp nAtts [esp+imm]", "jge short addr"], "68977": ["mov eax nAtts", "mov edi [esp+imm]", "shl eax imm", "mov [edi+imm] func"], "68990": ["inc nAtts"], "68991": ["mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "xor edi edi", "mov edx esi", "jmp addr"], "69016": ["cmp [esp+imm] imm", "jnz addr"], "69027": ["cmp nAtts [esp+imm]", "jge short addr"], "69033": ["mov eax nAtts", "mov edi [esp+imm]", "shl eax imm", "mov [edi+imm] func"], "69046": ["mov cl [ptr_0+imm]", "mov al [ptr_0+imm]", "inc nAtts", "mov [esp+imm] cl", "mov func esi", "xor edi edi", "jmp addr"], "69072": ["mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "xor state state", "mov edx [esp+imm]", "jmp addr"], "69096": ["mov cl [ptr_0+imm]", "mov al [ptr_0+imm]", "mov [esp+imm] cl", "mov func [esp+imm]", "jmp addr"], "69120": ["mov eax nAtts", "mov state [esp+imm]", "shl eax imm", "mov [esp+imm] imm", "mov [edi+imm] esi", "mov edi imm", "mov cl [ptr_0+imm]", "mov al [ptr_0+imm]", "mov [esp+imm] cl", "mov func esi", "jmp addr"], "69168": ["mov eax nAtts", "mov state [esp+imm]", "shl eax imm", "mov [esp+imm] imm", "mov [edi+imm] esi", "mov edi imm", "mov cl [ptr_0+imm]", "mov al [ptr_0+imm]", "mov [esp+imm] cl", "mov func esi", "jmp addr"], "69211": ["mov eax [esp+imm]", "cmp [eax+imm] func", "jz short addr"], "69220": ["cmp [esp+imm] imm", "jz short addr"], "69227": ["mov eax [esp+imm]", "mov edi imm", "mov byte ptr [eax+imm] imm", "mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "mov edx [esp+imm]", "jmp addr"], "69259": ["mov al [ptr_0+imm]", "mov cl [ptr_0+imm]", "mov [esp+imm] cl", "test al al", "jnz short addr"], "69273": ["cmp cl imm", "jz short addr"], "69278": ["and ecx 0FFh", "mov esi [esp+imm]", "mov edi ecx", "xor ecx ecx", "mov cl [esi+imm]", "mov esi ecx"], "69298": ["cmp [esp+imm] esi", "jz short addr"], "69304": ["jmp short addr"], "69306": ["cmp al 0DFh", "ja short addr"], "69310": ["cmp al 0DBh", "ja short addr"], "69314": ["mov func [esp+imm]", "mov edi imm", "jmp addr"], "69328": ["cmp al 0FFh", "jnz short addr"], "69332": ["movzx edi [esp+imm]", "and edi 0FFh", "xor esi esi", "sub edi 0FEh", "cmp edi imm", "jbe short addr"], "69356": ["mov func [esp+imm]", "mov edi imm", "jmp addr"], "69370": ["mov esi imm", "jmp short addr"]}, "preds": [69310], "succs": [69298]}, "little2_charRefNumber": {"disasm": {"69392": ["push esi", "mov enc ptr", "push ebx", "lea ecx [ptr+imm]", "mov dl [edx+imm]", "call func", "add ebx (offset func - $)", "test dl dl", "jnz short addr"], "69417": ["cmp byte ptr [eax+imm] imm", "jz addr"], "69427": ["xor eax eax", "jmp short addr"], "69432": ["movsx edx byte ptr [ptr]", "cmp dl imm", "jz short addr"], "69440": ["sub edx imm", "lea result [result+imm]", "lea eax [edx+imm]", "cmp result imm", "jg short addr"], "69456": ["add ptr imm", "mov dl [ptr+imm]"], "69462": ["test dl dl", "jz short addr"], "69466": ["mov edx imm", "lea result [result+imm]", "lea eax [edx+imm]", "cmp result imm", "jle short addr"], "69484": ["or result imm"], "69487": ["pop ebx", "pop esi", "retn"], "69496": ["mov edx result", "sar edx imm", "cmp result imm", "jg short addr"], "69508": ["cmp edx 0D7h", "jg short addr"], "69516": ["test edx edx", "jnz short addr"], "69520": ["cmp func - 2DF78h)[ebx+imm] imm", "jnz short addr"], "69530": ["jmp short addr"], "69536": ["cmp edx 0FFh", "jnz short addr"], "69544": ["lea edx [result-imm]", "cmp edx imm", "ja short addr"], "69555": ["jmp short addr"], "69560": ["lea edx [eax+imm]", "xor eax eax", "jmp short addr"], "69568": ["cmp cl imm", "jg short addr"], "69573": ["sub ecx imm", "cmp cl imm", "ja short addr"], "69581": ["shl result imm", "sub c imm", "or result esi"], "69589": ["cmp result imm", "jg short addr"], "69596": ["lea esi [esi+imm]"], "69600": ["add ptr imm"], "69603": ["cmp byte ptr [ptr+imm] imm", "jnz short addr"], "69609": ["mov cl [ptr]", "cmp cl imm", "jz short addr"], "69616": ["movsx esi cl", "cmp cl imm", "jle short addr"], "69624": ["sub ecx imm", "cmp cl imm", "ja short addr"], "69632": ["shl result imm", "lea result [c+imm]", "jmp short addr"], "69648": ["shl result imm", "lea result [c+imm]", "jmp short addr"]}, "preds": [69568], "succs": [69589]}, "little2_predefinedEntityName": {"disasm": {"69664": ["mov ecx [esp+imm]", "mov edx [esp+imm]", "sub edx ecx", "mov eax edx", "shr eax imm", "add eax edx", "xor edx edx", "sar eax imm", "cmp eax imm", "jz short addr"], "69690": ["cmp eax imm", "jz short addr"], "69695": ["cmp eax imm", "jz short addr"], "69700": ["mov eax edx", "retn"], "69704": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "69710": ["cmp byte ptr [ecx] imm", "jnz short addr"], "69715": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "69721": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "69727": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "69733": ["xor edx edx", "cmp byte ptr [ecx+imm] imm", "setnz dl", "dec edx", "and edx imm", "jmp short addr"], "69752": ["cmp byte ptr [ptr_0+imm] imm", "jnz short addr"], "69758": ["cmp byte ptr [ptr_0+imm] imm", "jnz short addr"], "69764": ["cmp byte ptr [ptr_0+imm] imm", "jnz short addr"], "69770": ["mov al func", "cmp al imm", "jz addr"], "69780": ["xor edx edx", "cmp al imm", "setnz dl", "dec edx", "and edx imm", "jmp short addr"], "69800": ["cmp byte ptr [ptr_0+imm] imm", "jnz short addr"], "69806": ["mov al func", "cmp al imm", "jz short addr"], "69812": ["cmp al imm", "jnz short addr"], "69816": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "69822": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "69828": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "69838": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "69848": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "69858": ["xor edx edx", "cmp byte ptr [ecx+imm] imm", "setnz dl", "dec edx", "and edx imm", "jmp addr"], "69880": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "69890": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "69900": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "69910": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "69920": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "69930": ["xor edx edx", "cmp byte ptr [ecx+imm] imm", "setnz dl", "dec edx", "and edx imm", "jmp addr"], "69952": ["mov edx imm", "jmp addr"]}, "preds": [69770], "succs": [69700]}, "little2_nameMatchesAscii": {"disasm": {"69968": ["push esi", "push ebx", "mov ecx [esp+imm]", "mov eax [esp+imm]", "mov esi [esp+imm]", "mov dl [ecx]", "test dl dl", "jnz short addr"], "69988": ["jmp short addr"], "69992": ["cmp byte ptr [ptr1_0+imm] imm", "jnz short addr"], "69998": ["cmp func dl", "jnz short addr"], "70002": ["mov dl [ptr2_0+imm]", "inc func", "add func imm", "test dl dl", "jz short addr"], "70013": ["mov ebx func", "sub ebx func", "dec ebx", "jg short addr"], "70020": ["pop ebx", "xor func func", "pop func", "retn"], "70032": ["cmp func func", "pop ebx", "setz al", "and eax 0FFh", "pop func", "retn"]}, "preds": [69988, 70002], "succs": []}, "little2_nameLength": {"disasm": {"70048": ["push edi", "mov edi enc", "push esi", "mov enc start", "push ebx", "call func", "add esi (offset func - $)"], "70066": ["mov cl [ptr+imm]", "mov bl [ptr]", "test cl cl", "jnz short addr"], "70075": ["and ebx 0FFh", "mov cl [enc+imm]", "sub ecx imm", "cmp cl imm", "ja short func"], "70093": ["and ecx 0FFh", "mov ebx func - 2DF78h)[esi+imm]", "add ebx esi", "jmp ebx"], "70112": ["inc cl", "jnz short func"], "70116": ["and ebx 0FFh", "sub ebx 0FEh", "cmp ebx imm", "jbe short func"], "70133": ["lea esi [esi+imm]"], "70136": ["mov cl [ptr+imm]", "add ptr imm", "test cl cl", "mov bl [ptr]", "jz short addr"], "70148": ["cmp cl 0DFh", "ja short addr"], "70153": ["cmp cl 0DBh", "ja short func"], "70158": ["add ecx imm", "cmp cl imm", "ja short func"], "70166": ["add ptr imm", "jmp short addr"], "70176": ["pop ebx", "sub ptr start", "pop esi", "pop enc", "retn"], "70184": ["add ptr imm", "jmp short addr"]}, "preds": [70093], "succs": [70066]}, "little2_skipS": {"disasm": {"70192": ["mov ecx enc", "mov enc ptr", "cmp byte ptr [ptr+imm] imm", "jnz short addr"], "70202": ["lea esi [esi+imm]"], "70208": ["xor edx edx", "mov dl [ptr]", "mov dl [enc+imm]", "cmp dl imm", "ja short addr"], "70221": ["cmp dl imm", "ja short addr"], "70226": ["retn"], "70232": ["cmp dl imm", "jnz short addr"], "70237": ["add ptr imm", "cmp byte ptr [ptr+imm] imm", "jz short addr"], "70246": ["retn"]}, "preds": [70237], "succs": []}, "little2_updatePosition": {"disasm": {"70256": ["push ebp", "push edi", "push esi", "push ebx", "push esi", "call func", "add esi (offset func - $)", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov ecx ebx", "mov ebp [esp+imm]", "sub ecx func", "mov edx [esp+imm]", "dec ecx", "jle short addr"], "70295": ["nop"], "70296": ["mov cl [ptr_0+imm]", "test cl cl", "jnz short addr"], "70303": ["xor ecx ecx", "mov cl func", "mov cl [ebp+imm]", "sub ecx imm", "cmp cl imm", "ja short func"], "70319": ["and ecx 0FFh", "mov ebx func - 2DF78h)[esi+imm]", "add ebx esi", "jmp ebx"], "70336": ["add ecx imm", "cmp cl imm", "jbe short func"], "70344": ["add func imm"], "70347": ["mov ebx [esp+imm]", "mov edi [edx+imm]", "sub ebx func", "inc edi", "mov ecx ebx"], "70359": ["mov [edx+imm] edi", "dec ecx", "jg short addr"], "70365": ["pop func", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "70376": ["add func imm", "jmp short addr"], "70384": ["mov ecx [edx]", "lea edi [ptr_0+imm]", "mov ebx [esp+imm]", "inc ecx", "sub ebx edi", "mov [edx] ecx", "cmp ebx imm", "mov ecx ebx", "jle short addr"], "70405": ["mov bl [eax+imm]", "cmp byte ptr [eax+imm] imm", "mov [esp+imm] bl", "jnz short addr"], "70418": ["and ebx 0FFh", "cmp byte ptr [ebp+imm] imm", "jnz short addr"], "70431": ["lea func [eax+imm]", "mov ebx [esp+imm]", "sub ebx func", "mov ecx ebx"], "70442": ["mov eax func", "xor func func", "jmp short addr"], "70448": ["add func imm", "jmp short addr"], "70456": ["mov ebx [edx]", "add func imm", "inc ebx", "xor edi edi", "mov [edx] ebx", "mov ebx [esp+imm]", "sub ebx func", "mov ecx ebx", "jmp short addr"]}, "preds": [70319], "succs": [70359]}, "big2_cdataSectionTok": {"disasm": {"70480": ["push ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "push eax", "mov ecx [esp+imm]", "cmp ecx [esp+imm]", "jnb addr"], "70510": ["mov eax [esp+imm]", "sub eax ecx", "test al imm", "jz short addr"], "70520": ["and eax imm", "jz addr"], "70529": ["add n ecx", "mov [esp+imm] eax"], "70535": ["mov al [ecx]", "mov dl [ecx+imm]", "test al al", "jz short addr"], "70544": ["cmp al 0DFh", "ja short addr"], "70548": ["cmp al 0DBh", "ja short func"], "70552": ["add eax imm", "cmp al imm", "ja short func"], "70559": ["mov eax [esp+imm]", "sub eax ecx", "cmp eax imm", "jle addr"], "70574": ["lea edx [ecx+imm]", "jmp short addr"], "70584": ["and edx 0FFh", "mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "ja short func"], "70601": ["mov esi eax", "xor eax eax", "mov al [esi+imm]", "mov ebx func - 2DF78h)[edi+imm]", "add ebx edi", "jmp ebx"], "70624": ["inc al", "jnz short func"], "70628": ["and edx 0FFh", "sub edx 0FEh", "cmp edx imm", "ja short func"], "70645": ["mov eax [esp+imm]", "mov [eax] ecx", "xor eax eax"], "70653": ["pop edx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "70664": ["mov eax [esp+imm]", "sub eax ecx", "dec eax", "jle addr"], "70677": ["lea esi [esi+imm]"], "70680": ["lea edx [ecx+imm]", "lea esi [esi+imm]", "nop"], "70688": ["mov ebp [esp+imm]", "sub ebp func", "cmp ebp imm", "jle short func"], "70699": ["mov al func", "mov bl [ptr_0+imm]"], "70704": ["test al al", "jnz short addr"], "70708": ["and ebx 0FFh", "mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "ja short func"], "70725": ["mov esi eax", "xor eax eax", "mov al [esi+imm]", "mov ebx func - 2DF78h)[edi+imm]", "add ebx edi", "jmp ebx"], "70744": ["inc al", "jnz short func"], "70748": ["and ebx 0FFh", "sub ebx 0FEh", "cmp ebx imm", "ja short func"], "70765": ["mov eax [esp+imm]", "mov [eax] func", "mov eax imm", "pop func", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "70784": ["lea edx [ecx+imm]", "mov ebp [esp+imm]", "sub ebp func", "cmp ebp imm", "jle addr"], "70802": ["mov al [ecx+imm]", "mov bl [ecx+imm]", "test al al", "jz addr"], "70816": ["cmp al 0DFh", "ja short addr"], "70820": ["cmp al 0DBh", "ja short func"], "70824": ["add eax imm", "cmp al imm", "jbe short func"], "70831": ["add func imm", "jmp addr"], "70840": ["cmp ebp imm", "jle short func"], "70845": ["add func imm", "jmp addr"], "70856": ["cmp ebp imm", "jz short func"], "70861": ["add func imm", "jmp addr"], "70872": ["mov eax [esp+imm]", "add ecx imm", "mov [eax] ecx", "mov eax imm", "jmp addr"], "70896": ["lea eax [ecx+imm]", "mov edx [esp+imm]", "sub edx func", "dec edx", "jle addr"], "70912": ["cmp byte ptr [ecx+imm] imm", "mov dl [ecx+imm]", "jnz short addr"], "70921": ["and edx 0FFh", "mov esi [esp+imm]", "cmp byte ptr [esi+imm] imm", "jnz short addr"], "70938": ["lea func [ecx+imm]"], "70941": ["mov edi [esp+imm]", "mov func - 2DF78h)[edi] func", "mov func imm", "jmp addr"], "70960": ["mov eax [esp+imm]", "sub eax ecx", "cmp eax imm", "jle short addr"], "70971": ["lea edx [ecx+imm]", "jmp addr"], "70984": ["cmp bl imm", "jnz addr"], "70993": ["lea esi [ecx+imm]", "mov [esp+imm] func", "mov func [esp+imm]", "sub esi [esp+imm]", "dec esi", "jle short addr"], "71009": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "71019": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "71029": ["mov eax [esp+imm]", "add ecx imm", "mov [eax] ecx", "mov eax imm", "jmp addr"], "71048": ["mov eax imm", "jmp addr"], "71058": ["mov eax imm", "jmp addr"], "71068": ["or eax imm", "jmp addr"]}, "preds": [70520, 70784, 70896, 70993], "succs": [70653]}, "big2_scanRef": {"disasm": {"71088": ["push ebp", "push edi", "mov edi end", "push esi", "sub edi ptr", "push ebx", "call func", "add esi (offset func - $)", "sub esp imm", "cmp edi imm", "mov [esp+imm] func", "jle addr"], "71122": ["mov bl [ptr]", "mov ebp end", "test bl bl", "mov cl [ptr+imm]", "jz short addr"], "71133": ["cmp bl 0DFh", "ja addr"], "71142": ["cmp bl 0DBh", "ja short func"], "71147": ["lea func [ebx+imm]", "cmp al imm", "ja short addr"], "71154": ["cmp edi imm", "jle addr"], "71163": ["lea esi [esi+imm]", "nop"], "71168": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax"], "71176": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "71184": ["xor ebx ebx", "mov bl cl", "mov bl [enc_0+imm]", "sub ebx imm", "cmp bl imm", "ja short func"], "71200": ["and ebx 0FFh", "mov func func - 2DF78h)[esi+imm]", "add eax esi", "jmp eax"], "71224": ["xor ebx ebx", "lea esi func - 2DF78h)[esi]"], "71232": ["and ebx 0FFh", "movzx edi ds:(nmstrtPages - 2DF78h)[esi+imm]", "mov bl cl", "and edi 0FFh", "shr bl imm", "and ebx 0FFh", "lea ebx [ebx+imm]", "mov ebx ds:(namingBitmap - 2DF78h)[esi+imm]", "shr ebx cl", "and ebx imm", "jz short func"], "71280": ["add ptr imm", "mov eax end", "sub eax ptr", "mov [esp+imm] eax", "dec eax", "jle addr"], "71298": ["lea eax (namePages - 2DF78h)[esi]", "mov [esp+imm] eax", "lea eax (namingBitmap - 2DF78h)[esi]", "mov [esp+imm] eax"], "71318": ["mov bl [ptr]", "mov cl [ptr+imm]", "test bl bl", "jz short addr"], "71327": ["cmp bl 0DFh", "ja addr"], "71336": ["cmp bl 0DBh", "ja func"], "71345": ["lea edi [ebx+imm]", "mov eax edi", "cmp al imm", "ja short addr"], "71354": ["cmp [esp+imm] imm", "jg func"], "71365": ["jmp addr"], "71376": ["cmp bl 0FFh", "jnz addr"], "71385": ["mov edi ecx", "and edi 0FFh", "sub edi 0FEh", "cmp edi imm", "jbe func"], "71408": ["jmp addr"], "71416": ["xor ebx ebx", "mov eax [esp+imm]", "mov bl cl", "mov bl [eax+imm]", "sub ebx imm", "cmp bl imm", "ja func"], "71439": ["and ebx 0FFh", "mov eax func - 2DF78h)[esi+imm]", "add eax esi", "jmp eax"], "71456": ["xor ebx ebx", "lea esi func - 2DF78h)[esi]"], "71464": ["and ebx 0FFh", "mov eax [esp+imm]", "movzx edi byte ptr [eax+imm]", "mov bl cl", "and edi 0FFh", "shr bl imm", "mov eax [esp+imm]", "and ebx 0FFh", "lea ebx [ebx+imm]", "mov ebx [eax+imm]", "shr ebx cl", "and ebx imm", "jz func"], "71516": ["add ptr imm", "mov eax end", "sub eax ptr", "mov [esp+imm] eax", "dec eax", "jg addr"], "71534": ["xchg ax ax"], "71536": ["or eax imm", "jmp addr"], "71544": ["lea ebx [ptr+imm]", "mov ecx end", "sub ecx ebx", "dec ecx", "jle short addr"], "71554": ["cmp byte ptr [ptr+imm] imm", "jnz addr"], "71564": ["mov cl [ptr+imm]", "cmp cl imm", "jz addr"], "71576": ["and ecx 0FFh", "mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "jnz short addr"], "71592": ["add ptr imm", "mov ecx end", "sub ecx edx", "dec ecx", "jle short addr"], "71602": ["mov eax [esp+imm]"], "71605": ["cmp byte ptr [edx] imm", "jnz func"], "71614": ["xor ecx ecx", "mov cl [edx+imm]", "mov cl [eax+imm]", "cmp cl imm", "jz addr"], "71632": ["cmp cl imm", "jnz func"], "71641": ["add edx imm", "mov ecx end", "sub ecx edx", "dec ecx", "jg short addr"], "71651": ["jmp short addr"], "71656": ["cmp edi imm", "jnz func"], "71665": ["jmp short addr"], "71672": ["cmp bl 0FFh", "jnz addr"], "71681": ["mov edi ecx", "and edi 0FFh", "sub edi 0FEh", "cmp edi imm", "jbe func"], "71704": ["jmp addr"], "71712": ["mov eax [esp+imm]", "mov [eax] ebx", "xor eax eax", "jmp addr"], "71725": ["mov eax [esp+imm]", "add ptr imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "71744": ["cmp [esp+imm] imm", "jnz func"], "71755": ["mov eax imm", "jmp addr"], "71765": ["xor ebx ebx", "mov esi [esp+imm]", "mov bl [ptr+imm]", "xor eax eax", "mov al [esi+imm]", "mov ebx eax", "sub ebx imm", "cmp ebx imm", "ja short addr"], "71789": ["add ptr imm", "mov ecx end", "sub ecx edx", "dec ecx", "jle addr"], "71803": ["mov eax [esp+imm]", "jmp short addr"], "71808": ["sub ecx imm", "cmp cl imm", "ja func"], "71820": ["add edx imm", "mov ecx end", "sub ecx edx", "dec ecx", "jle addr"], "71834": ["cmp byte ptr [edx] imm", "jnz func"], "71843": ["xor ecx ecx", "mov cl [edx+imm]", "mov cl [eax+imm]", "cmp cl imm", "jnz short addr"], "71857": ["lea esi func - 2DF78h)[esi]"], "71864": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "71883": ["lea ecx [ptr+imm]", "mov ebx end", "sub ebx ecx", "dec ebx", "jle addr"], "71897": ["cmp byte ptr [ptr+imm] imm", "jz addr"], "71907": ["mov eax [esp+imm]", "mov [eax] ecx", "xor eax eax", "jmp addr"]}, "preds": [71765, 71897], "succs": [71176]}, "big2_scanPercent": {"disasm": {"71920": ["push ebp", "push edi", "mov edi func", "push esi", "sub edi ptr", "push ebx", "call func", "add esi (offset func - $)", "sub esp imm", "cmp edi imm", "jle addr"], "71951": ["mov ebp enc", "mov ebx func", "mov al [ptr]", "mov cl [ptr+imm]", "mov byte ptr [esp+imm] cl", "test al al", "jz short addr"], "71967": ["cmp al 0DFh", "ja addr"], "71975": ["cmp al 0DBh", "ja short func"], "71979": ["lea ecx [eax+imm]", "cmp cl imm", "ja short addr"], "71987": ["cmp edi imm", "jle addr"], "71996": ["lea esi [esi+imm]"], "72000": ["mov eax [esp+imm]", "mov [eax] ptr", "xor eax eax"], "72008": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "72016": ["xor eax eax", "mov al cl", "mov al [enc+imm]", "sub eax imm", "cmp al imm", "ja short func"], "72031": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "72048": ["xor eax eax", "lea esi func - 2DF78h)[esi]"], "72056": ["and eax 0FFh", "mov cl byte ptr [esp+imm]", "movzx edi ds:(nmstrtPages - 2DF78h)[esi+imm]", "mov al cl", "and edi 0FFh", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov eax ds:(namingBitmap - 2DF78h)[esi+imm]", "shr eax cl", "test al imm", "jz short func"], "72104": ["add ptr imm", "mov eax func", "sub eax ptr", "mov [esp+imm] eax", "dec eax", "jle addr"], "72121": ["lea eax (namePages - 2DF78h)[esi]", "mov [esp+imm] func", "mov [esp+imm] eax", "lea eax (namingBitmap - 2DF78h)[esi]", "mov [esp+imm] eax"], "72145": ["mov al [ptr]", "mov cl [ptr+imm]", "test al al", "jz short addr"], "72154": ["cmp al 0DFh", "ja addr"], "72162": ["cmp al 0DBh", "ja func"], "72170": ["lea edi [eax+imm]", "mov ebx edi", "cmp bl imm", "ja short addr"], "72180": ["cmp [esp+imm] imm", "jg func"], "72190": ["jmp addr"], "72200": ["cmp al 0FFh", "jnz addr"], "72208": ["movzx edi byte ptr [esp+imm]", "and edi 0FFh", "sub edi 0FEh", "cmp edi imm", "jbe func"], "72233": ["jmp addr"], "72240": ["xor eax eax", "mov al cl", "mov al [enc+imm]", "sub eax imm", "cmp al imm", "ja func"], "72259": ["and eax 0FFh", "mov ebx func - 2DF78h)[esi+imm]", "add ebx esi", "jmp ebx"], "72280": ["mov eax [esp+imm]", "mov [eax] ptr", "mov eax imm", "jmp addr"], "72296": ["xor eax eax", "lea esi func - 2DF78h)[esi]"], "72304": ["and eax 0FFh", "mov ebx [esp+imm]", "movzx edi byte ptr [ebx+imm]", "mov al cl", "and edi 0FFh", "shr al imm", "mov ebx [esp+imm]", "and eax 0FFh", "lea eax [eax+imm]", "mov eax [ebx+imm]", "shr eax cl", "test al imm", "jz func"], "72353": ["add ptr imm", "mov ebx [esp+imm]", "sub ebx ptr", "mov [esp+imm] ebx", "dec ebx", "jg addr"], "72372": ["lea esi [esi+imm]"], "72376": ["or eax imm", "jmp addr"], "72384": ["cmp edi imm", "jnz func"], "72393": ["jmp short addr"], "72400": ["cmp al 0FFh", "jnz short addr"], "72404": ["mov edi ecx", "and edi 0FFh", "sub edi 0FEh", "cmp edi imm", "jbe func"], "72427": ["jmp short addr"], "72429": ["mov eax [esp+imm]", "add ptr imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "72448": ["cmp [esp+imm] imm", "jnz func"], "72458": ["mov eax imm", "jmp addr"]}, "preds": [71987, 72190, 72393, 72448], "succs": [72008]}, "big2_scanLit": {"disasm": {"72480": ["push ebp", "push edi", "push esi", "call func", "add esi (offset func - $)", "push ebx", "sub esp imm", "mov ebp [esp+imm]", "mov [esp+imm] func", "mov edi ebp", "sub edi func", "cmp edi imm", "jle short addr"], "72515": ["mov [esp+imm] func", "xchg ax ax"], "72520": ["mov al func", "mov bl [ptr_0+imm]", "test al al", "jnz short addr"], "72529": ["and ebx 0FFh", "mov eax [esp+imm]", "mov al [eax+imm]", "cmp al imm", "ja short func"], "72546": ["xor ebx ebx", "mov bl al", "mov edx func - 2DF78h)[esi+imm]", "add edx esi", "jmp edx"], "72568": ["inc al", "jnz short func"], "72572": ["and ebx 0FFh", "sub ebx 0FEh", "cmp ebx imm", "jbe short func"], "72589": ["lea esi [esi+imm]"], "72592": ["add func imm"], "72595": ["mov edi ebp", "sub edi func", "cmp edi imm", "jg short addr"], "72604": ["add esp imm", "or eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "72616": ["mov eax [esp+imm]", "mov [eax] func", "xor eax eax"], "72624": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "72632": ["and eax 0FFh", "lea ebx [ptr_0+imm]", "cmp eax [esp+imm]", "jz short addr"], "72646": ["mov ecx func", "jmp short addr"], "72656": ["cmp al 0DFh", "ja short addr"], "72660": ["cmp al 0DBh", "ja short func"], "72664": ["add eax imm", "cmp al imm", "ja short func"], "72671": ["cmp edi imm", "jle short addr"], "72676": ["add func imm", "jmp short addr"], "72688": ["cmp edi imm", "jz short addr"], "72693": ["add func imm", "jmp short addr"], "72698": ["mov eax imm", "jmp short addr"], "72705": ["sub ebp func", "mov edx [esp+imm]", "dec ebp", "jle short addr"], "72713": ["mov eax [esp+imm]", "mov [eax] func", "xor eax eax", "cmp byte ptr [ecx+imm] imm", "jnz short addr"], "72727": ["xor func func", "mov bl [ecx+imm]", "mov ecx ebx", "mov cl [edx+imm]", "cmp cl imm", "ja short addr"], "72743": ["mov eax imm", "shl eax cl", "and eax imm", "cmp eax imm", "sbb eax eax", "add esp imm", "xor eax imm", "pop ebx", "and eax imm", "pop esi", "pop edi", "pop ebp", "retn"], "72774": ["mov eax imm", "jmp addr"]}, "preds": [72705], "succs": [72624]}, "big2_ignoreSectionTok": {"disasm": {"72784": ["push ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "sub esp imm", "mov ebp [esp+imm]", "mov edx [esp+imm]", "mov ebx ebp", "mov esi [esp+imm]", "sub ebx edx", "test bl imm", "jz short addr"], "72823": ["and n imm", "lea ebp [edx+imm]"], "72829": ["cmp n imm", "jle addr"], "72838": ["mov al func", "mov cl [ptr_0+imm]", "mov [esp+imm] imm"], "72850": ["test al al", "jz short addr"], "72854": ["cmp al 0DFh", "ja short addr"], "72858": ["cmp al 0DBh", "ja short func"], "72862": ["add eax imm", "cmp al imm", "ja short func"], "72869": ["cmp ebx imm", "jle addr"], "72878": ["add edx imm"], "72881": ["mov ebx func", "sub ebx func", "cmp ebx imm", "jle addr"], "72894": ["mov al func", "mov cl [ptr_0+imm]", "test al al", "jnz short addr"], "72903": ["and ecx 0FFh", "cmp byte ptr [esi+imm] imm", "ja short func"], "72916": ["xor eax eax", "mov al [esi+imm]", "mov ecx func - 2DF78h)[edi+imm]", "add ecx edi", "jmp ecx"], "72936": ["inc al", "jnz short func"], "72940": ["and ecx 0FFh", "sub ecx 0FEh", "cmp ecx imm", "ja short func"], "72957": ["lea esi [esi+imm]"], "72960": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax"], "72968": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "72976": ["add edx imm", "jmp short addr"], "72984": ["cmp ebx imm", "jz addr"], "72993": ["add edx imm", "jmp short addr"], "73000": ["lea eax [edx+imm]", "mov ebx ebp", "sub ebx eax", "mov [esp+imm] eax", "cmp ebx imm", "jle addr"], "73020": ["mov al [edx+imm]", "mov cl [edx+imm]", "test al al", "jnz short addr"], "73030": ["cmp cl imm", "jnz short addr"], "73035": ["lea eax [edx+imm]", "mov ebx ebp", "sub ebx eax", "mov [esp+imm] eax", "cmp ebx imm", "jle short addr"], "73051": ["mov al [edx+imm]", "mov cl [edx+imm]", "test al al", "jnz short addr"], "73061": ["cmp cl imm", "jnz short addr"], "73066": ["mov eax [esp+imm]", "add edx imm", "test eax eax", "jz addr"], "73080": ["mov ebx [esp+imm]", "dec ebx", "mov [esp+imm] ebx", "jmp addr"], "73096": ["lea eax [edx+imm]", "mov ebx ebp", "sub ebx eax", "mov [esp+imm] eax", "cmp ebx imm", "jle short addr"], "73112": ["mov al [edx+imm]", "mov cl [edx+imm]", "test al al", "jnz short addr"], "73122": ["cmp cl imm", "jz short addr"], "73127": ["mov edx [esp+imm]", "jmp addr"], "73136": ["mov edx [esp+imm]", "jmp addr"], "73152": ["or eax imm", "jmp addr"], "73160": ["lea eax [edx+imm]", "mov ebx ebp", "sub ebx eax", "mov [esp+imm] eax", "cmp ebx imm", "jle short addr"], "73176": ["mov al [edx+imm]", "mov cl [edx+imm]", "test al al", "jnz short addr"], "73186": ["cmp cl imm", "jnz short addr"], "73191": ["mov eax [esp+imm]", "add edx imm", "inc eax", "mov [esp+imm] eax", "jmp addr"], "73206": ["mov eax imm", "jmp addr"], "73216": ["mov eax [esp+imm]", "mov [eax] func", "mov eax imm", "jmp addr"]}, "preds": [73066], "succs": [72968]}, "big2_isPublicId": {"disasm": {"73232": ["push ebp", "push edi", "push esi", "call func", "add esi (offset func - $)", "push ebx", "mov ebx [esp+imm]", "mov eax [esp+imm]", "sub ebx imm", "add eax imm", "mov edx func", "mov edi [esp+imm]", "sub edx func", "dec edx", "jle short addr"], "73272": ["cmp byte ptr func imm", "jz short addr"], "73277": ["mov edi [esp+imm]", "mov [edi] func", "xor func func", "pop func", "pop esi", "pop edi", "pop ebp", "retn"], "73296": ["xor edx edx", "mov cl [ptr_0+imm]", "mov dl cl", "mov dl [enc_0+imm]", "sub edx imm", "cmp dl imm", "ja short func"], "73315": ["and edx 0FFh", "mov ebp func - 2DF78h)[esi+imm]", "add ebp esi", "jmp ebp"], "73336": ["cmp cl imm", "jz short addr"], "73341": ["lea esi [esi+imm]"], "73344": ["add func imm", "mov edx func", "sub edx func", "dec edx", "jg short addr"], "73354": ["pop func", "mov func imm", "pop esi", "pop func", "pop ebp", "retn"], "73368": ["cmp cl imm", "jz short func"], "73373": ["cmp cl imm", "jnz short addr"], "73378": ["add func imm", "mov edx func", "sub edx func", "dec edx", "jg short addr"], "73388": ["jmp short addr"], "73392": ["test cl cl", "js short addr"], "73396": ["add func imm", "mov edx func", "sub edx func", "dec edx", "jg addr"], "73410": ["jmp short addr"]}, "preds": [73396], "succs": [73354]}, "big2_getAtts": {"disasm": {"73424": ["push ebp", "xor ebp ebp", "push edi", "mov edi imm", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov ecx [esp+imm]", "mov [esp+imm] imm", "lea edx [ecx+imm]", "mov al [ecx+imm]", "mov cl [ecx+imm]", "mov [esp+imm] cl", "lea esi [esi+imm]"], "73480": ["test al al", "jnz short addr"], "73484": ["xor eax eax", "mov ecx [esp+imm]", "mov al [esp+imm]", "mov al [ecx+imm]", "sub eax imm", "cmp al imm", "ja short func"], "73505": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "73528": ["cmp state imm", "jnz addr"], "73537": ["lea esi [esi+imm]"], "73544": ["mov cl [ptr_0+imm]", "mov al [ptr_0+imm]", "mov [esp+imm] cl", "add func imm", "test al al", "jz short addr"], "73561": ["lea esi [esi+imm]"], "73568": ["lea esi [edx+imm]", "cmp al 0DFh", "ja addr"], "73579": ["cmp al 0DBh", "ja addr"], "73587": ["add eax imm", "cmp al imm", "jbe addr"], "73598": ["test edi edi", "jz short addr"], "73602": ["mov cl [edx+imm]", "mov al [edx+imm]", "mov [esp+imm] cl", "mov edx esi", "jmp addr"], "73624": ["lea esi [ptr_0+imm]", "lea esi [esi+imm]", "nop"], "73632": ["test edi edi", "jnz short addr"], "73636": ["cmp nAtts [esp+imm]", "jl addr"], "73646": ["mov al [edx+imm]", "mov dl [edx+imm]", "mov [esp+imm] dl", "mov edi imm", "mov edx esi", "jmp addr"], "73672": ["lea esi [ptr_0+imm]", "cmp state imm", "jz addr"], "73684": ["cmp state imm", "jnz addr"], "73693": ["cmp nAtts [esp+imm]", "jge addr"], "73703": ["mov eax nAtts", "mov state [esp+imm]", "shl eax imm", "mov byte ptr [edi+imm] imm", "mov edi imm", "mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "mov edx esi", "jmp addr"], "73744": ["lea eax [ptr_0+imm]", "cmp state imm", "mov [esp+imm] eax", "jz addr"], "73760": ["cmp state imm", "jnz addr"], "73769": ["cmp nAtts [esp+imm]", "jge addr"], "73779": ["mov eax nAtts", "mov state [esp+imm]", "shl eax imm", "mov ecx [esp+imm]", "add edi eax", "mov [esp+imm] edi", "cmp byte ptr [ecx+imm] imm", "jnz addr"], "73809": ["mov cl [ptr_0+imm]", "mov al [ptr_0+imm]", "mov [esp+imm] cl", "mov func [esp+imm]", "mov edi imm", "jmp addr"], "73840": ["lea esi [ptr_0+imm]", "lea esi [esi+imm]", "nop"], "73848": ["test edi edi", "jnz short addr"], "73852": ["cmp nAtts [esp+imm]", "mov edi imm", "jge short addr"], "73863": ["mov eax nAtts", "mov ecx [esp+imm]", "shl eax imm", "add eax ecx", "mov [eax] edx", "mov byte ptr [eax+imm] imm"], "73880": ["mov cl [edx+imm]", "mov al [edx+imm]", "mov [esp+imm] cl", "lea edx [esi+imm]", "jmp addr"], "73904": ["lea esi [ptr_0+imm]", "test state state", "jz addr"], "73915": ["lea esi [esi+imm]", "nop"], "73920": ["mov al [edx+imm]", "mov dl [edx+imm]", "mov [esp+imm] dl", "mov edx esi", "jmp addr"], "73944": ["cmp nAtts [esp+imm]", "lea esi [ptr_0+imm]", "jge short addr"], "73953": ["mov eax nAtts", "mov ecx [esp+imm]", "shl eax imm", "mov byte ptr [ecx+imm] imm", "mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "mov edx esi", "jmp addr"], "73984": ["lea esi [ptr_0+imm]", "cmp state imm", "jz addr"], "73996": ["cmp nAtts [esp+imm]", "jl addr"], "74006": ["mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "mov [esp+imm] imm", "mov edx esi", "mov state imm", "jmp addr"], "74040": ["lea esi [ptr_0+imm]", "cmp state imm", "jz addr"], "74052": ["cmp nAtts [esp+imm]", "jl addr"], "74062": ["mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "mov [esp+imm] imm", "mov edx esi", "mov state imm", "jmp addr"], "74096": ["test state state", "jnz short addr"], "74100": ["cmp nAtts [esp+imm]", "mov state imm", "jge short addr"], "74111": ["mov eax nAtts", "mov esi [esp+imm]", "shl eax imm", "add eax esi", "mov [eax] func", "mov byte ptr [eax+imm] imm"], "74128": ["mov cl [edx+imm]", "mov al [edx+imm]", "mov [esp+imm] cl", "add edx imm", "jmp addr"], "74146": ["add esp imm", "mov eax nAtts", "pop ebx", "pop esi", "pop state", "pop nAtts", "retn"], "74160": ["inc al", "jnz addr"], "74168": ["xor ecx ecx", "mov cl [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "jbe addr"], "74189": ["jmp addr"], "74200": ["mov eax nAtts", "mov ecx [esp+imm]", "shl eax imm", "mov edi imm", "add eax ecx", "mov [eax] edx", "mov byte ptr [eax+imm] imm", "mov cl [edx+imm]", "mov al [edx+imm]", "mov [esp+imm] cl", "mov edx esi", "jmp addr"], "74240": ["cmp [esp+imm] imm", "jnz addr"], "74251": ["cmp nAtts [esp+imm]", "jge short addr"], "74257": ["mov eax nAtts", "mov edi [esp+imm]", "shl eax imm", "mov [edi+imm] func"], "74270": ["inc nAtts"], "74271": ["mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "xor edi edi", "mov edx esi", "jmp addr"], "74296": ["cmp [esp+imm] imm", "jnz addr"], "74307": ["cmp nAtts [esp+imm]", "jge short addr"], "74313": ["mov eax nAtts", "mov edi [esp+imm]", "shl eax imm", "mov [edi+imm] func"], "74326": ["mov cl [ptr_0+imm]", "mov al [ptr_0+imm]", "inc nAtts", "mov [esp+imm] cl", "mov func esi", "xor edi edi", "jmp addr"], "74352": ["mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "xor state state", "mov edx [esp+imm]", "jmp addr"], "74376": ["mov cl [ptr_0+imm]", "mov al [ptr_0+imm]", "mov [esp+imm] cl", "mov func [esp+imm]", "jmp addr"], "74400": ["mov eax nAtts", "mov state [esp+imm]", "shl eax imm", "mov [esp+imm] imm", "mov [edi+imm] esi", "mov edi imm", "mov cl [ptr_0+imm]", "mov al [ptr_0+imm]", "mov [esp+imm] cl", "mov func esi", "jmp addr"], "74448": ["mov eax nAtts", "mov state [esp+imm]", "shl eax imm", "mov [esp+imm] imm", "mov [edi+imm] esi", "mov edi imm", "mov cl [ptr_0+imm]", "mov al [ptr_0+imm]", "mov [esp+imm] cl", "mov func esi", "jmp addr"], "74491": ["mov eax [esp+imm]", "cmp [eax+imm] func", "jz short addr"], "74500": ["cmp [esp+imm] imm", "jz short addr"], "74507": ["mov eax [esp+imm]", "mov edi imm", "mov byte ptr [eax+imm] imm", "mov al [ptr_0+imm]", "mov dl [ptr_0+imm]", "mov [esp+imm] dl", "mov edx [esp+imm]", "jmp addr"], "74539": ["mov al [ptr_0+imm]", "mov cl [ptr_0+imm]", "mov [esp+imm] cl", "test al al", "jnz short addr"], "74553": ["cmp cl imm", "jz short addr"], "74558": ["and ecx 0FFh", "mov esi [esp+imm]", "mov edi ecx", "xor ecx ecx", "mov cl [esi+imm]", "mov esi ecx"], "74578": ["cmp [esp+imm] esi", "jz short addr"], "74584": ["jmp short addr"], "74586": ["cmp al 0DFh", "ja short addr"], "74590": ["cmp al 0DBh", "ja short addr"], "74594": ["mov func [esp+imm]", "mov edi imm", "jmp addr"], "74608": ["cmp al 0FFh", "jnz short addr"], "74612": ["movzx edi [esp+imm]", "and edi 0FFh", "xor esi esi", "sub edi 0FEh", "cmp edi imm", "jbe short addr"], "74636": ["mov func [esp+imm]", "mov edi imm", "jmp addr"], "74650": ["mov esi imm", "jmp short addr"]}, "preds": [74590], "succs": [74578]}, "big2_charRefNumber": {"disasm": {"74672": ["push esi", "mov enc ptr", "push ebx", "lea ecx [ptr+imm]", "mov dl [edx+imm]", "call func", "add ebx (offset func - $)", "test dl dl", "jnz short addr"], "74697": ["cmp byte ptr [eax+imm] imm", "jz addr"], "74707": ["xor eax eax", "jmp short addr"], "74712": ["movsx edx byte ptr [ptr+imm]", "cmp dl imm", "jz short addr"], "74721": ["sub edx imm", "lea result [result+imm]", "lea eax [edx+imm]", "cmp result imm", "jg short addr"], "74737": ["add ptr imm", "mov dl [ptr]"], "74742": ["test dl dl", "jz short addr"], "74746": ["mov edx imm", "lea result [result+imm]", "lea eax [edx+imm]", "cmp result imm", "jle short addr"], "74764": ["or result imm"], "74767": ["pop ebx", "pop esi", "retn"], "74776": ["mov edx result", "sar edx imm", "cmp result imm", "jg short addr"], "74788": ["cmp edx 0D7h", "jg short addr"], "74796": ["test edx edx", "jnz short addr"], "74800": ["cmp func - 2DF78h)[ebx+imm] imm", "jnz short addr"], "74810": ["jmp short addr"], "74816": ["cmp edx 0FFh", "jnz short addr"], "74824": ["lea edx [result-imm]", "cmp edx imm", "ja short addr"], "74835": ["jmp short addr"], "74840": ["lea edx [eax+imm]", "xor eax eax", "jmp short addr"], "74848": ["cmp cl imm", "jg short addr"], "74853": ["sub ecx imm", "cmp cl imm", "ja short addr"], "74861": ["shl result imm", "sub c imm", "or result esi"], "74869": ["cmp result imm", "jg short addr"], "74876": ["lea esi [esi+imm]"], "74880": ["add ptr imm"], "74883": ["cmp byte ptr [ptr] imm", "jnz short addr"], "74888": ["mov cl [ptr+imm]", "cmp cl imm", "jz short addr"], "74896": ["movsx esi cl", "cmp cl imm", "jle short addr"], "74904": ["sub ecx imm", "cmp cl imm", "ja short addr"], "74912": ["shl result imm", "lea result [c+imm]", "jmp short addr"], "74928": ["shl result imm", "lea result [c+imm]", "jmp short addr"]}, "preds": [74848], "succs": [74869]}, "big2_predefinedEntityName": {"disasm": {"74944": ["mov ecx [esp+imm]", "mov edx [esp+imm]", "sub edx ecx", "mov eax edx", "shr eax imm", "add eax edx", "xor edx edx", "sar eax imm", "cmp eax imm", "jz short addr"], "74970": ["cmp eax imm", "jz short addr"], "74975": ["cmp eax imm", "jz short addr"], "74980": ["mov eax edx", "retn"], "74984": ["cmp byte ptr [ecx] imm", "jnz short addr"], "74989": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "74995": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "75001": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "75007": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "75013": ["xor edx edx", "cmp byte ptr [ecx+imm] imm", "setnz dl", "dec edx", "and edx imm", "jmp short addr"], "75032": ["cmp byte ptr [ptr_0+imm] imm", "jnz short addr"], "75038": ["cmp byte ptr [ptr_0+imm] imm", "jnz short addr"], "75044": ["cmp byte ptr func imm", "jnz short addr"], "75049": ["mov al [ptr_0+imm]", "cmp al imm", "jz addr"], "75060": ["xor edx edx", "cmp al imm", "setnz dl", "dec edx", "and edx imm", "jmp short addr"], "75080": ["cmp byte ptr func imm", "jnz short addr"], "75085": ["mov al [ptr_0+imm]", "cmp al imm", "jz short addr"], "75092": ["cmp al imm", "jnz short addr"], "75096": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "75102": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "75108": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "75118": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "75128": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "75138": ["xor edx edx", "cmp byte ptr [ecx+imm] imm", "setnz dl", "dec edx", "and edx imm", "jmp addr"], "75160": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "75170": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "75180": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "75190": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "75200": ["cmp byte ptr [ecx+imm] imm", "jnz addr"], "75210": ["xor edx edx", "cmp byte ptr [ecx+imm] imm", "setnz dl", "dec edx", "and edx imm", "jmp addr"], "75232": ["mov edx imm", "jmp addr"]}, "preds": [75049], "succs": [74980]}, "big2_nameMatchesAscii": {"disasm": {"75248": ["push esi", "push ebx", "mov ecx [esp+imm]", "mov eax [esp+imm]", "mov esi [esp+imm]", "mov dl [ecx]", "test dl dl", "jnz short addr"], "75268": ["jmp short addr"], "75272": ["cmp byte ptr func imm", "jnz short addr"], "75277": ["cmp [ptr1_0+imm] dl", "jnz short addr"], "75282": ["mov dl [ptr2_0+imm]", "inc func", "add func imm", "test dl dl", "jz short addr"], "75293": ["mov ebx func", "sub ebx func", "dec ebx", "jg short addr"], "75300": ["pop ebx", "xor func func", "pop func", "retn"], "75312": ["cmp func func", "pop ebx", "setz al", "and eax 0FFh", "pop func", "retn"]}, "preds": [75268, 75282], "succs": []}, "big2_nameLength": {"disasm": {"75328": ["push edi", "mov edi enc", "push esi", "mov enc start", "push ebx", "call func", "add esi (offset func - $)"], "75346": ["mov cl [ptr]", "mov bl [ptr+imm]", "test cl cl", "jnz short addr"], "75355": ["and ebx 0FFh", "mov cl [enc+imm]", "sub ecx imm", "cmp cl imm", "ja short func"], "75373": ["and ecx 0FFh", "mov ebx func - 2DF78h)[esi+imm]", "add ebx esi", "jmp ebx"], "75392": ["inc cl", "jnz short func"], "75396": ["and ebx 0FFh", "sub ebx 0FEh", "cmp ebx imm", "jbe short func"], "75413": ["lea esi [esi+imm]"], "75416": ["mov cl [ptr+imm]", "add ptr imm", "test cl cl", "mov bl [ptr+imm]", "jz short addr"], "75429": ["cmp cl 0DFh", "ja short addr"], "75434": ["cmp cl 0DBh", "ja short func"], "75439": ["add ecx imm", "cmp cl imm", "ja short func"], "75447": ["add ptr imm", "jmp short addr"], "75456": ["pop ebx", "sub ptr start", "pop esi", "pop enc", "retn"], "75464": ["add ptr imm", "jmp short addr"]}, "preds": [75373], "succs": [75346]}, "big2_skipS": {"disasm": {"75472": ["mov ecx enc", "cmp byte ptr [ptr] imm", "mov enc ptr", "jnz short addr"], "75481": ["lea esi [esi+imm]"], "75488": ["xor edx edx", "mov dl [ptr+imm]", "mov dl [enc+imm]", "cmp dl imm", "ja short addr"], "75502": ["cmp dl imm", "ja short addr"], "75507": ["retn"], "75512": ["cmp dl imm", "jnz short addr"], "75517": ["add ptr imm", "cmp byte ptr [ptr] imm", "jz short addr"], "75525": ["retn"]}, "preds": [75517], "succs": []}, "big2_updatePosition": {"disasm": {"75536": ["push ebp", "push edi", "push esi", "push ebx", "push esi", "call func", "add esi (offset func - $)", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov ecx ebx", "mov ebp [esp+imm]", "sub ecx func", "mov edx [esp+imm]", "dec ecx", "jle short addr"], "75575": ["nop"], "75576": ["mov cl func", "test cl cl", "jnz short addr"], "75582": ["xor ecx ecx", "mov cl [ptr_0+imm]", "mov cl [ebp+imm]", "sub ecx imm", "cmp cl imm", "ja short func"], "75599": ["and ecx 0FFh", "mov ebx func - 2DF78h)[esi+imm]", "add ebx esi", "jmp ebx"], "75616": ["add ecx imm", "cmp cl imm", "jbe short func"], "75624": ["add func imm"], "75627": ["mov ebx [esp+imm]", "mov edi [edx+imm]", "sub ebx func", "inc edi", "mov ecx ebx"], "75639": ["mov [edx+imm] edi", "dec ecx", "jg short addr"], "75645": ["pop func", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "75656": ["add func imm", "jmp short addr"], "75664": ["mov ecx [edx]", "lea edi [ptr_0+imm]", "mov ebx [esp+imm]", "inc ecx", "sub ebx edi", "mov [edx] ecx", "cmp ebx imm", "mov ecx ebx", "jle short addr"], "75685": ["mov bl [eax+imm]", "cmp byte ptr [eax+imm] imm", "mov [esp+imm] bl", "jnz short addr"], "75698": ["and ebx 0FFh", "cmp byte ptr [ebp+imm] imm", "jnz short addr"], "75711": ["lea func [eax+imm]", "mov ebx [esp+imm]", "sub ebx func", "mov ecx ebx"], "75722": ["mov eax func", "xor func func", "jmp short addr"], "75728": ["add func imm", "jmp short addr"], "75736": ["mov ebx [edx]", "add func imm", "inc ebx", "xor edi edi", "mov [edx] ebx", "mov ebx [esp+imm]", "sub ebx func", "mov ecx ebx", "jmp short addr"]}, "preds": [75599], "succs": [75639]}, "unknown_isInvalid": {"disasm": {"75984": ["push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "push func", "mov func [uenc+imm]", "push edx", "call dword ptr [uenc+imm]", "mov edx c", "add esp imm", "and edx imm", "jnz short addr"], "76026": ["mov ecx c", "sar ecx imm", "cmp c imm", "jg short addr"], "76038": ["cmp ecx 0D7h", "jg short addr"], "76046": ["test ecx ecx", "jnz short addr"], "76050": ["xor edx edx", "cmp func - 2DF78h)[ebx+imm] imm", "setz dl"], "76063": ["add esp imm", "mov c edx", "pop ebx", "retn"], "76072": ["cmp ecx 0FFh", "jnz short addr"], "76080": ["sub c imm", "xor edx edx", "cmp eax imm", "setbe dl", "add esp imm", "mov eax edx", "pop ebx", "retn"], "76104": ["add esp imm", "mov edx imm", "mov c edx", "pop ebx", "retn"]}, "preds": [75984, 76038], "succs": []}, "unknown_toUtf16": {"disasm": {"76128": ["push ebp", "push edi", "push esi", "push ebx", "sub esp imm", "mov edi [esp+imm]", "mov ebp [esp+imm]", "mov ebx [esp+imm]", "mov esi [esp+imm]", "mov edx [edi]", "cmp [esp+imm] edx", "ja short addr"], "76159": ["jmp short addr"], "76168": ["push eax", "push eax", "push edx", "mov edx [uenc_0+imm]", "push edx", "call dword ptr [uenc_0+imm]", "mov edx [edi]", "xor ecx ecx", "mov [esp+imm] edx", "mov cl [edx]", "xor edx edx", "mov dl [uenc_0+imm]", "mov ecx edx", "mov edx [esp+imm]", "add esp imm", "lea edx [edx+imm]", "mov [edi] edx"], "76215": ["mov edx [ebx]", "lea ecx [edx+imm]", "mov [ebx] ecx", "mov [edx] ax", "mov edx [edi]", "cmp edx [esp+imm]", "jnb short addr"], "76233": ["cmp [ebx] esi", "jnb short addr"], "76237": ["xor eax eax", "mov al [edx]", "mov ax [uenc_0+imm]", "test ax ax", "jz short addr"], "76254": ["inc edx", "mov [edi] edx", "jmp short addr"], "76264": ["jz short addr"], "76266": ["add esp imm", "xor eax eax", "pop ebx", "pop esi", "pop edi", "pop func", "retn"], "76280": ["add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop func", "retn"]}, "preds": [76264], "succs": []}, "utf8_isInvalid4": {"disasm": {"76352": ["mov al [p+imm]", "mov ecx imm", "test al al", "js short addr"], "76364": ["mov eax ecx", "retn"], "76368": ["and eax imm", "cmp al 0C0h", "jz short addr"], "76375": ["mov al [p+imm]", "test al al", "jns short addr"], "76382": ["and eax imm", "cmp al 0C0h", "jz short addr"], "76389": ["push ebx", "mov bl [p]", "mov al [p+imm]", "cmp bl 0F0h", "jz short addr"], "76400": ["test al al", "js short addr"], "76404": ["mov eax ecx", "pop ebx", "retn"], "76408": ["cmp al imm", "jbe short addr"], "76412": ["xor ecx ecx", "and eax imm", "cmp al 0C0h", "setz cl", "jmp short addr"], "76424": ["cmp bl 0F4h", "jnz short addr"], "76429": ["xor ecx ecx", "cmp al imm", "setnbe cl", "jmp short addr"]}, "preds": [76424], "succs": [76404]}, "normal_scanComment": {"disasm": {"76448": ["push ebp", "lea ebp [ptr+imm]", "push edi", "call func", "add edi (offset func - $)", "push esi", "mov esi end", "push ebx", "sub end ptr", "sub esp imm", "test ecx ecx", "jle addr"], "76481": ["mov ebx enc", "mov al [edx+imm]"], "76486": ["and eax 0FFh", "cmp byte ptr [enc+imm] imm", "ja short func"], "76498": ["xor edx edx", "mov dl [enc+imm]", "mov eax edx", "mov edx func - 2DF78h)[edi+imm]", "add edx edi", "jmp edx"], "76520": ["inc ptr"], "76521": ["mov ecx end", "sub ecx ptr", "test ecx ecx", "jle short addr"], "76529": ["mov al [ptr+imm]", "jmp short addr"], "76536": ["mov eax [esp+imm]", "mov [eax] ptr", "xor eax eax"], "76544": ["add esp imm", "pop enc", "pop esi", "pop edi", "pop ebp", "retn"], "76552": ["lea edx [ptr+imm]", "mov ecx end", "sub ecx ptr", "test ecx ecx", "jle short addr"], "76563": ["mov al [ebp+imm]", "cmp al imm", "jz short addr"], "76570": ["mov ebp ptr", "jmp short addr"], "76576": ["dec ecx", "jz short addr"], "76579": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz short func"], "76593": ["add ptr imm", "jmp short addr"], "76600": ["cmp ecx imm", "jle short addr"], "76605": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz short func"], "76619": ["add ptr imm", "jmp short addr"], "76624": ["cmp ecx imm", "jle short addr"], "76629": ["mov edx ptr", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz short func"], "76643": ["add ptr imm", "jmp short addr"], "76648": ["add esp imm", "or eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "76659": ["mov eax imm", "jmp short addr"], "76666": ["lea eax [ebp+imm]", "sub end ptr", "test esi esi", "jle short addr"], "76675": ["cmp byte ptr [ebp+imm] imm", "jz short addr"], "76681": ["mov esi [esp+imm]", "mov [esi] ptr", "xor ptr ptr", "jmp addr"], "76694": ["mov ptr [esp+imm]", "add ebp imm", "mov [eax] ebp", "mov eax imm", "jmp addr"]}, "preds": [76675], "succs": [76544]}, "normal_checkPiTarget": {"disasm": {"76720": ["push esi", "push ebx", "mov cl [ptr]", "cmp cl imm", "jz short addr"], "76729": ["xor esi esi", "mov ebx imm", "cmp cl imm", "jnz short addr"], "76741": ["mov cl [eax+imm]", "cmp cl imm", "jz short addr"], "76749": ["mov ebx imm", "cmp cl imm", "jz short addr"], "76759": ["mov eax ebx", "pop ebx", "pop esi", "retn"], "76768": ["mov al [eax+imm]", "cmp al imm", "jz short addr"], "76775": ["cmp al imm", "jnz short addr"], "76779": ["test upper upper", "jnz short addr"], "76783": ["mov dword ptr [tokPtr] imm", "jmp short addr"], "76792": ["mov al [eax+imm]", "xor ebx ebx", "and eax imm", "cmp al imm", "setnz bl", "mov eax ebx", "pop ebx", "pop esi", "retn"], "76816": ["mov esi imm", "jmp short addr"], "76824": ["xor ebx ebx", "jmp short addr"]}, "preds": [76768, 76779], "succs": [76759]}, "normal_scanPi": {"disasm": {"76832": ["push ebp", "call func", "add ebp (offset func - $)", "push edi", "push esi", "mov esi func", "push ebx", "mov func end", "sub esp imm", "mov ebx enc", "sub edx func", "mov enc [esp+imm]", "mov [esp+imm] eax", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "test edx edx", "jle addr"], "76886": ["xor eax eax", "mov al func", "mov al [enc+imm]", "sub eax imm", "cmp al imm", "ja short func"], "76901": ["and eax 0FFh", "mov edi end", "mov end func - 2DF78h)[ebp+imm]", "add ecx ebp", "jmp ecx"], "76920": ["mov eax [esp+imm]", "mov [eax] func", "xor eax eax"], "76928": ["mov edi [esp+imm]", "xor edi large imm", "jnz addr"], "76945": ["add esp imm", "pop enc", "pop esi", "pop edi", "pop ebp", "retn"], "76960": ["lea ecx [target_0+imm]"], "76963": ["mov edx end", "sub edx func", "test edx edx", "jle short addr"], "76971": ["mov [esp+imm] func", "mov func func"], "76977": ["xor eax eax", "mov al func", "mov al [enc+imm]", "sub eax imm", "cmp al imm", "ja short func"], "76992": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebp+imm]", "add ecx ebp", "jmp ecx"], "77008": ["mov ecx func"], "77010": ["mov eax [esp+imm]", "mov [eax] func", "xor eax eax", "jmp short addr"], "77024": ["inc func"], "77025": ["mov edx end", "sub edx func", "test edx edx", "jg short addr"], "77033": ["or eax imm", "jmp short addr"], "77040": ["mov ecx func", "mov func [esp+imm]", "mov eax func", "mov [esp+imm] imm", "sub eax esi", "cmp eax imm", "jz addr"], "77067": ["lea esi [ecx+imm]", "mov edx end", "sub edx func", "test edx edx", "jle short addr"], "77078": ["mov al [ecx+imm]"], "77081": ["and eax 0FFh", "cmp byte ptr [enc+imm] imm", "ja func"], "77097": ["xor ecx ecx", "mov cl [enc+imm]", "mov eax ecx", "mov ecx func - 2DF78h)[ebp+imm]", "add ecx ebp", "jmp ecx"], "77120": ["dec edx", "jz addr"], "77127": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "77145": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jz func"], "77163": ["lea ecx [target_0+imm]", "jmp addr"], "77176": ["cmp edx imm", "jle addr"], "77185": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "77203": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jz func"], "77221": ["lea ecx [target_0+imm]", "jmp addr"], "77232": ["cmp edx imm", "jle addr"], "77241": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "77259": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jz func"], "77277": ["lea ecx [target_0+imm]", "jmp addr"], "77288": ["inc func"], "77289": ["mov edx end", "sub edx func", "test edx edx", "jle addr"], "77301": ["mov al func", "jmp addr"], "77312": ["cmp edx imm", "jle addr"], "77321": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "77339": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jz func"], "77357": ["add func imm", "jmp addr"], "77368": ["mov ecx func", "mov func [esp+imm]", "mov eax func", "mov [esp+imm] imm", "sub eax esi", "cmp eax imm", "jz addr"], "77395": ["lea eax [ecx+imm]", "sub end func", "test edi edi", "jle addr"], "77408": ["cmp byte ptr [ecx+imm] imm", "jz addr"], "77418": ["mov ecx func", "jmp addr"], "77432": ["cmp edx imm", "jle addr"], "77441": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "77459": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jz func"], "77477": ["add func imm", "jmp addr"], "77488": ["dec edx", "jz addr"], "77495": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "77513": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jz func"], "77531": ["add func imm", "jmp addr"], "77544": ["lea ecx [ptr_0+imm]", "mov edx end", "sub edx func", "test edx edx", "jle addr"], "77559": ["mov al [esi+imm]", "cmp al imm", "jz addr"], "77570": ["mov esi func", "jmp addr"], "77584": ["cmp edx imm", "jle addr"], "77593": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "77611": ["add func imm", "jmp addr"], "77624": ["cmp edx imm", "jle addr"], "77633": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "77651": ["add func imm", "jmp addr"], "77664": ["dec edx", "jz short addr"], "77667": ["mov edx func", "mov eax enc", "call dword ptr [enc+imm]", "test eax eax", "jnz func"], "77685": ["add func imm", "jmp addr"], "77696": ["lea edx [esp+imm]", "mov eax esi", "mov [esp+imm] func", "call func", "mov ecx [esp+imm]", "test eax eax", "jnz addr"], "77723": ["mov end [esp+imm]", "mov [edi] ecx", "jmp addr"], "77736": ["lea edx [esp+imm]", "mov eax esi", "mov [esp+imm] func", "call func", "mov ecx [esp+imm]", "test eax eax", "jnz addr"], "77763": ["jmp short addr"], "77768": ["mov func [esp+imm]", "add ecx imm", "mov [eax] ecx", "mov eax [esp+imm]", "jmp addr"], "77792": ["mov eax imm", "jmp addr"], "77802": ["mov eax [esp+imm]", "add esi imm", "mov [eax] esi", "mov eax [esp+imm]", "jmp addr"], "77820": ["call func"]}, "preds": [76928], "succs": []}, "normal_contentTok": {"disasm": {"77840": ["push ebp", "push edi", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov eax [esp+imm]", "mov ebp [esp+imm]", "mov ecx [esp+imm]", "mov [esp+imm] eax", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "mov esi [esp+imm]", "cmp ebp ecx", "jnb addr"], "77897": ["xor eax eax", "mov al [ebp+imm]", "cmp byte ptr [esi+imm] imm", "ja func"], "77913": ["xor edx edx", "mov dl [esi+imm]", "mov eax edx", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "77932": ["mov ecx edi"], "77934": ["inc ebp", "mov eax ecx", "sub eax ebp", "test eax eax", "jle addr"], "77947": ["xor eax eax", "mov al [ebp+imm]", "mov al [esi+imm]", "cmp al imm", "jz func"], "77964": ["ja addr"], "77970": ["sub eax imm", "cmp al imm", "jbe short addr"], "77977": ["lea esi [esi+imm]"], "77984": ["mov eax [esp+imm]", "xor edi edi", "mov [eax] ebp"], "77991": ["mov eax [esp+imm]", "xor eax large imm", "jnz addr"], "78008": ["add esp imm", "mov eax edi", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "78024": ["mov eax [esp+imm]", "inc ebp", "mov edi imm", "mov [eax] ebp", "jmp short addr"], "78040": ["lea edi [ebp+imm]", "mov edx ecx", "sub edx edi", "mov [esp+imm] edx", "test edx edx", "jle addr"], "78059": ["xor eax eax", "mov al [ebp+imm]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja func"], "78079": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "78096": ["sub esp imm", "lea edx [ebp+imm]", "mov eax [esp+imm]", "push eax", "mov eax esi", "call func", "add esp imm", "mov edi eax", "jmp addr"], "78128": ["lea edi [ebp+imm]", "mov edx ecx", "sub edx func", "mov [esp+imm] edx", "test edx edx", "jle addr"], "78147": ["mov al [ebp+imm]", "mov byte ptr [esp+imm] al", "cmp al imm", "jz addr"], "78162": ["mov edx [esp+imm]", "mov al byte ptr [esp+imm]", "mov ebp ecx", "lea esi [esi+imm]"], "78176": ["and eax 0FFh", "cmp byte ptr [esi+imm] imm", "ja func"], "78192": ["xor ecx ecx", "mov cl [esi+imm]", "mov eax ecx", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "78216": ["mov eax [esp+imm]", "mov [eax] func", "mov func imm", "jmp addr"], "78232": ["cmp edx imm", "jle short func"], "78237": ["mov edx func", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz short func"], "78251": ["add func imm", "xchg ax ax"], "78256": ["mov edx ebp", "sub edx func", "test edx edx", "jle short func"], "78264": ["mov al func", "jmp short addr"], "78272": ["cmp edx imm", "jle short func"], "78277": ["mov edx func", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz short func"], "78291": ["add func imm", "jmp short addr"], "78296": ["dec edx", "jz short func"], "78299": ["mov edx func", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz short func"], "78313": ["add func imm", "jmp short addr"], "78320": ["cmp edx imm", "jz short func"], "78325": ["cmp byte ptr [ptr_0+imm] imm", "jz short addr"], "78331": ["inc func", "jmp short addr"], "78336": ["cmp edx imm", "jz short func"], "78341": ["cmp byte ptr [ptr_0+imm] imm", "jnz short func"], "78347": ["add func imm", "xchg ax ax"], "78352": ["mov eax [esp+imm]", "mov [eax] edi", "xor edi edi", "jmp addr"], "78368": ["mov eax ecx", "mov [esp+imm] ecx", "sub eax ebp", "dec eax", "jle addr"], "78383": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "lea edi [ebp+imm]", "test eax eax", "mov ecx [esp+imm]", "jnz func"], "78408": ["mov edx ecx", "sub edx func", "test edx edx", "jle func"], "78420": ["mov al [edi]", "mov ebp ecx", "jmp addr"], "78432": ["mov eax ecx", "mov [esp+imm] ecx", "sub eax ebp", "cmp eax imm", "jle addr"], "78449": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz func"], "78467": ["lea edi [ebp+imm]", "mov ecx [esp+imm]", "jmp short addr"], "78480": ["mov eax ecx", "mov [esp+imm] ecx", "sub eax ebp", "cmp eax imm", "jle addr"], "78497": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz func"], "78515": ["lea edi [ebp+imm]", "mov ecx [esp+imm]", "jmp short addr"], "78528": ["lea eax [ebp+imm]", "sub ecx func", "test ecx ecx", "jle addr"], "78541": ["xor edx edx", "mov dl [ebp+imm]", "cmp byte ptr [esi+imm] imm", "jnz short addr"], "78553": ["lea func [ebp+imm]"], "78556": ["mov ebx [esp+imm]", "mov edi imm", "mov func - 2DF78h)[ebx] func", "jmp addr"], "78571": ["lea edi [ebp+imm]", "jmp addr"], "78579": ["add ebp imm"], "78582": ["mov edx ecx", "sub edx ebp", "test edx edx", "jle short addr"], "78590": ["xor edi edi", "mov [esp+imm] edi", "mov edi ecx"], "78598": ["xor eax eax", "mov al [ebp+imm]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja func"], "78618": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "78634": ["inc ebp"], "78635": ["mov edx edi", "sub edx ebp", "test edx edx", "jg short addr"], "78643": ["or edi imm", "jmp addr"], "78651": ["mov ecx edi"], "78653": ["inc ebp", "mov edx ecx", "sub edx ebp", "test edx edx", "jle short addr"], "78662": ["xor eax eax", "mov al [ebp+imm]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja func"], "78682": ["and eax 0FFh", "mov edi func - 2DF78h)[ebx+imm]", "add edi ebx", "jmp edi"], "78698": ["lea edi [ebp+imm]", "mov edx ecx", "sub edx edi", "mov [esp+imm] edx", "test edx edx", "jle short addr"], "78713": ["xor eax eax", "mov al [ebp+imm]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja func"], "78733": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "78749": ["cmp [esp+imm] imm", "mov [esp+imm] ecx", "jle addr"], "78764": ["mov edx edi", "mov eax esi", "call dword ptr [esi+imm]", "mov ecx [esp+imm]", "test eax eax", "jnz func"], "78786": ["mov edx edi", "mov eax esi", "mov [esp+imm] ecx", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "78808": ["add ebp imm", "mov ecx [esp+imm]", "jmp addr"], "78820": ["cmp [esp+imm] imm", "jz addr"], "78831": ["mov edx edi", "mov eax esi", "mov [esp+imm] ecx", "call dword ptr [esi+imm]", "mov ecx [esp+imm]", "test eax eax", "jnz func"], "78857": ["mov edx edi", "mov eax esi", "mov [esp+imm] ecx", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "78879": ["add ebp imm", "mov ecx [esp+imm]", "jmp addr"], "78891": ["sub esp imm", "lea edx [ebp+imm]", "mov eax esi", "mov ebx [esp+imm]", "push ebx", "call func", "add esp imm", "mov edi eax", "jmp addr"], "78919": ["cmp [esp+imm] imm", "mov [esp+imm] ecx", "jle addr"], "78934": ["mov edx edi", "mov eax esi", "call dword ptr [esi+imm]", "mov ecx [esp+imm]", "test eax eax", "jnz func"], "78956": ["mov edx edi", "mov eax esi", "mov [esp+imm] ecx", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "78978": ["add ebp imm", "mov ecx [esp+imm]", "jmp addr"], "78990": ["lea edx [ebp+imm]", "mov eax ecx", "sub eax edx", "test eax eax", "jle addr"], "79005": ["xor eax eax", "mov al [ebp+imm]", "mov al [esi+imm]", "cmp al imm", "jz addr"], "79022": ["cmp al imm", "jnz func"], "79030": ["lea edx [ebp+imm]", "mov eax ecx", "sub eax edx", "test eax eax", "jle addr"], "79045": ["cmp byte ptr [ebp+imm] imm", "jnz func"], "79055": ["sub esp imm", "mov eax esi", "mov edi [esp+imm]", "push edi", "call func", "add esp imm", "mov edi eax", "jmp addr"], "79080": ["mov eax [esp+imm]", "inc ebp", "mov edi imm", "mov [eax] ebp", "jmp addr"], "79096": ["cmp edx imm", "jle addr"], "79105": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz func"], "79123": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "79141": ["add ebp imm", "jmp addr"], "79149": ["cmp edx imm", "jle addr"], "79158": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz func"], "79176": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "79194": ["add ebp imm", "jmp addr"], "79202": ["dec edx", "jz addr"], "79209": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz func"], "79227": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "79245": ["add ebp imm", "jmp addr"], "79253": ["mov edx [esp+imm]", "test edx edx", "jnz func"], "79265": ["lea eax [ebp+imm]", "mov edx edi", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "79284": ["xor eax eax", "mov al [ebp+imm]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja short func"], "79300": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "79316": ["mov ecx edi"], "79318": ["lea eax [ebp+imm]", "sub ecx eax", "test ecx ecx", "jle addr"], "79331": ["cmp byte ptr [ebp+imm] imm", "jz addr"], "79341": ["mov esi [esp+imm]", "xor edi edi", "mov [esi] eax", "jmp addr"], "79353": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov edi [esp+imm]", "mov [eax] esi", "jmp addr"], "79371": ["add ebp imm"], "79374": ["mov edx ecx", "sub edx ebp", "test edx edx", "jle addr"], "79386": ["mov edi ecx"], "79388": ["xor eax eax", "mov al [ebp+imm]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja func"], "79408": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "79424": ["inc ebp"], "79425": ["mov edx edi", "sub edx ebp", "test edx edx", "jg short addr"], "79433": ["jmp addr"], "79438": ["inc ebp"], "79439": ["mov edx ecx", "mov [esp+imm] ebp", "sub edx ebp", "test edx edx", "jle addr"], "79455": ["lea eax [esp+imm]", "mov [esp+imm] edx", "xor edi edi", "mov edx ebp", "mov [esp+imm] eax", "mov ebp ecx"], "79473": ["xor eax eax", "mov al [edx]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja short func"], "79488": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "79504": ["mov eax [esp+imm]", "xor edi edi", "mov [eax] edx", "jmp addr"], "79516": ["inc edx", "mov [esp+imm] edx"], "79521": ["mov edx [esp+imm]", "mov ecx ebp", "sub ecx edx", "mov [esp+imm] ecx", "test ecx ecx", "jg short addr"], "79537": ["jmp addr"], "79544": ["cmp [esp+imm] imm", "mov [esp+imm] ecx", "jle addr"], "79559": ["mov edx edi", "mov eax esi", "call dword ptr [esi+imm]", "mov ecx [esp+imm]", "test eax eax", "jnz func"], "79581": ["mov edx edi", "mov eax esi", "mov [esp+imm] ecx", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "79603": ["add ebp imm", "mov ecx [esp+imm]", "jmp addr"], "79615": ["cmp [esp+imm] imm", "mov [esp+imm] ecx", "jle addr"], "79630": ["mov edx edi", "mov eax esi", "call dword ptr [esi+imm]", "mov ecx [esp+imm]", "test eax eax", "jnz func"], "79652": ["mov edx edi", "mov eax esi", "mov [esp+imm] ecx", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "79674": ["add ebp imm", "mov ecx [esp+imm]", "jmp addr"], "79686": ["cmp [esp+imm] imm", "mov [esp+imm] ecx", "jz addr"], "79701": ["mov edx edi", "mov eax esi", "call dword ptr [esi+imm]", "mov ecx [esp+imm]", "test eax eax", "jnz func"], "79723": ["mov edx edi", "mov eax esi", "mov [esp+imm] ecx", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "79745": ["add ebp imm", "mov ecx [esp+imm]", "jmp addr"], "79757": ["mov eax [esp+imm]", "inc ebp", "mov edi imm", "mov [eax] ebp", "jmp addr"], "79773": ["cmp edx imm", "jle addr"], "79782": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz func"], "79800": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "79818": ["add ebp imm", "jmp addr"], "79826": ["cmp edx imm", "jle addr"], "79835": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz func"], "79853": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "79871": ["add ebp imm", "jmp addr"], "79879": ["dec edx", "jz addr"], "79886": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz func"], "79904": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "79922": ["add ebp imm", "jmp addr"], "79930": ["add ebp imm", "mov [esp+imm] imm", "jmp addr"], "79946": ["mov eax [esp+imm]"], "79950": ["inc eax", "mov edx ebp", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "79967": ["xor edx edx", "mov dl [eax]", "mov dl [esi+imm]", "cmp dl imm", "jz func"], "79984": ["cmp dl imm", "ja addr"], "79993": ["cmp dl imm", "jbe addr"], "80002": ["jmp short addr"], "80004": ["cmp edx imm", "jle addr"], "80013": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz func"], "80033": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "80053": ["add ebp imm", "mov [esp+imm] imm", "jmp addr"], "80069": ["dec edx", "jz addr"], "80076": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz func"], "80096": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "80116": ["add ebp imm", "mov [esp+imm] imm", "jmp addr"], "80132": ["cmp edx imm", "jle addr"], "80141": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz func"], "80161": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "80181": ["add ebp imm", "mov [esp+imm] imm", "jmp addr"], "80197": ["mov [esp+imm] ecx", "cmp edx imm", "jle addr"], "80210": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "mov ecx [esp+imm]", "test eax eax", "jnz func"], "80232": ["mov edx ebp", "mov eax esi", "mov [esp+imm] ecx", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "80254": ["add ebp imm", "mov ecx [esp+imm]", "jmp addr"], "80266": ["mov [esp+imm] ecx", "cmp edx imm", "jle addr"], "80279": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "mov ecx [esp+imm]", "test eax eax", "jnz func"], "80301": ["mov edx ebp", "mov eax esi", "mov [esp+imm] ecx", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "80323": ["add ebp imm", "mov ecx [esp+imm]", "jmp addr"], "80335": ["mov [esp+imm] ecx", "dec edx", "jz addr"], "80346": ["mov edx ebp", "mov eax esi", "call dword ptr [esi+imm]", "mov ecx [esp+imm]", "test eax eax", "jnz func"], "80368": ["mov edx ebp", "mov eax esi", "mov [esp+imm] ecx", "call dword ptr [esi+imm]", "test eax eax", "jz func"], "80390": ["add ebp imm", "mov ecx [esp+imm]", "jmp addr"], "80402": ["mov eax [esp+imm]"], "80406": ["lea edi [eax+imm]", "mov edx ebp", "sub edx edi", "mov [esp+imm] edi", "test edx edx", "jle addr"], "80425": ["xor edx edx", "xor ecx ecx", "mov dl [eax+imm]", "mov dl [esi+imm]", "mov cl dl", "sub ecx imm", "cmp ecx imm", "jbe addr"], "80450": ["cmp dl imm", "ja addr"], "80459": ["cmp dl imm", "jbe func"], "80468": ["mov eax edi", "jmp short addr"], "80472": ["test edi edi", "jnz func"], "80480": ["lea eax [edx+imm]", "mov ecx ebp", "sub ecx eax", "mov [esp+imm] eax", "mov [esp+imm] eax", "mov [esp+imm] ecx", "test ecx ecx", "jle addr"], "80507": ["xor ecx ecx", "mov cl [edx+imm]", "mov cl [esi+imm]", "sub ecx imm", "cmp cl imm", "ja func"], "80528": ["and ecx 0FFh", "mov eax func - 2DF78h)[ebx+imm]", "add eax ebx", "jmp eax"], "80545": ["cmp [esp+imm] imm", "jle addr"], "80556": ["mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz addr"], "80572": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz addr"], "80592": ["add [esp+imm] imm", "jmp addr"], "80602": ["cmp [esp+imm] imm", "jle addr"], "80613": ["mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz addr"], "80629": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz addr"], "80649": ["add [esp+imm] imm", "jmp addr"], "80659": ["cmp [esp+imm] imm", "jz addr"], "80670": ["mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz addr"], "80686": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz addr"], "80706": ["add [esp+imm] imm", "jmp addr"], "80716": ["mov eax [esp+imm]", "mov edx [esp+imm]", "mov [eax] edx", "jmp addr"], "80736": ["lea eax [ebp+imm]", "mov edx ecx", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "80755": ["cmp byte ptr [ebp+imm] imm", "jnz addr"], "80765": ["mov func [esp+imm]", "mov esi [esp+imm]", "xor edi edi", "mov [eax] esi", "jmp addr"], "80781": ["mov edi imm", "jmp addr"], "80791": ["mov eax [esp+imm]", "xor edi edi", "mov [eax] edx", "jmp addr"], "80803": ["add ebp imm", "sub ecx ebp", "cmp ecx imm", "jle addr"], "80817": ["lea eax func - 2DF78h)[ebx]", "mov dl imm", "cmp [ebp+imm] dl", "lea ecx [eax+imm]", "jnz func"], "80837": ["inc eax", "inc ebp", "cmp eax ecx", "jz short addr"], "80843": ["mov dl [eax]", "cmp [ebp+imm] dl", "jz short addr"], "80850": ["jmp func"], "80855": ["mov edi imm", "jmp addr"], "80865": ["cmp dl imm", "jnz func"], "80874": ["mov eax edi", "jmp addr"], "80881": ["mov eax [esp+imm]", "mov edi imm", "mov [eax] ebp", "jmp addr"], "80896": ["cmp dl imm", "jz addr"], "80905": ["jmp addr"], "80912": ["mov eax [esp+imm]", "add ebp imm", "mov edi imm", "mov [eax] ebp", "jmp addr"], "80930": ["cmp al imm", "jz addr"], "80938": ["jmp func"], "80943": ["mov edi imm", "jmp addr"], "80953": ["mov edi imm", "jmp addr"], "80963": ["call func"], "80968": ["add eax imm", "mov byte ptr [esp+imm] dl", "mov [esp+imm] eax"], "80979": ["mov edx [esp+imm]", "mov ecx ebp", "sub ecx edx", "test ecx ecx", "jle addr"], "80995": ["xor eax eax", "mov al [edx]", "mov al [esi+imm]", "cmp byte ptr [esp+imm] al", "jz addr"], "81013": ["cmp al imm", "ja func"], "81021": ["and eax 0FFh", "mov edi func - 2DF78h)[ebx+imm]", "add edi ebx", "jmp edi"], "81037": ["cmp ecx imm", "jle addr"], "81046": ["mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz addr"], "81062": ["add [esp+imm] imm", "jmp short addr"], "81069": ["dec ecx", "jz addr"], "81076": ["mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz addr"], "81092": ["add [esp+imm] imm", "jmp short addr"], "81099": ["sub esp imm", "inc edx", "mov ecx ebp", "mov eax esi", "push [esp+imm]", "call func", "add esp imm", "mov edi eax", "test eax eax", "jg addr"], "81129": ["jnz addr"], "81135": ["mov esi [esp+imm]", "mov eax [esp+imm]", "mov [esi] eax", "jmp addr"], "81149": ["cmp ecx imm", "jle addr"], "81158": ["mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz addr"], "81174": ["add [esp+imm] imm", "jmp addr"], "81184": ["inc edx", "mov [esp+imm] edx", "jmp addr"], "81194": ["lea eax [edx+imm]", "mov ecx ebp", "sub ecx eax", "mov [esp+imm] eax", "test ecx ecx", "jle addr"], "81213": ["xor ecx ecx", "mov cl [edx+imm]", "mov edx ecx", "mov dl [esi+imm]", "cmp dl imm", "jz func"], "81233": ["ja addr"], "81239": ["cmp dl imm", "jbe short addr"], "81244": ["cmp dl imm", "jnz addr"], "81253": ["mov eax [esp+imm]", "mov esi [esp+imm]", "inc eax", "mov edi imm", "mov [esi] eax", "jmp addr"], "81273": ["cmp edi imm", "jle addr"], "81282": ["mov eax esi", "call dword ptr [esi+imm]", "mov edi eax", "test eax eax", "jnz short addr"], "81296": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz addr"], "81316": ["mov esi [esp+imm]", "mov eax [esp+imm]", "xor edi edi", "mov [esi] eax", "jmp addr"], "81332": ["cmp dl imm", "jbe addr"], "81341": ["mov eax [esp+imm]", "mov edi ebp", "mov [esp+imm] eax", "lea edx [eax+imm]", "sub edi edx", "mov [esp+imm] edx", "test edi edi", "jle addr"], "81368": ["mov ecx eax", "xor eax eax", "mov al [ecx+imm]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja func"], "81390": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "81406": ["cmp dl imm", "jz short func"], "81411": ["jmp addr"], "81416": ["mov eax [esp+imm]", "mov ecx ebp", "lea edx [eax+imm]", "sub ecx edx", "mov [esp+imm] edx", "test ecx ecx", "jle addr"], "81439": ["cmp byte ptr [eax+imm] imm", "jnz func"], "81449": ["mov esi [esp+imm]", "add eax imm", "mov edi imm", "mov [esi] eax", "jmp addr"], "81467": ["mov ecx [esp+imm]", "xor edi edi", "add ecx imm", "mov [esp+imm] ecx", "jmp addr"], "81485": ["cmp edi imm", "jle addr"], "81494": ["mov eax esi", "call dword ptr [esi+imm]", "mov edi eax", "test eax eax", "jnz addr"], "81512": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz addr"], "81532": ["jmp addr"], "81537": ["dec edi", "jz addr"], "81544": ["mov eax esi", "call dword ptr [esi+imm]", "mov edi eax", "test eax eax", "jnz addr"], "81562": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz addr"], "81582": ["jmp addr"], "81587": ["add edx imm", "mov edi imm", "mov [esp+imm] edx", "jmp addr"], "81604": ["cmp [esp+imm] imm", "jz addr"], "81615": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz addr"], "81635": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz addr"], "81655": ["add [esp+imm] imm", "mov edi imm", "jmp addr"], "81670": ["cmp [esp+imm] imm", "jle addr"], "81681": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz addr"], "81701": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz addr"], "81721": ["add [esp+imm] imm", "mov edi imm", "jmp addr"], "81736": ["cmp [esp+imm] imm", "jle addr"], "81747": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jnz addr"], "81767": ["mov edx [esp+imm]", "mov eax esi", "call dword ptr [esi+imm]", "test eax eax", "jz addr"], "81787": ["add [esp+imm] imm", "mov edi imm", "jmp addr"]}, "preds": [81767], "succs": [79521]}, "normal_prologTok": {"disasm": {"81808": ["push ebp", "push edi", "push esi", "call func", "add esi (offset func - $)", "push ebx", "sub esp imm", "mov ebx [esp+imm]", "mov ebp [esp+imm]", "mov eax [esp+imm]", "mov edi [esp+imm]", "mov [esp+imm] eax", "cmp ebx ebp", "jnb addr"], "81854": ["xor eax eax", "mov al [ebx]", "cmp byte ptr [edi+imm] imm", "ja short func"], "81865": ["xor ecx ecx", "mov cl [edi+imm]", "mov eax ecx", "mov edx func - 2DF78h)[esi+imm]", "add edx esi", "jmp edx"], "81884": ["dec edx", "jz addr"], "81891": ["xor eax eax", "mov al [ebx+imm]", "mov cl [edi+imm]", "cmp cl imm", "ja func"], "81909": ["mov eax imm", "shl eax cl", "test eax imm", "jz func"], "81927": ["mov eax [esp+imm]", "mov [eax] ebx", "xor ebx ebx"], "81935": ["add esp imm", "mov eax ebx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "81952": ["lea ecx [ebx+imm]", "mov ebx imm"], "81960": ["mov edx ebp", "sub edx func", "test edx edx", "jle addr"], "81972": ["mov [esp+imm] ebp", "mov ebp func"], "81978": ["xor eax eax", "mov al [ptr_0+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja short func"], "81994": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "82016": ["mov [esp+imm] func"], "82020": ["mov eax [esp+imm]", "mov edi [esp+imm]", "mov [eax] edi", "jmp short addr"], "82032": ["lea esi [ebx+imm]"], "82035": ["mov eax ebp", "sub eax esi", "test eax eax", "jle addr"], "82047": ["xor eax eax", "mov al [ebx+imm]", "mov al [edi+imm]", "cmp al imm", "jz addr"], "82064": ["cmp al imm", "jz addr"], "82072": ["cmp al imm", "jz addr"], "82080": ["mov eax [esp+imm]", "mov ebx imm", "mov [eax] func", "jmp addr"], "82096": ["lea ecx [ebx+imm]", "mov ebx imm", "jmp addr"], "82112": ["mov ecx func"], "82114": ["mov [esp+imm] func"], "82118": ["mov eax [esp+imm]", "mov edi [esp+imm]", "xor ebx ebx", "mov [eax] edi", "jmp addr"], "82135": ["mov ebp [esp+imm]", "mov ebx imm"], "82144": ["inc ebp", "mov edx [esp+imm]", "sub edx func"], "82151": ["test edx edx", "jg addr"], "82159": ["neg tok", "jmp addr"], "82168": ["mov eax [esp+imm]", "lea ecx [ebx+imm]", "mov [esp+imm] eax", "mov [esp+imm] ebp", "mov edx edi", "mov eax imm"], "82190": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "jmp func"], "82208": ["mov eax [esp+imm]", "inc ebx", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "82232": ["mov eax ebp", "sub eax ebx", "cmp eax imm", "jle addr"], "82245": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz func"], "82263": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "82281": ["lea ecx [ebx+imm]", "mov ebx imm", "jmp addr"], "82296": ["mov eax ebp", "sub eax ebx", "dec eax", "jle addr"], "82307": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz func"], "82325": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "82343": ["lea ecx [ebx+imm]", "mov ebx imm", "jmp addr"], "82360": ["lea eax [ebx+imm]", "sub ebp func", "test ebp ebp", "jle addr"], "82373": ["cmp byte ptr [ebx+imm] imm", "jnz short addr"], "82379": ["dec ebp", "jz addr"], "82386": ["cmp byte ptr [ebx+imm] imm", "jz addr"], "82396": ["mov edi [esp+imm]", "mov ebx imm", "mov [edi] func", "jmp addr"], "82416": ["lea esi [ebx+imm]", "cmp esi ebp", "jnz addr"], "82427": ["mov eax [esp+imm]", "mov ebx imm", "mov [eax] ebp", "jmp addr"], "82448": ["mov eax ebp", "sub eax ebx", "cmp eax imm", "jle addr"], "82461": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz func"], "82479": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "82497": ["lea ecx [ebx+imm]", "mov ebx imm", "jmp addr"], "82512": ["lea edx [ebx+imm]", "mov ecx ebp", "sub ecx edx", "mov [esp+imm] ecx", "test ecx ecx", "jle addr"], "82531": ["xor eax eax", "mov al [ebx+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "82551": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "82568": ["mov eax [esp+imm]", "lea ecx [ebx+imm]", "mov [esp+imm] eax", "mov [esp+imm] ebp", "mov edx edi", "mov eax imm", "jmp addr"], "82600": ["lea edx [ebx+imm]", "sub ebp func", "test ebp ebp", "jle addr"], "82613": ["xor eax eax", "mov al [ebx+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "82633": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add esi ecx", "jmp esi"], "82656": ["mov eax [esp+imm]", "inc ebx", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "82680": ["mov eax [esp+imm]", "inc ebx", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "82704": ["mov eax [esp+imm]", "inc ebx", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "82728": ["lea edx [ebx+imm]", "mov eax ebp", "sub eax func", "test eax eax", "jle addr"], "82743": ["xor eax eax", "mov al [ebx+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja short func"], "82759": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "82776": ["mov eax [esp+imm]", "inc ebx", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "82800": ["mov eax [esp+imm]", "lea edx [ebx+imm]", "mov [esp+imm] eax", "add esp imm", "mov ecx ebp", "mov eax edi", "pop ebx", "pop esi", "pop edi", "pop ebp", "jmp func"], "82832": ["mov eax [esp+imm]"], "82836": ["mov [eax] edx", "xor ebx ebx", "jmp addr"], "82848": ["mov eax [esp+imm]", "mov ebx imm", "mov [eax] func", "jmp addr"], "82864": ["mov eax [esp+imm]", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "82880": ["mov ebp [esp+imm]", "mov ebx imm"], "82889": ["cmp edx imm", "jle addr"], "82898": ["mov edx ebp", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "82916": ["mov edx ebp", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "82934": ["add ebp imm", "mov edx [esp+imm]", "sub edx func", "jmp addr"], "82948": ["mov ebp [esp+imm]", "mov ebx imm"], "82957": ["dec edx", "jz addr"], "82964": ["mov edx ebp", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "82982": ["mov edx ebp", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "83000": ["add ebp imm", "mov edx [esp+imm]", "sub edx func", "jmp addr"], "83014": ["mov ebp [esp+imm]", "mov ebx imm"], "83023": ["cmp edx imm", "jle addr"], "83032": ["mov edx ebp", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "83050": ["mov edx ebp", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "83068": ["add ebp imm", "mov edx [esp+imm]", "sub edx func", "jmp addr"], "83082": ["mov ecx func", "cmp tok imm", "jz addr"], "83093": ["mov eax [esp+imm]", "lea ebx [ecx+imm]", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "83112": ["mov ecx func", "cmp tok imm", "jz addr"], "83123": ["mov eax [esp+imm]", "lea ebx [ecx+imm]", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "83142": ["lea eax [ptr_0+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "cmp tok imm", "jz addr"], "83164": ["mov ebp func", "cmp tok imm", "jnz addr"], "83175": ["test edx edx", "jle addr"], "83183": ["mov ecx [esp+imm]", "xor eax eax", "mov al [ecx]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "83206": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "83222": ["mov ebx imm", "jmp addr"], "83232": ["mov ecx func", "cmp tok imm", "jz addr"], "83243": ["mov eax [esp+imm]", "lea ebx [ecx+imm]", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "83262": ["dec edx", "jz addr"], "83269": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz func"], "83287": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz func"], "83305": ["add ebx imm"], "83308": ["mov edx ebp", "sub edx ebx", "test edx edx", "jle addr"], "83320": ["xor eax eax", "mov al [ebx]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "83339": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "83355": ["mov eax [esp+imm]", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "83371": ["inc ebx", "jmp short addr"], "83374": ["mov eax [esp+imm]", "lea func [ebx+imm]", "mov [esp+imm] eax", "add esp imm", "mov ecx ebp", "mov eax edi", "pop ebx", "pop esi", "pop edi", "pop ebp", "jmp func"], "83401": ["lea func [ebx+imm]", "mov eax ebp", "sub eax edx", "test eax eax", "jle addr"], "83416": ["xor eax eax", "mov al [ebx+imm]", "mov al [edi+imm]", "cmp al imm", "jz addr"], "83433": ["ja addr"], "83439": ["cmp al imm", "jnz addr"], "83447": ["mov eax [esp+imm]", "add ebx imm", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "83466": ["cmp [esp+imm] imm", "jle addr"], "83477": ["mov eax edi", "mov [esp+imm] edx", "call dword ptr [edi+imm]", "mov edx [esp+imm]", "test eax eax", "jnz func"], "83501": ["mov eax edi", "mov [esp+imm] edx", "call dword ptr [edi+imm]", "mov edx [esp+imm]", "test eax eax", "jz func"], "83525": ["add ebx imm", "jmp addr"], "83533": ["cmp [esp+imm] imm", "jz addr"], "83544": ["mov eax edi", "mov [esp+imm] edx", "call dword ptr [edi+imm]", "mov edx [esp+imm]", "test eax eax", "jnz func"], "83568": ["mov eax edi", "mov [esp+imm] edx", "call dword ptr [edi+imm]", "mov edx [esp+imm]", "test eax eax", "jz func"], "83592": ["add ebx imm", "jmp addr"], "83600": ["cmp [esp+imm] imm", "jle addr"], "83611": ["mov eax edi", "mov [esp+imm] edx", "call dword ptr [edi+imm]", "mov edx [esp+imm]", "test eax eax", "jnz func"], "83635": ["mov eax edi", "mov [esp+imm] edx", "call dword ptr [edi+imm]", "mov edx [esp+imm]", "test eax eax", "jz func"], "83659": ["add ebx imm", "jmp addr"], "83667": ["mov eax [esp+imm]", "add ebx imm", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "83686": ["mov eax [esp+imm]", "add ebx imm", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "83705": ["mov eax [esp+imm]", "add ebx imm", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "83724": ["mov eax [esp+imm]", "mov edx [esp+imm]", "lea ebp [eax+imm]", "sub edx func", "test edx edx", "jle addr"], "83745": ["mov ecx [esp+imm]", "xor eax eax", "mov al [ecx+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "83769": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "83785": ["cmp edx imm", "jle addr"], "83794": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz func"], "83812": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "83830": ["jmp func"], "83840": ["cmp edx imm", "jle addr"], "83849": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz func"], "83867": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "83885": ["jmp func"], "83890": ["mov eax [esp+imm]", "mov edx [esp+imm]", "lea ebp [eax+imm]", "sub edx func", "test edx edx", "jle addr"], "83911": ["mov ecx eax", "xor eax eax", "mov al [ecx+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "83933": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "83949": ["cmp edx imm", "jle addr"], "83958": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "83980": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "83998": ["lea ebp [ebx+imm]", "mov edx [esp+imm]", "sub edx func", "test edx edx", "jle addr"], "84015": ["xor eax eax", "mov al [ebx+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "84035": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "84051": ["dec edx", "jz addr"], "84058": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "84080": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "84098": ["lea ebp [ebx+imm]", "mov edx [esp+imm]", "sub edx func", "test edx edx", "jle addr"], "84115": ["xor eax eax", "mov al [ebx+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "84135": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "84151": ["cmp edx imm", "jle addr"], "84160": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "84182": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "84200": ["lea ebp [ebx+imm]", "mov edx [esp+imm]", "sub edx func", "test edx edx", "jle addr"], "84217": ["xor eax eax", "mov al [ebx+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "84237": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "84253": ["mov [esp+imm] func", "mov ebx imm", "jmp addr"], "84267": ["mov ebp [esp+imm]"], "84271": ["mov ebx imm", "jmp func"], "84288": ["add ebx imm", "cmp ebp ebx", "jz addr"], "84299": ["lea eax [ptr_0+imm]", "mov edx ebp", "sub edx func", "mov ebx esi", "test edx edx", "jle addr"], "84316": ["mov esi func", "jmp addr"], "84328": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz func"], "84346": ["lea ecx [ebx+imm]", "mov ebx imm", "jmp addr"], "84360": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz func"], "84378": ["lea ecx [ebx+imm]", "mov ebx imm", "jmp addr"], "84392": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz func"], "84410": ["lea ecx [ebx+imm]", "mov ebx imm", "jmp addr"], "84423": ["cmp al imm", "jnz func"], "84431": ["add ebx imm", "mov edx ebp", "sub edx ebx", "test edx edx", "jle short addr"], "84442": ["xor eax eax", "mov al [ebx]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "84461": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "84477": ["mov eax [esp+imm]", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "84493": ["inc ebx", "mov edx ebp", "sub edx ebx", "test edx edx", "jg short addr"], "84502": ["or ebx imm", "jmp addr"], "84510": ["cmp al imm", "jnz func"], "84518": ["lea edx [ebx+imm]", "mov eax ebp", "sub eax edx", "test eax eax", "jle short addr"], "84529": ["cmp byte ptr [ebx+imm] imm", "mov eax [esp+imm]", "jnz addr"], "84543": ["mov [esp+imm] eax", "add esp imm", "mov ecx ebp", "mov eax edi", "pop ebx", "pop esi", "pop edi", "pop ebp", "jmp func"], "84568": ["mov ebx imm", "jmp addr"], "84578": ["mov eax esi"], "84580": ["mov edi [esp+imm]", "mov ebx imm", "mov [edi] eax", "jmp addr"], "84596": ["test edx edx", "jle short addr"], "84600": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "lea ebx [eax-imm]", "cmp bl imm", "ja short func"], "84617": ["and ebx 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "84634": ["sub eax imm", "cmp al imm", "ja func"], "84645": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "84661": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "84682": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "84702": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "84718": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "84739": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "84759": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "84775": ["cmp edx imm", "jle addr"], "84784": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "84806": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "84824": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "84845": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "84865": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "84881": ["cmp edx imm", "jle addr"], "84890": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "84912": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "84930": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "84951": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "84971": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "84987": ["dec edx", "jz addr"], "84994": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "85016": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "85034": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "85055": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "85075": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "85096": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "85117": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "85137": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "85153": ["mov ebx imm", "jmp addr"], "85163": ["cmp edx imm", "jle addr"], "85172": ["mov edx [esp+imm]", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz func"], "85192": ["mov edx [esp+imm]", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz func"], "85212": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "85233": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "85253": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "85269": ["dec edx", "jz addr"], "85276": ["mov edx [esp+imm]", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz func"], "85296": ["mov edx [esp+imm]", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz func"], "85316": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "85337": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "85357": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "85373": ["cmp edx imm", "jle addr"], "85382": ["mov edx [esp+imm]", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jnz func"], "85402": ["mov edx [esp+imm]", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz func"], "85422": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "85443": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "85463": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "85479": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "85500": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "85520": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "85536": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "85557": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "85577": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "85593": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "85614": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "85634": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "85650": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "85671": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "85691": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "85712": ["mov func [esp+imm]", "add ebx imm", "mov [eax] ebx", "mov ebx imm", "jmp addr"], "85731": ["mov ebx imm", "jmp addr"], "85741": ["mov ecx ebp"], "85743": ["mov eax [esp+imm]", "xor ebx ebx", "mov [eax] ecx", "jmp addr"], "85756": ["mov ebx imm", "jmp addr"], "85766": ["mov ebx imm", "jmp addr"], "85776": ["mov ebx imm", "jmp addr"], "85786": ["mov ecx [esp+imm]", "jmp addr"], "85795": ["mov ebx imm", "neg ebx", "jmp addr"], "85807": ["mov ecx [esp+imm]", "jmp addr"], "85816": ["mov ecx [esp+imm]", "jmp addr"], "85825": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "mov [esp+imm] eax", "sub edx func", "jmp addr"], "85843": ["mov ebp [esp+imm]"], "85847": ["mov ebx imm", "jmp func"], "85857": ["mov ebp [esp+imm]"], "85861": ["mov ebx imm", "jmp func"], "85871": ["mov ebp [esp+imm]"], "85875": ["mov ebx imm", "jmp func"], "85885": ["mov ecx [esp+imm]", "jmp addr"], "85894": ["mov func [esp+imm]"], "85898": ["add ebp imm", "mov edx [esp+imm]", "sub edx func", "mov ebx imm", "jmp addr"], "85917": ["mov func [esp+imm]"], "85921": ["add ebp imm", "mov edx [esp+imm]", "sub edx func", "mov ebx imm", "jmp addr"], "85940": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "mov [esp+imm] eax", "sub edx func", "jmp addr"], "85958": ["cmp edx imm", "jle addr"], "85967": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz short addr"], "85985": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz short addr"], "85999": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "86020": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "86040": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "86056": ["dec edx", "jz addr"], "86063": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "86085": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "86103": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "86124": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "86144": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "86160": ["cmp edx imm", "jle addr"], "86169": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "86191": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "86209": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "86230": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "86250": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "86266": ["cmp edx imm", "jle addr"], "86275": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "86297": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "86315": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle short addr"], "86332": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "86352": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "86368": ["mov func [esp+imm]", "mov edx [esp+imm]", "add ebp imm", "mov ebx imm", "sub edx func", "jmp addr"], "86391": ["mov func [esp+imm]", "mov edx [esp+imm]", "add ebp imm", "mov ebx imm", "sub edx func", "jmp addr"], "86414": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "mov [esp+imm] eax", "sub edx func", "jmp addr"], "86432": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "mov [esp+imm] eax", "sub edx func", "jmp addr"], "86450": ["mov ebx imm", "neg ebx", "jmp addr"], "86462": ["dec edx", "jz addr"], "86469": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "86491": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "86509": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle short addr"], "86526": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "86546": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "86562": ["cmp edx imm", "jle addr"], "86571": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "86593": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "86611": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "86632": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "86652": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "86668": ["dec edx", "jz addr"], "86675": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "86697": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "86715": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "86736": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "86756": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "86772": ["cmp edx imm", "jle addr"], "86781": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "86803": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "86821": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "86842": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "86862": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "86878": ["cmp edx imm", "jle addr"], "86887": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "86909": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "86927": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "86948": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "86968": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "86984": ["cmp edx imm", "jle addr"], "86993": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "87015": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "87033": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "87054": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "87074": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "87090": ["dec edx", "jz addr"], "87097": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "87119": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "87137": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "87158": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "87178": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "87194": ["cmp edx imm", "jle addr"], "87203": ["mov ebx [esp+imm]", "mov eax edi", "mov edx ebx", "call dword ptr [edi+imm]", "test eax eax", "jnz addr"], "87225": ["mov edx ebx", "mov eax edi", "call dword ptr [edi+imm]", "test eax eax", "jz addr"], "87243": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "sub edx eax", "mov [esp+imm] eax", "test edx edx", "jle addr"], "87264": ["xor func func", "mov al [ebp+imm]", "mov al [edi+imm]", "sub eax imm", "cmp al imm", "ja func"], "87284": ["and eax 0FFh", "mov ecx func - 2DF78h)[esi+imm]", "add ecx esi", "jmp ecx"], "87300": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "mov [esp+imm] eax", "sub edx func", "jmp addr"], "87318": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "mov [esp+imm] eax", "sub edx func", "jmp addr"], "87336": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "mov [esp+imm] eax", "sub edx func", "jmp addr"], "87354": ["add ebp imm", "mov edx [esp+imm]", "sub edx func", "mov ebx imm", "jmp addr"], "87373": ["add ebp imm", "mov edx [esp+imm]", "sub edx func", "mov ebx imm", "jmp addr"], "87392": ["lea eax [ebp+imm]", "mov edx [esp+imm]", "mov [esp+imm] eax", "sub edx func", "jmp addr"]}, "preds": [84543], "succs": []}, "normal_attributeValueTok": {"disasm": {"87424": ["push ebp", "call func", "add ebp (offset func - $)", "push edi", "push esi", "push ebx", "sub esp imm", "mov eax [esp+imm]", "mov edx [esp+imm]", "mov esi [esp+imm]", "mov [esp+imm] eax", "mov edi [esp+imm]", "cmp edx eax", "jnb addr"], "87470": ["sub eax edx", "test eax eax", "jle addr"], "87480": ["mov eax edx"], "87482": ["xor ecx ecx", "mov cl [eax]", "cmp byte ptr [esi+imm] imm", "ja short func"], "87493": ["xor ebx ebx", "mov bl [esi+imm]", "mov ecx ebx", "mov ebx func - 2DF78h)[ebp+imm]", "add ebx ebp", "jmp ebx"], "87512": ["inc eax"], "87513": ["mov ebx [esp+imm]", "sub ebx eax", "test ebx ebx", "jg short addr"], "87523": ["jmp short addr"], "87528": ["mov [edi] eax", "xor eax eax"], "87532": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "87544": ["add eax imm", "jmp short addr"], "87552": ["cmp edx eax", "jz short addr"], "87556": ["mov [edi] eax", "add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "87576": ["cmp edx eax", "jnz short addr"], "87580": ["inc edx", "mov eax imm", "mov [edi] edx", "jmp short addr"], "87592": ["cmp edx eax", "jnz short addr"], "87596": ["inc edx", "mov eax imm", "mov [edi] edx", "jmp short addr"], "87608": ["add eax imm", "jmp short addr"], "87616": ["cmp edx eax", "jnz short addr"], "87620": ["mov [esp+imm] edi", "mov ecx [esp+imm]", "add esp imm", "mov eax esi", "inc edx", "pop ebx", "pop esi", "pop edi", "pop ebp", "jmp func"], "87648": ["add eax imm", "jmp addr"], "87656": ["lea eax [edx+imm]", "mov ebx [esp+imm]", "sub ebx eax", "test ebx ebx", "jle short addr"], "87669": ["xor ecx ecx", "mov cl [edx+imm]", "cmp byte ptr [esi+imm] imm", "jnz short addr"], "87681": ["lea eax [edx+imm]"], "87684": ["mov [edi] eax", "mov eax imm", "jmp addr"], "87696": ["mov eax imm", "jmp addr"], "87706": ["or eax imm", "jmp addr"], "87714": ["mov eax imm", "jmp addr"]}, "preds": [87620], "succs": []}, "normal_entityValueTok": {"disasm": {"87728": ["push ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "sub esp imm", "mov ebx [esp+imm]", "mov ecx [esp+imm]", "mov eax [esp+imm]", "mov esi [esp+imm]", "mov [esp+imm] eax", "cmp ebx ecx", "jnb addr"], "87774": ["mov eax ecx", "sub eax ebx", "test eax eax", "jle addr"], "87786": ["mov edx ebx"], "87788": ["xor eax eax", "mov al [edx]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja short func"], "87803": ["and eax 0FFh", "mov ebp func - 2DF78h)[edi+imm]", "add ebp edi", "jmp ebp"], "87824": ["inc edx"], "87825": ["mov eax ecx", "sub eax edx", "test eax eax", "jg short addr"], "87833": ["lea esi [esi+imm]"], "87840": ["mov eax [esp+imm]", "mov [eax] edx", "mov eax imm"], "87851": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "87864": ["cmp ebx edx", "jnz short addr"], "87868": ["sub esp imm", "lea edx [ebx+imm]", "mov eax [esp+imm]", "push eax", "mov eax esi", "call func", "add esp imm", "cmp eax imm", "jnz short addr"], "87894": ["xor eax eax", "jmp short addr"], "87904": ["add edx imm", "jmp short addr"], "87912": ["add edx imm", "jmp short addr"], "87920": ["cmp ebx edx", "jnz short addr"], "87924": ["mov eax [esp+imm]", "inc ebx", "mov [eax] ebx", "mov eax imm", "jmp short addr"], "87944": ["cmp ebx edx", "jnz short addr"], "87948": ["lea eax [ebx+imm]", "sub ecx eax", "test ecx ecx", "jle short addr"], "87957": ["xor edx edx", "mov dl [ebx+imm]", "cmp byte ptr [esi+imm] imm", "jnz short addr"], "87969": ["lea eax [ebx+imm]"], "87972": ["mov esi [esp+imm]", "mov [esi] eax", "add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "87992": ["add edx imm", "jmp addr"], "88000": ["cmp ebx edx", "jnz addr"], "88008": ["mov eax [esp+imm]", "lea edx [ebx+imm]", "mov [esp+imm] eax", "add esp imm", "mov eax esi", "pop ebx", "pop esi", "pop edi", "pop ebp", "jmp func"], "88033": ["mov eax imm", "jmp addr"], "88043": ["or eax imm", "jmp addr"], "88051": ["mov eax imm", "jmp addr"]}, "preds": [88008], "succs": []}, "normal_predefinedEntityName": {"disasm": {"88064": ["mov ecx [esp+imm]", "mov eax [esp+imm]", "sub eax ecx", "cmp eax imm", "jz short addr"], "88079": ["cmp eax imm", "jz short addr"], "88084": ["xor edx edx", "cmp eax imm", "jz short addr"], "88091": ["mov eax edx", "retn"], "88096": ["xor edx edx", "cmp byte ptr [ecx] imm", "jnz short addr"], "88103": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "88109": ["xor edx edx", "cmp byte ptr [ecx+imm] imm", "setnz dl", "dec edx", "and edx imm", "jmp short addr"], "88128": ["cmp byte ptr [ptr_0+imm] imm", "jnz short addr"], "88134": ["mov al func", "cmp al imm", "jz short addr"], "88140": ["xor edx edx", "cmp al imm", "setnz dl", "dec edx", "and edx imm", "jmp short addr"], "88160": ["mov al func", "xor edx edx", "cmp al imm", "jz short addr"], "88168": ["cmp al imm", "jnz short addr"], "88172": ["cmp byte ptr [ptr_0+imm] imm", "jnz short addr"], "88178": ["cmp byte ptr [ptr_0+imm] imm", "jnz short addr"], "88184": ["xor edx edx", "cmp byte ptr [ptr_0+imm] imm", "setnz dl", "dec edx", "and edx imm", "jmp short addr"], "88200": ["cmp byte ptr [ptr_0+imm] imm", "jnz short addr"], "88206": ["cmp byte ptr [ptr_0+imm] imm", "jnz short addr"], "88212": ["xor edx edx", "cmp byte ptr [ptr_0+imm] imm", "setnz dl", "dec edx", "and edx imm", "jmp addr"], "88232": ["mov edx imm", "jmp addr"]}, "preds": [88134], "succs": [88091]}, "little2_scanComment": {"disasm": {"88256": ["push ebp", "call func", "add ebp (offset func - $)", "push edi", "mov edi end", "push esi", "lea esi [ptr+imm]", "push ebx", "sub edi ptr", "cmp edi imm", "push ebx", "jle addr"], "88288": ["mov bl [edx+imm]", "mov dl [edx+imm]"], "88294": ["test bl bl", "jnz short addr"], "88298": ["and edx 0FFh", "cmp byte ptr [enc+imm] imm", "ja short func"], "88311": ["xor ebx ebx", "mov bl [enc+imm]", "mov edx ebx", "mov ebx func - 2DF78h)[ebp+imm]", "add ebx ebp", "jmp ebx"], "88336": ["inc bl", "jnz short func"], "88340": ["and edx 0FFh", "sub edx 0FEh", "cmp edx imm", "jbe short func"], "88357": ["lea esi [esi+imm]"], "88360": ["add esi imm"], "88363": ["mov edi end", "sub edi ptr", "cmp edi imm", "jle short addr"], "88372": ["mov bl [ptr+imm]", "mov dl [ptr]", "test bl bl", "jz short addr"], "88381": ["cmp bl 0DFh", "ja short addr"], "88386": ["cmp bl 0DBh", "ja short func"], "88391": ["add ebx imm", "cmp bl imm", "ja short func"], "88399": ["cmp edi imm", "jle short addr"], "88404": ["add esi imm", "jmp short addr"], "88416": ["mov enc [esp+imm]", "mov [eax] esi", "xor eax eax"], "88424": ["pop edx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "88432": ["cmp edi imm", "jz short addr"], "88437": ["add esi imm", "jmp short addr"], "88448": ["lea edi [esi+imm]", "mov ebx edi", "mov [esp+imm] edi", "mov edi end", "sub edi ptr", "cmp edi imm", "jle short addr"], "88465": ["mov bl [esi+imm]", "mov dl [esi+imm]", "test bl bl", "jnz short addr"], "88475": ["cmp dl imm", "jz short addr"], "88480": ["mov esi [esp+imm]", "jmp addr"], "88488": ["mov esi [esp+imm]", "jmp addr"], "88496": ["or eax imm", "jmp short addr"], "88501": ["mov enc imm", "jmp short addr"], "88508": ["lea enc [esi+imm]", "sub end ptr", "dec ecx", "jle short addr"], "88516": ["cmp byte ptr [esi+imm] imm", "jnz short addr"], "88522": ["cmp byte ptr [esi+imm] imm", "jz short addr"], "88528": ["mov ecx [esp+imm]", "mov [ecx] ptr", "xor ptr ptr", "jmp short addr"], "88538": ["mov ptr [esp+imm]", "add esi imm", "mov [eax] esi", "mov eax imm", "jmp addr"]}, "preds": [88522], "succs": [88424]}, "little2_checkPiTarget": {"disasm": {"88560": ["push esi", "push ebx", "mov cl [ptr]", "cmp cl imm", "jz short addr"], "88569": ["xor esi esi", "mov ebx imm", "cmp cl imm", "jnz short addr"], "88581": ["cmp byte ptr [eax+imm] imm", "mov ebx imm", "jnz short addr"], "88592": ["mov cl [eax+imm]", "cmp cl imm", "jz short addr"], "88600": ["cmp cl imm", "jz short addr"], "88605": ["mov eax ebx", "pop ebx", "pop esi", "retn"], "88616": ["mov upper imm"], "88621": ["cmp byte ptr [eax+imm] imm", "mov ebx imm", "jnz short addr"], "88632": ["mov al [eax+imm]", "cmp al imm", "jz short addr"], "88639": ["cmp al imm", "jnz short addr"], "88643": ["test upper upper", "jnz short addr"], "88647": ["mov dword ptr [tokPtr] imm", "jmp short addr"], "88656": ["mov esi imm", "jmp short addr"], "88664": ["xor ebx ebx", "jmp short addr"]}, "preds": [88632, 88643], "succs": [88605]}, "little2_scanPi": {"disasm": {"88672": ["push ebp", "push edi", "push esi", "mov esi func", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov [esp+imm] func", "mov func ptr", "mov [esp+imm] func", "sub esi eax", "mov ptr large imm", "mov [esp+imm] ptr", "xor ptr ptr", "mov ebp [esp+imm]", "cmp esi imm", "jle addr"], "88730": ["mov dl [target_0+imm]", "mov cl func", "mov [esp+imm] cl", "test dl dl", "jz short addr"], "88743": ["mov edi edx", "cmp dl 0DFh", "ja addr"], "88754": ["cmp dl 0DBh", "ja short func"], "88759": ["lea ecx [edx+imm]", "cmp cl imm", "ja short addr"], "88767": ["cmp esi imm", "jle addr"], "88776": ["mov [ebp+imm] func", "xor func func"], "88781": ["mov ebx [esp+imm]", "xor ebx large imm", "jnz addr"], "88798": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "88808": ["mov edi ecx", "mov ecx [esp+imm]", "and edi 0FFh", "movzx edi byte ptr [ecx+imm]", "sub edi imm", "mov ecx edi", "cmp cl imm", "ja short func"], "88835": ["and edi 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "88856": ["xor edi edi", "lea esi [esi+imm]"], "88864": ["and edi 0FFh", "mov cl [esp+imm]", "shr cl imm", "movzx esi ds:(nmstrtPages - 2DF78h)[ebx+imm]", "and esi 0FFh", "mov edi esi", "mov esi ecx", "and esi 0FFh", "mov cl [esp+imm]", "lea esi [esi+imm]", "mov esi ds:(namingBitmap - 2DF78h)[ebx+imm]", "shr esi cl", "and esi imm", "jz func"], "88926": ["lea esi [target_0+imm]", "mov edi [esp+imm]", "sub edi ptr", "cmp edi imm", "jle addr"], "88944": ["lea ecx (namePages - 2DF78h)[ebx]", "mov [esp+imm] func", "mov [esp+imm] ecx", "lea ecx (namingBitmap - 2DF78h)[ebx]", "mov [esp+imm] ecx"], "88968": ["mov al [ptr+imm]", "mov cl [ptr]", "mov [esp+imm] cl", "test al al", "jz short addr"], "88981": ["cmp al 0DFh", "ja addr"], "88989": ["cmp al 0DBh", "ja short func"], "88993": ["lea ecx [eax+imm]", "cmp cl imm", "ja short addr"], "89001": ["cmp edi imm", "jle addr"], "89010": ["mov [ebp+imm] ptr", "xor eax eax", "jmp addr"], "89024": ["cmp dl 0FFh", "jnz addr"], "89033": ["movzx esi [esp+imm]", "and esi 0FFh", "sub esi 0FEh", "cmp esi imm", "jbe func"], "89059": ["jmp addr"], "89064": ["xor eax eax", "mov al cl", "mov ecx [esp+imm]", "mov al [ecx+imm]", "sub eax imm", "cmp al imm", "ja short func"], "89083": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "89099": ["xor eax eax", "lea ptr [ptr+imm]"], "89104": ["and eax 0FFh", "mov edi [esp+imm]", "xor ecx ecx", "mov cl [edi+imm]", "mov al [esp+imm]", "shr al imm", "mov edi [esp+imm]", "and eax 0FFh", "lea eax [eax+imm]", "mov cl [esp+imm]", "mov eax [edi+imm]", "shr eax cl", "test al imm", "jz func"], "89154": ["add ptr imm", "mov edi [esp+imm]", "sub edi ptr", "cmp edi imm", "jg addr"], "89172": ["lea esi [esi+imm]"], "89176": ["or eax imm", "jmp addr"], "89184": ["cmp esi imm", "jnz func"], "89193": ["jmp addr"], "89200": ["cmp al 0FFh", "jnz short addr"], "89204": ["xor ecx ecx", "mov cl [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "jbe func"], "89225": ["jmp short addr"], "89232": ["mov eax [esp+imm]", "mov ecx ptr", "sub ecx eax", "mov [esp+imm] imm", "cmp ecx imm", "jnz short addr"], "89253": ["test dl dl", "jz addr"], "89261": ["lea edx [ptr+imm]", "mov edi [esp+imm]", "sub edi ptr", "cmp edi imm", "jle short addr"], "89275": ["mov al [esi+imm]", "mov cl [esi+imm]"], "89281": ["test al al", "jnz addr"], "89289": ["and ecx 0FFh", "mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "ja short func"], "89306": ["mov esi eax", "xor eax eax", "mov al [esi+imm]", "mov esi func - 2DF78h)[ebx+imm]", "add esi ebx", "jmp esi"], "89328": ["inc al", "jnz short func"], "89332": ["xor eax eax", "mov al cl", "sub eax 0FEh", "cmp eax imm", "jbe short func"], "89346": ["lea esi [esi+imm]"], "89352": ["add edx imm"], "89355": ["mov edi [esp+imm]", "sub edi ptr", "cmp edi imm", "jle addr"], "89370": ["mov al [ptr+imm]", "mov cl [ptr]", "jmp short addr"], "89377": ["cmp edi imm", "jnz func"], "89386": ["mov eax imm", "jmp addr"], "89396": ["mov eax [esp+imm]", "mov ecx ptr", "sub ecx eax", "mov [esp+imm] imm", "cmp ecx imm", "jnz short addr"], "89417": ["test dl dl", "jz addr"], "89425": ["lea eax [ptr+imm]", "mov ecx [esp+imm]", "sub ecx ptr", "dec ecx", "jle addr"], "89441": ["cmp byte ptr [esi+imm] imm", "jnz short addr"], "89447": ["cmp byte ptr [esi+imm] imm", "jz short addr"], "89453": ["mov esi ptr", "jmp func"], "89464": ["mov [ebp+imm] edx", "xor eax eax", "jmp addr"], "89480": ["cmp al 0DFh", "ja addr"], "89488": ["cmp al 0DBh", "ja short func"], "89492": ["add eax imm", "cmp al imm", "ja func"], "89503": ["cmp edi imm", "jle short addr"], "89508": ["add edx imm", "jmp addr"], "89516": ["cmp edi imm", "jz addr"], "89525": ["add edx imm", "jmp addr"], "89533": ["lea esi [edx+imm]", "mov edi [esp+imm]", "sub edi ptr", "cmp edi imm", "jle addr"], "89551": ["mov al [edx+imm]", "mov cl [edx+imm]", "test al al", "jnz short addr"], "89561": ["cmp cl imm", "jz short addr"], "89566": ["mov edx ptr", "jmp addr"], "89573": ["add esi imm", "mov ptr [esp+imm]", "mov [ebp+imm] esi", "jmp addr"], "89588": ["lea edx [esp+imm]", "call func", "test eax eax", "jnz addr"], "89605": ["mov [ebp+imm] ptr", "jmp addr"], "89613": ["lea edx [esp+imm]", "call func", "test eax eax", "jnz addr"], "89630": ["jmp short addr"], "89632": ["mov edx ptr", "jmp addr"], "89639": ["call func"], "89644": ["add edx imm", "mov eax [esp+imm]", "mov [ebp+imm] edx", "jmp addr"]}, "preds": [89561], "succs": [88781]}, "little2_contentTok": {"disasm": {"89664": ["push ebp", "push edi", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov eax [esp+imm]", "mov edi [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov ebp [esp+imm]", "mov [esp+imm] eax", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "cmp edi ebp", "jnb addr"], "89726": ["mov eax ebp", "sub eax edi", "test al imm", "jz short addr"], "89734": ["and eax imm", "jz addr"], "89743": ["lea ebp [edi+imm]"], "89746": ["mov al [edi+imm]", "mov dl [edi]", "test al al", "jz short addr"], "89755": ["cmp al 0DFh", "ja short addr"], "89759": ["cmp al 0DBh", "ja short func"], "89763": ["add eax imm", "cmp al imm", "ja short func"], "89770": ["mov eax func", "sub eax edi", "cmp eax imm", "jle addr"], "89783": ["lea eax [edi+imm]", "jmp short addr"], "89792": ["and edx 0FFh", "mov esi [esp+imm]", "cmp byte ptr [esi+imm] imm", "ja short func"], "89809": ["xor eax eax", "mov al [esi+imm]", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "89832": ["inc al", "jnz short func"], "89836": ["and edx 0FFh", "sub edx 0FEh", "cmp edx imm", "ja short func"], "89853": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax"], "89861": ["mov esi [esp+imm]", "xor esi large imm", "jnz addr"], "89878": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "89888": ["lea eax [edi+imm]"], "89891": ["mov edi func", "sub edi func", "mov [esp+imm] edi", "dec edi", "jle addr"], "89906": ["mov cl func", "mov dl [ptr_0+imm]", "mov byte ptr [esp+imm] cl"], "89915": ["test dl dl", "jnz addr"], "89923": ["xor ecx ecx", "mov esi [esp+imm]", "mov cl byte ptr [esp+imm]", "cmp byte ptr [esi+imm] imm", "ja short func"], "89940": ["xor edx edx", "mov dl [esi+imm]", "mov edi func - 2DF78h)[ebx+imm]", "add edi ebx", "jmp edi"], "89960": ["inc dl", "jnz short func"], "89964": ["xor ecx ecx", "mov cl byte ptr [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "ja short func"], "89981": ["lea esi [esi+imm]"], "89984": ["mov esi [esp+imm]", "mov [esi] func", "mov func imm", "jmp addr"], "90000": ["cmp [esp+imm] imm", "jle short func"], "90007": ["cmp byte ptr [ptr_0+imm] imm", "jnz short func"], "90013": ["cmp byte ptr [ptr_0+imm] imm", "jz addr"], "90023": ["nop"], "90024": ["add func imm"], "90027": ["mov ecx func", "sub ecx func", "mov [esp+imm] ecx", "dec ecx", "jg addr"], "90042": ["mov esi [esp+imm]", "mov [esi] func", "mov func imm", "jmp addr"], "90064": ["cmp dl 0DFh", "ja short addr"], "90069": ["cmp dl 0DBh", "ja short func"], "90074": ["add edx imm", "cmp dl imm", "ja short func"], "90082": ["cmp [esp+imm] imm", "jle addr"], "90093": ["add func imm", "jmp short addr"], "90104": ["cmp [esp+imm] imm", "jz addr"], "90115": ["add func imm", "jmp short addr"], "90120": ["lea eax [edi+imm]", "mov edx func", "sub edx func", "dec edx", "jle addr"], "90134": ["cmp byte ptr [edi+imm] imm", "mov dl [edi+imm]", "jnz short addr"], "90143": ["and edx 0FFh", "mov ebx [esp+imm]", "cmp byte ptr [ebx+imm] imm", "jnz short addr"], "90160": ["lea func [edi+imm]"], "90163": ["mov esi [esp+imm]", "mov [esi] func", "mov func imm", "jmp addr"], "90184": ["mov eax [esp+imm]", "add edi imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "90208": ["lea edx [edi+imm]", "mov eax func", "sub eax edx", "mov esi eax", "dec eax", "jle addr"], "90224": ["mov al [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test al al", "jnz addr"], "90242": ["xor eax eax", "mov al cl", "mov ecx [esp+imm]", "mov al [ecx+imm]", "sub eax imm", "cmp al imm", "ja func"], "90265": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "90288": ["sub esp imm", "lea edx [edi+imm]", "mov ecx func", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "call func", "add esp imm", "jmp addr"], "90320": ["mov eax func", "sub eax edi", "dec eax", "jg func"], "90331": ["mov eax imm", "jmp addr"], "90344": ["mov eax func", "sub eax edi", "cmp eax imm", "jle addr"], "90357": ["lea eax [edi+imm]", "jmp addr"], "90368": ["lea eax [edi+imm]", "mov ecx func", "sub ecx func", "mov [esp+imm] ecx", "dec ecx", "jle addr"], "90386": ["mov dl [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "90404": ["cmp cl imm", "jnz addr"], "90413": ["lea ecx [edi+imm]", "mov esi func", "sub esi func", "dec esi", "jle addr"], "90427": ["cmp byte ptr [edi+imm] imm", "jnz addr"], "90437": ["cmp byte ptr [edi+imm] imm", "jnz addr"], "90447": ["mov eax [esp+imm]", "mov [eax] func", "xor eax eax", "jmp addr"], "90464": ["cmp [esp+imm] imm", "jle func"], "90475": ["cmp byte ptr [ptr_0+imm] imm", "jnz func"], "90485": ["cmp byte ptr [ptr_0+imm] imm", "jnz func"], "90495": ["mov esi [esp+imm]", "add func imm", "mov [esi] eax", "xor eax eax", "jmp addr"], "90512": ["cmp al 0FFh", "jnz addr"], "90520": ["mov cl byte ptr [esp+imm]", "and ecx 0FFh", "lea esi [ecx-imm]", "cmp esi imm", "ja addr"], "90545": ["lea esi [esi+imm]"], "90552": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "90565": ["add edi imm", "mov eax func", "sub eax edi", "mov [esp+imm] eax", "dec eax", "jle addr"], "90583": ["lea esi (namePages - 2DF78h)[ebx]", "xor eax eax", "mov [esp+imm] esi", "lea esi (namingBitmap - 2DF78h)[ebx]", "mov [esp+imm] esi", "mov [esp+imm] eax", "mov esi [esp+imm]"], "90613": ["mov dl [edi+imm]", "mov cl [edi]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "90630": ["xor edx edx", "mov dl cl", "mov dl [esi+imm]", "sub edx imm", "cmp dl imm", "ja short func"], "90646": ["and edx 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "90663": ["mov eax imm", "jmp addr"], "90673": ["add edi imm"], "90676": ["mov ecx func", "sub ecx edi", "mov [esp+imm] ecx", "dec ecx", "jg short addr"], "90687": ["or eax imm", "jmp addr"], "90696": ["cmp dl 0FFh", "jnz addr"], "90705": ["xor ecx ecx", "mov cl byte ptr [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "ja addr"], "90726": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "90744": ["cmp al 0DFh", "ja addr"], "90752": ["cmp al 0DBh", "ja func"], "90760": ["lea ecx [eax+imm]", "cmp cl imm", "ja addr"], "90772": ["cmp esi imm", "jle addr"], "90781": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "90794": ["cmp esi imm", "jz addr"], "90803": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "90816": ["lea edx [edi+imm]", "mov eax func", "sub eax edx", "dec eax", "jle addr"], "90830": ["cmp byte ptr [edi+imm] imm", "jnz addr"], "90840": ["xor eax eax", "mov esi [esp+imm]", "mov al [edi+imm]", "mov al [esi+imm]", "cmp al imm", "jz addr"], "90861": ["cmp al imm", "jnz addr"], "90869": ["lea edx [edi+imm]", "mov eax func", "sub eax edx", "dec eax", "jle addr"], "90883": ["cmp byte ptr [edi+imm] imm", "jnz addr"], "90893": ["cmp byte ptr [edi+imm] imm", "jnz addr"], "90903": ["push [esp+imm]", "mov ecx func", "mov eax [esp+imm]", "call func", "pop ebx", "jmp addr"], "90928": ["sub esp imm", "lea edx [edi+imm]", "mov ecx [esp+imm]", "push ecx", "mov ecx func", "mov eax [esp+imm]", "call func", "add esp imm", "jmp addr"], "90958": ["lea eax [edi+imm]", "mov esi eax", "mov [esp+imm] eax", "mov eax func", "sub eax esi", "mov [esp+imm] eax", "dec eax", "jle addr"], "90982": ["mov al [edi+imm]", "mov cl [edi+imm]", "test al al", "jnz addr"], "90996": ["xor edx edx", "mov esi [esp+imm]", "mov dl cl", "mov dl [esi+imm]", "sub edx imm", "cmp dl imm", "ja func"], "91020": ["and edx 0FFh", "mov esi func - 2DF78h)[ebx+imm]", "add esi ebx", "jmp esi"], "91037": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "91050": ["xor eax eax", "lea esi [esi+imm]"], "91056": ["and eax 0FFh", "xor ecx ecx", "mov cl ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov al byte ptr [esp+imm]", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov cl byte ptr [esp+imm]", "mov eax ds:(namingBitmap - 2DF78h)[ebx+imm]", "shr eax cl", "test al imm", "jnz func"], "91106": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "91119": ["add edi imm", "mov eax func", "sub eax edi", "mov [esp+imm] eax", "dec eax", "jle addr"], "91137": ["mov al [edi+imm]", "mov cl [edi]", "mov byte ptr [esp+imm] al", "test al al", "jnz addr"], "91154": ["xor edx edx", "mov dl cl", "mov dl [esi+imm]", "sub edx imm", "cmp dl imm", "ja func"], "91174": ["and edx 0FFh", "mov eax func - 2DF78h)[ebx+imm]", "add eax ebx", "jmp eax"], "91191": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov [eax] esi", "xor eax eax", "jmp addr"], "91208": ["cmp dl 0DFh", "ja addr"], "91217": ["cmp dl 0DBh", "ja func"], "91226": ["lea ecx [edx+imm]", "cmp cl imm", "ja addr"], "91238": ["cmp [esp+imm] imm", "jle addr"], "91249": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "91262": ["cmp [esp+imm] imm", "jz addr"], "91273": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "91286": ["mov eax [esp+imm]", "add edi imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "91305": ["lea eax [edi+imm]", "mov edx func", "sub edx eax", "dec edx", "jle addr"], "91319": ["cmp byte ptr [edi+imm] imm", "jnz short addr"], "91325": ["cmp byte ptr [edi+imm] imm", "jz addr"], "91335": ["mov esi [esp+imm]", "mov [esi] eax", "xor eax eax", "jmp addr"], "91348": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "91361": ["cmp [esp+imm] imm", "jnz addr"], "91372": ["lea ecx [edi+imm]", "mov edx ecx", "mov [esp+imm] ecx", "mov ecx func", "sub ecx edx", "mov [esp+imm] ecx", "dec ecx", "jle addr"], "91396": ["mov dl [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "91414": ["mov al cl", "xor ecx ecx", "mov cl al", "mov cl [esi+imm]", "sub ecx imm", "cmp cl imm", "ja func"], "91436": ["and ecx 0FFh", "mov eax func - 2DF78h)[ebx+imm]", "add eax ebx", "jmp eax"], "91453": ["xor edx edx"], "91455": ["and edx 0FFh", "mov eax [esp+imm]", "xor ecx ecx", "mov cl [eax+imm]", "mov dl byte ptr [esp+imm]", "shr dl imm", "mov eax [esp+imm]", "and edx 0FFh", "lea edx [edx+imm]", "mov cl byte ptr [esp+imm]", "mov edx [eax+imm]", "shr edx cl", "and edx imm", "jnz func"], "91508": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "91521": ["add edi imm", "mov eax func", "sub eax edi", "mov [esp+imm] eax", "dec eax", "jle addr"], "91539": ["lea eax (namePages - 2DF78h)[ebx]", "mov [esp+imm] eax", "lea eax (namingBitmap - 2DF78h)[ebx]", "mov [esp+imm] eax"], "91559": ["mov al [edi+imm]", "mov cl [edi]", "test al al", "jnz addr"], "91572": ["xor edx edx", "mov esi [esp+imm]", "mov dl cl", "mov dl [esi+imm]", "sub edx imm", "cmp dl imm", "ja short func"], "91592": ["and edx 0FFh", "mov esi func - 2DF78h)[ebx+imm]", "add esi ebx", "jmp esi"], "91609": ["add edi imm", "mov eax func", "sub eax edi", "mov [esp+imm] eax", "dec eax", "jg short addr"], "91623": ["or eax imm", "jmp addr"], "91631": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "91644": ["cmp al 0FFh", "jnz addr"], "91652": ["xor edx edx", "mov dl cl", "sub edx 0FEh", "cmp edx imm", "ja addr"], "91671": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "91684": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov [esi] ebx", "jmp addr"], "91704": ["mov eax imm", "jmp addr"], "91714": ["mov esi [esp+imm]", "mov [esi] func", "mov func imm", "jmp addr"], "91730": ["or n imm", "jmp addr"], "91738": ["mov esi [esp+imm]", "mov [esi] func", "mov func imm", "jmp addr"], "91754": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "91767": ["cmp al 0DFh", "ja short addr"], "91771": ["cmp al 0DBh", "ja func"], "91779": ["lea edx [eax+imm]", "cmp dl imm", "ja short func"], "91787": ["cmp [esp+imm] imm", "jle addr"], "91798": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov [eax] esi", "xor eax eax", "jmp addr"], "91815": ["cmp al 0FFh", "jnz short func"], "91819": ["xor edx edx", "mov dl cl", "sub edx 0FEh", "cmp edx imm", "jbe func"], "91838": ["and eax 0FFh", "xor edx edx", "mov dl ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov al cl", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov eax ds:(namingBitmap - 2DF78h)[ebx+imm]", "shr eax cl", "test al imm", "jnz func"], "91882": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov [eax] esi", "xor eax eax", "jmp addr"], "91899": ["mov func imm", "jmp addr"], "91909": ["cmp al 0DFh", "ja short addr"], "91913": ["cmp al 0DBh", "ja func"], "91921": ["lea edx [eax+imm]", "cmp dl imm", "ja short func"], "91929": ["cmp [esp+imm] imm", "jle addr"], "91940": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "91953": ["cmp al 0FFh", "jnz short func"], "91957": ["xor edx edx", "mov dl cl", "sub edx 0FEh", "cmp edx imm", "jbe func"], "91976": ["and eax 0FFh", "mov esi [esp+imm]", "xor edx edx", "mov dl [esi+imm]", "mov al cl", "shr al imm", "mov esi [esp+imm]", "and eax 0FFh", "lea eax [eax+imm]", "mov eax [esi+imm]", "shr eax cl", "test al imm", "jnz func"], "92020": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "92033": ["mov eax imm", "jmp addr"], "92043": ["mov func imm", "jmp addr"], "92053": ["lea edx [edi+imm]", "mov eax func", "sub eax edx", "cmp eax imm", "jle addr"], "92069": ["lea eax func - 2DF78h)[ebx]", "add edi imm"], "92078": ["cmp byte ptr [edx+imm] imm", "jnz addr"], "92088": ["mov cl [eax]", "cmp [edx] cl", "jnz addr"], "92098": ["add edx imm", "inc eax", "cmp edi edx", "jnz short addr"], "92106": ["mov eax [esp+imm]", "mov [eax] edi", "mov eax imm", "jmp addr"], "92122": ["call func"], "92127": ["cmp dl 0DFh", "ja short addr"], "92132": ["cmp dl 0DBh", "ja func"], "92141": ["lea ecx [edx+imm]", "cmp cl imm", "ja short func"], "92149": ["cmp [esp+imm] imm", "mov eax [esp+imm]", "jle addr"], "92164": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov [esi] ebx", "jmp addr"], "92179": ["cmp dl 0FFh", "jnz short func"], "92184": ["xor ecx ecx", "mov cl byte ptr [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "jbe func"], "92205": ["and edx 0FFh", "xor ecx ecx", "mov eax [esp+imm]", "mov cl ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov dl byte ptr [esp+imm]", "shr dl imm", "and edx 0FFh", "lea edx [edx+imm]", "mov cl byte ptr [esp+imm]", "mov edx [eax+imm]", "shr edx cl", "and dl imm", "jz addr"], "92258": ["add edi imm", "mov [esp+imm] imm", "jmp addr"], "92274": ["or eax imm", "jmp addr"], "92282": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "92295": ["or eax imm", "jmp addr"], "92303": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov [eax] esi", "xor eax eax", "jmp addr"], "92320": ["mov eax [esp+imm]", "add edi imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "92339": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "92352": ["cmp [esp+imm] imm", "jz addr"], "92363": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov [eax] esi", "xor eax eax", "jmp addr"], "92380": ["mov eax imm", "jmp addr"], "92390": ["add edi imm", "mov esi [esp+imm]"], "92397": ["mov eax func", "sub eax edi", "dec eax", "jle short addr"], "92404": ["cmp byte ptr [edi+imm] imm", "jnz short addr"], "92410": ["xor eax eax", "mov al [edi]", "mov al [esi+imm]", "cmp al imm", "jz short addr"], "92422": ["ja short addr"], "92424": ["sub eax imm", "cmp al imm", "ja short addr"], "92431": ["add edi imm", "jmp short addr"], "92436": ["mov eax imm", "jmp addr"], "92446": ["cmp al imm", "jz short addr"], "92450": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "92463": ["mov eax [esp+imm]", "add edi imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "92482": ["or eax imm", "jmp addr"], "92490": ["or eax imm", "jmp addr"], "92498": ["or eax imm", "jmp addr"], "92506": ["mov eax imm", "jmp addr"], "92516": ["or eax imm", "jmp addr"], "92524": ["mov eax imm", "jmp addr"], "92534": ["or eax imm", "jmp addr"], "92542": ["cmp [esp+imm] imm", "mov eax [esp+imm]", "jz short addr"], "92553": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov [esi] ebx", "jmp addr"], "92568": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov [esi] ebx", "jmp addr"], "92587": ["mov eax imm", "jmp addr"], "92597": ["cmp [esp+imm] imm", "jz short addr"], "92604": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "92617": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "92630": ["mov eax imm", "jmp addr"], "92640": ["or eax imm", "jmp addr"], "92648": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "92661": ["mov eax imm", "jmp addr"], "92671": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov [esi] ebx", "jmp addr"], "92690": ["mov eax imm", "jmp addr"], "92700": ["mov eax imm", "jmp addr"], "92710": ["mov eax imm", "jmp addr"], "92720": ["or eax imm", "jmp addr"], "92728": ["mov eax [esp+imm]", "add edi imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "92747": ["or eax imm", "jmp addr"], "92755": ["mov al byte ptr [esp+imm]", "mov [esp+imm] esi"], "92763": ["and eax 0FFh", "xor edx edx", "mov dl ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov al cl", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov eax ds:(namingBitmap - 2DF78h)[ebx+imm]", "shr eax cl", "test al imm", "jz addr"], "92807": ["lea esi (namePages - 2DF78h)[ebx]", "add edi imm", "xor eax eax", "mov [esp+imm] esi", "mov [esp+imm] edi", "mov [esp+imm] eax", "mov esi [esp+imm]"], "92834": ["mov edx [esp+imm]", "mov eax func", "sub eax edx", "mov [esp+imm] eax", "dec eax", "jle addr"], "92853": ["mov cl [edx+imm]", "mov al [edx]", "mov byte ptr [esp+imm] al", "test cl cl", "jnz short addr"], "92866": ["mov edi eax", "and edi 0FFh", "movzx edi byte ptr [esi+imm]", "sub edi imm", "mov eax edi", "cmp al imm", "ja short func"], "92888": ["and edi 0FFh", "mov eax func - 2DF78h)[ebx+imm]", "add eax ebx", "jmp eax"], "92905": ["cmp cl 0DFh", "ja short addr"], "92910": ["cmp cl 0DBh", "ja short func"], "92915": ["lea edi [ecx+imm]", "mov eax edi", "cmp al imm", "ja func"], "92928": ["cmp [esp+imm] imm", "jle addr"], "92939": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "92952": ["cmp cl 0FFh", "jnz func"], "92961": ["movzx edi byte ptr [esp+imm]", "and edi 0FFh", "sub edi 0FEh", "cmp edi imm", "ja func"], "92987": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "93000": ["xor ecx ecx", "mov cl [edx+imm]", "movzx edi byte ptr [esi+imm]", "and edi 0FFh", "lea ecx [edi-imm]", "cmp ecx imm", "jbe short addr"], "93024": ["cmp edi imm", "jle short addr"], "93029": ["cmp edi imm", "jnz short addr"], "93034": ["mov edx eax"], "93036": ["lea eax [edx+imm]", "mov ecx func", "sub ecx eax", "mov [esp+imm] eax", "dec ecx", "jle addr"], "93054": ["cmp byte ptr [edx+imm] imm", "jz short addr"], "93060": ["mov esi [esp+imm]", "mov [esi] eax", "xor eax eax", "jmp addr"], "93073": ["cmp dl imm", "jnz short addr"], "93078": ["mov edx eax"], "93080": ["lea eax [edx+imm]", "mov ecx func", "sub ecx eax", "mov [esp+imm] eax", "dec ecx", "jle addr"], "93098": ["cmp byte ptr [edx+imm] imm", "jz addr"], "93108": ["mov esi [esp+imm]", "mov [esi] eax", "xor eax eax", "jmp addr"], "93121": ["cmp edi imm", "jle short addr"], "93126": ["mov edx eax", "jmp short func"], "93130": ["add edx imm", "lea eax [esp+imm]", "mov [esp+imm] edx", "mov [esp+imm] eax"], "93145": ["mov ecx [esp+imm]", "mov eax func", "sub eax ecx", "mov [esp+imm] eax", "dec eax", "jle addr"], "93164": ["mov al [ecx+imm]", "mov dl [ecx]", "test al al", "jnz short addr"], "93173": ["and edx 0FFh", "xor eax eax", "mov dl [esi+imm]", "mov al dl", "cmp edi eax", "jz addr"], "93195": ["cmp dl imm", "ja func"], "93204": ["mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "93215": ["cmp [esp+imm] imm", "jz addr"], "93226": ["add ecx imm", "mov [esp+imm] ecx", "jmp short addr"], "93235": ["cmp al 0DFh", "ja short addr"], "93239": ["cmp al 0DBh", "ja short func"], "93243": ["add eax imm", "cmp al imm", "ja short func"], "93250": ["cmp [esp+imm] imm", "jle addr"], "93261": ["add ecx imm", "mov [esp+imm] ecx", "jmp short addr"], "93270": ["sub esp imm", "lea edx [ecx+imm]", "mov eax esi", "mov ecx func", "push [esp+imm]", "call func", "add esp imm", "test eax eax", "jg addr"], "93300": ["jnz addr"], "93306": ["mov esi [esp+imm]", "mov edx [esp+imm]", "mov [esi] edx", "jmp addr"], "93321": ["mov eax [esp+imm]", "mov [eax] ecx", "xor eax eax", "jmp addr"], "93334": ["inc al", "jnz short func"], "93338": ["xor eax eax", "mov al dl", "sub eax 0FEh", "cmp eax imm", "ja short func"], "93352": ["mov eax [esp+imm]", "mov [eax] ecx", "xor eax eax", "jmp addr"], "93365": ["add ecx imm", "mov [esp+imm] ecx", "jmp addr"], "93377": ["lea edx [ecx+imm]", "mov eax func", "sub eax edx", "mov [esp+imm] edx", "dec eax", "jle addr"], "93395": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "93401": ["xor eax eax", "mov al [ecx+imm]", "mov al [esi+imm]", "cmp al imm", "jz func"], "93418": ["ja short addr"], "93420": ["cmp al imm", "jbe short addr"], "93424": ["cmp al imm", "jnz short addr"], "93428": ["mov eax [esp+imm]", "mov esi [esp+imm]", "add eax imm", "mov [esi] eax", "mov eax imm", "jmp addr"], "93451": ["xor ecx ecx", "mov cl [edx+imm]", "mov edx ecx", "mov dl [esi+imm]", "cmp dl imm", "jz addr"], "93471": ["cmp dl imm", "ja addr"], "93480": ["cmp dl imm", "jbe addr"], "93489": ["mov edx eax", "jmp func"], "93496": ["cmp al imm", "ja short func"], "93500": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "93513": ["cmp al imm", "jnz short addr"], "93517": ["mov edi [esp+imm]", "mov eax func", "lea edx [edi+imm]", "sub eax edx", "mov [esp+imm] edx", "mov [esp+imm] eax", "dec eax", "jle addr"], "93543": ["mov al [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] al", "mov byte ptr [esp+imm] cl", "test al al", "jnz addr"], "93565": ["mov al cl", "xor ecx ecx", "mov cl al", "mov cl [esi+imm]", "sub ecx imm", "cmp cl imm", "ja func"], "93587": ["and ecx 0FFh", "mov eax func - 2DF78h)[ebx+imm]", "add eax ebx", "jmp eax"], "93604": ["mov eax [esp+imm]", "mov ecx func", "lea edx [eax+imm]", "sub ecx edx", "mov [esp+imm] edx", "dec ecx", "jle addr"], "93626": ["cmp byte ptr [eax+imm] imm", "jnz short addr"], "93632": ["cmp byte ptr [eax+imm] imm", "jz short addr"], "93638": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "93651": ["mov esi [esp+imm]", "add eax imm", "mov [esi] eax", "mov eax imm", "jmp addr"], "93670": ["mov al byte ptr [esp+imm]"], "93674": ["and eax 0FFh", "xor ecx ecx", "mov cl ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov al byte ptr [esp+imm]", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov cl byte ptr [esp+imm]", "mov eax ds:(namingBitmap - 2DF78h)[ebx+imm]", "shr eax cl", "test al imm", "jz short addr"], "93720": ["add edi imm", "mov [esp+imm] imm", "mov [esp+imm] edi", "jmp addr"], "93740": ["mov al byte ptr [esp+imm]", "cmp al 0DFh", "ja short addr"], "93748": ["cmp al 0DBh", "ja short func"], "93752": ["lea ecx [eax+imm]", "cmp cl imm", "ja short addr"], "93760": ["cmp [esp+imm] imm", "jle addr"], "93771": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "93784": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "93797": ["cmp [esp+imm] imm", "jz short addr"], "93804": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "93817": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "93830": ["cmp al 0FFh", "jnz addr"], "93838": ["xor ecx ecx", "mov cl byte ptr [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "ja addr"], "93859": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "93872": ["or eax imm", "jmp addr"], "93880": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "93893": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "93906": ["cmp [esp+imm] imm", "jz short addr"], "93913": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "93926": ["mov eax imm", "jmp addr"], "93936": ["cmp [esp+imm] imm", "jnz addr"], "93947": ["lea eax [edx+imm]", "mov edi func", "sub edi eax", "mov [esp+imm] eax", "mov [esp+imm] edi", "mov [esp+imm] eax", "dec edi", "jle short addr"], "93969": ["mov cl [edx+imm]", "mov al [edx+imm]", "mov byte ptr [esp+imm] al", "test cl cl", "jnz addr"], "93987": ["mov edi eax", "and edi 0FFh", "movzx edi byte ptr [esi+imm]", "sub edi imm", "mov eax edi", "cmp al imm", "ja func"], "94013": ["and edi 0FFh", "mov eax func - 2DF78h)[ebx+imm]", "add eax ebx", "jmp eax"], "94030": ["add edx imm", "mov [esp+imm] edx", "jmp addr"], "94042": ["cmp cl 0FFh", "jnz short func"], "94047": ["movzx edi byte ptr [esp+imm]", "and edi 0FFh", "sub edi 0FEh", "cmp edi imm", "jbe func"], "94073": ["and ecx 0FFh", "mov al byte ptr [esp+imm]", "movzx edi ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov cl al", "and edi 0FFh", "shr cl imm", "and ecx 0FFh", "lea ecx [ecx+imm]", "mov edi ds:(namingBitmap - 2DF78h)[ebx+imm]", "mov cl al", "shr edi cl", "and edi imm", "jz short addr"], "94127": ["add edx imm", "mov [esp+imm] imm", "mov [esp+imm] edx", "jmp addr"], "94147": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov [esi] ebx", "jmp addr"], "94166": ["cmp cl 0DFh", "ja addr"], "94175": ["cmp cl 0DBh", "ja short func"], "94180": ["lea edi [ecx+imm]", "mov eax edi", "cmp al imm", "ja short func"], "94189": ["cmp [esp+imm] imm", "mov eax [esp+imm]", "jle addr"], "94204": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov [esi] ebx", "jmp addr"], "94219": ["cmp [esp+imm] imm", "mov eax [esp+imm]", "jz addr"], "94234": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov [esi] ebx", "jmp addr"], "94249": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov [esi] ebx", "jmp addr"], "94268": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov [esi] ebx", "jmp addr"], "94287": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "94300": ["mov al byte ptr [esp+imm]", "mov [esp+imm] esi", "cmp al 0DFh", "ja addr"], "94316": ["cmp al 0DBh", "ja func"], "94324": ["lea edx [eax+imm]", "cmp dl imm", "ja addr"], "94336": ["cmp [esp+imm] imm", "jle short addr"], "94343": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "94356": ["or eax imm", "jmp addr"], "94364": ["mov eax imm", "jmp addr"], "94374": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "94387": ["mov eax imm", "jmp addr"], "94397": ["mov [esp+imm] esi", "jmp addr"], "94406": ["and ecx 0FFh", "mov eax [esp+imm]", "movzx edi byte ptr [eax+imm]", "mov al byte ptr [esp+imm]", "and edi 0FFh", "mov cl al", "shr cl imm", "and ecx 0FFh", "lea ecx [ecx+imm]", "mov edi ds:(namingBitmap - 2DF78h)[ebx+imm]", "mov cl al", "shr edi cl", "and edi imm", "jnz func"], "94464": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "94477": ["cmp [esp+imm] imm", "jz short addr"], "94484": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "94497": ["mov eax imm", "jmp addr"]}, "preds": [94477], "succs": [89861]}, "little2_attributeValueTok": {"disasm": {"94512": ["push ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "push esi", "mov ebx [esp+imm]", "mov ecx [esp+imm]", "mov esi [esp+imm]", "mov [esp+imm] ebx", "mov ebp [esp+imm]", "cmp ebx ecx", "jnb addr"], "94555": ["mov eax ecx", "sub eax ebx", "dec eax", "jle addr"], "94566": ["mov eax ebx"], "94568": ["mov dl [eax+imm]", "test dl dl", "jnz short addr"], "94575": ["xor edx edx", "mov dl [eax]", "cmp byte ptr [esi+imm] imm", "ja short func"], "94586": ["xor ebx ebx", "mov bl [esi+imm]", "mov edx ebx", "mov ebx func - 2DF78h)[edi+imm]", "add ebx edi", "jmp ebx"], "94608": ["add edx imm", "cmp dl imm", "jbe short func"], "94616": ["add eax imm"], "94619": ["mov edx ecx", "sub edx eax", "dec edx", "jg short addr"], "94626": ["lea esi [esi+imm]"], "94632": ["mov [ebp+imm] eax", "mov eax imm"], "94640": ["pop edx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "94648": ["add eax imm", "jmp short addr"], "94656": ["cmp [esp+imm] eax", "jnz short addr"], "94661": ["mov ebx [esp+imm]", "mov eax imm", "add ebx imm", "mov [ebp+imm] ebx", "jmp short addr"], "94680": ["mov [ebp+imm] eax", "xor eax eax", "pop edx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "94696": ["cmp [esp+imm] eax", "jnz short addr"], "94701": ["mov edx [esp+imm]", "mov [esp+imm] ebp", "pop ebx", "mov eax esi", "pop ebx", "add edx imm", "pop esi", "pop edi", "pop ebp", "jmp func"], "94728": ["cmp [esp+imm] eax", "jnz short addr"], "94733": ["mov ebx [esp+imm]", "mov eax imm", "add ebx imm", "mov [ebp+imm] ebx", "jmp short addr"], "94752": ["add eax imm", "jmp addr"], "94760": ["mov edi [esp+imm]", "cmp edi eax", "jnz addr"], "94771": ["lea eax [edi+imm]", "sub ecx eax", "dec ecx", "jle short addr"], "94779": ["cmp byte ptr [edi+imm] imm", "mov dl [edi+imm]", "jnz short addr"], "94788": ["and edx 0FFh", "cmp byte ptr [esi+imm] imm", "jnz short addr"], "94801": ["add edi imm", "mov eax edi"], "94806": ["mov [ebp+imm] eax", "mov eax imm", "jmp addr"], "94819": ["mov eax imm", "jmp addr"], "94829": ["or eax imm", "jmp addr"], "94837": ["mov eax imm", "jmp addr"]}, "preds": [94701], "succs": []}, "little2_entityValueTok": {"disasm": {"94848": ["push ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "push ebp", "mov ebx [esp+imm]", "mov ecx [esp+imm]", "mov eax [esp+imm]", "mov esi [esp+imm]", "mov [esp+imm] eax", "cmp ebx ecx", "jnb addr"], "94891": ["mov eax ecx", "sub eax ebx", "dec eax", "jle addr"], "94902": ["mov eax ebx"], "94904": ["mov dl [eax+imm]", "test dl dl", "jnz short addr"], "94911": ["xor edx edx", "mov dl [eax]", "mov dl [esi+imm]", "sub edx imm", "cmp dl imm", "ja short func"], "94927": ["and edx 0FFh", "mov ebp func - 2DF78h)[edi+imm]", "add ebp edi", "jmp ebp"], "94944": ["add edx imm", "cmp dl imm", "jbe short func"], "94952": ["add eax imm"], "94955": ["mov edx ecx", "sub edx eax", "dec edx", "jg short addr"], "94962": ["lea esi [esi+imm]"], "94968": ["mov esi [esp+imm]", "mov [esi] eax", "mov eax imm"], "94978": ["pop edx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "94984": ["add eax imm", "jmp short addr"], "94992": ["cmp ebx eax", "jnz short addr"], "94996": ["mov eax [esp+imm]", "add ebx imm", "mov [eax] ebx", "mov eax imm", "jmp short addr"], "95016": ["cmp ebx eax", "jnz short addr"], "95020": ["mov eax [esp+imm]", "lea edx [ebx+imm]", "mov [esp+imm] eax", "pop edi", "pop ebx", "mov eax esi", "pop esi", "pop edi", "pop ebp", "jmp func"], "95048": ["add eax imm", "jmp short addr"], "95056": ["cmp ebx eax", "jz short addr"], "95060": ["mov edi [esp+imm]", "mov func - 2DF78h)[edi] eax", "mov eax imm", "pop edx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "95080": ["cmp ebx eax", "jnz short addr"], "95084": ["lea eax [ebx+imm]", "sub ecx eax", "dec ecx", "jle short addr"], "95092": ["cmp byte ptr [ebx+imm] imm", "mov dl [ebx+imm]", "jnz short addr"], "95101": ["and edx 0FFh", "cmp byte ptr [esi+imm] imm", "jnz short addr"], "95114": ["lea eax [ebx+imm]"], "95117": ["mov esi [esp+imm]", "mov [esi] eax", "mov eax imm", "jmp addr"], "95136": ["lea edx [ebx+imm]", "mov eax esi", "mov ebx [esp+imm]", "push ebx", "call func", "pop esi", "cmp eax imm", "jnz addr"], "95160": ["xor eax eax", "jmp addr"], "95167": ["mov eax imm", "jmp addr"], "95177": ["or eax imm", "jmp addr"], "95185": ["mov eax imm", "jmp addr"]}, "preds": [95020], "succs": []}, "big2_scanComment": {"disasm": {"95200": ["push ebp", "call func", "add ebp (offset func - $)", "push edi", "mov edi end", "push esi", "lea esi [ptr+imm]", "push ebx", "sub edi ptr", "cmp edi imm", "push ebx", "jle addr"], "95232": ["mov bl [edx+imm]", "mov dl [edx+imm]"], "95238": ["test bl bl", "jnz short addr"], "95242": ["and edx 0FFh", "cmp byte ptr [enc+imm] imm", "ja short func"], "95255": ["xor ebx ebx", "mov bl [enc+imm]", "mov edx ebx", "mov ebx func - 2DF78h)[ebp+imm]", "add ebx ebp", "jmp ebx"], "95280": ["inc bl", "jnz short func"], "95284": ["and edx 0FFh", "sub edx 0FEh", "cmp edx imm", "jbe short func"], "95301": ["lea esi [esi+imm]"], "95304": ["add esi imm"], "95307": ["mov edi end", "sub edi ptr", "cmp edi imm", "jle short addr"], "95316": ["mov bl [ptr]", "mov dl [ptr+imm]", "test bl bl", "jz short addr"], "95325": ["cmp bl 0DFh", "ja short addr"], "95330": ["cmp bl 0DBh", "ja short func"], "95335": ["add ebx imm", "cmp bl imm", "ja short func"], "95343": ["cmp edi imm", "jle short addr"], "95348": ["add esi imm", "jmp short addr"], "95360": ["mov enc [esp+imm]", "mov [eax] esi", "xor eax eax"], "95368": ["pop edx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "95376": ["cmp edi imm", "jz short addr"], "95381": ["add esi imm", "jmp short addr"], "95392": ["lea edi [esi+imm]", "mov ebx edi", "mov [esp+imm] edi", "mov edi end", "sub edi ptr", "cmp edi imm", "jle short addr"], "95409": ["mov bl [esi+imm]", "mov dl [esi+imm]", "test bl bl", "jnz short addr"], "95419": ["cmp dl imm", "jz short addr"], "95424": ["mov esi [esp+imm]", "jmp addr"], "95432": ["mov esi [esp+imm]", "jmp addr"], "95440": ["or eax imm", "jmp short addr"], "95445": ["mov enc imm", "jmp short addr"], "95452": ["lea enc [esi+imm]", "sub end ptr", "dec ecx", "jle short addr"], "95460": ["cmp byte ptr [esi+imm] imm", "jnz short addr"], "95466": ["cmp byte ptr [esi+imm] imm", "jz short addr"], "95472": ["mov ecx [esp+imm]", "mov [ecx] ptr", "xor ptr ptr", "jmp short addr"], "95482": ["mov ptr [esp+imm]", "add esi imm", "mov [eax] esi", "mov eax imm", "jmp addr"]}, "preds": [95466], "succs": [95368]}, "big2_checkPiTarget": {"disasm": {"95504": ["push esi", "push ebx", "mov cl [ptr+imm]", "cmp cl imm", "jz short addr"], "95514": ["xor esi esi", "mov ebx imm", "cmp cl imm", "jnz short addr"], "95526": ["cmp byte ptr [eax+imm] imm", "mov ebx imm", "jnz short addr"], "95537": ["mov cl [eax+imm]", "cmp cl imm", "jz short addr"], "95545": ["cmp cl imm", "jz short addr"], "95550": ["mov eax ebx", "pop ebx", "pop esi", "retn"], "95560": ["mov upper imm"], "95565": ["cmp byte ptr [eax+imm] imm", "mov ebx imm", "jnz short addr"], "95576": ["mov al [eax+imm]", "cmp al imm", "jz short addr"], "95583": ["cmp al imm", "jnz short addr"], "95587": ["test upper upper", "jnz short addr"], "95591": ["mov dword ptr [tokPtr] imm", "jmp short addr"], "95600": ["mov esi imm", "jmp short addr"], "95608": ["xor ebx ebx", "jmp short addr"]}, "preds": [95576, 95587], "succs": [95550]}, "big2_scanPi": {"disasm": {"95616": ["push ebp", "push edi", "push esi", "mov esi func", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov [esp+imm] func", "mov func ptr", "mov [esp+imm] func", "sub esi eax", "mov ptr large imm", "mov [esp+imm] ptr", "xor ptr ptr", "mov ebp [esp+imm]", "cmp esi imm", "jle addr"], "95674": ["mov dl func", "mov cl [target_0+imm]", "mov [esp+imm] cl", "test dl dl", "jz short addr"], "95687": ["mov edi edx", "cmp dl 0DFh", "ja addr"], "95698": ["cmp dl 0DBh", "ja short func"], "95703": ["lea ecx [edx+imm]", "cmp cl imm", "ja short addr"], "95711": ["cmp esi imm", "jle addr"], "95720": ["mov [ebp+imm] func", "xor func func"], "95725": ["mov ebx [esp+imm]", "xor ebx large imm", "jnz addr"], "95742": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "95752": ["mov edi ecx", "mov ecx [esp+imm]", "and edi 0FFh", "movzx edi byte ptr [ecx+imm]", "sub edi imm", "mov ecx edi", "cmp cl imm", "ja short func"], "95779": ["and edi 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "95800": ["xor edi edi", "lea esi [esi+imm]"], "95808": ["and edi 0FFh", "mov cl [esp+imm]", "shr cl imm", "movzx esi ds:(nmstrtPages - 2DF78h)[ebx+imm]", "and esi 0FFh", "mov edi esi", "mov esi ecx", "and esi 0FFh", "mov cl [esp+imm]", "lea esi [esi+imm]", "mov esi ds:(namingBitmap - 2DF78h)[ebx+imm]", "shr esi cl", "and esi imm", "jz func"], "95870": ["lea esi [target_0+imm]", "mov edi [esp+imm]", "sub edi ptr", "cmp edi imm", "jle addr"], "95888": ["lea ecx (namePages - 2DF78h)[ebx]", "mov [esp+imm] func", "mov [esp+imm] ecx", "lea ecx (namingBitmap - 2DF78h)[ebx]", "mov [esp+imm] ecx"], "95912": ["mov al [ptr]", "mov cl [ptr+imm]", "mov [esp+imm] cl", "test al al", "jz short addr"], "95925": ["cmp al 0DFh", "ja addr"], "95933": ["cmp al 0DBh", "ja short func"], "95937": ["lea ecx [eax+imm]", "cmp cl imm", "ja short addr"], "95945": ["cmp edi imm", "jle addr"], "95954": ["mov [ebp+imm] ptr", "xor eax eax", "jmp addr"], "95968": ["cmp dl 0FFh", "jnz addr"], "95977": ["movzx esi [esp+imm]", "and esi 0FFh", "sub esi 0FEh", "cmp esi imm", "jbe func"], "96003": ["jmp addr"], "96008": ["xor eax eax", "mov al cl", "mov ecx [esp+imm]", "mov al [ecx+imm]", "sub eax imm", "cmp al imm", "ja short func"], "96027": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "96043": ["xor eax eax", "lea ptr [ptr+imm]"], "96048": ["and eax 0FFh", "mov edi [esp+imm]", "xor ecx ecx", "mov cl [edi+imm]", "mov al [esp+imm]", "shr al imm", "mov edi [esp+imm]", "and eax 0FFh", "lea eax [eax+imm]", "mov cl [esp+imm]", "mov eax [edi+imm]", "shr eax cl", "test al imm", "jz func"], "96098": ["add ptr imm", "mov edi [esp+imm]", "sub edi ptr", "cmp edi imm", "jg addr"], "96116": ["lea esi [esi+imm]"], "96120": ["or eax imm", "jmp addr"], "96128": ["cmp esi imm", "jnz func"], "96137": ["jmp addr"], "96144": ["cmp al 0FFh", "jnz short addr"], "96148": ["xor ecx ecx", "mov cl [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "jbe func"], "96169": ["jmp short addr"], "96176": ["mov eax [esp+imm]", "mov ecx ptr", "sub ecx eax", "mov [esp+imm] imm", "cmp ecx imm", "jnz short addr"], "96197": ["test dl dl", "jz addr"], "96205": ["lea edx [ptr+imm]", "mov edi [esp+imm]", "sub edi ptr", "cmp edi imm", "jle short addr"], "96219": ["mov al [esi+imm]", "mov cl [esi+imm]"], "96225": ["test al al", "jnz addr"], "96233": ["and ecx 0FFh", "mov eax [esp+imm]", "cmp byte ptr [eax+imm] imm", "ja short func"], "96250": ["mov esi eax", "xor eax eax", "mov al [esi+imm]", "mov esi func - 2DF78h)[ebx+imm]", "add esi ebx", "jmp esi"], "96272": ["inc al", "jnz short func"], "96276": ["xor eax eax", "mov al cl", "sub eax 0FEh", "cmp eax imm", "jbe short func"], "96290": ["lea esi [esi+imm]"], "96296": ["add edx imm"], "96299": ["mov edi [esp+imm]", "sub edi ptr", "cmp edi imm", "jle addr"], "96314": ["mov al [ptr]", "mov cl [ptr+imm]", "jmp short addr"], "96321": ["cmp edi imm", "jnz func"], "96330": ["mov eax imm", "jmp addr"], "96340": ["mov eax [esp+imm]", "mov ecx ptr", "sub ecx eax", "mov [esp+imm] imm", "cmp ecx imm", "jnz short addr"], "96361": ["test dl dl", "jz addr"], "96369": ["lea eax [ptr+imm]", "mov ecx [esp+imm]", "sub ecx ptr", "dec ecx", "jle addr"], "96385": ["cmp byte ptr [esi+imm] imm", "jnz short addr"], "96391": ["cmp byte ptr [esi+imm] imm", "jz short addr"], "96397": ["mov esi ptr", "jmp func"], "96408": ["mov [ebp+imm] edx", "xor eax eax", "jmp addr"], "96424": ["cmp al 0DFh", "ja addr"], "96432": ["cmp al 0DBh", "ja short func"], "96436": ["add eax imm", "cmp al imm", "ja func"], "96447": ["cmp edi imm", "jle short addr"], "96452": ["add edx imm", "jmp addr"], "96460": ["cmp edi imm", "jz addr"], "96469": ["add edx imm", "jmp addr"], "96477": ["lea esi [edx+imm]", "mov edi [esp+imm]", "sub edi ptr", "cmp edi imm", "jle addr"], "96495": ["mov al [edx+imm]", "mov cl [edx+imm]", "test al al", "jnz short addr"], "96505": ["cmp cl imm", "jz short addr"], "96510": ["mov edx ptr", "jmp addr"], "96517": ["add esi imm", "mov ptr [esp+imm]", "mov [ebp+imm] esi", "jmp addr"], "96532": ["lea edx [esp+imm]", "call func", "test eax eax", "jnz addr"], "96549": ["mov [ebp+imm] ptr", "jmp addr"], "96557": ["lea edx [esp+imm]", "call func", "test eax eax", "jnz addr"], "96574": ["jmp short addr"], "96576": ["mov edx ptr", "jmp addr"], "96583": ["call func"], "96588": ["add edx imm", "mov eax [esp+imm]", "mov [ebp+imm] edx", "jmp addr"]}, "preds": [96505], "succs": [95725]}, "big2_contentTok": {"disasm": {"96608": ["push ebp", "push edi", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov eax [esp+imm]", "mov edi [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov ebp [esp+imm]", "mov [esp+imm] eax", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "cmp edi ebp", "jnb addr"], "96670": ["mov eax ebp", "sub eax edi", "test al imm", "jz short addr"], "96678": ["and eax imm", "jz addr"], "96687": ["lea ebp [edi+imm]"], "96690": ["mov al [edi]", "mov dl [edi+imm]", "test al al", "jz short addr"], "96699": ["cmp al 0DFh", "ja short addr"], "96703": ["cmp al 0DBh", "ja short func"], "96707": ["add eax imm", "cmp al imm", "ja short func"], "96714": ["mov eax func", "sub eax edi", "cmp eax imm", "jle addr"], "96727": ["lea eax [edi+imm]", "jmp short addr"], "96736": ["and edx 0FFh", "mov esi [esp+imm]", "cmp byte ptr [esi+imm] imm", "ja short func"], "96753": ["xor eax eax", "mov al [esi+imm]", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "96776": ["inc al", "jnz short func"], "96780": ["and edx 0FFh", "sub edx 0FEh", "cmp edx imm", "ja short func"], "96797": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax"], "96805": ["mov esi [esp+imm]", "xor esi large imm", "jnz addr"], "96822": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "96832": ["lea eax [edi+imm]"], "96835": ["mov edi func", "sub edi func", "mov [esp+imm] edi", "dec edi", "jle addr"], "96850": ["mov cl [ptr_0+imm]", "mov dl func", "mov byte ptr [esp+imm] cl"], "96859": ["test dl dl", "jnz addr"], "96867": ["xor ecx ecx", "mov esi [esp+imm]", "mov cl byte ptr [esp+imm]", "cmp byte ptr [esi+imm] imm", "ja short func"], "96884": ["xor edx edx", "mov dl [esi+imm]", "mov edi func - 2DF78h)[ebx+imm]", "add edi ebx", "jmp edi"], "96904": ["inc dl", "jnz short func"], "96908": ["xor ecx ecx", "mov cl byte ptr [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "ja short func"], "96925": ["lea esi [esi+imm]"], "96928": ["mov esi [esp+imm]", "mov [esi] func", "mov func imm", "jmp addr"], "96944": ["cmp [esp+imm] imm", "jle short func"], "96951": ["cmp byte ptr [ptr_0+imm] imm", "jnz short func"], "96957": ["cmp byte ptr [ptr_0+imm] imm", "jz addr"], "96967": ["nop"], "96968": ["add func imm"], "96971": ["mov ecx func", "sub ecx func", "mov [esp+imm] ecx", "dec ecx", "jg addr"], "96986": ["mov esi [esp+imm]", "mov [esi] func", "mov func imm", "jmp addr"], "97008": ["cmp dl 0DFh", "ja short addr"], "97013": ["cmp dl 0DBh", "ja short func"], "97018": ["add edx imm", "cmp dl imm", "ja short func"], "97026": ["cmp [esp+imm] imm", "jle addr"], "97037": ["add func imm", "jmp short addr"], "97048": ["cmp [esp+imm] imm", "jz addr"], "97059": ["add func imm", "jmp short addr"], "97064": ["lea eax [edi+imm]", "mov edx func", "sub edx func", "dec edx", "jle addr"], "97078": ["cmp byte ptr [edi+imm] imm", "mov dl [edi+imm]", "jnz short addr"], "97087": ["and edx 0FFh", "mov ebx [esp+imm]", "cmp byte ptr [ebx+imm] imm", "jnz short addr"], "97104": ["lea func [edi+imm]"], "97107": ["mov esi [esp+imm]", "mov [esi] func", "mov func imm", "jmp addr"], "97128": ["mov eax [esp+imm]", "add edi imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "97152": ["lea edx [edi+imm]", "mov eax func", "sub eax edx", "mov esi eax", "dec eax", "jle addr"], "97168": ["mov al [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test al al", "jnz addr"], "97186": ["xor eax eax", "mov al cl", "mov ecx [esp+imm]", "mov al [ecx+imm]", "sub eax imm", "cmp al imm", "ja func"], "97209": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "97232": ["sub esp imm", "lea edx [edi+imm]", "mov ecx func", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "call func", "add esp imm", "jmp addr"], "97264": ["mov eax func", "sub eax edi", "dec eax", "jg func"], "97275": ["mov eax imm", "jmp addr"], "97288": ["mov eax func", "sub eax edi", "cmp eax imm", "jle addr"], "97301": ["lea eax [edi+imm]", "jmp addr"], "97312": ["lea eax [edi+imm]", "mov ecx func", "sub ecx func", "mov [esp+imm] ecx", "dec ecx", "jle addr"], "97330": ["mov dl [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "97348": ["cmp cl imm", "jnz addr"], "97357": ["lea ecx [edi+imm]", "mov esi func", "sub esi func", "dec esi", "jle addr"], "97371": ["cmp byte ptr [edi+imm] imm", "jnz addr"], "97381": ["cmp byte ptr [edi+imm] imm", "jnz addr"], "97391": ["mov eax [esp+imm]", "mov [eax] func", "xor eax eax", "jmp addr"], "97408": ["cmp [esp+imm] imm", "jle func"], "97419": ["cmp byte ptr [ptr_0+imm] imm", "jnz func"], "97429": ["cmp byte ptr [ptr_0+imm] imm", "jnz func"], "97439": ["mov esi [esp+imm]", "add func imm", "mov [esi] eax", "xor eax eax", "jmp addr"], "97456": ["cmp al 0FFh", "jnz addr"], "97464": ["mov cl byte ptr [esp+imm]", "and ecx 0FFh", "lea esi [ecx-imm]", "cmp esi imm", "ja addr"], "97489": ["lea esi [esi+imm]"], "97496": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "97509": ["add edi imm", "mov eax func", "sub eax edi", "mov [esp+imm] eax", "dec eax", "jle addr"], "97527": ["lea esi (namePages - 2DF78h)[ebx]", "xor eax eax", "mov [esp+imm] esi", "lea esi (namingBitmap - 2DF78h)[ebx]", "mov [esp+imm] esi", "mov [esp+imm] eax", "mov esi [esp+imm]"], "97557": ["mov dl [edi]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "97574": ["xor edx edx", "mov dl cl", "mov dl [esi+imm]", "sub edx imm", "cmp dl imm", "ja short func"], "97590": ["and edx 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "97607": ["mov eax imm", "jmp addr"], "97617": ["add edi imm"], "97620": ["mov ecx func", "sub ecx edi", "mov [esp+imm] ecx", "dec ecx", "jg short addr"], "97631": ["or eax imm", "jmp addr"], "97640": ["cmp dl 0FFh", "jnz addr"], "97649": ["xor ecx ecx", "mov cl byte ptr [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "ja addr"], "97670": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "97688": ["cmp al 0DFh", "ja addr"], "97696": ["cmp al 0DBh", "ja func"], "97704": ["lea ecx [eax+imm]", "cmp cl imm", "ja addr"], "97716": ["cmp esi imm", "jle addr"], "97725": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "97738": ["cmp esi imm", "jz addr"], "97747": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "97760": ["lea edx [edi+imm]", "mov eax func", "sub eax edx", "dec eax", "jle addr"], "97774": ["cmp byte ptr [edi+imm] imm", "jnz addr"], "97784": ["xor eax eax", "mov esi [esp+imm]", "mov al [edi+imm]", "mov al [esi+imm]", "cmp al imm", "jz addr"], "97805": ["cmp al imm", "jnz addr"], "97813": ["lea edx [edi+imm]", "mov eax func", "sub eax edx", "dec eax", "jle addr"], "97827": ["cmp byte ptr [edi+imm] imm", "jnz addr"], "97837": ["cmp byte ptr [edi+imm] imm", "jnz addr"], "97847": ["push [esp+imm]", "mov ecx func", "mov eax [esp+imm]", "call func", "pop ebx", "jmp addr"], "97872": ["sub esp imm", "lea edx [edi+imm]", "mov ecx [esp+imm]", "push ecx", "mov ecx func", "mov eax [esp+imm]", "call func", "add esp imm", "jmp addr"], "97902": ["lea eax [edi+imm]", "mov esi eax", "mov [esp+imm] eax", "mov eax func", "sub eax esi", "mov [esp+imm] eax", "dec eax", "jle addr"], "97926": ["mov al [edi+imm]", "mov cl [edi+imm]", "test al al", "jnz addr"], "97940": ["xor edx edx", "mov esi [esp+imm]", "mov dl cl", "mov dl [esi+imm]", "sub edx imm", "cmp dl imm", "ja func"], "97964": ["and edx 0FFh", "mov esi func - 2DF78h)[ebx+imm]", "add esi ebx", "jmp esi"], "97981": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "97994": ["xor eax eax", "lea esi [esi+imm]"], "98000": ["and eax 0FFh", "xor ecx ecx", "mov cl ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov al byte ptr [esp+imm]", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov cl byte ptr [esp+imm]", "mov eax ds:(namingBitmap - 2DF78h)[ebx+imm]", "shr eax cl", "test al imm", "jnz func"], "98050": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "98063": ["add edi imm", "mov eax func", "sub eax edi", "mov [esp+imm] eax", "dec eax", "jle addr"], "98081": ["mov al [edi]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] al", "test al al", "jnz addr"], "98098": ["xor edx edx", "mov dl cl", "mov dl [esi+imm]", "sub edx imm", "cmp dl imm", "ja func"], "98118": ["and edx 0FFh", "mov eax func - 2DF78h)[ebx+imm]", "add eax ebx", "jmp eax"], "98135": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov [eax] esi", "xor eax eax", "jmp addr"], "98152": ["cmp dl 0DFh", "ja addr"], "98161": ["cmp dl 0DBh", "ja func"], "98170": ["lea ecx [edx+imm]", "cmp cl imm", "ja addr"], "98182": ["cmp [esp+imm] imm", "jle addr"], "98193": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "98206": ["cmp [esp+imm] imm", "jz addr"], "98217": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "98230": ["mov eax [esp+imm]", "add edi imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "98249": ["lea eax [edi+imm]", "mov edx func", "sub edx eax", "dec edx", "jle addr"], "98263": ["cmp byte ptr [edi+imm] imm", "jnz short addr"], "98269": ["cmp byte ptr [edi+imm] imm", "jz addr"], "98279": ["mov esi [esp+imm]", "mov [esi] eax", "xor eax eax", "jmp addr"], "98292": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "98305": ["cmp [esp+imm] imm", "jnz addr"], "98316": ["lea ecx [edi+imm]", "mov edx ecx", "mov [esp+imm] ecx", "mov ecx func", "sub ecx edx", "mov [esp+imm] ecx", "dec ecx", "jle addr"], "98340": ["mov dl [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "98358": ["mov al cl", "xor ecx ecx", "mov cl al", "mov cl [esi+imm]", "sub ecx imm", "cmp cl imm", "ja func"], "98380": ["and ecx 0FFh", "mov eax func - 2DF78h)[ebx+imm]", "add eax ebx", "jmp eax"], "98397": ["xor edx edx"], "98399": ["and edx 0FFh", "mov eax [esp+imm]", "xor ecx ecx", "mov cl [eax+imm]", "mov dl byte ptr [esp+imm]", "shr dl imm", "mov eax [esp+imm]", "and edx 0FFh", "lea edx [edx+imm]", "mov cl byte ptr [esp+imm]", "mov edx [eax+imm]", "shr edx cl", "and edx imm", "jnz func"], "98452": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "98465": ["add edi imm", "mov eax func", "sub eax edi", "mov [esp+imm] eax", "dec eax", "jle addr"], "98483": ["lea eax (namePages - 2DF78h)[ebx]", "mov [esp+imm] eax", "lea eax (namingBitmap - 2DF78h)[ebx]", "mov [esp+imm] eax"], "98503": ["mov al [edi]", "mov cl [edi+imm]", "test al al", "jnz addr"], "98516": ["xor edx edx", "mov esi [esp+imm]", "mov dl cl", "mov dl [esi+imm]", "sub edx imm", "cmp dl imm", "ja short func"], "98536": ["and edx 0FFh", "mov esi func - 2DF78h)[ebx+imm]", "add esi ebx", "jmp esi"], "98553": ["add edi imm", "mov eax func", "sub eax edi", "mov [esp+imm] eax", "dec eax", "jg short addr"], "98567": ["or eax imm", "jmp addr"], "98575": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "98588": ["cmp al 0FFh", "jnz addr"], "98596": ["xor edx edx", "mov dl cl", "sub edx 0FEh", "cmp edx imm", "ja addr"], "98615": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "98628": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov [esi] ebx", "jmp addr"], "98648": ["mov eax imm", "jmp addr"], "98658": ["mov esi [esp+imm]", "mov [esi] func", "mov func imm", "jmp addr"], "98674": ["or n imm", "jmp addr"], "98682": ["mov esi [esp+imm]", "mov [esi] func", "mov func imm", "jmp addr"], "98698": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "98711": ["cmp al 0DFh", "ja short addr"], "98715": ["cmp al 0DBh", "ja func"], "98723": ["lea edx [eax+imm]", "cmp dl imm", "ja short func"], "98731": ["cmp [esp+imm] imm", "jle addr"], "98742": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov [eax] esi", "xor eax eax", "jmp addr"], "98759": ["cmp al 0FFh", "jnz short func"], "98763": ["xor edx edx", "mov dl cl", "sub edx 0FEh", "cmp edx imm", "jbe func"], "98782": ["and eax 0FFh", "xor edx edx", "mov dl ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov al cl", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov eax ds:(namingBitmap - 2DF78h)[ebx+imm]", "shr eax cl", "test al imm", "jnz func"], "98826": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov [eax] esi", "xor eax eax", "jmp addr"], "98843": ["mov func imm", "jmp addr"], "98853": ["cmp al 0DFh", "ja short addr"], "98857": ["cmp al 0DBh", "ja func"], "98865": ["lea edx [eax+imm]", "cmp dl imm", "ja short func"], "98873": ["cmp [esp+imm] imm", "jle addr"], "98884": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "98897": ["cmp al 0FFh", "jnz short func"], "98901": ["xor edx edx", "mov dl cl", "sub edx 0FEh", "cmp edx imm", "jbe func"], "98920": ["and eax 0FFh", "mov esi [esp+imm]", "xor edx edx", "mov dl [esi+imm]", "mov al cl", "shr al imm", "mov esi [esp+imm]", "and eax 0FFh", "lea eax [eax+imm]", "mov eax [esi+imm]", "shr eax cl", "test al imm", "jnz func"], "98964": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "98977": ["mov eax imm", "jmp addr"], "98987": ["mov func imm", "jmp addr"], "98997": ["lea edx [edi+imm]", "mov eax func", "sub eax edx", "cmp eax imm", "jle addr"], "99013": ["lea eax func - 2DF78h)[ebx]", "add edi imm"], "99022": ["cmp byte ptr [edx] imm", "jnz addr"], "99031": ["mov cl [eax]", "cmp [edx+imm] cl", "jnz addr"], "99042": ["add edx imm", "inc eax", "cmp edi edx", "jnz short addr"], "99050": ["mov eax [esp+imm]", "mov [eax] edi", "mov eax imm", "jmp addr"], "99066": ["call func"], "99071": ["cmp dl 0DFh", "ja short addr"], "99076": ["cmp dl 0DBh", "ja func"], "99085": ["lea ecx [edx+imm]", "cmp cl imm", "ja short func"], "99093": ["cmp [esp+imm] imm", "mov eax [esp+imm]", "jle addr"], "99108": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov [esi] ebx", "jmp addr"], "99123": ["cmp dl 0FFh", "jnz short func"], "99128": ["xor ecx ecx", "mov cl byte ptr [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "jbe func"], "99149": ["and edx 0FFh", "xor ecx ecx", "mov eax [esp+imm]", "mov cl ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov dl byte ptr [esp+imm]", "shr dl imm", "and edx 0FFh", "lea edx [edx+imm]", "mov cl byte ptr [esp+imm]", "mov edx [eax+imm]", "shr edx cl", "and dl imm", "jz addr"], "99202": ["add edi imm", "mov [esp+imm] imm", "jmp addr"], "99218": ["or eax imm", "jmp addr"], "99226": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "99239": ["or eax imm", "jmp addr"], "99247": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov [eax] esi", "xor eax eax", "jmp addr"], "99264": ["mov eax [esp+imm]", "add edi imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "99283": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "99296": ["cmp [esp+imm] imm", "jz addr"], "99307": ["mov eax [esp+imm]", "mov esi [esp+imm]", "mov [eax] esi", "xor eax eax", "jmp addr"], "99324": ["mov eax imm", "jmp addr"], "99334": ["add edi imm", "mov esi [esp+imm]"], "99341": ["mov eax func", "sub eax edi", "dec eax", "jle short addr"], "99348": ["cmp byte ptr [edi] imm", "jnz short addr"], "99353": ["xor eax eax", "mov al [edi+imm]", "mov al [esi+imm]", "cmp al imm", "jz short addr"], "99366": ["ja short addr"], "99368": ["sub eax imm", "cmp al imm", "ja short addr"], "99375": ["add edi imm", "jmp short addr"], "99380": ["mov eax imm", "jmp addr"], "99390": ["cmp al imm", "jz short addr"], "99394": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "99407": ["mov eax [esp+imm]", "add edi imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "99426": ["or eax imm", "jmp addr"], "99434": ["or eax imm", "jmp addr"], "99442": ["or eax imm", "jmp addr"], "99450": ["mov eax imm", "jmp addr"], "99460": ["or eax imm", "jmp addr"], "99468": ["mov eax imm", "jmp addr"], "99478": ["or eax imm", "jmp addr"], "99486": ["cmp [esp+imm] imm", "mov eax [esp+imm]", "jz short addr"], "99497": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov [esi] ebx", "jmp addr"], "99512": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov [esi] ebx", "jmp addr"], "99531": ["mov eax imm", "jmp addr"], "99541": ["cmp [esp+imm] imm", "jz short addr"], "99548": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "99561": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "99574": ["mov eax imm", "jmp addr"], "99584": ["or eax imm", "jmp addr"], "99592": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "99605": ["mov eax imm", "jmp addr"], "99615": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov [esi] ebx", "jmp addr"], "99634": ["mov eax imm", "jmp addr"], "99644": ["mov eax imm", "jmp addr"], "99654": ["mov eax imm", "jmp addr"], "99664": ["or eax imm", "jmp addr"], "99672": ["mov eax [esp+imm]", "add edi imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "99691": ["or eax imm", "jmp addr"], "99699": ["mov al byte ptr [esp+imm]", "mov [esp+imm] esi"], "99707": ["and eax 0FFh", "xor edx edx", "mov dl ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov al cl", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov eax ds:(namingBitmap - 2DF78h)[ebx+imm]", "shr eax cl", "test al imm", "jz addr"], "99751": ["lea esi (namePages - 2DF78h)[ebx]", "add edi imm", "xor eax eax", "mov [esp+imm] esi", "mov [esp+imm] edi", "mov [esp+imm] eax", "mov esi [esp+imm]"], "99778": ["mov edx [esp+imm]", "mov eax func", "sub eax edx", "mov [esp+imm] eax", "dec eax", "jle addr"], "99797": ["mov cl [edx]", "mov al [edx+imm]", "mov byte ptr [esp+imm] al", "test cl cl", "jnz short addr"], "99810": ["mov edi eax", "and edi 0FFh", "movzx edi byte ptr [esi+imm]", "sub edi imm", "mov eax edi", "cmp al imm", "ja short func"], "99832": ["and edi 0FFh", "mov eax func - 2DF78h)[ebx+imm]", "add eax ebx", "jmp eax"], "99849": ["cmp cl 0DFh", "ja short addr"], "99854": ["cmp cl 0DBh", "ja short func"], "99859": ["lea edi [ecx+imm]", "mov eax edi", "cmp al imm", "ja func"], "99872": ["cmp [esp+imm] imm", "jle addr"], "99883": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "99896": ["cmp cl 0FFh", "jnz func"], "99905": ["movzx edi byte ptr [esp+imm]", "and edi 0FFh", "sub edi 0FEh", "cmp edi imm", "ja func"], "99931": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "99944": ["xor ecx ecx", "mov cl [edx+imm]", "movzx edi byte ptr [esi+imm]", "and edi 0FFh", "lea ecx [edi-imm]", "cmp ecx imm", "jbe short addr"], "99968": ["cmp edi imm", "jle short addr"], "99973": ["cmp edi imm", "jnz short addr"], "99978": ["mov edx eax"], "99980": ["lea eax [edx+imm]", "mov ecx func", "sub ecx eax", "mov [esp+imm] eax", "dec ecx", "jle addr"], "99998": ["cmp byte ptr [edx+imm] imm", "jz short addr"], "100004": ["mov esi [esp+imm]", "mov [esi] eax", "xor eax eax", "jmp addr"], "100017": ["cmp dl imm", "jnz short addr"], "100022": ["mov edx eax"], "100024": ["lea eax [edx+imm]", "mov ecx func", "sub ecx eax", "mov [esp+imm] eax", "dec ecx", "jle addr"], "100042": ["cmp byte ptr [edx+imm] imm", "jz addr"], "100052": ["mov esi [esp+imm]", "mov [esi] eax", "xor eax eax", "jmp addr"], "100065": ["cmp edi imm", "jle short addr"], "100070": ["mov edx eax", "jmp short func"], "100074": ["add edx imm", "lea eax [esp+imm]", "mov [esp+imm] edx", "mov [esp+imm] eax"], "100089": ["mov ecx [esp+imm]", "mov eax func", "sub eax ecx", "mov [esp+imm] eax", "dec eax", "jle addr"], "100108": ["mov al [ecx]", "mov dl [ecx+imm]", "test al al", "jnz short addr"], "100117": ["and edx 0FFh", "xor eax eax", "mov dl [esi+imm]", "mov al dl", "cmp edi eax", "jz addr"], "100139": ["cmp dl imm", "ja func"], "100148": ["mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "100159": ["cmp [esp+imm] imm", "jz addr"], "100170": ["add ecx imm", "mov [esp+imm] ecx", "jmp short addr"], "100179": ["cmp al 0DFh", "ja short addr"], "100183": ["cmp al 0DBh", "ja short func"], "100187": ["add eax imm", "cmp al imm", "ja short func"], "100194": ["cmp [esp+imm] imm", "jle addr"], "100205": ["add ecx imm", "mov [esp+imm] ecx", "jmp short addr"], "100214": ["sub esp imm", "lea edx [ecx+imm]", "mov eax esi", "mov ecx func", "push [esp+imm]", "call func", "add esp imm", "test eax eax", "jg addr"], "100244": ["jnz addr"], "100250": ["mov esi [esp+imm]", "mov edx [esp+imm]", "mov [esi] edx", "jmp addr"], "100265": ["mov eax [esp+imm]", "mov [eax] ecx", "xor eax eax", "jmp addr"], "100278": ["inc al", "jnz short func"], "100282": ["xor eax eax", "mov al dl", "sub eax 0FEh", "cmp eax imm", "ja short func"], "100296": ["mov eax [esp+imm]", "mov [eax] ecx", "xor eax eax", "jmp addr"], "100309": ["add ecx imm", "mov [esp+imm] ecx", "jmp addr"], "100321": ["lea edx [ecx+imm]", "mov eax func", "sub eax edx", "mov [esp+imm] edx", "dec eax", "jle addr"], "100339": ["cmp byte ptr [ecx+imm] imm", "jnz short addr"], "100345": ["xor eax eax", "mov al [ecx+imm]", "mov al [esi+imm]", "cmp al imm", "jz func"], "100362": ["ja short addr"], "100364": ["cmp al imm", "jbe short addr"], "100368": ["cmp al imm", "jnz short addr"], "100372": ["mov eax [esp+imm]", "mov esi [esp+imm]", "add eax imm", "mov [esi] eax", "mov eax imm", "jmp addr"], "100395": ["xor ecx ecx", "mov cl [edx+imm]", "mov edx ecx", "mov dl [esi+imm]", "cmp dl imm", "jz addr"], "100415": ["cmp dl imm", "ja addr"], "100424": ["cmp dl imm", "jbe addr"], "100433": ["mov edx eax", "jmp func"], "100440": ["cmp al imm", "ja short func"], "100444": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "100457": ["cmp al imm", "jnz short addr"], "100461": ["mov edi [esp+imm]", "mov eax func", "lea edx [edi+imm]", "sub eax edx", "mov [esp+imm] edx", "mov [esp+imm] eax", "dec eax", "jle addr"], "100487": ["mov al [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] al", "mov byte ptr [esp+imm] cl", "test al al", "jnz addr"], "100509": ["mov al cl", "xor ecx ecx", "mov cl al", "mov cl [esi+imm]", "sub ecx imm", "cmp cl imm", "ja func"], "100531": ["and ecx 0FFh", "mov eax func - 2DF78h)[ebx+imm]", "add eax ebx", "jmp eax"], "100548": ["mov eax [esp+imm]", "mov ecx func", "lea edx [eax+imm]", "sub ecx edx", "mov [esp+imm] edx", "dec ecx", "jle addr"], "100570": ["cmp byte ptr [eax+imm] imm", "jnz short addr"], "100576": ["cmp byte ptr [eax+imm] imm", "jz short addr"], "100582": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "100595": ["mov esi [esp+imm]", "add eax imm", "mov [esi] eax", "mov eax imm", "jmp addr"], "100614": ["mov al byte ptr [esp+imm]"], "100618": ["and eax 0FFh", "xor ecx ecx", "mov cl ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov al byte ptr [esp+imm]", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov cl byte ptr [esp+imm]", "mov eax ds:(namingBitmap - 2DF78h)[ebx+imm]", "shr eax cl", "test al imm", "jz short addr"], "100664": ["add edi imm", "mov [esp+imm] imm", "mov [esp+imm] edi", "jmp addr"], "100684": ["mov al byte ptr [esp+imm]", "cmp al 0DFh", "ja short addr"], "100692": ["cmp al 0DBh", "ja short func"], "100696": ["lea ecx [eax+imm]", "cmp cl imm", "ja short addr"], "100704": ["cmp [esp+imm] imm", "jle addr"], "100715": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "100728": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "100741": ["cmp [esp+imm] imm", "jz short addr"], "100748": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "100761": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "100774": ["cmp al 0FFh", "jnz addr"], "100782": ["xor ecx ecx", "mov cl byte ptr [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "ja addr"], "100803": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "100816": ["or eax imm", "jmp addr"], "100824": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "100837": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "100850": ["cmp [esp+imm] imm", "jz short addr"], "100857": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "100870": ["mov eax imm", "jmp addr"], "100880": ["cmp [esp+imm] imm", "jnz addr"], "100891": ["lea eax [edx+imm]", "mov edi func", "sub edi eax", "mov [esp+imm] eax", "mov [esp+imm] edi", "mov [esp+imm] eax", "dec edi", "jle short addr"], "100913": ["mov cl [edx+imm]", "mov al [edx+imm]", "mov byte ptr [esp+imm] al", "test cl cl", "jnz addr"], "100931": ["mov edi eax", "and edi 0FFh", "movzx edi byte ptr [esi+imm]", "sub edi imm", "mov eax edi", "cmp al imm", "ja func"], "100957": ["and edi 0FFh", "mov eax func - 2DF78h)[ebx+imm]", "add eax ebx", "jmp eax"], "100974": ["add edx imm", "mov [esp+imm] edx", "jmp addr"], "100986": ["cmp cl 0FFh", "jnz short func"], "100991": ["movzx edi byte ptr [esp+imm]", "and edi 0FFh", "sub edi 0FEh", "cmp edi imm", "jbe func"], "101017": ["and ecx 0FFh", "mov al byte ptr [esp+imm]", "movzx edi ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov cl al", "and edi 0FFh", "shr cl imm", "and ecx 0FFh", "lea ecx [ecx+imm]", "mov edi ds:(namingBitmap - 2DF78h)[ebx+imm]", "mov cl al", "shr edi cl", "and edi imm", "jz short addr"], "101071": ["add edx imm", "mov [esp+imm] imm", "mov [esp+imm] edx", "jmp addr"], "101091": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov [esi] ebx", "jmp addr"], "101110": ["cmp cl 0DFh", "ja addr"], "101119": ["cmp cl 0DBh", "ja short func"], "101124": ["lea edi [ecx+imm]", "mov eax edi", "cmp al imm", "ja short func"], "101133": ["cmp [esp+imm] imm", "mov eax [esp+imm]", "jle addr"], "101148": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov [esi] ebx", "jmp addr"], "101163": ["cmp [esp+imm] imm", "mov eax [esp+imm]", "jz addr"], "101178": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov [esi] ebx", "jmp addr"], "101193": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov [esi] ebx", "jmp addr"], "101212": ["mov esi [esp+imm]", "mov ebx [esp+imm]", "mov eax [esp+imm]", "mov [esi] ebx", "jmp addr"], "101231": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "101244": ["mov al byte ptr [esp+imm]", "mov [esp+imm] esi", "cmp al 0DFh", "ja addr"], "101260": ["cmp al 0DBh", "ja func"], "101268": ["lea edx [eax+imm]", "cmp dl imm", "ja addr"], "101280": ["cmp [esp+imm] imm", "jle short addr"], "101287": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "101300": ["or eax imm", "jmp addr"], "101308": ["mov eax imm", "jmp addr"], "101318": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "101331": ["mov eax imm", "jmp addr"], "101341": ["mov [esp+imm] esi", "jmp addr"], "101350": ["and ecx 0FFh", "mov eax [esp+imm]", "movzx edi byte ptr [eax+imm]", "mov al byte ptr [esp+imm]", "and edi 0FFh", "mov cl al", "shr cl imm", "and ecx 0FFh", "lea ecx [ecx+imm]", "mov edi ds:(namingBitmap - 2DF78h)[ebx+imm]", "mov cl al", "shr edi cl", "and edi imm", "jnz func"], "101408": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "101421": ["cmp [esp+imm] imm", "jz short addr"], "101428": ["mov eax [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "101441": ["mov eax imm", "jmp addr"]}, "preds": [101421], "succs": [96805]}, "big2_attributeValueTok": {"disasm": {"101456": ["push ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "push esi", "mov ebx [esp+imm]", "mov ecx [esp+imm]", "mov esi [esp+imm]", "mov [esp+imm] ebx", "mov ebp [esp+imm]", "cmp ebx ecx", "jnb addr"], "101499": ["mov eax ecx", "sub eax ebx", "dec eax", "jle addr"], "101510": ["mov eax ebx"], "101512": ["mov dl [eax]", "test dl dl", "jnz short addr"], "101518": ["xor edx edx", "mov dl [eax+imm]", "cmp byte ptr [esi+imm] imm", "ja short func"], "101530": ["xor ebx ebx", "mov bl [esi+imm]", "mov edx ebx", "mov ebx func - 2DF78h)[edi+imm]", "add ebx edi", "jmp ebx"], "101552": ["add edx imm", "cmp dl imm", "jbe short func"], "101560": ["add eax imm"], "101563": ["mov edx ecx", "sub edx eax", "dec edx", "jg short addr"], "101570": ["lea esi [esi+imm]"], "101576": ["mov [ebp+imm] eax", "mov eax imm"], "101584": ["pop edx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "101592": ["add eax imm", "jmp short addr"], "101600": ["cmp [esp+imm] eax", "jnz short addr"], "101605": ["mov ebx [esp+imm]", "mov eax imm", "add ebx imm", "mov [ebp+imm] ebx", "jmp short addr"], "101624": ["mov [ebp+imm] eax", "xor eax eax", "pop edx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "101640": ["cmp [esp+imm] eax", "jnz short addr"], "101645": ["mov edx [esp+imm]", "mov [esp+imm] ebp", "pop ebx", "mov eax esi", "pop ebx", "add edx imm", "pop esi", "pop edi", "pop ebp", "jmp func"], "101672": ["cmp [esp+imm] eax", "jnz short addr"], "101677": ["mov ebx [esp+imm]", "mov eax imm", "add ebx imm", "mov [ebp+imm] ebx", "jmp short addr"], "101696": ["add eax imm", "jmp addr"], "101704": ["mov edi [esp+imm]", "cmp edi eax", "jnz addr"], "101715": ["lea eax [edi+imm]", "sub ecx eax", "dec ecx", "jle short addr"], "101723": ["cmp byte ptr [edi+imm] imm", "mov dl [edi+imm]", "jnz short addr"], "101732": ["and edx 0FFh", "cmp byte ptr [esi+imm] imm", "jnz short addr"], "101745": ["add edi imm", "mov eax edi"], "101750": ["mov [ebp+imm] eax", "mov eax imm", "jmp addr"], "101763": ["mov eax imm", "jmp addr"], "101773": ["or eax imm", "jmp addr"], "101781": ["mov eax imm", "jmp addr"]}, "preds": [101645], "succs": []}, "big2_entityValueTok": {"disasm": {"101792": ["push ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "push ebp", "mov ebx [esp+imm]", "mov ecx [esp+imm]", "mov eax [esp+imm]", "mov esi [esp+imm]", "mov [esp+imm] eax", "cmp ebx ecx", "jnb addr"], "101835": ["mov eax ecx", "sub eax ebx", "dec eax", "jle addr"], "101846": ["mov eax ebx"], "101848": ["mov dl [eax]", "test dl dl", "jnz short addr"], "101854": ["xor edx edx", "mov dl [eax+imm]", "mov dl [esi+imm]", "sub edx imm", "cmp dl imm", "ja short func"], "101871": ["and edx 0FFh", "mov ebp func - 2DF78h)[edi+imm]", "add ebp edi", "jmp ebp"], "101888": ["add edx imm", "cmp dl imm", "jbe short func"], "101896": ["add eax imm"], "101899": ["mov edx ecx", "sub edx eax", "dec edx", "jg short addr"], "101906": ["lea esi [esi+imm]"], "101912": ["mov esi [esp+imm]", "mov [esi] eax", "mov eax imm"], "101922": ["pop edx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "101928": ["add eax imm", "jmp short addr"], "101936": ["cmp ebx eax", "jnz short addr"], "101940": ["mov eax [esp+imm]", "add ebx imm", "mov [eax] ebx", "mov eax imm", "jmp short addr"], "101960": ["cmp ebx eax", "jnz short addr"], "101964": ["mov eax [esp+imm]", "lea edx [ebx+imm]", "mov [esp+imm] eax", "pop edi", "pop ebx", "mov eax esi", "pop esi", "pop edi", "pop ebp", "jmp func"], "101992": ["add eax imm", "jmp short addr"], "102000": ["cmp ebx eax", "jz short addr"], "102004": ["mov edi [esp+imm]", "mov func - 2DF78h)[edi] eax", "mov eax imm", "pop edx", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "102024": ["cmp ebx eax", "jnz short addr"], "102028": ["lea eax [ebx+imm]", "sub ecx eax", "dec ecx", "jle short addr"], "102036": ["cmp byte ptr [ebx+imm] imm", "mov dl [ebx+imm]", "jnz short addr"], "102045": ["and edx 0FFh", "cmp byte ptr [esi+imm] imm", "jnz short addr"], "102058": ["lea eax [ebx+imm]"], "102061": ["mov esi [esp+imm]", "mov [esi] eax", "mov eax imm", "jmp addr"], "102080": ["lea edx [ebx+imm]", "mov eax esi", "mov ebx [esp+imm]", "push ebx", "call func", "pop esi", "cmp eax imm", "jnz addr"], "102104": ["xor eax eax", "jmp addr"], "102111": ["mov eax imm", "jmp addr"], "102121": ["or eax imm", "jmp addr"], "102129": ["mov eax imm", "jmp addr"]}, "preds": [101964], "succs": []}, "parsePseudoAttribute": {"disasm": {"102144": ["push ebp", "push edi", "push esi", "push ebx", "mov ebx enc", "sub esp imm", "mov enc [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "cmp ptr end", "jz addr"], "102205": ["lea edi [esp+imm]", "mov [esp+imm] ptr", "mov [esp+imm] edi", "sub esp imm", "mov esi ptr", "mov ebp end", "lea eax [esp+imm]", "mov [esp+imm] eax", "push eax", "lea eax [esp+imm]", "mov [esp+imm] eax", "push eax", "push end", "lea eax [esp+imm]", "mov [esp+imm] eax", "push eax", "push enc", "call dword ptr [enc+imm]", "add esp imm", "cmp [esp+imm] edi", "jz short addr"], "102265": ["mov al [esp+imm]", "lea ecx [eax-imm]", "cmp cl imm", "ja short addr"], "102277": ["mov eax imm", "shl eax cl", "test eax imm", "jnz short addr"], "102291": ["mov eax [esp+imm]", "mov [eax] esi", "xor eax eax"], "102299": ["mov edx [esp+imm]", "xor edx large imm", "jnz addr"], "102316": ["add esp imm", "pop enc", "pop esi", "pop edi", "pop ebp", "retn"], "102324": ["mov edx imm"], "102329": ["mov eax [enc+imm]", "mov [esp+imm] edx", "add esi eax", "mov [esp+imm] edi", "mov [esp+imm] esi", "mov [esp+imm] esi", "sub esp imm", "mov eax [esp+imm]", "push eax", "mov edx [esp+imm]", "push edx", "push end", "mov ecx [esp+imm]", "push ecx", "push enc", "call dword ptr [enc+imm]", "add esp imm", "cmp [esp+imm] edi", "jz short addr"], "102382": ["mov al [esp+imm]", "lea ecx [eax-imm]", "cmp cl imm", "ja short addr"], "102394": ["mov edx [esp+imm]", "mov eax edx", "shl eax cl", "test eax imm", "jnz short addr"], "102409": ["mov eax [esp+imm]", "cmp end eax", "jz short addr"], "102417": ["mov edx [esp+imm]", "mov [edx] eax"], "102423": ["mov [esp+imm] esi", "mov [esp+imm] edi", "sub esp imm", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "push end", "mov eax [esp+imm]", "push eax", "push enc", "call dword ptr [enc+imm]", "add esp imm", "cmp [esp+imm] edi", "jz addr"], "102467": ["movsx eax [esp+imm]", "mov ecx eax", "cmp al 0FFh", "jz addr"], "102482": ["cmp eax imm", "jz addr"], "102491": ["sub ecx imm", "cmp cl imm", "ja short addr"], "102499": ["mov eax imm", "shl eax cl", "test eax imm", "jnz short addr"], "102513": ["mov ecx [enc+imm]", "add esi ecx", "jmp short addr"], "102520": ["mov eax [esp+imm]", "mov dword ptr [eax] imm", "mov eax imm", "jmp addr"], "102540": ["mov eax [esp+imm]", "mov edx imm", "mov [eax] esi"], "102551": ["mov eax [enc+imm]", "mov [esp+imm] edx", "add esi eax", "mov [esp+imm] edi", "mov [esp+imm] esi", "mov [esp+imm] esi", "sub esp imm", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "push end", "mov edx [esp+imm]", "push edx", "push enc", "call dword ptr [enc+imm]", "add esp imm", "cmp [esp+imm] edi", "jz addr"], "102608": ["mov al [esp+imm]", "mov byte ptr [esp+imm] al", "lea ecx [eax-imm]", "cmp cl imm", "ja short addr"], "102624": ["mov edx [esp+imm]", "mov eax edx", "shl eax cl", "mov ecx eax", "and ecx imm", "jnz short addr"], "102642": ["mov al byte ptr [esp+imm]", "cmp al imm", "jnz addr"], "102654": ["mov eax [esp+imm]", "cmp [eax] esi", "jz addr"], "102666": ["mov edx [enc+imm]", "mov [esp+imm] edi", "add edx esi", "sub esp imm", "mov [esp+imm] edx", "mov [esp+imm] edx", "mov esi [esp+imm]", "push esi", "mov eax [esp+imm]", "push eax", "push end", "mov eax [esp+imm]", "push eax", "push enc", "call dword ptr [enc+imm]", "add esp imm", "mov edx [esp+imm]", "cmp [esp+imm] edi", "jz addr"], "102723": ["movsx eax [esp+imm]", "mov [esp+imm] eax"], "102732": ["mov esi imm"], "102737": ["mov eax [esp+imm]", "lea ecx [eax-imm]", "cmp ecx imm", "ja short addr"], "102749": ["mov eax esi", "shl eax cl", "test eax imm", "jnz addr"], "102764": ["mov eax [esp+imm]", "cmp eax imm", "jz short addr"], "102773": ["cmp eax imm", "jz short addr"], "102778": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax", "jmp addr"], "102792": ["mov eax [esp+imm]", "mov edi [esp+imm]", "mov [eax] edi", "xor eax eax", "jmp addr"], "102816": ["mov eax [enc+imm]", "add edx eax", "mov eax [esp+imm]", "mov esi edx", "mov [eax] edx", "jmp short addr"], "102832": ["and eax imm", "sub eax imm", "cmp al imm", "jbe short addr"], "102842": ["lea eax [ecx-imm]", "cmp eax imm", "jbe short addr"], "102850": ["lea eax [ecx-imm]", "cmp eax imm", "jbe short addr"], "102858": ["cmp ecx imm", "jnz addr"], "102867": ["lea esi [esi+imm]", "nop"], "102872": ["mov edx [enc+imm]", "add esi edx"], "102877": ["mov [esp+imm] esi", "mov [esp+imm] edi", "sub esp imm", "mov ecx [esp+imm]", "push ecx", "mov eax [esp+imm]", "push eax", "push end", "mov eax [esp+imm]", "push eax", "push enc", "call dword ptr [enc+imm]", "add esp imm", "cmp [esp+imm] edi", "jz short addr"], "102917": ["movsx ecx [esp+imm]", "cmp [esp+imm] ecx", "mov eax ecx", "jnz short addr"], "102930": ["mov eax [enc+imm]", "add esi eax", "mov eax [esp+imm]", "mov [eax] esi", "mov eax imm", "jmp addr"], "102951": ["mov eax [enc+imm]", "mov [esp+imm] edi", "add edx eax", "sub esp imm", "mov [esp+imm] edx", "mov [esp+imm] edx", "mov eax [esp+imm]", "push eax", "mov edx [esp+imm]", "push edx", "push end", "mov ecx [esp+imm]", "push ecx", "push enc", "call dword ptr [enc+imm]", "add esp imm", "mov edx [esp+imm]", "cmp [esp+imm] edi", "jz addr"], "103008": ["movsx eax [esp+imm]", "mov [esp+imm] eax", "jmp addr"], "103024": ["mov eax [esp+imm]", "mov [eax] esi", "jmp addr"], "103035": ["cmp [esp+imm] imm", "jnz addr"], "103046": ["jmp short addr"], "103048": ["mov [esp+imm] imm", "jmp addr"], "103061": ["call func"]}, "preds": [102299], "succs": []}, "doParseXmlDecl": {"disasm": {"103072": ["push ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "mov ebx enc", "sub esp imm", "mov [esp+imm] func", "mov func [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] edi", "mov [esp+imm] func", "mov [esp+imm] eax", "mov esi [esp+imm]", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "mov eax [enc+imm]", "mov enc [esp+imm]", "mov [esp+imm] imm", "lea func [eax+imm]", "add eax eax", "add edx esi", "sub ecx eax", "lea eax [esp+imm]", "mov [esp+imm] edx", "mov [esp+imm] ecx", "mov [esp+imm] eax", "mov [esp+imm] imm", "mov [esp+imm] imm", "push eax", "mov eax enc", "lea esi [esp+imm]", "push esi", "lea edi [esp+imm]", "push edi", "lea ebp [esp+imm]", "push ebp", "call parsePseudoAttribute", "add esp imm", "test eax eax", "jz addr"], "103269": ["mov eax [esp+imm]", "test eax eax", "jz addr"], "103281": ["mov ecx [esp+imm]", "lea edx [ecx-imm]", "push edx", "mov ecx [esp+imm]", "push ecx", "push eax", "push enc", "call dword ptr [enc+imm]", "add esp imm", "test eax eax", "jnz addr"], "103312": ["mov edx [esp+imm]", "mov eax [esp+imm]", "test edx edx", "jz addr"], "103328": ["mov ecx [esp+imm]", "lea edx [ecx-imm]", "push edx", "mov edx [esp+imm]", "push edx", "push eax", "push enc", "call dword ptr [enc+imm]", "add esp imm", "test eax eax", "jz addr"], "103359": ["mov eax [esp+imm]", "mov [esp+imm] eax", "lea eax [esp+imm]", "mov [esp+imm] eax", "mov [esp+imm] eax", "sub esp imm", "lea ecx [esp+imm]", "push ecx", "lea edx [esp+imm]", "push edx", "mov eax [esp+imm]", "push eax", "lea ecx [esp+imm]", "push ecx", "push enc", "call dword ptr [enc+imm]", "add esp imm", "mov eax [esp+imm]", "cmp [esp+imm] eax", "jz addr"], "103423": ["mov al [esp+imm]", "and eax imm", "sub eax imm", "cmp al imm", "ja addr"], "103441": ["mov ecx [esp+imm]", "test ecx ecx", "jz short addr"], "103449": ["mov eax [esp+imm]", "mov [ecx] eax"], "103455": ["mov eax [esp+imm]", "mov edx [esp+imm]", "test eax eax", "jz short addr"], "103467": ["push eax", "mov eax [enc+imm]", "sub edx eax", "push edx", "mov eax [esp+imm]", "push eax", "push enc", "mov edx [esp+imm]", "call edx", "mov ecx [esp+imm]", "mov edx [esp+imm]", "add esp imm", "mov [ecx] eax"], "103499": ["mov ecx [esp+imm]", "mov eax enc", "push ecx", "push esi", "push edi", "push ebp", "mov ecx [esp+imm]", "call parsePseudoAttribute", "add esp imm", "test eax eax", "jz addr"], "103529": ["mov eax [esp+imm]", "test eax eax", "jnz addr"], "103541": ["lea esi [esi+imm]"], "103544": ["mov eax imm", "jmp short addr"], "103552": ["mov ecx [esp+imm]", "test ecx ecx", "jz short addr"], "103560": ["mov eax [esp+imm]", "mov [ecx] eax"], "103566": ["mov eax [esp+imm]", "mov edx [esp+imm]", "test eax eax", "jz short addr"], "103578": ["mov [eax] edx"], "103580": ["mov eax [esp+imm]", "push eax", "mov eax enc", "push esi", "push edi", "push ebp", "mov ecx [esp+imm]", "call parsePseudoAttribute", "add esp imm", "test eax eax", "jz short addr"], "103606": ["mov eax [esp+imm]", "test eax eax", "jnz addr"], "103618": ["mov ecx [esp+imm]", "test ecx ecx", "jz short addr"], "103626": ["lea esi [esi+imm]"], "103632": ["mov eax [esp+imm]"], "103636": ["mov esi [esp+imm]", "mov [esi] eax", "xor eax eax"], "103644": ["mov esi [esp+imm]", "xor esi large imm", "jnz addr"], "103661": ["add esp imm", "pop enc", "pop esi", "pop edi", "pop ebp", "retn"], "103672": ["mov eax [esp+imm]"], "103676": ["mov edi [esp+imm]", "lea edx func - 2DF78h)[edi]", "push edx", "mov ebp [esp+imm]", "push ebp", "push eax", "push enc", "call dword ptr [enc+imm]", "mov edx [esp+imm]", "add esp imm", "test edx edx", "jnz addr"], "103711": ["test eax eax", "jz addr"], "103719": ["mov eax [esp+imm]", "mov esi [enc+imm]", "lea eax [eax-imm]", "push eax", "mov eax [esp+imm]", "sub eax esi", "push eax", "mov edi [esp+imm]", "push edi", "push enc", "call dword ptr [enc+imm]", "add esp imm", "test eax eax", "jnz addr"], "103759": ["mov eax [esp+imm]", "mov edx [enc+imm]", "lea eax [eax-imm]", "push eax", "mov eax [esp+imm]", "sub eax edx", "push eax", "mov ecx [esp+imm]", "push ecx", "push enc", "call dword ptr [enc+imm]", "add esp imm", "test eax eax", "jz addr"], "103799": ["mov eax [esp+imm]", "test eax eax", "jz short addr"], "103807": ["mov dword ptr [eax] imm"], "103813": ["lea esi [esp+imm]", "lea edx [esp+imm]", "mov [esp+imm] esi", "lea esi [esp+imm]", "mov [esp+imm] esi", "mov eax [esp+imm]", "lea edi [esp+imm]", "mov esi imm", "mov ebp edx"], "103847": ["mov [esp+imm] eax", "mov [esp+imm] edi", "sub esp imm", "mov ecx [esp+imm]", "push ecx", "push ebp", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "push enc", "call dword ptr [enc+imm]", "add esp imm", "mov eax [esp+imm]", "cmp [esp+imm] edi", "jz short addr"], "103891": ["mov cl [esp+imm]", "sub ecx imm", "cmp cl imm", "ja short addr"], "103903": ["mov edx esi", "shl edx cl", "and edx imm", "jnz short addr"], "103915": ["cmp [esp+imm] eax", "jz addr"], "103925": ["mov edi [esp+imm]", "mov func - 2DF78h)[edi] eax", "xor eax eax", "jmp addr"], "103944": ["mov edi [esp+imm]", "mov eax [esp+imm]", "mov func - 2DF78h)[edi] eax", "xor eax eax", "jmp addr"], "103968": ["mov edi [esp+imm]", "mov eax [esp+imm]", "mov func - 2DF78h)[edi] eax", "xor eax eax", "jmp addr"], "103992": ["mov eax [esp+imm]", "test eax eax", "jz addr"], "104004": ["mov dword ptr [eax] imm", "jmp addr"], "104015": ["mov edx [enc+imm]", "add eax edx", "mov [esp+imm] eax", "jmp addr"], "104032": ["mov esi [esp+imm]", "mov edx [esp+imm]", "mov [esi] edx", "jmp addr"], "104048": ["mov edi [esp+imm]", "mov edx [esp+imm]", "mov func - 2DF78h)[edi] edx", "jmp addr"], "104063": ["call func"]}, "preds": [103644], "succs": []}, "getEncodingIndex": {"disasm": {"104080": ["push ebp", "xor ebp ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "lea ebx func - 2DF78h)[edi]", "sub esp imm", "mov [esp+imm] func", "mov al imm"], "104112": ["mov ecx [esp+imm]", "mov [esp+imm] ebx", "jmp short addr"], "104128": ["test al al", "jz short addr"], "104132": ["mov eax [esp+imm]", "mov al [eax]"], "104137": ["mov dl [ecx]", "mov ebx [esp+imm]", "inc ebx", "inc ecx", "lea esi [edx-imm]", "mov [esp+imm] ebx", "mov ebx esi", "cmp bl imm", "ja short addr"], "104157": ["sub edx imm"], "104160": ["lea esi [eax-imm]", "mov ebx esi", "cmp bl imm", "ja short addr"], "104170": ["sub eax imm"], "104173": ["cmp dl al", "jz short addr"], "104177": ["inc i", "cmp i imm", "jz short addr"], "104183": ["mov ebx func - 2DF78h)[edi+imm]", "mov al [ebx]", "jmp short addr"], "104200": ["or i imm"], "104203": ["add esp imm", "mov eax ebp", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"]}, "preds": [104128, 104200], "succs": []}, "findEncoding": {"disasm": {"104224": ["push ebp", "call func", "add eax (offset func - $)", "push edi", "push esi", "push ebx", "sub esp 0ACh", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "lea edi [esp+imm]", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "mov esi [esp+imm]", "mov ebx [esp+imm]", "mov [esp+imm] edi", "sub esp imm", "lea eax [esp+imm]", "push eax", "lea eax [esp+imm]", "push eax", "push ebx", "lea eax [esp+imm]", "push eax", "push esi", "call dword ptr [esi+imm]", "add esp imm", "cmp [esp+imm] ebx", "jnz addr"], "104335": ["mov ecx [esp+imm]", "mov eax [esp+imm]", "lea ebx [ecx-imm]", "mov byte ptr func - 2DF78h)[eax] imm", "mov ecx edi", "mov al imm", "mov [esp+imm] ebx", "jmp short addr"], "104368": ["test al al", "jz short addr"], "104372": ["mov eax [esp+imm]", "mov al byte ptr func - 2DF78h)[eax]"], "104378": ["mov dl [ecx]", "mov ebx [esp+imm]", "inc ebx", "inc ecx", "lea ebp [edx-imm]", "mov [esp+imm] ebx", "mov ebx ebp", "cmp bl imm", "ja short addr"], "104400": ["sub edx imm"], "104403": ["lea ebp [eax-imm]", "mov ebx ebp", "cmp bl imm", "ja short addr"], "104413": ["sub eax imm"], "104416": ["cmp dl al", "jz short addr"], "104420": ["mov eax edi", "call getEncodingIndex", "cmp i imm", "jz short addr"], "104432": ["mov esi [esp+imm]", "mov i [esi+imm]"], "104443": ["mov edi [esp+imm]", "xor edi large imm", "jnz short addr"], "104459": ["add esp 0ACh", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "104472": ["cmp dword ptr [esi+imm] imm", "jnz short addr"], "104478": ["mov eax esi", "jmp short addr"], "104488": ["xor eax eax", "jmp short addr"], "104492": ["call func"]}, "preds": [104443], "succs": []}, "findEncodingNS": {"disasm": {"104512": ["push ebp", "call func", "add eax (offset func - $)", "push edi", "push esi", "push ebx", "sub esp 0ACh", "mov [esp+imm] eax", "mov eax [esp+imm]", "mov [esp+imm] eax", "lea edi [esp+imm]", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "mov esi [esp+imm]", "mov ebx [esp+imm]", "mov [esp+imm] edi", "sub esp imm", "lea eax [esp+imm]", "push eax", "lea eax [esp+imm]", "push eax", "push ebx", "lea eax [esp+imm]", "push eax", "push esi", "call dword ptr [esi+imm]", "add esp imm", "cmp [esp+imm] ebx", "jnz addr"], "104623": ["mov ecx [esp+imm]", "mov eax [esp+imm]", "lea ebx [ecx-imm]", "mov byte ptr func - 2DF78h)[eax] imm", "mov ecx edi", "mov al imm", "mov [esp+imm] ebx", "jmp short addr"], "104656": ["test al al", "jz short addr"], "104660": ["mov eax [esp+imm]", "mov al byte ptr func - 2DF78h)[eax]"], "104666": ["mov dl [ecx]", "mov ebx [esp+imm]", "inc ebx", "inc ecx", "lea ebp [edx-imm]", "mov [esp+imm] ebx", "mov ebx ebp", "cmp bl imm", "ja short addr"], "104688": ["sub edx imm"], "104691": ["lea ebp [eax-imm]", "mov ebx ebp", "cmp bl imm", "ja short addr"], "104701": ["sub eax imm"], "104704": ["cmp dl al", "jz short addr"], "104708": ["mov eax edi", "call getEncodingIndex", "cmp i imm", "jz short addr"], "104720": ["mov esi [esp+imm]", "mov i [esi+imm]"], "104731": ["mov edi [esp+imm]", "xor edi large imm", "jnz short addr"], "104747": ["add esp 0ACh", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "104760": ["cmp dword ptr [esi+imm] imm", "jnz short addr"], "104766": ["mov eax esi", "jmp short addr"], "104776": ["xor eax eax", "jmp short addr"], "104780": ["call func"]}, "preds": [104731], "succs": []}, "initScan": {"disasm": {"104800": ["push ebp", "push edi", "push esi", "push ebx", "sub esp imm", "mov ebx [esp+imm]", "mov esi [esp+imm]", "mov ebp [esp+imm]", "mov edi [esp+imm]", "mov [esp+imm] ebp", "cmp ebx esi", "jnb addr"], "104835": ["mov ecx [ecx]", "mov [esp+imm] ecx", "lea func [ebx+imm]", "cmp esi ecx", "jz addr"], "104852": ["mov bp [ebx]", "xor ecx ecx", "rol bp imm", "cmp bp imm", "mov cx bp", "jz addr"], "104875": ["cmp ecx imm", "jg short addr"], "104883": ["cmp ecx imm", "jz addr"], "104895": ["cmp ecx imm", "jnz addr"], "104907": ["cmp edi imm", "jz addr"], "104916": ["lea ecx [ebx+imm]", "cmp esi ecx", "jz addr"], "104927": ["cmp byte ptr [ebx+imm] 0BFh", "jz addr"], "104937": ["movsx ecx byte ptr [edx]"], "104940": ["mov encodingTable [encodingTable+imm]"], "104943": ["mov edx [esp+imm]", "mov [edx] eax", "mov edx [esp+imm]", "mov [esp+imm] edx", "mov [esp+imm] esi", "mov [esp+imm] ebx", "mov [esp+imm] eax", "mov eax [eax+imm]"], "104972": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "jmp eax"], "104984": ["cmp ecx imm", "jnz addr"], "104996": ["cmp byte ptr [edx] imm", "jnz short addr"], "105001": ["xor ecx ecx", "test edi imm", "jnz short addr"], "105011": ["mov edi [esp+imm]", "add ebx imm", "mov [edi] ebx", "mov edi [esp+imm]", "mov encodingTable [encodingTable+imm]", "mov [edi] eax", "mov eax imm", "jmp short addr"], "105040": ["movsx ecx byte ptr [edx]", "mov [esp+imm] cl", "lea edx [ecx-imm]", "cmp edx imm", "jbe short addr"], "105055": ["mov dl [ebx]", "cmp dl 0EFh", "jz short addr"], "105062": ["ja short addr"], "105064": ["test dl dl", "jz short addr"], "105068": ["cmp dl imm", "jnz addr"], "105077": ["or encodingTable imm"], "105080": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "105088": ["cmp dl 0FEh", "jb addr"], "105097": ["cmp [esp+imm] imm", "jnz short addr"], "105104": ["test edi imm", "jz short addr"], "105112": ["xor ecx ecx", "jmp addr"], "105120": ["movsx ecx byte ptr [edx]", "lea edx [ecx-imm]", "cmp dl imm", "ja short addr"], "105131": ["test edi imm", "jnz addr"], "105143": ["mov encodingTable [encodingTable+imm]", "jmp addr"], "105152": ["cmp byte ptr [ebx] imm", "jnz short addr"], "105157": ["cmp edi imm", "jnz short addr"], "105162": ["cmp byte ptr [edx] imm", "jnz short addr"], "105167": ["mov ecx imm", "jmp addr"], "105184": ["mov encodingTable [encodingTable+imm]", "jmp addr"], "105192": ["cmp byte ptr [edx] imm", "jnz short addr"], "105197": ["xor ecx ecx", "test edi imm", "jnz addr"], "105211": ["mov edi [esp+imm]", "add ebx imm", "mov [edi] ebx", "mov edi [esp+imm]", "mov encodingTable [encodingTable+imm]", "mov [edi] eax", "mov eax imm", "jmp addr"], "105240": ["cmp byte ptr [ebx+imm] imm", "jnz addr"], "105250": ["test edi imm", "jnz addr"], "105262": ["mov edi [esp+imm]", "mov encodingTable [encodingTable+imm]", "mov [edi] eax", "mov edi [esp+imm]", "mov [esp+imm] edi", "mov [esp+imm] esi", "mov [esp+imm] ebx", "mov [esp+imm] eax", "mov eax [eax]", "jmp addr"], "105304": ["mov cl [edx]", "test cl cl", "jz addr"], "105314": ["lea ebp [ecx-imm]", "mov [esp+imm] cl", "mov ecx ebp", "cmp cl imm", "ja addr"], "105332": ["movsx ecx [esp+imm]", "jmp addr"], "105344": ["mov edi [esp+imm]", "add ebx imm", "mov [edi] ebx", "mov edi [esp+imm]", "mov encodingTable [encodingTable+imm]", "mov [edi] eax", "mov eax imm", "jmp addr"], "105376": ["mov encodingTable imm", "jmp addr"]}, "preds": [104800], "succs": [105080]}, "little2_prologTok": {"disasm": {"105584": ["push ebp", "push edi", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov eax [esp+imm]", "mov edx [esp+imm]", "mov [esp+imm] eax", "mov ebp [esp+imm]", "mov eax [esp+imm]", "cmp edx ebp", "mov [esp+imm] eax", "jnb addr"], "105634": ["mov eax ebp", "sub eax edx", "test al imm", "jz short addr"], "105642": ["and eax imm", "jz addr"], "105651": ["lea ebp [edx+imm]"], "105654": ["mov al [edx+imm]", "movzx edi byte ptr [edx]", "test al al", "jz short addr"], "105664": ["cmp al 0DFh", "ja short addr"], "105668": ["cmp al 0DBh", "ja short func"], "105672": ["lea esi [eax+imm]", "mov ecx esi", "cmp cl imm", "ja short addr"], "105682": ["mov eax func", "sub eax edx", "cmp eax imm", "jle addr"], "105695": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax"], "105703": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "105712": ["mov eax edi", "mov esi [esp+imm]", "and eax 0FFh", "cmp byte ptr [esi+imm] imm", "ja short func"], "105730": ["xor ecx ecx", "mov cl [esi+imm]", "mov eax ecx", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "105752": ["cmp al 0FFh", "jnz short addr"], "105756": ["mov esi edi", "and esi 0FFh", "sub esi 0FEh", "cmp esi imm", "jbe short func"], "105775": ["nop"], "105776": ["and eax 0FFh", "mov ecx edi", "shr cl imm", "mov esi ecx", "mov ecx edi", "movzx edi ds:(nmstrtPages - 2DF78h)[ebx+imm]", "and esi 0FFh", "and edi 0FFh", "and ecx imm", "mov byte ptr [esp+imm] cl", "lea edi [esi+imm]", "lea ecx (namingBitmap - 2DF78h)[ebx]", "mov [esp+imm] ecx", "mov edi [ecx+imm]", "mov cl byte ptr [esp+imm]", "shr edi cl", "and edi imm", "jz short addr"], "105844": ["lea esi [edx+imm]", "mov eax imm"], "105852": ["mov ecx func", "sub ecx func", "mov [esp+imm] ecx", "dec ecx", "jle addr"], "105867": ["lea edx (namingBitmap - 2DF78h)[ebx]", "mov [esp+imm] func", "mov [esp+imm] edx", "mov [esp+imm] func"], "105885": ["mov dl [ptr_0+imm]", "mov cl func", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "105902": ["xor edx edx", "mov eax [esp+imm]", "mov dl cl", "mov dl [eax+imm]", "sub edx imm", "cmp dl imm", "ja short func"], "105922": ["and edx 0FFh", "mov eax func - 2DF78h)[ebx+imm]", "add eax ebx", "jmp eax"], "105944": ["xor ecx ecx", "mov cl ds:(namePages - 2DF78h)[ebx+imm]", "mov eax ecx", "mov cl byte ptr [esp+imm]", "lea eax [esi+imm]", "mov esi [esp+imm]", "mov eax [esi+imm]", "shr eax cl", "test al imm", "jz func"], "105979": ["lea esi [edx+imm]", "mov eax imm", "jmp addr"], "105992": ["cmp dl 0FFh", "jnz addr"], "106001": ["xor ecx ecx", "mov cl byte ptr [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "ja addr"], "106022": ["xchg ax ax"], "106024": ["mov edi esi"], "106026": ["mov eax [esp+imm]", "mov [eax] edi", "add esp imm", "xor eax eax", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "106042": ["mov esi func", "mov [esp+imm] imm", "lea esi [esi+imm]"], "106056": ["add esi imm", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax"], "106069": ["cmp [esp+imm] imm", "jg addr"], "106080": ["mov eax [esp+imm]"], "106084": ["neg func", "jmp addr"], "106091": ["mov [esp+imm] imm", "lea func [ptr_0+imm]", "nop"], "106104": ["cmp dl 0DFh", "ja short addr"], "106109": ["cmp dl 0DBh", "ja short func"], "106114": ["lea edi [edx+imm]", "mov eax edi", "cmp al imm", "ja short addr"], "106123": ["mov edi func"], "106125": ["cmp [esp+imm] imm", "jg short func"], "106132": ["jmp addr"], "106144": ["and edx 0FFh", "xor eax eax", "mov cl byte ptr [esp+imm]", "mov al ds:(namePages - 2DF78h)[ebx+imm]", "mov edx eax", "lea eax (namingBitmap - 2DF78h)[ebx]", "shl edx imm", "mov ebp eax"], "106176": ["mov al cl", "shr al imm", "mov edi eax", "and edi 0FFh", "add edx edi", "mov edx [ebp+imm]", "shr edx cl", "and edx imm", "jnz func"], "106206": ["xchg ax ax"], "106208": ["mov eax [esp+imm]", "mov [eax] esi", "xor eax eax", "jmp addr"], "106224": ["mov eax [esp+imm]", "mov edi func"], "106230": ["mov ebx [esp+imm]", "mov func - 2DF78h)[ebx] func", "jmp addr"], "106248": ["lea ebx [edx+imm]"], "106251": ["mov eax func", "mov ecx [esp+imm]", "sub eax ebx", "dec eax", "jle addr"], "106266": ["cmp byte ptr [edx+imm] imm", "jnz short addr"], "106272": ["xor eax eax", "mov al [edx+imm]", "mov al [ecx+imm]", "cmp al imm", "jz addr"], "106289": ["cmp al imm", "jz addr"], "106297": ["cmp al imm", "jz addr"], "106305": ["mov eax [esp+imm]", "mov [eax] func", "mov eax imm", "jmp addr"], "106328": ["xor edx edx", "lea eax (namingBitmap - 2DF78h)[ebx]", "mov dl imm - 2DF78h)[ebx]", "mov cl [esi]", "shl edx imm", "mov ebp eax", "jmp addr"], "106360": ["lea esi [edx+imm]", "mov eax func", "sub eax func", "dec eax", "jle addr"], "106374": ["mov al [edx+imm]", "mov cl [edx+imm]", "test al al", "jnz addr"], "106388": ["and ecx 0FFh", "mov eax [esp+imm]", "mov al [eax+imm]", "sub eax imm", "cmp al imm", "ja func"], "106413": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "106432": ["lea eax [edx+imm]", "mov ecx func", "sub ecx func", "cmp ecx imm", "jle addr"], "106448": ["cmp byte ptr [edx+imm] imm", "jnz short addr"], "106454": ["cmp byte ptr [edx+imm] imm", "jnz short addr"], "106460": ["cmp ecx imm", "jle addr"], "106469": ["cmp byte ptr [edx+imm] imm", "jnz short addr"], "106475": ["cmp byte ptr [edx+imm] imm", "jz addr"], "106485": ["lea esi [esi+imm]"], "106488": ["mov ebx [esp+imm]", "mov func - 2DF78h)[ebx] func", "mov func imm", "jmp addr"], "106504": ["mov eax func", "sub eax edx", "dec eax", "jg func"], "106515": ["mov eax imm", "jmp addr"], "106528": ["mov eax func", "sub eax edx", "cmp eax imm", "jg func"], "106541": ["jmp short addr"], "106544": ["lea ebx [edx+imm]", "cmp ebx func", "jnz addr"], "106555": ["mov eax [esp+imm]", "mov [eax] func", "mov eax imm", "jmp addr"], "106576": ["mov eax [esp+imm]", "mov ecx func", "mov [esp+imm] eax", "mov eax [esp+imm]", "add esp imm", "add edx imm", "pop ebx", "pop esi", "pop edi", "pop func", "jmp func"], "106608": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "106632": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "106656": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "106680": ["mov eax [esp+imm]", "lea ecx [edx+imm]", "mov [esp+imm] eax", "mov [esp+imm] func", "mov edx [esp+imm]", "mov eax imm"], "106704": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop func", "jmp func"], "106720": ["mov eax [esp+imm]", "lea ecx [edx+imm]", "mov [esp+imm] eax", "mov [esp+imm] func", "mov edx [esp+imm]", "mov eax imm", "jmp short addr"], "106752": ["lea ecx [edx+imm]", "mov eax func", "sub eax func", "dec eax", "jle addr"], "106766": ["cmp byte ptr [edx+imm] imm", "jnz func"], "106776": ["xor eax eax", "mov esi [esp+imm]", "mov al [edx+imm]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja func"], "106800": ["and eax 0FFh", "mov esi func - 2DF78h)[ebx+imm]", "add ebx esi", "jmp ebx"], "106816": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "106840": ["lea esi [edx+imm]", "mov edi func", "sub edi esi", "cmp edi imm", "jle addr"], "106856": ["mov al [edx+imm]", "mov cl [edx+imm]", "mov byte ptr [esp+imm] cl", "test al al", "jnz addr"], "106874": ["xor eax eax", "mov al cl", "mov ecx [esp+imm]", "mov al [ecx+imm]", "sub eax imm", "cmp al imm", "ja func"], "106897": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "106920": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "106944": ["xor eax eax", "jmp addr"], "106951": ["lea edi [ptr_0+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "mov eax [esp+imm]", "cmp eax imm", "jz addr"], "106977": ["mov esi func", "cmp eax imm", "jnz addr"], "106988": ["cmp [esp+imm] imm", "jle addr"], "106999": ["mov dl [ptr_0+imm]", "mov al func", "mov byte ptr [esp+imm] al", "test dl dl", "jnz addr"], "107016": ["mov dl al", "xor eax eax", "mov al dl", "mov esi [esp+imm]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja func"], "107041": ["and eax 0FFh", "mov esi func - 2DF78h)[ebx+imm]", "add esi ebx", "jmp esi"], "107057": ["mov edi func"], "107059": ["mov eax imm", "jmp addr"], "107069": ["lea eax (namingBitmap - 2DF78h)[ebx]", "mov edx 0C8h", "mov ebp eax", "jmp addr"], "107087": ["mov edi func"], "107089": ["cmp [esp+imm] imm", "jnz func"], "107100": ["jmp addr"], "107112": ["mov eax [esp+imm]", "mov edi func", "cmp eax imm", "jz func"], "107127": ["mov eax [esp+imm]", "add func imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "107146": ["mov eax [esp+imm]", "mov edi func", "cmp eax imm", "jz func"], "107161": ["mov eax [esp+imm]", "add func imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "107180": ["mov eax [esp+imm]", "mov edi func", "cmp eax imm", "jz func"], "107195": ["mov eax [esp+imm]", "add func imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "107216": ["mov eax [esp+imm]", "mov [eax] ecx", "xor eax eax", "jmp addr"], "107229": ["mov eax [esp+imm]", "mov [eax] func", "mov eax imm", "jmp addr"], "107248": ["cmp al 0DFh", "ja addr"], "107256": ["cmp al 0DBh", "ja func"], "107264": ["mov eax [esp+imm]", "mov [eax] edx", "mov eax imm", "jmp addr"], "107280": ["xor eax eax"], "107282": ["and eax 0FFh", "xor ecx ecx", "mov cl ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov al byte ptr [esp+imm]", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov cl byte ptr [esp+imm]", "mov eax ds:(namingBitmap - 2DF78h)[ebx+imm]", "shr eax cl", "test al imm", "jz func"], "107332": ["lea esi [edx+imm]", "mov edi func", "sub edi esi", "cmp edi imm", "jle addr"], "107348": ["lea eax (namePages - 2DF78h)[ebx]", "mov [esp+imm] eax", "lea eax (namingBitmap - 2DF78h)[ebx]", "mov [esp+imm] eax"], "107368": ["mov al [esi+imm]", "mov cl [esi]", "test al al", "jnz short addr"], "107377": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "107400": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "107416": ["mov eax [esp+imm]", "mov [eax] esi", "mov eax imm", "jmp addr"], "107432": ["xor eax eax"], "107434": ["and eax 0FFh", "mov edi [esp+imm]", "xor edx edx", "mov dl [edi+imm]", "mov al cl", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov edx [esp+imm]", "mov eax [edx+imm]", "shr eax cl", "test al imm", "jz func"], "107478": ["add esi imm", "mov edi func", "sub edi esi", "cmp edi imm", "jg short addr"], "107490": ["mov eax imm", "jmp addr"], "107504": ["cmp al 0DFh", "ja addr"], "107512": ["cmp al 0DBh", "ja func"], "107520": ["lea edx [eax+imm]", "cmp dl imm", "ja short addr"], "107528": ["cmp edi imm", "jg func"], "107537": ["jmp addr"], "107544": ["lea ecx [edx+imm]", "mov eax func", "sub eax ecx", "dec eax", "jle addr"], "107558": ["cmp byte ptr [edx+imm] imm", "jnz func"], "107568": ["xor eax eax", "mov func [esp+imm]", "mov al [edx+imm]", "mov al [esi+imm]", "cmp al imm", "jz addr"], "107589": ["ja addr"], "107595": ["cmp al imm", "jnz addr"], "107603": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "107622": ["mov eax [esp+imm]", "mov ecx func", "mov [esp+imm] eax", "mov eax [esp+imm]", "add esp imm", "add edx imm", "pop ebx", "pop func", "pop edi", "pop func", "jmp func"], "107651": ["cmp edi imm", "jnz func"], "107660": ["jmp addr"], "107672": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "107691": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "107710": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "107729": ["lea esi [ptr_0+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "107749": ["mov dl [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "107767": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "107790": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "107806": ["mov cl byte ptr [esp+imm]", "mov esi [esp+imm]", "mov al cl", "mov ebp esi", "shr al imm", "and eax 0FFh", "mov eax [esi+imm]", "shr eax cl", "test al imm", "jz addr"], "107843": ["lea esi [ptr_0+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "107863": ["mov dl [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "107881": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "107904": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "107920": ["lea esi [ptr_0+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "107940": ["mov dl [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "107958": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "107981": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "108000": ["add edx imm", "cmp func edx", "jz addr"], "108011": ["lea eax [ptr_0+imm]", "mov edx ebx", "mov ebx func", "sub ebx func", "dec ebx", "jle addr"], "108027": ["mov ebx func", "jmp addr"], "108040": ["cmp al 0DFh", "ja short addr"], "108044": ["cmp al 0DBh", "ja func"], "108052": ["lea ecx [eax+imm]", "cmp cl imm", "jbe func"], "108064": ["jmp addr"], "108069": ["inc al", "jnz func"], "108077": ["xor eax eax", "mov al cl", "sub eax 0FEh", "cmp eax imm", "jbe func"], "108095": ["jmp func"], "108100": ["cmp al 0FFh", "jnz addr"], "108108": ["xor ecx ecx", "mov cl byte ptr [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "jbe func"], "108129": ["jmp addr"], "108136": ["mov eax imm", "jmp addr"], "108146": ["or eax imm", "jmp addr"], "108154": ["cmp [esp+imm] imm", "jle short addr"], "108161": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "108179": ["xor eax eax", "mov al cl", "mov ecx [esp+imm]", "mov al [ecx+imm]", "lea ecx [eax-imm]", "mov byte ptr [esp+imm] cl", "cmp cl imm", "ja short func"], "108203": ["and ecx 0FFh", "mov ebp func - 2DF78h)[ebx+imm]", "add ebp ebx", "jmp ebp"], "108220": ["sub eax imm", "cmp al imm", "ja func"], "108231": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "108247": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "108267": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "108285": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "108308": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "108324": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "108344": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "108362": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "108385": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "108401": ["mov cl byte ptr [esp+imm]", "mov edx [esp+imm]", "mov al cl", "mov ebp edx", "shr al imm", "and eax 0FFh", "mov eax [edx+imm]", "shr eax cl", "test al imm", "jz addr"], "108438": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "108458": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "108476": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "108499": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "108520": ["cmp dl 0FFh", "jnz short func"], "108525": ["xor eax eax", "mov al byte ptr [esp+imm]", "sub eax 0FEh", "cmp eax imm", "jbe addr"], "108545": ["and edx 0FFh", "xor eax eax", "mov cl byte ptr [esp+imm]", "mov al ds:(namePages - 2DF78h)[ebx+imm]", "mov edx eax", "mov al cl", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov edx [esp+imm]", "mov eax [edx+imm]", "shr eax cl", "test al imm", "jz func"], "108596": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "108616": ["mov dl [esi+imm]", "mov al [esi+imm]", "mov byte ptr [esp+imm] al", "test dl dl", "jnz addr"], "108634": ["mov dl al", "xor eax eax", "mov al dl", "mov edx [esp+imm]", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "108659": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "108675": ["mov eax imm", "jmp addr"], "108685": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "108705": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "108723": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "108746": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "108768": ["cmp al 0FFh", "jnz addr"], "108776": ["xor edx edx", "mov dl cl", "sub edx 0FEh", "cmp edx imm", "jbe func"], "108795": ["jmp addr"], "108800": ["mov eax ebx"], "108802": ["mov ebx [esp+imm]", "mov func - 2DF78h)[ebx] eax", "mov eax imm", "jmp addr"], "108818": ["cmp dl 0DFh", "ja addr"], "108827": ["cmp dl 0DBh", "ja func"], "108836": ["lea eax [edx+imm]", "cmp al imm", "jbe func"], "108847": ["jmp func"], "108852": ["cmp dl 0DFh", "ja addr"], "108861": ["cmp dl 0DBh", "ja func"], "108870": ["lea eax [edx+imm]", "cmp al imm", "jbe func"], "108881": ["and edx 0FFh", "xor eax eax", "mov cl byte ptr [esp+imm]", "mov esi [esp+imm]", "mov al ds:(namePages - 2DF78h)[ebx+imm]", "mov ebp esi", "mov edx eax", "mov al cl", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov eax [esi+imm]", "shr eax cl", "test al imm", "jz addr"], "108934": ["lea esi [ptr_0+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "108954": ["mov dl [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "108972": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "108995": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "109011": ["cmp dl 0FFh", "jnz addr"], "109020": ["mov esi func", "mov [esp+imm] imm", "jmp addr"], "109035": ["cmp al imm", "jnz func"], "109043": ["add edx imm"], "109046": ["mov ecx func", "sub ecx edx", "cmp ecx imm", "jle addr"], "109059": ["cmp byte ptr [edx+imm] imm", "jnz func"], "109069": ["xor eax eax", "mov esi [esp+imm]", "mov al [edx]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja func"], "109092": ["and eax 0FFh", "mov esi func - 2DF78h)[ebx+imm]", "add esi ebx", "jmp esi"], "109108": ["cmp ecx imm", "jle addr"], "109117": ["cmp byte ptr [edx+imm] imm", "jnz short func"], "109123": ["xor eax eax", "mov ebx [esp+imm]", "mov al [edx+imm]", "mov cl [ebx+imm]", "cmp cl imm", "ja short func"], "109141": ["mov eax imm", "shl eax cl", "test eax imm", "jnz func"], "109159": ["mov eax [esp+imm]", "mov [eax] edx", "mov eax imm", "jmp addr"], "109175": ["cmp al imm", "jnz func"], "109183": ["lea eax [edx+imm]", "mov ecx func", "sub ecx eax", "dec ecx", "jle addr"], "109197": ["cmp byte ptr [edx+imm] imm", "mov ebx [esp+imm]", "jnz addr"], "109211": ["cmp byte ptr [edx+imm] imm", "jnz addr"], "109221": ["mov [esp+imm] ebx", "mov edx eax", "mov eax [esp+imm]", "add esp imm", "mov ecx func", "pop ebx", "pop esi", "pop edi", "pop func", "jmp func"], "109245": ["mov func [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "109264": ["cmp dl 0DFh", "ja addr"], "109273": ["cmp dl 0DBh", "ja func"], "109282": ["lea eax [edx+imm]", "cmp al imm", "jbe func"], "109293": ["and edx 0FFh", "xor eax eax", "mov cl byte ptr [esp+imm]", "mov al ds:(namePages - 2DF78h)[ebx+imm]", "mov edx eax", "mov al cl", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov edx [esp+imm]", "mov ebp edx", "mov eax [edx+imm]", "shr eax cl", "test al imm", "jz addr"], "109346": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "109366": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz short addr"], "109380": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "109403": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "109419": ["cmp dl 0FFh", "jnz addr"], "109428": ["mov esi func", "mov [esp+imm] imm", "jmp addr"], "109443": ["mov func - 2DF78h)[ebx] eax", "xor eax eax", "jmp addr"], "109452": ["mov func imm", "jmp addr"], "109462": ["mov eax imm", "jmp addr"], "109472": ["mov esi func", "mov [esp+imm] imm", "jmp addr"], "109487": ["add edx imm", "jmp addr"], "109495": ["mov eax imm", "neg eax", "jmp addr"], "109507": ["mov [esp+imm] imm", "jmp func"], "109520": ["lea func [esi+imm]", "mov ebp [esp+imm]", "sub ebp func", "mov [esp+imm] ebp", "jmp addr"], "109538": ["mov cl byte ptr [esp+imm]", "mov edx [esp+imm]", "mov al cl", "mov ebp edx", "shr al imm", "and eax 0FFh", "mov eax [edx+imm]", "shr eax cl", "test al imm", "jz short addr"], "109571": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "109591": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "109609": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "109632": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "109648": ["mov esi func", "mov edx 0C8h", "mov [esp+imm] imm", "jmp addr"], "109668": ["mov edx 0C8h", "mov [esp+imm] imm", "jmp addr"], "109686": ["mov esi func", "jmp func"], "109693": ["mov esi func", "mov edx 0C8h", "mov [esp+imm] imm", "jmp addr"], "109713": ["lea eax (namingBitmap - 2DF78h)[ebx]", "mov edx 0C8h", "mov [esp+imm] imm", "mov ebp eax", "jmp addr"], "109739": ["add esi imm", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] imm", "mov [esp+imm] eax", "jmp addr"], "109765": ["lea eax (namingBitmap - 2DF78h)[ebx]", "mov esi func", "mov edx 0C8h", "mov [esp+imm] imm", "mov ebp eax", "jmp addr"], "109793": ["mov esi func", "mov [esp+imm] imm", "jmp addr"], "109808": ["lea func [edi+imm]", "mov ebp [esp+imm]", "sub ebp func", "mov [esp+imm] imm", "mov [esp+imm] ebp", "jmp addr"], "109834": ["mov esi func", "mov [esp+imm] imm", "jmp func"], "109849": ["lea eax (namingBitmap - 2DF78h)[ebx]", "mov esi func", "mov edx 0C8h", "mov [esp+imm] imm", "mov ebp eax", "jmp addr"], "109877": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "jmp addr"], "109895": ["mov eax imm", "neg eax", "jmp addr"], "109907": ["lea func [edi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] imm", "mov [esp+imm] eax", "jmp addr"], "109933": ["add esi imm", "mov ebp [esp+imm]", "sub ebp func", "mov [esp+imm] imm", "mov [esp+imm] ebp", "jmp addr"], "109959": ["lea func [esi+imm]", "mov ebp [esp+imm]", "sub ebp func", "mov [esp+imm] ebp", "jmp addr"]}, "preds": [109221], "succs": []}, "big2_prologTok": {"disasm": {"109984": ["push ebp", "push edi", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov eax [esp+imm]", "mov edx [esp+imm]", "mov [esp+imm] eax", "mov ebp [esp+imm]", "mov eax [esp+imm]", "cmp edx ebp", "mov [esp+imm] eax", "jnb addr"], "110034": ["mov eax ebp", "sub eax edx", "test al imm", "jz short addr"], "110042": ["and eax imm", "jz addr"], "110051": ["lea ebp [edx+imm]"], "110054": ["mov al [edx]", "movzx edi byte ptr [edx+imm]", "test al al", "jz short addr"], "110064": ["cmp al 0DFh", "ja short addr"], "110068": ["cmp al 0DBh", "ja short func"], "110072": ["lea esi [eax+imm]", "mov ecx esi", "cmp cl imm", "ja short addr"], "110082": ["mov eax func", "sub eax edx", "cmp eax imm", "jle addr"], "110095": ["mov eax [esp+imm]", "mov [eax] edx", "xor eax eax"], "110103": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "110112": ["mov eax edi", "mov esi [esp+imm]", "and eax 0FFh", "cmp byte ptr [esi+imm] imm", "ja short func"], "110130": ["xor ecx ecx", "mov cl [esi+imm]", "mov eax ecx", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "110152": ["cmp al 0FFh", "jnz short addr"], "110156": ["mov esi edi", "and esi 0FFh", "sub esi 0FEh", "cmp esi imm", "jbe short func"], "110175": ["nop"], "110176": ["and eax 0FFh", "mov ecx edi", "shr cl imm", "mov esi ecx", "mov ecx edi", "movzx edi ds:(nmstrtPages - 2DF78h)[ebx+imm]", "and esi 0FFh", "and edi 0FFh", "and ecx imm", "mov byte ptr [esp+imm] cl", "lea edi [esi+imm]", "lea ecx (namingBitmap - 2DF78h)[ebx]", "mov [esp+imm] ecx", "mov edi [ecx+imm]", "mov cl byte ptr [esp+imm]", "shr edi cl", "and edi imm", "jz short addr"], "110244": ["lea esi [edx+imm]", "mov eax imm"], "110252": ["mov ecx func", "sub ecx func", "mov [esp+imm] ecx", "dec ecx", "jle addr"], "110267": ["lea edx (namingBitmap - 2DF78h)[ebx]", "mov [esp+imm] func", "mov [esp+imm] edx", "mov [esp+imm] func"], "110285": ["mov dl func", "mov cl [ptr_0+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "110302": ["xor edx edx", "mov eax [esp+imm]", "mov dl cl", "mov dl [eax+imm]", "sub edx imm", "cmp dl imm", "ja short func"], "110322": ["and edx 0FFh", "mov eax func - 2DF78h)[ebx+imm]", "add eax ebx", "jmp eax"], "110344": ["xor ecx ecx", "mov cl ds:(namePages - 2DF78h)[ebx+imm]", "mov eax ecx", "mov cl byte ptr [esp+imm]", "lea eax [esi+imm]", "mov esi [esp+imm]", "mov eax [esi+imm]", "shr eax cl", "test al imm", "jz func"], "110379": ["lea esi [edx+imm]", "mov eax imm", "jmp addr"], "110392": ["cmp dl 0FFh", "jnz addr"], "110401": ["xor ecx ecx", "mov cl byte ptr [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "ja addr"], "110422": ["xchg ax ax"], "110424": ["mov edi esi"], "110426": ["mov eax [esp+imm]", "mov [eax] edi", "add esp imm", "xor eax eax", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "110442": ["mov esi func", "mov [esp+imm] imm", "lea esi [esi+imm]"], "110456": ["add esi imm", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax"], "110469": ["cmp [esp+imm] imm", "jg addr"], "110480": ["mov eax [esp+imm]"], "110484": ["neg func", "jmp addr"], "110491": ["mov [esp+imm] imm", "lea func [ptr_0+imm]", "nop"], "110504": ["cmp dl 0DFh", "ja short addr"], "110509": ["cmp dl 0DBh", "ja short func"], "110514": ["lea edi [edx+imm]", "mov eax edi", "cmp al imm", "ja short addr"], "110523": ["mov edi func"], "110525": ["cmp [esp+imm] imm", "jg short func"], "110532": ["jmp addr"], "110544": ["and edx 0FFh", "xor eax eax", "mov cl byte ptr [esp+imm]", "mov al ds:(namePages - 2DF78h)[ebx+imm]", "mov edx eax", "lea eax (namingBitmap - 2DF78h)[ebx]", "shl edx imm", "mov ebp eax"], "110576": ["mov al cl", "shr al imm", "mov edi eax", "and edi 0FFh", "add edx edi", "mov edx [ebp+imm]", "shr edx cl", "and edx imm", "jnz func"], "110606": ["xchg ax ax"], "110608": ["mov eax [esp+imm]", "mov [eax] esi", "xor eax eax", "jmp addr"], "110624": ["mov eax [esp+imm]", "mov edi func"], "110630": ["mov ebx [esp+imm]", "mov func - 2DF78h)[ebx] func", "jmp addr"], "110648": ["lea ebx [edx+imm]"], "110651": ["mov eax func", "mov ecx [esp+imm]", "sub eax ebx", "dec eax", "jle addr"], "110666": ["cmp byte ptr [edx+imm] imm", "jnz short addr"], "110672": ["xor eax eax", "mov al [edx+imm]", "mov al [ecx+imm]", "cmp al imm", "jz addr"], "110689": ["cmp al imm", "jz addr"], "110697": ["cmp al imm", "jz addr"], "110705": ["mov eax [esp+imm]", "mov [eax] func", "mov eax imm", "jmp addr"], "110728": ["xor edx edx", "lea eax (namingBitmap - 2DF78h)[ebx]", "mov dl imm - 2DF78h)[ebx]", "mov cl [esi+imm]", "shl edx imm", "mov ebp eax", "jmp addr"], "110760": ["lea esi [edx+imm]", "mov eax func", "sub eax func", "dec eax", "jle addr"], "110774": ["mov al [edx+imm]", "mov cl [edx+imm]", "test al al", "jnz addr"], "110788": ["and ecx 0FFh", "mov eax [esp+imm]", "mov al [eax+imm]", "sub eax imm", "cmp al imm", "ja func"], "110813": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "110832": ["lea eax [edx+imm]", "mov ecx func", "sub ecx func", "cmp ecx imm", "jle addr"], "110848": ["cmp byte ptr [edx+imm] imm", "jnz short addr"], "110854": ["cmp byte ptr [edx+imm] imm", "jnz short addr"], "110860": ["cmp ecx imm", "jle addr"], "110869": ["cmp byte ptr [edx+imm] imm", "jnz short addr"], "110875": ["cmp byte ptr [edx+imm] imm", "jz addr"], "110885": ["lea esi [esi+imm]"], "110888": ["mov ebx [esp+imm]", "mov func - 2DF78h)[ebx] func", "mov func imm", "jmp addr"], "110904": ["mov eax func", "sub eax edx", "dec eax", "jg func"], "110915": ["mov eax imm", "jmp addr"], "110928": ["mov eax func", "sub eax edx", "cmp eax imm", "jg func"], "110941": ["jmp short addr"], "110944": ["lea ebx [edx+imm]", "cmp ebx func", "jnz addr"], "110955": ["mov eax [esp+imm]", "mov [eax] func", "mov eax imm", "jmp addr"], "110976": ["mov eax [esp+imm]", "mov ecx func", "mov [esp+imm] eax", "mov eax [esp+imm]", "add esp imm", "add edx imm", "pop ebx", "pop esi", "pop edi", "pop func", "jmp func"], "111008": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "111032": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "111056": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "111080": ["mov eax [esp+imm]", "lea ecx [edx+imm]", "mov [esp+imm] eax", "mov [esp+imm] func", "mov edx [esp+imm]", "mov eax imm"], "111104": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop func", "jmp func"], "111120": ["mov eax [esp+imm]", "lea ecx [edx+imm]", "mov [esp+imm] eax", "mov [esp+imm] func", "mov edx [esp+imm]", "mov eax imm", "jmp short addr"], "111152": ["lea ecx [edx+imm]", "mov eax func", "sub eax func", "dec eax", "jle addr"], "111166": ["cmp byte ptr [edx+imm] imm", "jnz func"], "111176": ["xor eax eax", "mov esi [esp+imm]", "mov al [edx+imm]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja func"], "111200": ["and eax 0FFh", "mov esi func - 2DF78h)[ebx+imm]", "add ebx esi", "jmp ebx"], "111216": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "111240": ["lea esi [edx+imm]", "mov edi func", "sub edi esi", "cmp edi imm", "jle addr"], "111256": ["mov al [edx+imm]", "mov cl [edx+imm]", "mov byte ptr [esp+imm] cl", "test al al", "jnz addr"], "111274": ["xor eax eax", "mov al cl", "mov ecx [esp+imm]", "mov al [ecx+imm]", "sub eax imm", "cmp al imm", "ja func"], "111297": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "111320": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "111344": ["xor eax eax", "jmp addr"], "111351": ["lea edi [ptr_0+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "mov eax [esp+imm]", "cmp eax imm", "jz addr"], "111377": ["mov esi func", "cmp eax imm", "jnz addr"], "111388": ["cmp [esp+imm] imm", "jle addr"], "111399": ["mov dl func", "mov al [ptr_0+imm]", "mov byte ptr [esp+imm] al", "test dl dl", "jnz addr"], "111416": ["mov dl al", "xor eax eax", "mov al dl", "mov esi [esp+imm]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja func"], "111441": ["and eax 0FFh", "mov esi func - 2DF78h)[ebx+imm]", "add esi ebx", "jmp esi"], "111457": ["mov edi func"], "111459": ["mov eax imm", "jmp addr"], "111469": ["lea eax (namingBitmap - 2DF78h)[ebx]", "mov edx 0C8h", "mov ebp eax", "jmp addr"], "111487": ["mov edi func"], "111489": ["cmp [esp+imm] imm", "jnz func"], "111500": ["jmp addr"], "111512": ["mov eax [esp+imm]", "mov edi func", "cmp eax imm", "jz func"], "111527": ["mov eax [esp+imm]", "add func imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "111546": ["mov eax [esp+imm]", "mov edi func", "cmp eax imm", "jz func"], "111561": ["mov eax [esp+imm]", "add func imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "111580": ["mov eax [esp+imm]", "mov edi func", "cmp eax imm", "jz func"], "111595": ["mov eax [esp+imm]", "add func imm", "mov [eax] edi", "mov eax imm", "jmp addr"], "111616": ["mov eax [esp+imm]", "mov [eax] ecx", "xor eax eax", "jmp addr"], "111629": ["mov eax [esp+imm]", "mov [eax] func", "mov eax imm", "jmp addr"], "111648": ["cmp al 0DFh", "ja addr"], "111656": ["cmp al 0DBh", "ja func"], "111664": ["mov eax [esp+imm]", "mov [eax] edx", "mov eax imm", "jmp addr"], "111680": ["xor eax eax"], "111682": ["and eax 0FFh", "xor ecx ecx", "mov cl ds:(nmstrtPages - 2DF78h)[ebx+imm]", "mov al byte ptr [esp+imm]", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov cl byte ptr [esp+imm]", "mov eax ds:(namingBitmap - 2DF78h)[ebx+imm]", "shr eax cl", "test al imm", "jz func"], "111732": ["lea esi [edx+imm]", "mov edi func", "sub edi esi", "cmp edi imm", "jle addr"], "111748": ["lea eax (namePages - 2DF78h)[ebx]", "mov [esp+imm] eax", "lea eax (namingBitmap - 2DF78h)[ebx]", "mov [esp+imm] eax"], "111768": ["mov al [esi]", "mov cl [esi+imm]", "test al al", "jnz short addr"], "111777": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "111800": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "111816": ["mov eax [esp+imm]", "mov [eax] esi", "mov eax imm", "jmp addr"], "111832": ["xor eax eax"], "111834": ["and eax 0FFh", "mov edi [esp+imm]", "xor edx edx", "mov dl [edi+imm]", "mov al cl", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov edx [esp+imm]", "mov eax [edx+imm]", "shr eax cl", "test al imm", "jz func"], "111878": ["add esi imm", "mov edi func", "sub edi esi", "cmp edi imm", "jg short addr"], "111890": ["mov eax imm", "jmp addr"], "111904": ["cmp al 0DFh", "ja addr"], "111912": ["cmp al 0DBh", "ja func"], "111920": ["lea edx [eax+imm]", "cmp dl imm", "ja short addr"], "111928": ["cmp edi imm", "jg func"], "111937": ["jmp addr"], "111944": ["lea ecx [edx+imm]", "mov eax func", "sub eax ecx", "dec eax", "jle addr"], "111958": ["cmp byte ptr [edx+imm] imm", "jnz func"], "111968": ["xor eax eax", "mov func [esp+imm]", "mov al [edx+imm]", "mov al [esi+imm]", "cmp al imm", "jz addr"], "111989": ["ja addr"], "111995": ["cmp al imm", "jnz addr"], "112003": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "112022": ["mov eax [esp+imm]", "mov ecx func", "mov [esp+imm] eax", "mov eax [esp+imm]", "add esp imm", "add edx imm", "pop ebx", "pop func", "pop edi", "pop func", "jmp func"], "112051": ["cmp edi imm", "jnz func"], "112060": ["jmp addr"], "112072": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "112091": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "112110": ["mov eax [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "112129": ["lea esi [ptr_0+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "112149": ["mov dl [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "112167": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "112190": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "112206": ["mov cl byte ptr [esp+imm]", "mov esi [esp+imm]", "mov al cl", "mov ebp esi", "shr al imm", "and eax 0FFh", "mov eax [esi+imm]", "shr eax cl", "test al imm", "jz addr"], "112243": ["lea esi [ptr_0+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "112263": ["mov dl [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "112281": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "112304": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "112320": ["lea esi [ptr_0+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "112340": ["mov dl [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "112358": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "112381": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "112400": ["add edx imm", "cmp func edx", "jz addr"], "112411": ["lea eax [ptr_0+imm]", "mov edx ebx", "mov ebx func", "sub ebx func", "dec ebx", "jle addr"], "112427": ["mov ebx func", "jmp addr"], "112440": ["cmp al 0DFh", "ja short addr"], "112444": ["cmp al 0DBh", "ja func"], "112452": ["lea ecx [eax+imm]", "cmp cl imm", "jbe func"], "112464": ["jmp addr"], "112469": ["inc al", "jnz func"], "112477": ["xor eax eax", "mov al cl", "sub eax 0FEh", "cmp eax imm", "jbe func"], "112495": ["jmp func"], "112500": ["cmp al 0FFh", "jnz addr"], "112508": ["xor ecx ecx", "mov cl byte ptr [esp+imm]", "sub ecx 0FEh", "cmp ecx imm", "jbe func"], "112529": ["jmp addr"], "112536": ["mov eax imm", "jmp addr"], "112546": ["or eax imm", "jmp addr"], "112554": ["cmp [esp+imm] imm", "jle short addr"], "112561": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "112579": ["xor eax eax", "mov al cl", "mov ecx [esp+imm]", "mov al [ecx+imm]", "lea ecx [eax-imm]", "mov byte ptr [esp+imm] cl", "cmp cl imm", "ja short func"], "112603": ["and ecx 0FFh", "mov ebp func - 2DF78h)[ebx+imm]", "add ebp ebx", "jmp ebp"], "112620": ["sub eax imm", "cmp al imm", "ja func"], "112631": ["and eax 0FFh", "mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "112647": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "112667": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "112685": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "112708": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "112724": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "112744": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "112762": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "112785": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "112801": ["mov cl byte ptr [esp+imm]", "mov edx [esp+imm]", "mov al cl", "mov ebp edx", "shr al imm", "and eax 0FFh", "mov eax [edx+imm]", "shr eax cl", "test al imm", "jz addr"], "112838": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "112858": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "112876": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "112899": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "112920": ["cmp dl 0FFh", "jnz short func"], "112925": ["xor eax eax", "mov al byte ptr [esp+imm]", "sub eax 0FEh", "cmp eax imm", "jbe addr"], "112945": ["and edx 0FFh", "xor eax eax", "mov cl byte ptr [esp+imm]", "mov al ds:(namePages - 2DF78h)[ebx+imm]", "mov edx eax", "mov al cl", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov edx [esp+imm]", "mov eax [edx+imm]", "shr eax cl", "test al imm", "jz func"], "112996": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "113016": ["mov dl [esi+imm]", "mov al [esi+imm]", "mov byte ptr [esp+imm] al", "test dl dl", "jnz addr"], "113034": ["mov dl al", "xor eax eax", "mov al dl", "mov edx [esp+imm]", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "113059": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "113075": ["mov eax imm", "jmp addr"], "113085": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "113105": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "113123": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "113146": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "113168": ["cmp al 0FFh", "jnz addr"], "113176": ["xor edx edx", "mov dl cl", "sub edx 0FEh", "cmp edx imm", "jbe func"], "113195": ["jmp addr"], "113200": ["mov eax ebx"], "113202": ["mov ebx [esp+imm]", "mov func - 2DF78h)[ebx] eax", "mov eax imm", "jmp addr"], "113218": ["cmp dl 0DFh", "ja addr"], "113227": ["cmp dl 0DBh", "ja func"], "113236": ["lea eax [edx+imm]", "cmp al imm", "jbe func"], "113247": ["jmp func"], "113252": ["cmp dl 0DFh", "ja addr"], "113261": ["cmp dl 0DBh", "ja func"], "113270": ["lea eax [edx+imm]", "cmp al imm", "jbe func"], "113281": ["and edx 0FFh", "xor eax eax", "mov cl byte ptr [esp+imm]", "mov esi [esp+imm]", "mov al ds:(namePages - 2DF78h)[ebx+imm]", "mov ebp esi", "mov edx eax", "mov al cl", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov eax [esi+imm]", "shr eax cl", "test al imm", "jz addr"], "113334": ["lea esi [ptr_0+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "113354": ["mov dl [edi+imm]", "mov cl [edi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "113372": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "113395": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "113411": ["cmp dl 0FFh", "jnz addr"], "113420": ["mov esi func", "mov [esp+imm] imm", "jmp addr"], "113435": ["cmp al imm", "jnz func"], "113443": ["add edx imm"], "113446": ["mov ecx func", "sub ecx edx", "cmp ecx imm", "jle addr"], "113459": ["cmp byte ptr [edx] imm", "jnz func"], "113468": ["xor eax eax", "mov esi [esp+imm]", "mov al [edx+imm]", "mov al [esi+imm]", "sub eax imm", "cmp al imm", "ja func"], "113492": ["and eax 0FFh", "mov esi func - 2DF78h)[ebx+imm]", "add esi ebx", "jmp esi"], "113508": ["cmp ecx imm", "jle addr"], "113517": ["cmp byte ptr [edx+imm] imm", "jnz short func"], "113523": ["xor eax eax", "mov ebx [esp+imm]", "mov al [edx+imm]", "mov cl [ebx+imm]", "cmp cl imm", "ja short func"], "113541": ["mov eax imm", "shl eax cl", "test eax imm", "jnz func"], "113559": ["mov eax [esp+imm]", "mov [eax] edx", "mov eax imm", "jmp addr"], "113575": ["cmp al imm", "jnz func"], "113583": ["lea eax [edx+imm]", "mov ecx func", "sub ecx eax", "dec ecx", "jle addr"], "113597": ["cmp byte ptr [edx+imm] imm", "mov ebx [esp+imm]", "jnz addr"], "113611": ["cmp byte ptr [edx+imm] imm", "jnz addr"], "113621": ["mov [esp+imm] ebx", "mov edx eax", "mov eax [esp+imm]", "add esp imm", "mov ecx func", "pop ebx", "pop esi", "pop edi", "pop func", "jmp func"], "113645": ["mov func [esp+imm]", "add edx imm", "mov [eax] edx", "mov eax imm", "jmp addr"], "113664": ["cmp dl 0DFh", "ja addr"], "113673": ["cmp dl 0DBh", "ja func"], "113682": ["lea eax [edx+imm]", "cmp al imm", "jbe func"], "113693": ["and edx 0FFh", "xor eax eax", "mov cl byte ptr [esp+imm]", "mov al ds:(namePages - 2DF78h)[ebx+imm]", "mov edx eax", "mov al cl", "shr al imm", "and eax 0FFh", "lea eax [eax+imm]", "mov edx [esp+imm]", "mov ebp edx", "mov eax [edx+imm]", "shr eax cl", "test al imm", "jz addr"], "113746": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "113766": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz short addr"], "113780": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "113803": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "113819": ["cmp dl 0FFh", "jnz addr"], "113828": ["mov esi func", "mov [esp+imm] imm", "jmp addr"], "113843": ["mov func - 2DF78h)[ebx] eax", "xor eax eax", "jmp addr"], "113852": ["mov func imm", "jmp addr"], "113862": ["mov eax imm", "jmp addr"], "113872": ["mov esi func", "mov [esp+imm] imm", "jmp addr"], "113887": ["add edx imm", "jmp addr"], "113895": ["mov eax imm", "neg eax", "jmp addr"], "113907": ["mov [esp+imm] imm", "jmp func"], "113920": ["lea func [esi+imm]", "mov ebp [esp+imm]", "sub ebp func", "mov [esp+imm] ebp", "jmp addr"], "113938": ["mov cl byte ptr [esp+imm]", "mov edx [esp+imm]", "mov al cl", "mov ebp edx", "shr al imm", "and eax 0FFh", "mov eax [edx+imm]", "shr eax cl", "test al imm", "jz short addr"], "113971": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "dec eax", "jle addr"], "113991": ["mov dl [esi+imm]", "mov cl [esi+imm]", "mov byte ptr [esp+imm] cl", "test dl dl", "jnz addr"], "114009": ["xor eax eax", "mov edx [esp+imm]", "mov al cl", "mov al [edx+imm]", "sub eax imm", "cmp al imm", "ja func"], "114032": ["and eax 0FFh", "mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "114048": ["mov esi func", "mov edx 0C8h", "mov [esp+imm] imm", "jmp addr"], "114068": ["mov edx 0C8h", "mov [esp+imm] imm", "jmp addr"], "114086": ["mov esi func", "jmp func"], "114093": ["mov esi func", "mov edx 0C8h", "mov [esp+imm] imm", "jmp addr"], "114113": ["lea eax (namingBitmap - 2DF78h)[ebx]", "mov edx 0C8h", "mov [esp+imm] imm", "mov ebp eax", "jmp addr"], "114139": ["add esi imm", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] imm", "mov [esp+imm] eax", "jmp addr"], "114165": ["lea eax (namingBitmap - 2DF78h)[ebx]", "mov esi func", "mov edx 0C8h", "mov [esp+imm] imm", "mov ebp eax", "jmp addr"], "114193": ["mov esi func", "mov [esp+imm] imm", "jmp addr"], "114208": ["lea func [edi+imm]", "mov ebp [esp+imm]", "sub ebp func", "mov [esp+imm] imm", "mov [esp+imm] ebp", "jmp addr"], "114234": ["mov esi func", "mov [esp+imm] imm", "jmp func"], "114249": ["lea eax (namingBitmap - 2DF78h)[ebx]", "mov esi func", "mov edx 0C8h", "mov [esp+imm] imm", "mov ebp eax", "jmp addr"], "114277": ["lea func [esi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] eax", "jmp addr"], "114295": ["mov eax imm", "neg eax", "jmp addr"], "114307": ["lea func [edi+imm]", "mov eax [esp+imm]", "sub eax func", "mov [esp+imm] imm", "mov [esp+imm] eax", "jmp addr"], "114333": ["add esi imm", "mov ebp [esp+imm]", "sub ebp func", "mov [esp+imm] imm", "mov [esp+imm] ebp", "jmp addr"], "114359": ["lea func [esi+imm]", "mov ebp [esp+imm]", "sub ebp func", "mov [esp+imm] ebp", "jmp addr"]}, "preds": [113621], "succs": []}, "_INTERNAL_trim_to_complete_utf8_characters": {"disasm": {"114384": ["push edi", "push esi", "push ebx", "mov edi [esp+imm]", "mov esi [esp+imm]", "mov eax [edi]", "cmp func esi", "jbe short addr"], "114401": ["xor edx edx", "jmp short addr"], "114408": ["mov bl cl", "and ebx imm", "cmp bl 0E0h", "jz short addr"], "114418": ["mov bl cl", "and ebx imm", "cmp bl 0C0h", "jz short addr"], "114428": ["test cl cl", "jns short addr"], "114432": ["dec func", "inc walked", "cmp esi func", "jz short addr"], "114438": ["mov cl [fromLim_0-imm]", "mov bl cl", "and ebx imm", "cmp bl 0F0h", "jnz short addr"], "114451": ["inc walked", "cmp edx imm", "ja short addr"], "114457": ["dec func", "mov edx imm", "cmp func func", "jnz short addr"], "114467": ["mov [edi] func", "pop ebx", "pop func", "pop edi", "retn"], "114480": ["inc walked", "cmp edx imm", "jbe short addr"], "114486": ["lea func [fromLim_0+imm]", "mov func func", "pop ebx", "pop func", "pop func", "retn"], "114496": ["inc walked", "cmp edx imm", "jbe short addr"], "114502": ["lea func [fromLim_0+imm]", "jmp short addr"], "114507": ["lea func [fromLim_0+imm]", "mov func func", "pop ebx", "pop func", "pop func", "retn"], "114516": ["mov func func", "mov func func", "pop ebx", "pop func", "pop func", "retn"]}, "preds": [114384, 114428], "succs": []}, "XmlUtf8Encode": {"disasm": {"114736": ["test c c", "js short addr"], "114740": ["cmp c imm", "jle short addr"], "114745": ["cmp c 7FFh", "jle short addr"], "114752": ["cmp c imm", "jle short addr"], "114759": ["xor ecx ecx", "cmp c imm", "jle short addr"], "114768": ["mov eax ecx", "retn"], "114776": ["mov ecx imm", "mov [buf] al", "mov c ecx", "retn"], "114792": ["xor ecx ecx", "mov c ecx", "retn"], "114800": ["mov ecx c", "and c imm", "sar c imm", "or eax imm", "or ecx imm", "mov [buf+imm] al", "mov [buf] cl", "mov ecx imm", "mov eax ecx", "retn"], "114832": ["mov ecx c", "sar ecx imm", "or ecx imm", "mov [buf] cl", "mov ecx c", "sar ecx imm", "and c imm", "and ecx imm", "or eax imm", "or ecx imm", "mov [buf+imm] al", "mov [buf+imm] cl", "mov ecx imm", "jmp short addr"], "114872": ["mov ecx c", "sar ecx imm", "or ecx imm", "mov [buf] cl", "mov ecx c", "sar ecx imm", "and ecx imm", "or ecx imm", "mov [buf+imm] cl", "mov ecx c", "sar ecx imm", "and c imm", "and ecx imm", "or eax imm", "or ecx imm", "mov [buf+imm] al", "mov [buf+imm] cl", "mov ecx imm", "jmp addr"]}, "preds": [114759], "succs": [114768]}, "unknown_toUtf8": {"disasm": {"114944": ["push ebp", "push edi", "push esi", "push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov eax [esp+imm]", "mov esi [esp+imm]", "mov [esp+imm] eax", "mov ebp [esp+imm]", "mov eax [esp+imm]", "mov [esp+imm] esi", "mov [esp+imm] eax", "mov edi [esp+imm]", "mov eax large imm", "mov [esp+imm] eax", "xor eax eax", "mov eax [ebp+imm]", "cmp esi eax", "jz addr"], "115017": ["lea esi [esp+imm]", "mov [esp+imm] esi", "jmp short addr"], "115032": ["push edx", "push edx", "push eax", "mov n [ecx+imm]", "push esi", "call dword ptr [ecx+imm]", "mov edx [esp+imm]", "call XmlUtf8Encode", "mov edx [edi]", "mov esi eax", "mov n [esp+imm]", "sub eax edx", "add esp imm", "cmp eax n", "jl addr"], "115078": ["mov eax [ebp+imm]", "xor edx edx", "mov [esp+imm] eax", "xor ecx ecx", "mov dl [eax]", "mov eax [esp+imm]", "mov cl [eax+imm]", "mov eax [esp+imm]", "mov edx ecx", "lea eax [eax+imm]", "mov edx [esp+imm]", "mov [ebp+imm] eax"], "115116": ["push eax", "push n", "push func", "mov func [edi]", "push edx", "call func", "mov ecx [edi]", "add esp imm", "add ecx n", "mov [edi] ecx", "mov eax [ebp+imm]", "cmp eax [esp+imm]", "jz short addr"], "115145": ["xor edx edx", "mov ecx [esp+imm]", "mov dl [eax]", "lea edx [ecx+imm]", "movsx esi byte ptr [edx]", "test n n", "jz addr"], "115171": ["mov ecx [esp+imm]", "sub ecx [edi]", "cmp ecx n", "jl short addr"], "115181": ["inc eax", "inc edx", "mov [ebp+imm] eax", "jmp short addr"], "115192": ["xor eax eax"], "115194": ["mov ebx [esp+imm]", "xor ebx large imm", "jnz short addr"], "115207": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "115216": ["mov eax imm", "jmp short addr"], "115223": ["call func"]}, "preds": [115194], "succs": []}, "XmlUtf16Encode": {"disasm": {"115232": ["test charNum charNum", "js short addr"], "115236": ["cmp charNum imm", "jle short addr"], "115243": ["xor ecx ecx", "cmp charNum imm", "jle short addr"], "115252": ["mov charNum ecx", "retn"], "115256": ["mov ecx imm", "mov [buf] ax", "mov charNum ecx", "retn"], "115272": ["xor ecx ecx", "mov charNum ecx", "retn"], "115280": ["sub charNum offset addr", "mov ecx charNum", "and charNum 3FFh", "sar charNum imm", "sub eax imm", "sub ecx imm", "mov [buf+imm] ax", "mov [buf] cx", "mov ecx imm", "mov eax ecx", "retn"]}, "preds": [115243], "succs": []}, "XmlInitUnknownEncoding": {"disasm": {"115344": ["push ebp", "push edi", "call func", "add edi (offset func - $)", "push esi", "lea eax func - 2DF78h)[edi]", "push ebx", "mov ebx edi", "sub esp imm", "mov ebp [esp+imm]", "push 16Ch", "push eax", "push func", "call func", "add esp imm", "xor eax eax", "nop"], "115392": ["inc eax", "cmp i imm", "jz short addr"], "115400": ["mov dl func - 2DF78h)[i+imm]", "cmp dl imm", "jz short addr"], "115412": ["test dl dl", "jz short addr"], "115416": ["mov ecx [esp+imm]", "cmp [ecx+imm] i", "jz short addr"], "115425": ["xor eax eax"], "115427": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop func", "retn"], "115435": ["lea i (nmstrtPages - 2DF78h)[edi]", "xor esi esi", "mov [esp+imm] eax", "jmp short addr"], "115456": ["test ebx ebx", "js addr"], "115464": ["cmp ebx imm", "jg addr"], "115473": ["mov al func - 2DF78h)[edi+imm]", "cmp al imm", "setnz cl", "test al al", "setnz dl", "test cl dl", "jz short addr"], "115494": ["cmp ebx esi", "jnz short addr"], "115498": ["mov [e_0+imm] al", "test ebx ebx", "mov byte ptr [e_0+imm] imm", "mov [e_0+imm] bl", "jnz short addr"], "115521": ["mov ebx imm"], "115526": ["mov [e_0+imm] bx"], "115534": ["inc esi", "cmp esi 100h", "jz addr"], "115547": ["mov eax [esp+imm]", "mov ebx [eax+imm]", "cmp ebx imm", "jnz short addr"], "115559": ["mov byte ptr [e_0+imm] imm", "mov word ptr [e_0+imm] imm", "mov byte ptr [e_0+imm] imm", "mov byte ptr [e_0+imm] imm", "jmp short addr"], "115592": ["cmp ebx imm", "jl addr"], "115601": ["mov eax [esp+imm]", "test eax eax", "jz addr"], "115613": ["mov al imm", "sub eax ebx", "mov [e_0+imm] al", "mov byte ptr [e_0+imm] imm", "mov word ptr [e_0+imm] imm", "jmp short addr"], "115648": ["mov edx ebx", "sar edx imm", "cmp ebx imm", "jg short addr"], "115661": ["cmp edx 0D7h", "jg addr"], "115673": ["test edx edx", "jnz short addr"], "115677": ["cmp func - 2DF78h)[edi+imm] imm", "jz short addr"], "115687": ["mov eax ebx", "mov ecx [esp+imm]", "sar eax imm", "and eax imm", "mov [esp+imm] eax", "mov eax ebx", "and eax imm", "mov [esp+imm] eax", "xor eax eax", "mov al [ecx+imm]", "mov ecx [esp+imm]", "lea eax [ecx+imm]", "lea ecx (namingBitmap - 2DF78h)[edi]", "mov [esp+imm] ecx", "mov eax [ecx+imm]", "mov cl bl", "shr eax cl", "test al imm", "jz short addr"], "115743": ["mov byte ptr [e_0+imm] imm"], "115748": ["lea edx [e_0+imm]", "mov eax ebx", "call XmlUtf8Encode", "mov [e_0+imm] al", "jmp addr"], "115776": ["cmp edx 0FFh", "jnz addr"], "115788": ["lea eax [ebx-imm]", "cmp eax imm", "ja short addr"], "115799": ["nop"], "115800": ["mov byte ptr [e_0+imm] imm", "mov word ptr [e_0+imm] imm", "mov byte ptr [e_0+imm] imm", "mov byte ptr [e_0+imm] imm", "jmp addr"], "115840": ["xor eax eax", "mov ecx [esp+imm]", "mov al ds:(namePages - 2DF78h)[edi+imm]", "lea eax [ecx+imm]", "mov ecx [esp+imm]", "mov eax [ecx+imm]", "mov cl byte ptr [esp+imm]", "shr eax cl", "test al imm", "jz short addr"], "115872": ["mov byte ptr [e_0+imm] imm", "jmp addr"], "115888": ["mov byte ptr [e_0+imm] imm", "jmp addr"], "115898": ["mov eax [esp+imm]", "mov [e_0+imm] eax", "mov eax [esp+imm]", "mov [e_0+imm] eax", "test eax eax", "jz short addr"], "115922": ["lea eax func - 2DF78h)[edi]", "mov [e_0+imm] eax", "mov [e_0+imm] eax", "mov [e_0+imm] eax", "lea eax func - 2DF78h)[edi]", "mov [e_0+imm] eax", "mov [e_0+imm] eax", "mov [e_0+imm] eax", "lea eax func - 2DF78h)[edi]", "mov [e_0+imm] eax", "mov [e_0+imm] eax", "mov [e_0+imm] eax"], "115994": ["lea eax func - 2DF78h)[edi]", "mov [e_0+imm] eax", "lea eax func - 2DF78h)[edi]", "mov [e_0+imm] eax", "mov eax func", "jmp addr"], "116024": ["cmp ebx imm", "jg addr"], "116036": ["jmp addr"]}, "preds": [116024], "succs": [115687]}, "prolog0": {"disasm": {"116736": ["push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov edx [esp+imm]", "lea eax [edx-imm]", "cmp eax imm", "ja short func"], "116763": ["mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "116776": ["mov eax [esp+imm]", "mov eax [eax+imm]", "test eax eax", "jnz addr"], "116791": ["cmp edx imm", "jnz addr"], "116800": ["mov eax imm"], "116805": ["add esp imm", "pop ebx", "retn"], "116816": ["mov edx [esp+imm]", "lea eax (prolog1 - 2DF78h)[ebx]", "mov [edx] eax", "add esp imm", "mov eax imm", "pop ebx", "retn"], "116840": ["mov ecx [esp+imm]", "lea eax (prolog1 - 2DF78h)[ebx]", "mov [ecx] eax", "add esp imm", "mov eax imm", "pop ebx", "retn"], "116864": ["mov ecx [esp+imm]", "lea eax (prolog1 - 2DF78h)[ebx]", "mov [ecx] eax", "add esp imm", "mov eax imm", "pop ebx", "retn"], "116888": ["mov ecx [esp+imm]", "lea eax (prolog1 - 2DF78h)[ebx]", "mov [ecx] eax", "add esp imm", "xor eax eax", "pop ebx", "retn"], "116912": ["lea eax func - 2DF78h)[ebx]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "mov edx [eax+imm]", "mov eax [esp+imm]", "lea eax [eax+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test eax eax", "jnz short addr"], "116958": ["mov ecx [esp+imm]", "lea eax (error - 2DF78h)[ebx]", "mov [ecx] eax", "or eax imm", "jmp addr"], "116984": ["mov edx [esp+imm]", "lea eax (error - 2DF78h)[ebx]", "mov [edx] eax", "add esp imm", "mov eax imm", "pop ebx", "retn"], "117008": ["xor eax eax", "jmp addr"], "117016": ["mov edx [esp+imm]", "lea eax (doctype0 - 2DF78h)[ebx]", "mov [edx] eax", "mov eax imm", "jmp addr"]}, "preds": [116912], "succs": [116805]}, "doctype1": {"disasm": {"117040": ["push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov edx [esp+imm]", "cmp edx imm", "jz short addr"], "117064": ["jg short addr"], "117066": ["mov eax imm", "cmp edx imm", "jz short addr"], "117076": ["cmp edx imm", "jnz addr"], "117085": ["mov ecx [esp+imm]", "lea eax (prolog2 - 2DF78h)[ebx]", "mov [ecx] eax", "mov eax imm"], "117102": ["add esp imm", "pop ebx", "retn"], "117112": ["cmp edx imm", "jnz short addr"], "117117": ["mov ecx [esp+imm]", "lea eax (internalSubset - 2DF78h)[ebx]", "mov [ecx] eax", "add esp imm", "mov eax imm", "pop ebx", "retn"], "117144": ["mov eax [esp+imm]", "mov eax [eax+imm]", "test eax eax", "jnz short addr"], "117155": ["cmp edx imm", "jnz short addr"], "117160": ["add esp imm", "mov eax imm", "pop ebx", "retn"], "117176": ["lea eax func - 2DF78h)[ebx]", "push eax", "mov eax [esp+imm]", "push eax", "mov edx [esp+imm]", "push edx", "mov ecx [esp+imm]", "push ecx", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test eax eax", "jnz short addr"], "117212": ["lea eax func - 2DF78h)[ebx]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test eax eax", "jnz short addr"], "117248": ["mov ecx [esp+imm]", "lea eax (error - 2DF78h)[ebx]", "mov [ecx] eax", "add esp imm", "or eax imm", "pop ebx", "retn"], "117272": ["mov ecx [esp+imm]", "lea eax (doctype3 - 2DF78h)[ebx]", "mov [ecx] eax", "mov eax imm", "jmp addr"], "117296": ["mov ecx [esp+imm]", "lea eax (doctype2 - 2DF78h)[ebx]", "mov [ecx] eax", "mov eax imm", "jmp addr"]}, "preds": [117212], "succs": [117102]}, "internalSubset": {"disasm": {"117328": ["push esi", "push ebx", "call func", "add ebx (offset func - $)", "push eax", "mov eax [esp+imm]", "mov esi [esp+imm]", "add eax imm", "cmp eax imm", "ja func"], "117362": ["mov edx func - 2DF78h)[ebx+imm]", "add edx ebx", "jmp edx"], "117376": ["lea eax func - 2DF78h)[ebx]", "push eax", "mov eax [esp+imm]", "push eax", "mov ecx [esp+imm]", "mov eax [esi+imm]", "lea eax [ecx+imm]", "push eax", "push esi", "call dword ptr [esi+imm]", "add esp imm", "test eax eax", "jnz addr"], "117414": ["lea eax func - 2DF78h)[ebx]", "push eax", "mov eax [esp+imm]", "push eax", "mov ecx [esp+imm]", "mov eax [esi+imm]", "lea eax [ecx+imm]", "push eax", "push esi", "call dword ptr [esi+imm]", "add esp imm", "test eax eax", "jnz addr"], "117452": ["lea eax func - 2DF78h)[ebx]", "push eax", "mov eax [esp+imm]", "push eax", "mov ecx [esp+imm]", "mov eax [esi+imm]", "lea eax [ecx+imm]", "push eax", "push esi", "call dword ptr [esi+imm]", "add esp imm", "test eax eax", "jnz addr"], "117490": ["lea eax func - 2DF78h)[ebx]", "push eax", "mov ecx [esp+imm]", "push ecx", "mov ecx [esp+imm]", "mov eax [esi+imm]", "lea eax [ecx+imm]", "push eax", "push esi", "call dword ptr [esi+imm]", "add esp imm", "test eax eax", "jnz short addr"], "117524": ["lea esi [esi+imm]"], "117528": ["mov ecx [esp+imm]", "lea eax (error - 2DF78h)[ebx]", "mov [ecx] eax", "or eax imm"], "117543": ["pop edx", "pop ebx", "pop esi", "retn"], "117552": ["pop edx", "xor eax eax", "pop ebx", "pop esi", "retn"], "117560": ["pop edx", "mov eax imm", "pop ebx", "pop esi", "retn"], "117576": ["pop edx", "mov eax imm", "pop ebx", "pop esi", "retn"], "117592": ["mov ecx [esp+imm]", "lea eax (doctype5 - 2DF78h)[ebx]", "mov [ecx] eax", "mov eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "117616": ["mov eax imm", "jmp short addr"], "117624": ["mov ecx [esp+imm]", "lea eax (notation0 - 2DF78h)[ebx]", "mov [ecx] eax", "mov eax imm", "jmp short addr"], "117648": ["mov ecx [esp+imm]", "lea eax (entity0 - 2DF78h)[ebx]", "mov [ecx] eax", "mov eax imm", "jmp short addr"], "117672": ["mov ecx [esp+imm]", "lea eax (attlist0 - 2DF78h)[ebx]", "mov [ecx] eax", "mov eax imm", "jmp addr"], "117696": ["mov ecx [esp+imm]", "lea eax (element0 - 2DF78h)[ebx]", "mov [ecx] eax", "mov eax imm", "jmp addr"]}, "preds": [117452], "succs": [117543]}, "attlist2": {"disasm": {"117728": ["push ebp", "push edi", "push esi", "call func", "add esi (offset func - $)", "push ebx", "sub esp imm", "mov eax [esp+imm]", "mov ebp [esp+imm]", "mov ebx [esp+imm]", "cmp eax imm", "jz short addr"], "117763": ["cmp eax imm", "jz short addr"], "117768": ["cmp eax imm", "jz short addr"], "117773": ["mov edx [esp+imm]", "mov edx [edx+imm]", "test edx edx", "jnz addr"], "117788": ["cmp eax imm", "jnz addr"], "117797": ["mov eax imm"], "117802": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "117816": ["add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "117832": ["mov ecx [esp+imm]", "lea eax (attlist3 - 2DF78h)[esi]", "mov [ecx] eax", "add esp imm", "mov eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "117864": ["lea eax func - 2DF78h)[esi]", "xor edi edi", "jmp short addr"], "117880": ["mov eax func - 2DF78h)[esi+imm]"], "117887": ["push eax", "push ebp", "mov eax [esp+imm]", "push eax", "push ebx", "call dword ptr [ebx+imm]", "add esp imm", "test eax eax", "jnz short addr"], "117905": ["inc i", "cmp i imm", "jnz short addr"], "117911": ["lea eax func - 2DF78h)[esi]", "push eax", "push ebp", "mov ecx [esp+imm]", "push ecx", "push ebx", "call dword ptr [ebx+imm]", "add esp imm", "test eax eax", "jnz short addr"], "117935": ["mov ecx [esp+imm]", "lea eax (error - 2DF78h)[esi]", "mov [ecx] eax", "add esp imm", "or eax imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "117960": ["mov edx [esp+imm]", "lea eax (attlist8 - 2DF78h)[esi]", "mov [edx] eax", "lea eax [i+imm]", "jmp addr"], "117984": ["mov ecx [esp+imm]", "lea eax (attlist5 - 2DF78h)[esi]", "mov [ecx] eax", "mov eax imm", "jmp addr"]}, "preds": [117911], "succs": [117802]}, "attlist8": {"disasm": {"118016": ["push esi", "call func", "add esi (offset func - $)", "push ebx", "push ecx", "mov eax [esp+imm]", "mov ebx [esp+imm]", "cmp eax imm", "jz short addr"], "118043": ["cmp eax imm", "jz short addr"], "118048": ["cmp eax imm", "jz short addr"], "118053": ["mov edx [esp+imm]", "mov ecx [edx+imm]", "test ecx ecx", "jnz addr"], "118068": ["cmp eax imm", "jnz addr"], "118077": ["mov eax imm"], "118082": ["pop edx", "pop ebx", "pop esi", "retn"], "118088": ["pop edx", "mov eax imm", "pop ebx", "pop esi", "retn"], "118104": ["mov ecx [esp+imm]", "lea eax (attlist1 - 2DF78h)[esi]", "mov [ecx] eax", "mov eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "118128": ["lea eax func - 2DF78h)[esi]", "push eax", "mov ecx [esp+imm]", "push ecx", "mov eax [esp+imm]", "mov edx [ebx+imm]", "add eax edx", "push eax", "push ebx", "call dword ptr [ebx+imm]", "add esp imm", "test eax eax", "jnz short addr"], "118161": ["lea eax func - 2DF78h)[esi]", "push eax", "mov ecx [esp+imm]", "push ecx", "mov eax [esp+imm]", "mov edx [ebx+imm]", "add eax edx", "push eax", "push ebx", "call dword ptr [ebx+imm]", "add esp imm", "test eax eax", "jnz short addr"], "118194": ["lea eax func - 2DF78h)[esi]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "mov edx [ebx+imm]", "add eax edx", "push eax", "push ebx", "call dword ptr [ebx+imm]", "add esp imm", "test eax eax", "jnz short addr"], "118227": ["mov ecx [esp+imm]", "lea eax (error - 2DF78h)[esi]", "mov [ecx] eax", "or eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "118248": ["mov edx [esp+imm]", "lea eax (attlist1 - 2DF78h)[esi]", "mov [edx] eax", "mov eax imm", "jmp addr"], "118272": ["mov ecx [esp+imm]", "lea eax (attlist1 - 2DF78h)[esi]", "mov [ecx] eax", "mov eax imm", "jmp addr"], "118296": ["mov edx [esp+imm]", "lea eax (attlist9 - 2DF78h)[esi]", "mov [edx] eax", "mov eax imm", "jmp addr"]}, "preds": [118194], "succs": [118082]}, "element1": {"disasm": {"118320": ["push esi", "call func", "add esi (offset func - $)", "push ebx", "push ecx", "mov eax [esp+imm]", "mov ebx [esp+imm]", "cmp eax imm", "jz short addr"], "118347": ["cmp eax imm", "jz short addr"], "118352": ["cmp eax imm", "jz short addr"], "118357": ["mov ecx [ebx+imm]", "test ecx ecx", "jnz addr"], "118368": ["cmp eax imm", "jnz short addr"], "118373": ["mov eax imm"], "118378": ["pop edx", "pop ebx", "pop esi", "retn"], "118384": ["pop edx", "mov eax imm", "pop ebx", "pop esi", "retn"], "118400": ["lea eax (element2 - 2DF78h)[esi]", "mov dword ptr [ebx+imm] imm", "mov [ebx] eax", "mov eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "118424": ["lea eax func - 2DF78h)[esi]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov edx [esp+imm]", "push edx", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test eax eax", "jnz short addr"], "118460": ["lea eax func - 2DF78h)[esi]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test eax eax", "jnz short addr"], "118496": ["lea eax (error - 2DF78h)[esi]", "mov [ebx] eax", "or eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "118512": ["lea eax (declClose - 2DF78h)[esi]", "mov dword ptr [ebx+imm] imm", "mov [ebx] eax", "mov eax imm", "jmp addr"], "118544": ["lea eax (declClose - 2DF78h)[esi]", "mov dword ptr [ebx+imm] imm", "mov [ebx] eax", "mov eax imm", "jmp addr"]}, "preds": [118460], "succs": [118378]}, "element2": {"disasm": {"118576": ["push esi", "push ebx", "push ebx", "call func", "add ebx (offset func - $)", "mov edx [esp+imm]", "mov esi [esp+imm]", "lea eax [edx-imm]", "cmp eax imm", "ja short func"], "118606": ["mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "118624": ["mov ecx [esi+imm]", "test ecx ecx", "jnz short addr"], "118631": ["cmp edx imm", "jnz short addr"], "118636": ["mov eax imm"], "118641": ["pop edx", "pop ebx", "pop esi", "retn"], "118648": ["lea eax (element7 - 2DF78h)[ebx]", "mov [esi] eax", "mov eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "118672": ["lea eax func - 2DF78h)[ebx]", "push eax", "mov eax [esp+imm]", "push eax", "mov ecx [esp+imm]", "mov eax [esp+imm]", "mov edx [ecx+imm]", "add eax edx", "push eax", "mov ecx [esp+imm]", "push ecx", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test eax eax", "jnz addr"], "118721": ["lea eax (error - 2DF78h)[ebx]", "mov [esi] eax", "or eax imm", "jmp short addr"], "118736": ["lea eax (element6 - 2DF78h)[ebx]", "mov dword ptr [esi+imm] imm", "mov [esi] eax", "mov eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "118760": ["lea eax (element7 - 2DF78h)[ebx]", "mov [esi] eax", "mov eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "118784": ["lea eax (element7 - 2DF78h)[ebx]", "mov [esi] eax", "mov eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "118808": ["lea eax (element7 - 2DF78h)[ebx]", "mov [esi] eax", "mov eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "118832": ["mov eax imm", "jmp addr"], "118848": ["lea eax (element3 - 2DF78h)[ebx]", "mov [esi] eax", "mov eax imm", "jmp addr"]}, "preds": [118672], "succs": [118641]}, "element7": {"disasm": {"118880": ["push esi", "call func", "add edx (offset func - $)", "push ebx", "mov ebx [esp+imm]", "mov esi [esp+imm]", "lea ecx [ebx-imm]", "cmp ecx imm", "ja short func"], "118909": ["mov eax func - 2DF78h)[edx+imm]", "add eax edx", "jmp eax"], "118920": ["mov eax [esi+imm]", "test eax eax", "jnz addr"], "118931": ["mov eax imm", "cmp ebx imm", "jnz addr"], "118945": ["pop ebx", "pop func", "retn"], "118952": ["lea edx (element6 - 2DF78h)[edx]", "mov eax imm", "mov func edx", "pop func", "pop func", "retn"], "118968": ["mov eax [state_0+imm]", "lea func [eax-imm]", "mov eax imm", "mov [state_0+imm] ebx", "test ebx ebx", "jnz short addr"], "118986": ["lea edx (declClose - 2DF78h)[edx]", "mov dword ptr [state_0+imm] imm", "mov func edx", "pop ebx", "pop func", "retn"], "119008": ["mov eax [state_0+imm]", "lea func [eax-imm]", "mov eax imm", "mov [state_0+imm] ebx", "test ebx ebx", "jnz short addr"], "119026": ["jmp short addr"], "119032": ["mov eax [state_0+imm]", "lea func [eax-imm]", "mov eax imm", "mov [state_0+imm] ebx", "test ebx ebx", "jnz short addr"], "119050": ["jmp short addr"], "119056": ["mov eax [state_0+imm]", "lea func [eax-imm]", "mov eax imm", "mov [state_0+imm] ebx", "test ebx ebx", "jnz addr"], "119078": ["jmp short addr"], "119080": ["lea edx (element6 - 2DF78h)[edx]", "mov eax imm", "mov func edx", "pop func", "pop func", "retn"], "119096": ["mov eax imm", "jmp addr"], "119112": ["lea edx (error - 2DF78h)[edx]", "or eax imm", "mov func edx", "jmp addr"]}, "preds": [118920, 118931], "succs": [118945]}, "doctype0": {"disasm": {"119216": ["mov edx [esp+imm]", "call func", "add ecx (offset func - $)", "mov eax [esp+imm]", "cmp edx imm", "jz short addr"], "119240": ["cmp edx imm", "jz short addr"], "119245": ["cmp edx imm", "jz short addr"], "119250": ["jmp short func"], "119256": ["mov func imm", "retn"], "119264": ["lea func (doctype1 - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"]}, "preds": [119250], "succs": []}, "doctype4": {"disasm": {"119408": ["mov edx [esp+imm]", "call func", "add ecx (offset func - $)", "mov eax [esp+imm]", "cmp edx imm", "jz short addr"], "119432": ["cmp edx imm", "jz short addr"], "119437": ["cmp edx imm", "jz short addr"], "119442": ["jmp func"], "119448": ["mov func imm", "retn"], "119456": ["lea func (internalSubset - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"], "119472": ["lea func (prolog2 - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"]}, "preds": [119442], "succs": []}, "prolog2": {"disasm": {"119488": ["mov edx [esp+imm]", "call func", "add ecx (offset func - $)", "mov eax [esp+imm]", "cmp edx imm", "jz short addr"], "119512": ["jg short addr"], "119514": ["cmp edx imm", "jz short addr"], "119519": ["cmp edx imm", "jnz short addr"], "119524": ["mov eax imm", "retn"], "119536": ["cmp edx imm", "jnz short addr"], "119541": ["lea edx (error - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"], "119560": ["mov func imm", "retn"], "119568": ["xor func func", "retn"], "119576": ["jmp func"]}, "preds": [119576], "succs": []}, "prolog1": {"disasm": {"119712": ["push ebx", "call func", "add ebx (offset func - $)", "sub esp imm", "mov edx [esp+imm]", "lea eax [edx-imm]", "cmp eax imm", "ja short func"], "119739": ["mov ecx func - 2DF78h)[ebx+imm]", "add ecx ebx", "jmp ecx"], "119752": ["mov eax [esp+imm]", "mov eax [eax+imm]", "test eax eax", "jnz short addr"], "119763": ["cmp edx imm", "jnz short addr"], "119768": ["mov eax imm"], "119773": ["add esp imm", "pop ebx", "retn"], "119784": ["add esp imm", "xor eax eax", "pop ebx", "retn"], "119792": ["add esp imm", "mov eax imm", "pop ebx", "retn"], "119808": ["lea eax func - 2DF78h)[ebx]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "mov edx [eax+imm]", "mov eax [esp+imm]", "lea eax [eax+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test eax eax", "jnz short addr"], "119854": ["mov ecx [esp+imm]", "lea eax (error - 2DF78h)[ebx]", "mov [ecx] eax", "add esp imm", "or eax imm", "pop ebx", "retn"], "119880": ["mov ecx [esp+imm]", "lea eax (error - 2DF78h)[ebx]", "mov [ecx] eax", "add esp imm", "mov eax imm", "pop ebx", "retn"], "119904": ["mov eax imm", "jmp addr"], "119920": ["mov ecx [esp+imm]", "lea eax (doctype0 - 2DF78h)[ebx]", "mov [ecx] eax", "mov eax imm", "jmp addr"]}, "preds": [119808], "succs": [119773]}, "notation4": {"disasm": {"120016": ["mov edx [esp+imm]", "call func", "add ecx (offset func - $)", "mov eax [esp+imm]", "cmp edx imm", "jz short addr"], "120040": ["cmp edx imm", "jz short addr"], "120045": ["cmp edx imm", "jz short addr"], "120050": ["jmp func"], "120056": ["mov func imm", "retn"], "120064": ["lea func (declClose - 2DF78h)[ecx]", "mov dword ptr [state_0+imm] imm", "mov func edx", "mov func imm", "retn"], "120088": ["mov func [state_0+imm]", "test edx edx", "jnz short addr"], "120095": ["lea edx (externalSubset1 - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"], "120112": ["lea edx (internalSubset - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"]}, "preds": [120050], "succs": []}, "declClose": {"disasm": {"120256": ["push ebx", "call func", "add ebx (offset func - $)", "mov ecx [esp+imm]", "mov edx [esp+imm]", "cmp ecx imm", "jz short addr"], "120281": ["cmp ecx imm", "jnz short addr"], "120286": ["mov ecx [edx+imm]", "test ecx ecx", "jz short addr"], "120293": ["lea eax (internalSubset - 2DF78h)[ebx]", "mov [edx] eax"], "120301": ["mov eax [edx+imm]"], "120304": ["pop ebx", "retn"], "120312": ["mov eax [state_0+imm]", "test eax eax", "jnz short addr"], "120319": ["mov eax imm", "cmp func imm", "jz short addr"], "120329": ["lea eax (error - 2DF78h)[ebx]", "mov func eax", "or eax imm", "pop ebx", "retn"], "120344": ["lea eax (externalSubset1 - 2DF78h)[ebx]", "mov func eax", "jmp short addr"]}, "preds": [120286], "succs": [120301]}, "element0": {"disasm": {"120448": ["mov edx [esp+imm]", "call func", "add ecx (offset func - $)", "mov eax [esp+imm]", "cmp edx imm", "jz short addr"], "120472": ["cmp edx imm", "jz short addr"], "120477": ["cmp edx imm", "jz short addr"], "120482": ["jmp func"], "120488": ["mov func imm", "retn"], "120496": ["lea func (element1 - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"]}, "preds": [120482], "succs": []}, "element6": {"disasm": {"120512": ["push esi", "call func", "add eax (offset func - $)", "push ebx", "mov ecx [esp+imm]", "mov ebx [esp+imm]", "lea edx [ecx-imm]", "cmp edx imm", "ja short func"], "120540": ["mov esi func - 2DF78h)[eax+imm]", "add esi eax", "jmp esi"], "120552": ["mov eax ebx", "mov edx ecx", "pop ebx", "pop esi", "jmp func"], "120568": ["lea eax (element7 - 2DF78h)[eax]", "mov func eax", "mov eax imm"], "120581": ["pop func", "pop esi", "retn"], "120584": ["lea eax (element7 - 2DF78h)[eax]", "mov func eax", "mov eax imm", "pop func", "pop esi", "retn"], "120600": ["mov eax [state_0+imm]", "inc eax", "mov [state_0+imm] eax", "mov eax imm", "pop func", "pop esi", "retn"], "120616": ["lea eax (element7 - 2DF78h)[eax]", "mov func eax", "mov eax imm", "pop func", "pop esi", "retn"], "120632": ["lea eax (element7 - 2DF78h)[eax]", "mov func eax", "mov eax imm", "pop func", "pop esi", "retn"], "120648": ["mov eax imm", "jmp short addr"]}, "preds": [120552], "succs": []}, "element3": {"disasm": {"120656": ["mov edx [esp+imm]", "call func", "add ecx (offset func - $)", "mov eax [esp+imm]", "cmp edx imm", "jz short addr"], "120680": ["jg short addr"], "120682": ["cmp edx imm", "jz short addr"], "120687": ["cmp edx imm", "jnz short addr"], "120692": ["lea edx (element4 - 2DF78h)[ecx]", "mov [eax] edx", "mov eax imm", "retn"], "120712": ["cmp func imm", "jnz short addr"], "120717": ["lea func (declClose - 2DF78h)[ecx]", "mov dword ptr [state_0+imm] imm", "mov func edx", "mov func imm", "retn"], "120744": ["mov func imm", "retn"], "120752": ["jmp func"], "120760": ["lea func (declClose - 2DF78h)[ecx]", "mov dword ptr [state_0+imm] imm", "mov func edx", "mov func imm", "retn"]}, "preds": [120752], "succs": []}, "element4": {"disasm": {"120784": ["mov edx [esp+imm]", "call func", "add ecx (offset func - $)", "mov eax [esp+imm]", "cmp edx imm", "jz short addr"], "120808": ["cmp edx imm", "jz short addr"], "120813": ["cmp edx imm", "jz short addr"], "120818": ["jmp func"], "120824": ["mov func imm", "retn"], "120832": ["lea func (element5 - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"]}, "preds": [120818], "succs": []}, "element5": {"disasm": {"120848": ["mov edx [esp+imm]", "call func", "add ecx (offset func - $)", "mov eax [esp+imm]", "cmp edx imm", "jz short addr"], "120872": ["cmp edx imm", "jz short addr"], "120877": ["cmp edx imm", "jz short addr"], "120882": ["jmp func"], "120888": ["mov func imm", "retn"], "120896": ["lea func (declClose - 2DF78h)[ecx]", "mov dword ptr [state_0+imm] imm", "mov func edx", "mov func imm", "retn"], "120920": ["lea func (element4 - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"]}, "preds": [120882], "succs": []}, "attlist0": {"disasm": {"120944": ["mov edx [esp+imm]", "call func", "add ecx (offset func - $)", "mov eax [esp+imm]", "cmp edx imm", "jz short addr"], "120968": ["cmp edx imm", "jz short addr"], "120973": ["cmp edx imm", "jz short addr"], "120978": ["jmp func"], "120984": ["mov func imm", "retn"], "120992": ["lea func (attlist1 - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"]}, "preds": [120978], "succs": []}, "attlist1": {"disasm": {"121008": ["mov edx [esp+imm]", "call func", "add eax (offset func - $)", "mov ecx [esp+imm]", "cmp edx imm", "jz short addr"], "121031": ["jg short addr"], "121033": ["mov eax imm", "cmp edx imm", "jnz short addr"], "121043": ["retn"], "121048": ["cmp edx imm", "jz short addr"], "121053": ["cmp edx imm", "jnz short addr"], "121058": ["lea eax (attlist2 - 2DF78h)[eax]", "mov [ecx] eax", "mov eax imm", "retn"], "121072": ["mov eax func", "jmp func"], "121080": ["mov func [state_0+imm]", "test edx edx", "jnz short addr"], "121087": ["lea eax (externalSubset1 - 2DF78h)[eax]", "mov func eax", "mov eax imm", "retn"], "121104": ["lea eax (internalSubset - 2DF78h)[eax]", "mov func eax", "mov eax imm", "retn"]}, "preds": [121072], "succs": []}, "attlist3": {"disasm": {"121120": ["mov edx [esp+imm]", "call func", "add eax (offset func - $)", "mov ecx [esp+imm]", "cmp edx imm", "jg short addr"], "121143": ["cmp edx imm", "jg short addr"], "121148": ["mov eax imm", "cmp edx imm", "jnz short addr"], "121158": ["retn"], "121160": ["cmp edx imm", "jnz short addr"], "121165": ["lea eax (attlist4 - 2DF78h)[eax]", "mov [ecx] eax", "mov eax imm", "retn"], "121184": ["mov eax func", "jmp func"]}, "preds": [121184], "succs": []}, "attlist4": {"disasm": {"121200": ["mov edx [esp+imm]", "call func", "add ecx (offset func - $)", "mov eax [esp+imm]", "cmp edx imm", "jz short addr"], "121224": ["cmp edx imm", "jz short addr"], "121229": ["cmp edx imm", "jz short addr"], "121234": ["jmp func"], "121240": ["lea func (attlist8 - 2DF78h)[ecx]", "mov func edx"], "121248": ["mov func imm", "retn"], "121256": ["lea func (attlist3 - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"]}, "preds": [121234], "succs": []}, "attlist7": {"disasm": {"121408": ["mov edx [esp+imm]", "call func", "add ecx (offset func - $)", "mov eax [esp+imm]", "cmp edx imm", "jz short addr"], "121432": ["cmp edx imm", "jz short addr"], "121437": ["cmp edx imm", "jz short addr"], "121442": ["jmp func"], "121448": ["lea func (attlist8 - 2DF78h)[ecx]", "mov func edx"], "121456": ["mov func imm", "retn"], "121464": ["lea func (attlist6 - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"]}, "preds": [121442], "succs": []}, "entity0": {"disasm": {"121552": ["mov edx [esp+imm]", "call func", "add ecx (offset func - $)", "mov eax [esp+imm]", "cmp edx imm", "jz short addr"], "121576": ["cmp edx imm", "jz short addr"], "121581": ["cmp edx imm", "jz short addr"], "121586": ["jmp func"], "121592": ["mov func imm", "retn"], "121600": ["lea func (entity1 - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"], "121616": ["lea func (entity2 - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"]}, "preds": [121586], "succs": []}, "entity5": {"disasm": {"121760": ["push esi", "call func", "add esi (offset func - $)", "push ebx", "push eax", "mov eax [esp+imm]", "mov ebx [esp+imm]", "cmp eax imm", "jz short addr"], "121787": ["cmp eax imm", "jz short addr"], "121792": ["cmp eax imm", "jz short addr"], "121797": ["mov ecx [ebx+imm]", "test ecx ecx", "jnz short addr"], "121804": ["cmp eax imm", "jnz short addr"], "121809": ["mov eax imm"], "121814": ["pop edx", "pop ebx", "pop esi", "retn"], "121824": ["pop edx", "mov eax imm", "pop ebx", "pop esi", "retn"], "121840": ["lea eax func - 2DF78h)[esi]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test eax eax", "jnz short addr"], "121876": ["lea eax (error - 2DF78h)[esi]", "mov [ebx] eax", "or eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "121896": ["mov eax [ebx+imm]", "test eax eax", "jnz short addr"], "121903": ["lea eax (externalSubset1 - 2DF78h)[esi]"], "121909": ["mov [ebx] eax", "mov eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "121920": ["lea eax (internalSubset - 2DF78h)[esi]", "jmp short addr"], "121928": ["lea eax (entity6 - 2DF78h)[esi]", "mov [ebx] eax", "mov eax imm", "jmp addr"]}, "preds": [121840], "succs": [121814]}, "entity10": {"disasm": {"122224": ["mov edx [esp+imm]", "call func", "add ecx (offset func - $)", "mov eax [esp+imm]", "cmp edx imm", "jz short addr"], "122248": ["cmp edx imm", "jnz short addr"], "122253": ["mov edx [eax+imm]", "test edx edx", "jnz short addr"], "122260": ["lea edx (externalSubset1 - 2DF78h)[ecx]", "mov [eax] edx", "mov eax imm", "retn"], "122280": ["mov func imm", "retn"], "122288": ["jmp func"], "122296": ["lea edx (internalSubset - 2DF78h)[ecx]", "mov func edx", "mov func imm", "retn"]}, "preds": [122288], "succs": []}, "notation1": {"disasm": {"122320": ["push esi", "call func", "add esi (offset func - $)", "push ebx", "push eax", "mov eax [esp+imm]", "mov ebx [esp+imm]", "cmp eax imm", "jz short addr"], "122347": ["cmp eax imm", "jnz short addr"], "122352": ["lea eax func - 2DF78h)[esi]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "push ebx", "call dword ptr [ebx+imm]", "add esp imm", "test eax eax", "jnz short addr"], "122380": ["lea eax func - 2DF78h)[esi]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "push ebx", "call dword ptr [ebx+imm]", "add esp imm", "test eax eax", "jnz short addr"], "122408": ["mov ecx [esp+imm]", "lea eax (error - 2DF78h)[esi]", "mov [ecx] eax", "or eax imm"], "122423": ["pop edx", "pop ebx", "pop esi", "retn"], "122432": ["mov edx [esp+imm]", "mov ecx [edx+imm]", "test ecx ecx", "jnz short addr"], "122443": ["cmp eax imm", "jnz short addr"], "122448": ["pop edx", "mov eax imm", "pop ebx", "pop esi", "retn"], "122464": ["pop edx", "mov eax imm", "pop ebx", "pop esi", "retn"], "122480": ["mov ecx [esp+imm]", "lea eax (notation3 - 2DF78h)[esi]", "mov [ecx] eax", "mov eax imm", "jmp short addr"], "122504": ["mov ecx [esp+imm]", "lea eax (notation2 - 2DF78h)[esi]", "mov [ecx] eax", "mov eax imm", "jmp short addr"]}, "preds": [122380], "succs": [122423]}, "condSect0": {"disasm": {"122528": ["push edi", "call func", "add edi (offset func - $)", "push esi", "push ebx", "mov eax [esp+imm]", "mov esi [esp+imm]", "cmp eax imm", "jz short addr"], "122555": ["cmp eax imm", "jnz short addr"], "122560": ["lea eax func - 2DF78h)[edi]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "push esi", "call dword ptr [esi+imm]", "add esp imm", "mov ebx eax", "test eax eax", "jnz short addr"], "122590": ["lea eax func - 2DF78h)[edi]", "push eax", "mov ecx [esp+imm]", "push ecx", "mov eax [esp+imm]", "push eax", "push esi", "call dword ptr [esi+imm]", "add esp imm", "test eax eax", "jnz short addr"], "122618": ["mov ecx [esp+imm]", "lea eax (error - 2DF78h)[edi]", "or ebx imm", "mov [ecx] eax", "mov eax ebx", "pop ebx", "pop esi", "pop edi", "retn"], "122640": ["mov edx [esp+imm]", "mov edx [edx+imm]", "test edx edx", "jnz short addr"], "122651": ["cmp func imm", "jnz short addr"], "122656": ["mov ebx imm"], "122661": ["mov eax ebx", "pop ebx", "pop esi", "pop edi", "retn"], "122672": ["xor ebx ebx", "mov func ebx", "pop ebx", "pop func", "pop edi", "retn"], "122680": ["mov ecx [esp+imm]", "lea eax (condSect1 - 2DF78h)[edi]", "xor ebx ebx", "mov [ecx] eax", "mov eax ebx", "pop ebx", "pop esi", "pop edi", "retn"], "122704": ["mov ecx [esp+imm]", "lea eax (condSect2 - 2DF78h)[edi]", "mov [ecx] eax", "jmp short addr"]}, "preds": [122590], "succs": [122661]}, "entity7": {"disasm": {"122720": ["push esi", "call func", "add esi (offset func - $)", "push ebx", "push ecx", "mov eax [esp+imm]", "mov ebx [esp+imm]", "cmp eax imm", "jz short addr"], "122747": ["cmp eax imm", "jz short addr"], "122752": ["cmp eax imm", "jz short addr"], "122757": ["mov ecx [ebx+imm]", "test ecx ecx", "jnz addr"], "122768": ["cmp eax imm", "jnz short addr"], "122773": ["mov eax imm"], "122778": ["pop edx", "pop ebx", "pop esi", "retn"], "122784": ["pop edx", "mov eax imm", "pop ebx", "pop esi", "retn"], "122800": ["lea eax (declClose - 2DF78h)[esi]", "mov dword ptr [ebx+imm] imm", "mov [ebx] eax", "mov eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "122824": ["lea eax func - 2DF78h)[esi]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov edx [esp+imm]", "push edx", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test eax eax", "jnz short addr"], "122860": ["lea eax func - 2DF78h)[esi]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test eax eax", "jnz short addr"], "122896": ["lea eax (error - 2DF78h)[esi]", "mov [ebx] eax", "or eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "122912": ["lea eax (entity9 - 2DF78h)[esi]", "mov [ebx] eax", "mov eax imm", "jmp addr"], "122936": ["lea eax (entity8 - 2DF78h)[esi]", "mov [ebx] eax", "mov eax imm", "jmp addr"]}, "preds": [122860], "succs": [122778]}, "entity2": {"disasm": {"122960": ["push esi", "call func", "add esi (offset func - $)", "push ebx", "push ecx", "mov eax [esp+imm]", "mov ebx [esp+imm]", "cmp eax imm", "jz short addr"], "122987": ["cmp eax imm", "jz short addr"], "122992": ["cmp eax imm", "jz short addr"], "122997": ["mov ecx [ebx+imm]", "test ecx ecx", "jnz addr"], "123008": ["cmp eax imm", "jnz short addr"], "123013": ["mov eax imm"], "123018": ["pop edx", "pop ebx", "pop esi", "retn"], "123024": ["pop edx", "mov eax imm", "pop ebx", "pop esi", "retn"], "123040": ["lea eax (declClose - 2DF78h)[esi]", "mov dword ptr [ebx+imm] imm", "mov [ebx] eax", "mov eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "123064": ["lea eax func - 2DF78h)[esi]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov edx [esp+imm]", "push edx", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test eax eax", "jnz short addr"], "123100": ["lea eax func - 2DF78h)[esi]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "push eax", "mov eax [esp+imm]", "call dword ptr [eax+imm]", "add esp imm", "test eax eax", "jnz short addr"], "123136": ["lea eax (error - 2DF78h)[esi]", "mov [ebx] eax", "or eax imm", "pop edx", "pop ebx", "pop esi", "retn"], "123152": ["lea eax (entity4 - 2DF78h)[esi]", "mov [ebx] eax", "mov eax imm", "jmp addr"], "123176": ["lea eax (entity3 - 2DF78h)[esi]", "mov [ebx] eax", "mov eax imm", "jmp addr"]}, "preds": [123100], "succs": [123018]}, "externalSubset1": {"disasm": {"123200": ["push ebp", "call func", "add edx (offset func - $)", "push edi", "push esi", "push ebx", "sub esp imm", "mov ecx [esp+imm]", "mov eax [esp+imm]", "mov [esp+imm] eax", "mov ebx [esp+imm]", "lea eax [ecx+imm]", "mov edi [esp+imm]", "mov ebp [esp+imm]", "cmp eax imm", "ja short func"], "123250": ["mov esi func - 2DF78h)[edx+imm]", "add esi edx", "jmp esi"], "123264": ["mov eax [esp+imm]", "mov [esp+imm] ebp", "mov [esp+imm] edi", "mov [esp+imm] ebx", "mov [esp+imm] eax", "mov [esp+imm] ecx", "add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "jmp internalSubset"], "123304": ["mov eax [ebx+imm]", "test eax eax", "jz short func"], "123311": ["lea eax (error - 2DF78h)[edx]", "mov [ebx] eax", "or eax imm"], "123322": ["add esp imm", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "123336": ["lea eax (condSect0 - 2DF78h)[edx]", "mov [ebx] eax", "add esp imm", "xor eax eax", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"], "123360": ["mov eax [ebx+imm]", "test eax eax", "jz short func"], "123367": ["dec eax", "mov [ebx+imm] eax", "xor eax eax", "jmp short addr"], "123376": ["add esp imm", "xor eax eax", "pop ebx", "pop esi", "pop edi", "pop ebp", "retn"]}, "preds": [123264], "succs": []}, "num": 186}