{"arch": "metapc", "authnone_marshal": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     esi, [esp+0Ch+xdrs]", "test    esi, esi", "jz      short loc_6144"], ["sub     esp, 0Ch", "lea     edi, (authnone_lock - 2BB6Ch)[ebx]", "push    edi; mutex", "call    _pthread_mutex_lock", "mov     eax, ds:(authnone_private_0 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    ap, ap", "jz      short loc_6140"], ["push    edx", "add     ap, 28h ; '('", "mov     ecx, [eax+14h]", "mov     edx, [esi+4]", "push    ecx", "push    eax", "push    esi", "call    dword ptr [edx+0Ch]", "add     esp, 10h", "mov     esi, eax"], ["sub     esp, 0Ch", "push    edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "mov     eax, rv", "pop     ebx", "pop     rv", "pop     edi", "retn"], ["xor     esi, esi", "jmp     short loc_6127"], ["lea     eax, (__PRETTY_FUNCTION___5298 - 2BB6Ch)[ebx]; \"authnone_marshal\"", "push    eax; function", "lea     eax, (aLibtirpc126Src - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/auth_none.c\"", "push    73h ; 's'; line", "push    eax; file", "lea     eax, (aXdrsNull - 2BB6Ch)[ebx]; \"xdrs != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "authnone_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 48h", "lea     esi, (authnone_lock - 2BB6Ch)[ebx]", "mov     eax, large gs:14h", "mov     [esp+58h+var_20], eax", "xor     eax, eax", "mov     edi, ds:(authnone_private_0 - 2BB6Ch)[ebx]", "push    esi; mutex", "call    _pthread_mutex_lock", "add     esp, 10h", "test    ap, ap", "jz      loc_6288"], ["mov     ebp, [ap+3Ch]", "mov     [esp+4Ch+var_40], ap", "test    ebp, ebp", "jz      short loc_61E0"], ["sub     esp, 0Ch", "push    esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h"], ["mov     eax, [esp+4Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_62FB"], ["mov     eax, [esp+4Ch+var_40]", "add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     ap", "pop     ebp", "retn"], ["mov     eax, ds:(_null_auth_ptr - 2BB6Ch)[ebx]", "sub     esp, 0Ch", "mov     ebp, [eax]", "mov     ecx, [eax+4]", "mov     eax, [eax+8]", "mov     [ap+0Ch], ebp", "mov     [ap+10h], ecx", "mov     [ap], ebp", "mov     [ap+4], ecx", "mov     [ap+14h], eax", "mov     [ap+8], eax", "lea     ebp, (ops_lock - 2BB6Ch)[ebx]", "push    ebp; mutex", "call    _pthread_mutex_lock", "mov     ecx, ds:(ops_5322 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    ecx, ecx", "jz      loc_62A8"], ["sub     esp, 0Ch", "push    ebp; mutex", "call    _pthread_mutex_unlock", "lea     eax, (ops_5322 - 2BB6Ch)[ebx]", "mov     [ap+20h], eax", "push    0; xop", "push    14h; size", "lea     eax, [ap+28h]", "push    eax; addr", "lea     ebp, [esp+68h+xdr_stream]", "push    xdrs; xdrs", "call    _xdrmem_create", "add     esp, 18h", "push    ap; struct opaque_auth *", "push    xdrs; XDR *", "call    _xdr_opaque_auth", "pop     eax", "lea     eax, [ap+0Ch]", "pop     edx", "push    eax; struct opaque_auth *", "push    xdrs; XDR *", "call    _xdr_opaque_auth", "mov     eax, [esp+5Ch+xdr_stream.x_ops]", "mov     [esp+5Ch+var_5C], xdrs", "call    dword ptr [eax+10h]", "mov     [ap+3Ch], eax", "mov     eax, [esp+5Ch+xdr_stream.x_ops]", "add     esp, 10h", "mov     eax, [eax+1Ch]", "test    eax, eax", "jz      loc_61B6"], ["sub     esp, 0Ch", "push    xdrs", "call    eax", "add     esp, 10h", "jmp     loc_61B6"], ["push    eax", "push    eax", "push    40h ; '@'; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     ap, eax", "test    ap, ap", "jz      short loc_6300"], ["mov     ds:(authnone_private_0 - 2BB6Ch)[ebx], ap", "jmp     loc_61AB"], ["lea     eax, (authnone_verf - 2BB6Ch)[ebx]", "mov     ds:(ops_5322 - 2BB6Ch)[ebx], eax", "lea     eax, (authnone_marshal - 2BB6Ch)[ebx]", "mov     ds:(dword_2C068 - 2BB6Ch)[ebx], eax", "lea     eax, (authnone_validate - 2BB6Ch)[ebx]", "mov     ds:(dword_2C06C - 2BB6Ch)[ebx], eax", "lea     eax, (authnone_refresh - 2BB6Ch)[ebx]", "mov     ds:(dword_2C070 - 2BB6Ch)[ebx], eax", "lea     eax, (authnone_destroy - 2BB6Ch)[ebx]", "mov     ds:(dword_2C074 - 2BB6Ch)[ebx], eax", "lea     eax, (authnone_wrap - 2BB6Ch)[ebx]", "mov     ds:(dword_2C078 - 2BB6Ch)[ebx], eax", "mov     ds:(dword_2C07C - 2BB6Ch)[ebx], eax", "jmp     loc_621F"], ["call    __stack_chk_fail_local"], ["sub     esp, 0Ch", "push    esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "mov     [esp+4Ch+var_40], 0", "jmp     loc_61C2"]], "marshal_new_auth": [["push    ebp", "push    edi", "push    esi", "mov     esi, auth", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     auth, large gs:14h", "mov     [esp+3Ch+var_20], auth", "xor     auth, auth", "test    auth, auth", "jz      loc_6409"], ["mov     ebp, [auth+24h]", "push    0; xop", "push    190h; size", "lea     eax, [au+1Ch]", "push    eax; addr", "lea     edi, [esp+48h+xdr_stream]", "push    xdrs; xdrs", "call    _xdrmem_create", "pop     edx", "pop     ecx", "push    auth; struct opaque_auth *", "push    xdrs; XDR *", "call    _xdr_opaque_auth", "add     esp, 10h", "test    eax, eax", "jnz     short loc_63E0"], ["sub     esp, 0Ch", "lea     eax, (aAuthNoneCFatal - 2BB6Ch)[ebx]; \"auth_none.c - Fatal marshalling problem\"", "push    eax; format", "call    _warnx", "add     esp, 10h"], ["mov     eax, [esp+3Ch+xdr_stream.x_ops]", "mov     eax, [eax+1Ch]", "test    eax, eax", "jz      short loc_63C6"], ["sub     esp, 0Ch", "push    xdrs", "call    eax", "add     esp, 10h"], ["mov     eax, [esp+3Ch+var_20]", "xor     eax, large gs:14h", "jnz     short loc_6428"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     xdrs", "pop     au", "retn"], ["push    eax", "add     auth, 0Ch", "push    eax", "push    esi; struct opaque_auth *", "push    xdrs; XDR *", "call    _xdr_opaque_auth", "add     esp, 10h", "test    eax, eax", "jz      short loc_63A0"], ["sub     esp, 0Ch", "push    xdrs", "mov     eax, [esp+4Ch+xdr_stream.x_ops]", "call    dword ptr [eax+10h]", "add     esp, 10h", "mov     [au+1ACh], eax", "jmp     short loc_63B2"], ["lea     eax, (__PRETTY_FUNCTION___6795 - 2BB6Ch)[ebx]; \"marshal_new_auth\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_0 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/auth_unix.c\"", "push    182h; line", "push    eax; file", "lea     eax, (aAuthNull - 2BB6Ch)[ebx]; \"auth != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["call    __stack_chk_fail_local"]], "authunix_refresh": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 5Ch", "mov     eax, large gs:14h", "mov     [esp+6Ch+var_20], eax", "xor     eax, eax", "mov     ecx, [esp+6Ch+auth]", "mov     [esp+6Ch+var_64], ecx", "mov     edx, [ecx+24h]", "mov     eax, [au_0+4]", "cmp     [ecx+4], eax", "jz      loc_6548"], ["mov     ecx, [au_0+18h]", "mov     [esp+6Ch+aup.aup_machname], 0", "inc     ecx", "mov     [esp+6Ch+aup.aup_gids], 0", "mov     [au_0+18h], ecx", "push    1; xop", "mov     esi, [au_0+8]", "push    esi; size", "mov     [esp+74h+au], au_0", "push    eax; addr", "lea     edi, [esp+78h+xdrs]", "push    edi; xdrs", "call    _xdrmem_create", "pop     ebp", "pop     eax", "lea     ebp, [esp+74h+aup]", "push    ebp; p", "push    edi; xdrs", "call    _xdr_authunix_parms", "add     esp, 10h", "mov     esi, eax", "test    stat, stat", "jnz     short loc_64E8"], ["mov     [esp+6Ch+xdrs.x_op], 2", "push    eax", "push    eax", "push    ebp; p", "push    edi; xdrs", "call    _xdr_authunix_parms", "mov     eax, [esp+7Ch+xdrs.x_ops]", "add     esp, 10h", "mov     eax, [eax+1Ch]", "test    eax, eax", "jz      short loc_64CF"], ["sub     esp, 0Ch", "push    edi", "call    eax", "add     esp, 10h"], ["mov     eax, [esp+6Ch+var_20]", "xor     eax, large gs:14h", "jnz     short loc_654C"], ["add     esp, 5Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    edx", "push    edx", "push    0; tz", "lea     stat, [esp+78h+now]", "push    eax; tv", "call    _gettimeofday", "mov     eax, [esp+7Ch+now.tv_sec]", "mov     [esp+7Ch+xdrs.x_op], 0", "mov     [esp+7Ch+aup.aup_time], eax", "pop     ecx", "pop     stat", "push    0", "push    edi", "mov     eax, [esp+7Ch+xdrs.x_ops]", "call    dword ptr [eax+14h]", "pop     eax", "pop     edx", "push    ebp; p", "push    edi; xdrs", "call    _xdr_authunix_parms", "add     esp, 10h", "mov     esi, eax", "test    stat, stat", "jz      short done"], ["mov     edx, [esp+6Ch+au]", "mov     ecx, [esp+6Ch+var_64]", "mov     stat, [edx]", "mov     [ecx], eax", "mov     eax, [edx+4]", "mov     [ecx+4], eax", "mov     eax, [edx+8]", "mov     [ecx+8], eax", "mov     eax, ecx; auth", "call    marshal_new_auth", "jmp     done"], ["xor     esi, esi", "jmp     short loc_64CF"], ["call    __stack_chk_fail_local"]], "authunix_destroy": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     esi, [esp+0Ch+auth]", "test    esi, esi", "jz      short loc_65CD"], ["mov     edi, [esi+24h]", "sub     esp, 0Ch", "mov     edx, [au+4]", "push    edx; ptr", "call    _free", "mov     eax, [au+10h]", "add     esp, 10h", "test    eax, eax", "jz      short loc_659B"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "mov     eax, [esi+24h]", "push    eax; ptr", "call    _free", "mov     eax, [esi+10h]", "add     esp, 10h", "test    eax, eax", "jz      short loc_65BD"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "push    esi; ptr", "call    _free", "add     esp, 10h", "pop     ebx", "pop     esi", "pop     au", "retn"], ["lea     eax, (__PRETTY_FUNCTION___6788 - 2BB6Ch)[ebx]; \"authunix_destroy\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_0 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/auth_unix.c\"", "push    166h; line", "push    eax; file", "lea     eax, (aAuthNull - 2BB6Ch)[ebx]; \"auth != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "authunix_validate": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "mov     ecx, large gs:14h", "mov     [esp+4Ch+var_20], ecx", "xor     ecx, ecx", "mov     esi, [esp+4Ch+auth]", "mov     eax, [esp+4Ch+verf]", "test    esi, esi", "jz      loc_678D"], ["test    eax, eax", "jz      loc_676E"], ["cmp     dword ptr [eax], 2", "jz      short loc_66D0"], ["mov     eax, [esp+4Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_67AC"], ["add     esp, 3Ch", "mov     eax, 1", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ebp, [esi+24h]", "push    1; xop", "mov     edi, [eax+8]", "mov     eax, [eax+4]", "push    edi; size", "push    eax; addr", "lea     edi, [esp+58h+xdrs]", "push    edi; xdrs", "call    _xdrmem_create", "mov     eax, [ebp+10h]", "add     esp, 10h", "test    eax, eax", "jz      short loc_6704"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "mov     dword ptr [ebp+10h], 0", "add     esp, 10h"], ["push    ecx", "lea     edx, [ebp+0Ch]", "push    ecx", "push    edx; struct opaque_auth *", "mov     [esp+58h+var_40], edx", "push    edi; XDR *", "call    _xdr_opaque_auth", "add     esp, 10h", "test    eax, eax", "mov     edx, [esp+4Ch+var_40]", "jz      short loc_6740"], ["mov     eax, [ebp+0Ch]", "mov     [esi], eax", "mov     eax, [ebp+10h]", "mov     [esi+4], eax", "mov     eax, [ebp+14h]", "mov     [esi+8], eax"], ["mov     eax, esi; auth", "call    marshal_new_auth", "jmp     loc_66AC"], ["mov     [esp+4Ch+xdrs.x_op], 2", "push    eax", "push    eax", "push    edx; struct opaque_auth *", "push    edi; XDR *", "call    _xdr_opaque_auth", "mov     eax, [ebp+0]", "mov     dword ptr [ebp+10h], 0", "mov     [esi], eax", "mov     eax, [ebp+4]", "mov     [esi+4], eax", "mov     eax, [ebp+8]", "mov     [esi+8], eax", "add     esp, 10h", "jmp     short loc_6730"], ["lea     eax, (__PRETTY_FUNCTION___6772 - 2BB6Ch)[ebx]; \"authunix_validate\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_0 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/auth_unix.c\"", "push    11Bh; line", "push    eax; file", "lea     eax, (aVerfNull - 2BB6Ch)[ebx]; \"verf != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___6772 - 2BB6Ch)[ebx]; \"authunix_validate\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_0 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/auth_unix.c\"", "push    11Ah; line", "push    eax; file", "lea     eax, (aAuthNull - 2BB6Ch)[ebx]; \"auth != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["call    __stack_chk_fail_local"]], "authunix_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1ECh", "mov     eax, [esp+1FCh+aup_gids]", "mov     edi, [esp+1FCh+machname]", "mov     [esp+1FCh+src], eax", "mov     eax, large gs:14h", "mov     [esp+1FCh+var_20], eax", "xor     eax, eax", "call    ___rpc_createerr", "mov     dword ptr [eax], 0", "mov     dword ptr [eax+4], 0", "mov     dword ptr [eax+8], 0", "mov     dword ptr [eax+0Ch], 0", "push    eax", "push    eax", "push    28h ; '('; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     esi, eax", "test    auth, auth", "jz      loc_6A67"], ["push    eax", "push    eax", "push    1B0h; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     ebp, eax", "test    au, au", "jz      loc_6A3D"], ["sub     esp, 0Ch", "lea     edx, (ops_lock - 2BB6Ch)[ebx]", "push    edx; mutex", "mov     [esp+20Ch+mutex], edx", "call    _pthread_mutex_lock", "mov     eax, ds:(ops_6804 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    eax, eax", "mov     edx, [esp+1FCh+mutex]", "jz      loc_69A8"], ["sub     esp, 0Ch", "push    edx; mutex", "call    _pthread_mutex_unlock", "lea     eax, (ops_6804 - 2BB6Ch)[ebx]", "mov     [auth+24h], au", "mov     [auth+20h], eax", "mov     eax, ds:(_null_auth_ptr - 2BB6Ch)[ebx]", "mov     dword ptr [au+18h], 0", "mov     dword ptr [au+4], 0", "mov     edx, [eax]", "mov     ecx, [eax+4]", "mov     eax, [eax+8]", "mov     [auth+0Ch], edx", "mov     [auth+10h], ecx", "mov     [auth+14h], eax", "mov     [au+10h], ecx", "pop     ecx", "mov     [au+14h], eax", "pop     eax", "push    0; tz", "mov     [au+0Ch], edx", "lea     eax, [esp+208h+now]", "push    eax; tv", "call    _gettimeofday", "mov     eax, [esp+20Ch+now.tv_sec]", "mov     [esp+20Ch+aup.aup_machname], edi", "mov     [esp+20Ch+aup.aup_time], eax", "mov     eax, [esp+20Ch+uid]", "mov     [esp+20Ch+aup.aup_uid], eax", "mov     eax, [esp+20Ch+gid]", "mov     [esp+20Ch+aup.aup_gid], eax", "mov     eax, [esp+20Ch+len]", "mov     [esp+20Ch+aup.aup_len], eax", "mov     eax, [esp+20Ch+src]", "mov     [esp+20Ch+aup.aup_gids], eax", "push    0; xop", "push    190h; size", "lea     eax, [esp+214h+mymem]", "mov     [esp+214h+src], eax", "push    eax; addr", "lea     edi, [esp+218h+xdrs]", "push    edi; xdrs", "call    _xdrmem_create", "add     esp, 18h", "lea     eax, [esp+204h+aup]", "push    eax; p", "push    edi; xdrs", "call    _xdr_authunix_parms", "add     esp, 10h", "test    eax, eax", "jz      loc_6A00"], ["sub     esp, 0Ch", "push    edi", "mov     eax, [esp+20Ch+xdrs.x_ops]", "call    dword ptr [eax+10h]", "mov     dword ptr [au+0], 1", "mov     edi, eax", "mov     [au+8], len_0", "pop     len_0", "pop     edx", "push    len_0; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     [au+4], eax", "test    eax, eax", "jz      loc_6A88"], ["push    edx", "push    len_0; n", "mov     ecx, [esp+204h+src]", "push    ecx; src", "push    eax; dest", "call    _memcpy", "mov     eax, [au+0]", "mov     [auth], eax", "mov     eax, [au+4]", "mov     [auth+4], eax", "mov     eax, [au+8]", "mov     [auth+8], eax", "mov     eax, auth; auth", "call    marshal_new_auth", "add     esp, 10h"], ["mov     eax, [esp+1FCh+var_20]", "xor     eax, large gs:14h", "jnz     loc_6A83"], ["add     esp, 1ECh", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     eax, (authunix_nextverf - 2BB6Ch)[ebx]", "mov     ds:(ops_6804 - 2BB6Ch)[ebx], eax", "lea     eax, (authunix_marshal - 2BB6Ch)[ebx]", "mov     ds:(dword_2C088 - 2BB6Ch)[ebx], eax", "lea     eax, (authunix_validate - 2BB6Ch)[ebx]", "mov     ds:(dword_2C08C - 2BB6Ch)[ebx], eax", "lea     eax, (authunix_refresh - 2BB6Ch)[ebx]", "mov     ds:(dword_2C090 - 2BB6Ch)[ebx], eax", "lea     eax, (authunix_destroy - 2BB6Ch)[ebx]", "mov     ds:(dword_2C094 - 2BB6Ch)[ebx], eax", "lea     eax, (authunix_wrap - 2BB6Ch)[ebx]", "mov     ds:(dword_2C098 - 2BB6Ch)[ebx], eax", "mov     ds:(dword_2C09C - 2BB6Ch)[ebx], eax", "jmp     loc_6871"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 1"], ["sub     esp, 0Ch", "push    auth; ptr", "call    _free", "mov     eax, [ebp+4]", "add     esp, 10h", "test    eax, eax", "jz      short loc_6A2A"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "xor     auth, auth", "push    ebp; ptr", "call    _free", "add     esp, 10h", "jmp     loc_6981"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Ch", "call    ___rpc_createerr", "sub     esp, 0Ch", "mov     dword ptr [eax+8], 0Ch", "push    auth; ptr", "xor     auth, auth", "call    _free", "add     esp, 10h", "jmp     loc_6981"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Ch", "call    ___rpc_createerr", "mov     dword ptr [eax+8], 0Ch", "jmp     loc_6981"], ["call    __stack_chk_fail_local"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Ch", "call    ___rpc_createerr", "mov     dword ptr [eax+8], 0Ch", "jmp     loc_6A0B"]], "authunix_create_default": [["push    ebp", "mov     ebp, esp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 6Ch", "mov     eax, large gs:14h", "mov     [ebp+var_1C], eax", "xor     eax, eax", "call    ___rpc_createerr", "mov     dword ptr [eax], 0", "mov     dword ptr [eax+4], 0", "mov     dword ptr [eax+8], 0", "mov     dword ptr [eax+0Ch], 0", "push    eax", "push    eax", "lea     eax, [ebp+machname]", "push    41h ; 'A'; len", "mov     [ebp+result], eax", "push    eax; name", "call    _gethostname", "add     esp, 10h", "inc     eax", "jz      loc_6B94"], ["mov     [ebp+machname+40h], 0", "call    _geteuid", "mov     [ebp+uid], eax", "call    _getegid", "mov     [ebp+var_74], eax", "jmp     short retry"], ["push    eax", "push    eax", "lea     eax, [len+1]", "push    4; size", "push    eax; nmemb", "call    _calloc", "add     esp, 10h", "mov     esi, eax", "test    gids, gids", "jz      loc_6BFF"], ["push    eax", "push    eax", "push    gids; list", "push    len; size", "call    _getgroups", "add     esp, 10h", "cmp     len, 0FFFFFFFFh", "jnz     short loc_6BC8"], ["call    ___errno_location", "mov     edi, eax", "call    ___rpc_createerr", "sub     esp, 0Ch", "mov     edx, [edi]", "mov     [eax+8], edx", "push    gids; ptr", "call    _free", "call    ___rpc_createerr", "add     esp, 10h", "cmp     dword ptr [eax+8], 16h", "jnz     short out_err"], ["call    ___rpc_createerr", "mov     dword ptr [eax+8], 0"], ["push    eax", "push    eax", "push    0; list", "push    0; size", "call    _getgroups", "add     esp, 10h", "mov     edi, eax", "cmp     len, 0FFFFFFFFh", "jnz     short loc_6B20"], ["call    ___errno_location", "mov     esi, eax", "call    ___rpc_createerr", "mov     edx, [esi]", "mov     [eax+8], edx"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Ch", "xor     eax, eax"], ["mov     ecx, [ebp+var_1C]", "xor     ecx, large gs:14h", "jnz     short loc_6C0D"], ["lea     esp, [ebp-0Ch]", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "cmp     eax, 10h", "push    gids; aup_gids", "jg      short loc_6BF8"], ["push    eax; len", "mov     eax, [ebp+var_74]", "push    eax; gid", "mov     edx, [ebp+uid]", "push    edx; uid", "mov     ecx, [ebp+result]", "push    ecx; machname", "call    _authunix_create", "add     esp, 14h", "mov     [ebp+result], eax", "push    gids; ptr", "call    _free", "add     esp, 10h", "mov     eax, [ebp+result]", "jmp     short loc_6BB2"], ["mov     eax, 10h", "jmp     short loc_6BD1"], ["call    ___rpc_createerr", "mov     dword ptr [eax+8], 0Ch", "jmp     short out_err"], ["call    __stack_chk_fail_local"]], "xdr_authunix_parms": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+xdrs]", "mov     esi, [esp+0Ch+p]", "test    edi, edi", "jz      loc_6CDB"], ["test    esi, esi", "jz      short loc_6CBF"], ["push    eax", "push    eax", "push    esi; ulp", "push    edi; xdrs", "call    _xdr_u_long", "add     esp, 10h", "test    eax, eax", "jnz     short loc_6C58"], ["xor     eax, eax"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    eax", "lea     eax, [esi+4]", "push    0FFh; maxsize", "push    eax; cpp", "push    edi; xdrs", "call    _xdr_string", "add     esp, 10h", "test    eax, eax", "jz      short loc_6C52"], ["push    eax", "push    eax", "lea     eax, [esi+8]", "push    eax; up", "push    edi; xdrs", "call    _xdr_u_int", "add     esp, 10h", "test    eax, eax", "jz      short loc_6C52"], ["push    ecx", "lea     eax, [esi+0Ch]", "push    ecx", "push    eax; up", "push    edi; xdrs", "call    _xdr_u_int", "add     esp, 10h", "test    eax, eax", "jz      short loc_6C52"], ["push    eax", "mov     edx, ds:(xdr_int_ptr - 2BB6Ch)[ebx]", "push    eax", "lea     eax, [esi+10h]", "push    edx; elproc", "add     esi, 14h", "push    4; elsize", "push    10h; maxsize", "push    eax; sizep", "push    esi; addrp", "push    edi; xdrs", "call    _xdr_array", "add     esp, 20h", "test    eax, eax", "setnz   al", "and     eax, 0FFh", "jmp     short loc_6C54"], ["lea     eax, (__PRETTY_FUNCTION___4629 - 2BB6Ch)[ebx]; \"xdr_authunix_parms\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_1 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/authunix_prot.\"...", "push    36h ; '6'; line", "push    eax; file", "lea     eax, (aPNull - 2BB6Ch)[ebx]; \"p != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___4629 - 2BB6Ch)[ebx]; \"xdr_authunix_parms\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_1 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/authunix_prot.\"...", "push    35h ; '5'; line", "push    eax; file", "lea     eax, (aXdrsNull - 2BB6Ch)[ebx]; \"xdrs != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "__binddynport": [["push    ebp", "push    edi", "push    esi", "xor     esi, esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0B8h", "mov     eax, large gs:14h", "mov     [esp+0C8h+var_20], eax", "xor     eax, eax", "mov     eax, [esp+0C8h+fd]", "push    eax; fd", "call    ___rpc_sockisbound", "add     esp, 10h", "test    eax, eax", "jz      short loc_6D60"], ["mov     eax, [esp+0BCh+var_20]", "xor     eax, large gs:14h", "jnz     loc_6EA8"], ["add     esp, 0ACh", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     ebp, [esp+0BCh+ss_0]", "mov     eax, esi", "mov     ecx, 20h ; ' '", "mov     edi, sap", "rep stosd", "mov     [esp+0BCh+salen], 80h", "sub     esp, 0Ch", "lea     eax, (port_lock - 2BB6Ch)[ebx]", "mov     [esp+0C8h+mutex], eax", "push    eax; mutex", "call    _pthread_mutex_lock", "add     esp, 0Ch", "lea     eax, [esp+0C0h+salen]", "push    eax; len", "push    sap; addr", "mov     eax, [esp+0C8h+fd]", "push    eax; fd", "call    _getsockname", "add     esp, 10h", "mov     esi, eax", "cmp     eax, 0FFFFFFFFh", "jz      out"], ["mov     eax, dword ptr [esp+0BCh+ss_0.ss_family]", "cmp     ax, 2", "jz      loc_6E70"], ["or      esi, 0FFFFFFFFh", "cmp     ax, 0Ah", "jnz     out"], ["mov     [esp+0BCh+salen], 1Ch"], ["mov     eax, ds:(seed_7829 - 2BB6Ch)[ebx]", "test    eax, eax", "jz      loc_6E80"], ["sub     esp, 0Ch", "lea     eax, (seed_7829 - 2BB6Ch)[ebx]", "push    eax; seed", "call    _rand_r", "mov     edx, eax", "mov     ecx, 3FFFh", "sar     edx, 1Fh", "add     esp, 10h", "idiv    ecx", "mov     [esp+0BCh+var_B4], 3FFFh", "lea     eax, [edx-4000h]", "jmp     short loc_6E2D"], ["call    ___errno_location", "cmp     dword ptr [eax], 62h ; 'b'", "jnz     short out"], ["cmp     di, 0FFFFh", "mov     eax, port", "jnz     short loc_6E27"], ["mov     port, 0FFFFC000h"], ["dec     [esp+0BCh+var_B4]", "jz      short out"], ["lea     edi, [port+1]", "rol     ax, 8", "mov     word ptr [esp+0BCh+ss_0.__ss_padding], ax", "push    edx", "mov     ecx, [esp+0C0h+salen]", "push    ecx; len", "push    sap; addr", "mov     esi, [esp+0C8h+fd]", "push    esi; fd", "call    _bind", "add     esp, 10h", "mov     esi, eax", "test    res, res", "js      short loc_6E10"], ["xor     esi, esi"], ["sub     esp, 0Ch", "mov     eax, [esp+0C8h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     loc_6D3A"], ["mov     [esp+0BCh+salen], 10h", "jmp     loc_6DD1"], ["push    edi", "push    edi", "push    0; tz", "lea     eax, [esp+0C8h+tv]", "push    eax; tv", "call    _gettimeofday", "mov     edi, [esp+0CCh+tv.tv_usec]", "call    _getpid", "imul    edi, eax", "add     esp, 10h", "mov     ds:(seed_7829 - 2BB6Ch)[ebx], edi", "jmp     loc_6DDF"], ["call    __stack_chk_fail_local"]], "bindresvport_sa": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0BCh", "mov     eax, [esp+0CCh+sa]", "mov     [esp+0CCh+sin6], eax", "mov     eax, large gs:14h", "mov     [esp+0CCh+var_20], eax", "xor     eax, eax", "mov     eax, ds:(blacklist_read - 2BB6Ch)[ebx]", "mov     [esp+0CCh+var_C8], eax", "test    eax, eax", "jz      loc_7176"], ["sub     esp, 0Ch", "lea     eax, (port_lock - 2BB6Ch)[ebx]", "mov     [esp+0D8h+mutex], eax", "push    eax; mutex", "call    _pthread_mutex_lock", "add     esp, 10h", "mov     edx, [esp+0CCh+sin6]", "movsx   ebp, (startport_7897 - 2BB6Ch)[ebx]", "test    edx, edx", "jz      loc_7350"], ["mov     eax, [esp+0CCh+sin6]", "xor     esi, esi", "mov     si, [eax]"], ["call    ___errno_location", "cmp     af_0, 2", "mov     [esp+0CCh+var_B4], eax", "jz      loc_711D"], ["cmp     af_0, 0Ah", "jnz     loc_7061"], ["mov     edi, [esp+0CCh+sin6]", "mov     [esp+0CCh+salen], 1Ch", "mov     ax, [edi+2]", "lea     ecx, [edi+2]", "mov     edi, [esp+0CCh+sin6]", "mov     word ptr [esp+0CCh+var_C8], ax", "rol     ax, 8", "mov     ds:(port_7896 - 2BB6Ch)[ebx], ax", "mov     [esp+0CCh+portp], ecx", "test    ax, ax", "mov     [edi], si", "jz      loc_7153"], ["mov     eax, 400h", "mov     ecx, [esp+0CCh+var_B4]", "sub     eax, ebp", "mov     [esp+0CCh+var_C8], eax", "mov     dword ptr [ecx], 62h ; 'b'", "test    eax, eax", "jle     loc_70A6"], ["mov     di, ds:(port_7896 - 2BB6Ch)[ebx]", "mov     [esp+0CCh+var_C4], 3FFh", "mov     [esp+0CCh+res], 0FFFFFFFFh"], ["xor     edx, edx", "mov     esi, ds:(list_size - 2BB6Ch)[ebx]", "xor     ebp, ebp", "mov     dx, di", "test    esi, esi", "jle     short loc_7018"], ["lea     esi, [esi+0]"], ["mov     ecx, ds:(list - 2BB6Ch)[ebx]", "xor     eax, eax", "jmp     short loc_6FD5"], ["inc     j", "cmp     j, esi", "jz      short loc_7018"], ["cmp     [ecx+j*4], edx", "jnz     short loc_6FD0"], ["inc     edi", "mov     ds:(port_7896 - 2BB6Ch)[ebx], di", "and     edi, 0FFFFh", "cmp     edi, [esp+0CCh+var_C4]", "jle     short loc_6FFC"], ["mov     ax, (startport_7897 - 2BB6Ch)[ebx]", "mov     ds:(port_7896 - 2BB6Ch)[ebx], ax"], ["inc     i", "cmp     i, [esp+0CCh+var_C8]", "jge     loc_70B0"], ["xor     edx, edx", "mov     di, ds:(port_7896 - 2BB6Ch)[ebx]", "mov     dx, di", "test    esi, esi", "jg      short loc_6FC0"], ["nop"], ["mov     eax, [esp+0CCh+portp]", "rol     dx, 8", "mov     [eax], dx", "push    edx", "mov     ecx, [esp+0D0h+salen]", "push    ecx; len", "mov     eax, [esp+0D4h+sin6]", "push    eax; addr", "mov     eax, [esp+0D8h+sd]", "push    eax; fd", "call    _bind", "mov     [esp+0DCh+res], eax", "add     esp, 10h", "test    res_0, res_0", "jns     short loc_704F"], ["mov     res_0, [esp+0CCh+var_B4]", "cmp     dword ptr [eax], 62h ; 'b'", "jz      short try_next_port"], ["sub     esp, 0Ch", "mov     eax, [esp+0D8h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     short loc_7083"], ["mov     eax, [esp+0CCh+var_B4]", "sub     esp, 0Ch", "mov     dword ptr [eax], 60h ; '`'", "mov     eax, [esp+0D8h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "mov     [esp+0CCh+res], 0FFFFFFFFh"], ["mov     eax, [esp+0CCh+var_20]", "xor     eax, large gs:14h", "jnz     loc_738E"], ["mov     eax, [esp+0CCh+res]", "add     esp, 0BCh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     ebp, ebp", "mov     [esp+0CCh+res], 0FFFFFFFFh"], ["cmp     [esp+0CCh+var_C8], ebp", "jnz     short loc_704F"], ["cmp     (startport_7897 - 2BB6Ch)[ebx], 200h", "jz      short loc_704F"], ["mov     di, ds:(port_7896 - 2BB6Ch)[ebx]", "xor     eax, eax", "mov     ax, di", "mov     (startport_7897 - 2BB6Ch)[ebx], 200h", "mov     [esp+0CCh+var_C4], 257h", "mov     [esp+0CCh+var_C8], 58h ; 'X'", "lea     edx, [eax+eax*4]", "mov     ecx, edx", "shl     ecx, 5", "add     edx, ecx", "lea     edx, [eax+edx*2]", "lea     edx, [edx+edx*8]", "shl     edx, 4", "sub     edx, eax", "mov     eax, edx", "shr     eax, 16h", "lea     edx, [eax+eax*4]", "lea     eax, [eax+edx*2]", "shl     eax, 3", "sub     edi, eax", "add     edi, 200h", "mov     ds:(port_7896 - 2BB6Ch)[ebx], di", "jmp     loc_6FA9"], ["mov     edi, [esp+0CCh+sin6]", "mov     [esp+0CCh+salen], 10h", "add     edi, 2", "mov     ax, [edi]", "mov     [esp+0CCh+portp], edi", "mov     edi, [esp+0CCh+sin6]", "mov     word ptr [esp+0CCh+var_C8], ax", "rol     ax, 8", "mov     ds:(port_7896 - 2BB6Ch)[ebx], ax", "mov     [edi], si", "test    ax, ax", "jnz     loc_6F75"], ["call    _getpid", "mov     ecx, 1A8h", "mov     edx, eax", "sar     edx, 1Fh", "idiv    ecx", "add     edx, 258h", "mov     ds:(port_7896 - 2BB6Ch)[ebx], dx", "jmp     loc_6F75"], ["mov     [esp+0CCh+s], 0", "mov     [esp+0CCh+var_A8], 0", "push    eax", "mov     ds:(blacklist_read - 2BB6Ch)[ebx], 1", "push    eax", "lea     eax, (aServerRejected_0+17h - 2BB6Ch)[ebx]; \"r\"", "push    eax; modes", "lea     eax, (aEtcBindresvpor - 2BB6Ch)[ebx]; \"/etc/bindresvport.blacklist\"", "push    eax; filename", "call    _fopen", "add     esp, 10h", "mov     ebp, eax", "test    eax, eax", "jz      loc_6EF1"], ["lea     eax, [esp+0CCh+var_A8]", "mov     [esp+0CCh+var_C4], 0", "mov     [esp+0CCh+res], eax", "lea     eax, [esp+0CCh+s]", "mov     [esp+0CCh+portp], eax"], ["sub     esp, 0Ch", "push    ebp; stream", "call    _feof", "add     esp, 10h", "test    eax, eax", "jnz     loc_72DD"], ["push    ebp", "push    0Ah", "mov     eax, [esp+0D4h+res]", "push    eax", "mov     eax, [esp+0D8h+portp]", "push    eax", "call    ___getdelim", "add     esp, 10h", "test    eax, eax", "jle     loc_72DD"], ["mov     esi, [esp+0CCh+s]", "push    edi", "push    edi", "push    23h ; '#'; c", "push    esi; s", "call    _strchr", "add     esp, 10h", "test    eax, eax", "mov     [esp+0CCh+salen], eax", "jz      short loc_7217"], ["mov     byte ptr [eax], 0"], ["call    ___ctype_b_loc", "mov     edi, eax", "mov     ecx, [eax]", "jmp     short loc_7229"], ["inc     esi"], ["movsx   edx, byte ptr [esi]", "test    byte ptr [ecx+edx*2+1], 20h", "jnz     short loc_7228"], ["test    dl, dl", "jz      short loc_71CA"], ["sub     esp, 0Ch", "push    esi; s", "call    _strlen", "add     esp, 10h", "lea     eax, [esi+eax-1]", "cmp     byte ptr [eax], 0Ah", "jnz     short loc_724F"], ["mov     byte ptr [eax], 0"], ["push    ecx", "push    0; base", "lea     eax, [esp+0D4h+salen]", "push    eax; endptr", "push    esi; nptr", "call    _strtoul", "mov     esi, eax", "mov     eax, [esp+0DCh+salen]", "mov     edi, [edi]", "add     esp, 10h", "movsx   ecx, byte ptr [eax]", "mov     edx, ecx", "test    byte ptr [edi+ecx*2+1], 20h", "jz      short loc_7289"], ["lea     esi, [esi+0]"], ["inc     eax", "mov     [esp+0CCh+salen], eax", "movsx   ecx, byte ptr [eax]", "mov     edx, ecx", "test    byte ptr [edi+ecx*2+1], 20h", "jnz     short loc_7278"], ["test    dl, dl", "jnz     loc_71CA"], ["cmp     esi, 0FFFFFFFFh", "jz      loc_71CA"], ["lea     eax, [esi-200h]", "cmp     eax, 1FFh", "ja      loc_71CA"], ["mov     ecx, [esp+0CCh+var_C4]", "mov     eax, ds:(list - 2BB6Ch)[ebx]", "cmp     [esp+0CCh+var_C8], ecx", "jle     short loc_730C"], ["mov     edi, [esp+0CCh+var_C4]", "sub     esp, 0Ch", "mov     [eax+edi*4], esi", "lea     eax, [edi+1]", "mov     [esp+0D8h+var_C4], eax", "push    ebp; stream", "call    _feof", "add     esp, 10h", "test    eax, eax", "jz      loc_71DE"], ["sub     esp, 0Ch", "push    ebp; stream", "call    _fclose", "mov     eax, [esp+0DCh+s]", "add     esp, 10h", "test    eax, eax", "jz      short loc_72FD"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["mov     eax, [esp+0CCh+var_C4]", "mov     ds:(list_size - 2BB6Ch)[ebx], eax", "jmp     loc_6EF1"], ["mov     ecx, [esp+0CCh+var_C8]", "add     ecx, 0Ah", "mov     [esp+0CCh+var_C8], ecx", "mov     edi, [esp+0CCh+var_C8]", "push    edx", "push    edx", "lea     edx, ds:0[edi*4]", "push    edx; size", "push    eax; ptr", "call    _realloc", "add     esp, 10h", "mov     ds:(list - 2BB6Ch)[ebx], eax", "test    eax, eax", "jnz     short loc_72BB"], ["sub     esp, 0Ch", "push    [esp+0D8h+s]; ptr", "call    _free", "add     esp, 10h", "jmp     loc_6EF1"], ["mov     [esp+0CCh+salen], 80h", "lea     edi, [esp+0CCh+myaddr]", "push    eax", "lea     eax, [esp+0D0h+salen]", "push    eax; len", "push    edi; addr", "mov     eax, [esp+0D8h+sd]", "push    eax; fd", "call    _getsockname", "mov     [esp+0DCh+res], eax", "add     esp, 10h", "inc     eax", "jz      loc_704F"], ["xor     esi, esi", "mov     [esp+0CCh+sin6], edi", "mov     si, [esp+0CCh+myaddr.ss_family]", "jmp     loc_6F23"], ["call    __stack_chk_fail_local"]], "__rpc_getbroadifs": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 58h", "mov     eax, [esp+68h+list]", "mov     [esp+68h+var_54], eax", "mov     eax, large gs:14h", "mov     [esp+68h+var_20], eax", "xor     eax, eax", "lea     eax, [esp+68h+ifp]", "push    eax; ifap", "call    _getifaddrs", "add     esp, 10h", "test    eax, eax", "js      loc_7578"], ["lea     edx, [esp+5Ch+hints]", "xor     eax, eax", "mov     edi, edx", "mov     ecx, 8", "rep stosd", "mov     eax, [esp+5Ch+af_0]", "mov     [esp+5Ch+hints.ai_family], eax", "mov     eax, [esp+5Ch+proto]", "mov     [esp+5Ch+hints.ai_protocol], eax", "mov     eax, [esp+5Ch+socktype]", "mov     [esp+5Ch+hints.ai_socktype], eax", "lea     eax, [esp+5Ch+res]", "push    eax; pai", "lea     eax, (aSunrpc - 2BB6Ch)[ebx]; \"sunrpc\"", "push    edx; req", "push    eax; service", "push    0; name", "call    _getaddrinfo", "mov     [esp+6Ch+count], eax", "add     esp, 10h", "test    eax, eax", "jnz     loc_7578"], ["mov     ebp, [esp+5Ch+ifp]", "test    ifap, ifap", "jz      loc_75B4"], ["lea     eax, (aFf02202 - 2BB6Ch)[ebx]; \"ff02::202\"", "mov     [esp+5Ch+cp], eax", "jmp     short loc_74DB"], ["test    byte ptr [ifap+8], 2", "jz      loc_7598"], ["mov     esi, [ifap+14h]", "test    esi, esi", "jz      loc_7598"], ["lea     eax, [edx+4]", "mov     ecx, 20h ; ' '", "mov     edi, eax", "mov     eax, [esp+5Ch+res]", "rep movsd", "mov     eax, [eax+14h]", "mov     ax, [eax+2]", "mov     [edx+6], ax"], ["mov     ecx, [esp+5Ch+var_54]", "mov     dword ptr [edx+84h], 0", "mov     eax, [ecx+4]", "mov     [edx+88h], eax", "mov     [eax], edx", "add     edx, 84h", "mov     [ecx+4], edx", "mov     ecx, [esp+5Ch+count]", "inc     ecx", "mov     [esp+5Ch+count], ecx", "lea     esi, [esi+0]"], ["mov     ifap, [ifap+0]", "test    ifap, ifap", "jz      loc_75B0"], ["mov     eax, [ifap+0Ch]", "test    eax, eax", "jz      short loc_74D0"], ["xor     esi, esi", "mov     si, [eax]", "mov     eax, esi", "cmp     eax, [esp+5Ch+af_0]", "jnz     short loc_74D0"], ["test    byte ptr [ifap+8], 1", "jz      short loc_74D0"], ["sub     esp, 0Ch", "push    8Ch; size", "call    _malloc", "add     esp, 10h", "test    bip_0, bip_0", "jz      loc_75B0"], ["mov     [esp+5Ch+bip], bip_0", "sub     esp, 0Ch", "mov     bip_0, [ifap+4]", "push    eax", "call    _if_nametoindex", "mov     edx, [esp+6Ch+bip]", "add     esp, 10h", "mov     [edx], eax", "cmp     [esp+5Ch+af_0], 0Ah", "jnz     loc_7470"], ["test    byte ptr [ifap+9], 10h", "jz      short loc_7598"], ["lea     eax, [edx+0Ch]", "push    esi", "mov     [esp+60h+bip], edx", "push    eax; buf", "mov     edi, [esp+64h+cp]", "push    edi; cp", "push    0Ah; af", "call    _inet_pton", "mov     eax, [esp+6Ch+res]", "mov     edx, [esp+6Ch+bip]", "add     esp, 10h", "mov     eax, [eax+14h]", "mov     word ptr [edx+4], 0Ah", "mov     ax, [eax+2]", "mov     [edx+6], ax", "mov     eax, [edx]", "mov     [edx+1Ch], eax", "jmp     loc_74A0"], ["mov     [esp+5Ch+count], 0"], ["mov     eax, [esp+5Ch+var_20]", "xor     eax, large gs:14h", "jnz     short loc_75CD"], ["mov     eax, [esp+5Ch+count]", "add     esp, 4Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    edx; ptr", "call    _free", "mov     ifap, [ifap+0]", "add     esp, 10h", "test    ifap, ifap", "jnz     loc_74DB"], ["nop"], ["mov     ifap, [esp+5Ch+ifp]"], ["sub     esp, 0Ch", "push    ebp; ifa", "call    _freeifaddrs", "pop     eax", "mov     edx, [esp+68h+res]", "push    edx; ai", "call    _freeaddrinfo", "add     esp, 10h", "jmp     short loc_757F"], ["call    __stack_chk_fail_local"]], "rpc_broadcast_exp": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 12ACh", "mov     eax, [esp+12BCh+xargs]", "mov     esi, [esp+12BCh+nettype]", "mov     [esp+12BCh+var_129C], eax", "mov     eax, [esp+12BCh+argsp]", "mov     [esp+12BCh+pollretval], eax", "mov     eax, [esp+12BCh+xresults]", "mov     [esp+12BCh+var_124C], eax", "mov     eax, [esp+12BCh+resultsp]", "mov     [esp+12BCh+var_1250], eax", "mov     eax, [esp+12BCh+eachresult]", "mov     [esp+12BCh+var_1258], eax", "mov     eax, large gs:14h", "mov     [esp+12BCh+var_20], eax", "xor     eax, eax", "call    _authunix_create_default", "mov     [esp+12BCh+sys_auth], eax", "test    sys_auth_0, sys_auth_0", "jz      loc_8209"], ["test    esi, esi", "jz      loc_7BB0"], ["sub     esp, 0Ch", "push    nettype_0; nettype", "call    ___rpc_setconf", "mov     [esp+12CCh+handle], eax", "add     esp, 10h", "test    handle_0, handle_0", "jz      loc_8216"], ["lea     handle_0, [esp+12BCh+fdlist]", "mov     [esp+12BCh+udpbufsz], 0", "mov     [esp+12BCh+outbuf_pmap], 0", "mov     [esp+12BCh+pmap_flag], 0", "mov     [esp+12BCh+fdlistno], 0", "mov     [esp+12BCh+outlen], 0", "mov     [esp+12BCh+stat], 0", "lea     edi, [esp+12BCh+si_0]", "mov     [esp+12BCh+var_12B8], eax", "lea     esi, [esi+0]"], ["sub     esp, 0Ch", "mov     eax, [esp+12C8h+handle]", "push    eax; vhandle", "call    ___rpc_getconf", "add     esp, 10h", "mov     esi, eax", "test    nconf, nconf", "jz      loc_78D0"], ["cmp     dword ptr [esi+4], 1", "jnz     short loc_7758"], ["mov     ebp, [esp+12BCh+fdlistno]", "cmp     ebp, 13h", "ja      loc_7940"], ["push    edx", "push    edx", "push    edi; sip", "push    esi; nconf", "call    ___rpc_nconf2sockinfo", "add     esp, 10h", "test    eax, eax", "jz      short loc_7758"], ["lea     eax, [ebp+ebp*4+0]", "lea     edx, [esp+12BCh+var_1C]", "shl     eax, 5", "mov     ecx, [esp+12BCh+var_12B8]", "mov     [esp+12BCh+fdlistno], ebp", "lea     ebp, [edx+eax]", "lea     eax, [ecx+eax+98h]", "mov     [ebp-0FE8h], eax", "mov     dword ptr [ebp-0FECh], 0", "push    eax; list", "mov     eax, [esp+12C0h+si_0.si_socktype]", "push    eax; socktype", "mov     eax, [esp+12C4h+si_0.si_proto]", "push    eax; proto", "mov     eax, [esp+12C8h+si_0.si_af]", "push    eax; af_0", "call    __rpc_getbroadifs", "add     esp, 10h", "test    eax, eax", "jz      loc_7758"], ["push    edx", "mov     ecx, [esp+12C0h+si_0.si_proto]", "push    ecx; protocol", "mov     eax, [esp+12C4h+si_0.si_socktype]", "push    eax; type", "mov     eax, [esp+12C8h+si_0.si_af]", "push    eax; domain", "call    _socket", "add     esp, 10h", "mov     edx, eax", "test    fd_0, fd_0", "js      loc_78C0"], ["mov     ecx, [esp+12BCh+si_0.si_proto]", "mov     fd_0, [esp+12BCh+si_0.si_af]", "mov     [esp+12BCh+np], fd_0", "sub     esp, 0Ch", "mov     [ebp-107Ch], ecx", "mov     [ebp-1084h], fd_0", "mov     [ebp-1078h], nconf", "mov     [ebp-1080h], eax", "push    eax; af_0", "call    ___rpc_get_a_size", "mov     [ebp-1074h], eax", "mov     eax, [esp+12CCh+fdlistno]", "mov     edx, [esp+12CCh+np]", "mov     [esp+eax*8+12CCh+pfd.fd], edx", "mov     [esp+eax*8+12CCh+pfd.events], 0C3h", "add     esp, 0Ch", "mov     [ebp-1084h], edx", "push    0; size", "mov     eax, [esp+12C4h+si_0.si_proto]", "push    eax; proto", "mov     eax, [esp+12C8h+si_0.si_af]", "push    eax; af_0", "call    ___rpc_get_t_size", "add     esp, 10h", "mov     nconf, eax", "mov     [ebp-1070h], eax", "mov     edx, [esp+12BCh+np]", "cmp     [esp+12BCh+outlen], eax", "jnb     short loc_78A4"], ["mov     [esp+12BCh+outlen], eax"], ["cmp     [esp+12BCh+si_0.si_af], 2", "jz      loc_7B70"], ["mov     eax, [esp+12BCh+fdlistno]", "inc     eax", "mov     [esp+12BCh+fdlistno], eax", "jmp     loc_7758"], ["mov     [esp+12BCh+stat], 3", "jmp     loc_7758"], ["mov     nconf, [esp+12BCh+fdlistno]", "test    eax, eax", "jnz     short loc_7940"], ["mov     ebp, [esp+12BCh+stat]", "test    ebp, ebp", "jnz     short loc_78E8"], ["mov     [esp+12BCh+stat], 11h"], ["mov     eax, [esp+12BCh+outbuf_pmap]", "test    eax, eax", "jz      short loc_7900"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h", "lea     esi, [esi+0]"], ["sub     esp, 0Ch", "mov     edx, [esp+12C8h+sys_auth]", "mov     eax, [edx+20h]", "push    edx", "call    dword ptr [eax+10h]", "pop     eax", "mov     edx, [esp+12C8h+handle]", "push    edx; vhandle", "call    ___rpc_endconf", "add     esp, 10h"], ["mov     eax, [esp+12BCh+var_20]", "xor     eax, large gs:14h", "jnz     loc_8570"], ["mov     eax, [esp+12BCh+stat]", "add     esp, 12ACh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edi, [esp+12BCh+outlen]", "test    edi, edi", "jnz     short loc_79B1"], ["mov     nconf, [esp+12BCh+stat]", "test    esi, esi", "jz      loc_7BBB"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+12BCh+outbuf_pmap]", "test    eax, eax", "jz      short loc_796C"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["mov     eax, [esp+12BCh+fdlistno]", "lea     esi, [esp+12BCh+fdlist.nal]", "lea     eax, [eax+eax*4]", "shl     eax, 5", "lea     edi, [esp+eax+12BCh+fdlist.nal]", "lea     esi, [esi+0]"], ["sub     esp, 0Ch", "mov     ecx, [esi-98h]", "push    ecx; fd", "call    _close", "mov     [esp+12CCh+addr], esi; list", "add     esi, 0A0h", "call    __rpc_freebroadifs", "add     esp, 10h", "cmp     esi, edi", "jnz     short loc_7988"], ["jmp     loc_7900"], ["sub     esp, 0Ch", "mov     edi, [esp+12C8h+outlen]", "push    edi; size", "call    _malloc", "mov     [esp+12CCh+addr], edi; size", "mov     ebp, eax", "mov     [esp+12CCh+inbuf], eax", "call    _malloc", "mov     [esp+12CCh+outbuf], eax", "mov     nconf, outbuf_0", "add     esp, 10h", "test    inbuf_0, inbuf_0", "jz      loc_84CD"], ["test    outbuf_0, outbuf_0", "jz      done_broad"], ["push    eax", "push    eax", "push    0; tz", "lea     eax, [esp+12C8h+t]", "push    eax; tv", "call    _gettimeofday", "call    _getpid", "mov     ecx, [esp+12CCh+t.tv_usec]", "mov     edx, eax", "mov     eax, [esp+12CCh+t.tv_sec]", "xor     eax, ecx", "mov     ecx, [esp+12CCh+sys_auth]", "xor     eax, edx", "mov     [esp+12CCh+si_0.si_proto], 0", "mov     [esp+12CCh+si_0.si_af], eax", "mov     eax, [esp+12CCh+prog]", "mov     [esp+12CCh+barg.prog], eax", "mov     eax, [esp+12CCh+vers]", "mov     [esp+12CCh+barg.vers], eax", "mov     eax, [esp+12CCh+proc]", "mov     [esp+12CCh+barg.proc], eax", "mov     eax, [esp+12CCh+pollretval]", "mov     [esp+12CCh+barg.args.args_val], eax", "mov     eax, [esp+12CCh+var_129C]", "mov     [esp+12CCh+barg.xdr_args], eax", "lea     eax, [esp+12CCh+uaddress]", "mov     [esp+12CCh+uaddrp], uaddrp_0", "mov     [esp+12CCh+bres.addr], uaddrp_0", "mov     uaddrp_0, [esp+12CCh+var_1250]", "mov     [esp+12CCh+si_0.si_socktype], 2", "mov     [esp+12CCh+bres.results.results_val], eax", "mov     eax, [esp+12CCh+var_124C]", "mov     [esp+12CCh+bres.xdr_res], eax", "mov     eax, [ecx]", "mov     [esp+12CCh+var_1168], eax", "mov     eax, [ecx+4]", "mov     [esp+12CCh+var_1164], eax", "mov     eax, [ecx+8]", "mov     [esp+12CCh+var_1160], eax", "mov     eax, [ecx+0Ch]", "mov     [esp+12CCh+si_0.si_alen], 186A0h", "mov     [esp+12CCh+var_1170], 3", "mov     [esp+12CCh+var_116C], 5", "mov     [esp+12CCh+var_115C], eax", "mov     eax, [ecx+10h]", "mov     [esp+12CCh+var_1158], eax", "mov     eax, [ecx+14h]", "mov     [esp+12CCh+var_1154], eax", "push    0; xop", "push    edi; size", "push    outbuf_0; addr", "lea     outbuf_0, [esp+12D8h+xdr_stream]", "mov     [esp+12D8h+xdrs], xdrs_0", "push    xdrs_0; xdrs", "call    _xdrmem_create", "add     esp, 18h", "lea     eax, [esp+12C4h+si_0]", "mov     [esp+12C4h+rmsg], eax", "push    eax; cmsg", "push    xdrs_0; xdrs", "call    _xdr_callmsg", "add     esp, 10h", "test    eax, eax", "jnz     loc_7BC8"], ["mov     [esp+12BCh+stat], 1"], ["sub     esp, 0Ch", "mov     esi, [esp+12C8h+inbuf]", "push    esi; ptr", "call    _free", "add     esp, 10h"], ["mov     eax, [esp+12BCh+outbuf]", "test    eax, eax", "jz      loc_7958"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h", "jmp     loc_7958"], ["cmp     [esp+12BCh+si_0.si_proto], 11h", "jnz     loc_78B2"], ["mov     [esp+12BCh+pmap_flag], edx", "sub     esp, 0Ch", "push    esi; size", "call    _malloc", "mov     [esp+12CCh+outbuf_pmap], eax", "add     esp, 10h", "test    outbuf_pmap_0, outbuf_pmap_0", "mov     edx, [esp+12BCh+pmap_flag]", "jz      loc_8535"], ["mov     [esp+12BCh+udpbufsz], udpbufsz_0", "mov     [esp+12BCh+pmap_flag], 1", "jmp     loc_78B2"], ["lea     esi, (aDatagramN - 2BB6Ch)[ebx]; \"datagram_n\"", "jmp     loc_76FB"], ["mov     [esp+12BCh+stat], 3", "jmp     loc_7958"], ["push    eax", "push    eax", "lea     eax, [esp+12C4h+barg]", "push    eax; p", "mov     xdrs_0, [esp+12C8h+xdrs]", "push    esi; xdrs", "call    _xdr_rpcb_rmtcallargs", "add     esp, 10h", "test    eax, eax", "jz      loc_7B35"], ["sub     esp, 0Ch", "push    esi", "mov     eax, [esp+12CCh+xdr_stream.x_ops]", "call    dword ptr [eax+10h]", "mov     [esp+12CCh+outlen], eax", "mov     outlen_0, [esp+12CCh+xdr_stream.x_ops]", "add     esp, 10h", "mov     eax, [eax+1Ch]", "test    eax, eax", "jz      short loc_7C16"], ["sub     esp, 0Ch", "push    esi", "call    eax", "add     esp, 10h"], ["mov     eax, [esp+12BCh+pmap_flag]", "mov     [esp+12BCh+outlen_pmap], 0", "test    eax, eax", "jnz     loc_8298"], ["mov     eax, [esp+12BCh+waittime]", "cmp     [esp+12BCh+msec], eax", "jg      loc_7B3D"], ["lea     eax, [esp+12BCh+fdlist]", "lea     edx, (aRpcBroadcastEx_0 - 2BB6Ch)[ebx]; \"rpc_broadcast_exp: PMAP Broadcast packe\"...", "mov     [esp+12BCh+var_1244], eax", "mov     eax, [esp+12BCh+fdlistno]", "mov     [esp+12BCh+fmt], edx", "lea     edx, (aClntBcastCanno - 2BB6Ch)[ebx]; \"clnt_bcast: Cannot send broadcast packe\"...", "lea     eax, [eax+eax*4]", "mov     [esp+12BCh+var_1240], edx", "shl     eax, 5", "lea     edx, (aRpcBroadcastEx_1 - 2BB6Ch)[ebx]; \"rpc_broadcast_exp: Broadcast packet sen\"...", "mov     [esp+12BCh+var_1270], edx", "lea     edx, (aRpcBroadcastEx_2 - 2BB6Ch)[ebx]; \"rpc_broadcast_exp: cannot send broadcas\"...", "lea     eax, [esp+eax+12BCh+fdlist]", "mov     [esp+12BCh+format], edx", "mov     [esp+12BCh+var_1288], eax", "lea     eax, (__rpc_lowvers - 2BB6Ch)[ebx]", "mov     [esp+12BCh+var_12B8], eax", "lea     eax, (libtirpc_debug_level - 2BB6Ch)[ebx]", "mov     [esp+12BCh+var_129C], eax", "mov     [esp+12BCh+udpbufsz], eax", "mov     [esp+12BCh+var_127C], eax", "mov     [esp+12BCh+var_126C], eax", "lea     eax, (aClntBcastCanno_0 - 2BB6Ch)[ebx]; \"clnt_bcast: Cannot receive reply to bro\"...", "lea     edx, (aRpcBroadcastEx_3 - 2BB6Ch)[ebx]; \"rpc_broadcast_exp: sendto failed: errno\"...", "mov     [esp+12BCh+var_1264], eax", "lea     eax, (aRpcBroadcastEx_4 - 2BB6Ch)[ebx]; \"rpc_broadcast_exp: response for %s\\n\"", "mov     [esp+12BCh+var_1248], eax", "mov     eax, ds:(_null_auth_ptr - 2BB6Ch)[ebx]", "mov     [esp+12BCh+var_1230], eax", "mov     [esp+12BCh+var_1228], eax", "mov     eax, ds:(xdr_rpcb_rmtcallres_ptr - 2BB6Ch)[ebx]", "mov     [esp+12BCh+var_1254], edx", "mov     [esp+12BCh+var_1224], eax", "mov     eax, ds:(xdr_void_ptr - 2BB6Ch)[ebx]", "mov     edx, ds:(xdr_rmtcallres_ptr - 2BB6Ch)[ebx]", "mov     [esp+12BCh+var_1220], eax", "mov     [esp+12BCh+var_121C], eax", "mov     [esp+12BCh+var_1218], eax", "mov     [esp+12BCh+var_1214], eax", "lea     eax, (aRpcBroadcastEx_5 - 2BB6Ch)[ebx]; \"rpc_broadcast_exp: uaddr %s\\n\"", "mov     [esp+12BCh+var_122C], edx", "mov     [esp+12BCh+var_1210], eax", "lea     esi, [esi+0]"], ["mov     ebp, [esp+12BCh+var_1244]", "mov     edi, ebp", "jmp     short loc_7D48"], ["mov     [esp+12BCh+stat], 3"], ["add     edi, 0A0h", "cmp     [esp+12BCh+var_1288], edi", "jz      loc_7E4A"], ["mov     eax, [esp+12BCh+outlen]", "cmp     [edi+14h], eax", "jb      short loc_7D30"], ["mov     ebp, [edi+98h]", "test    bip, bip", "jz      short loc_7D38"], ["mov     eax, edi", "mov     edi, bip", "mov     bip, eax", "jmp     short loc_7DA6"], ["mov     eax, [esp+12BCh+pmap_flag]", "test    eax, eax", "jz      short loc_7D7A"], ["cmp     dword ptr [ebp+8], 11h", "jz      loc_7FBD"], ["mov     eax, [esp+12BCh+var_129C]", "cmp     dword ptr [eax], 2", "jle     short loc_7D98"], ["push    eax", "push    eax", "mov     eax, [ebp+0Ch]", "mov     eax, [eax]", "push    eax", "mov     eax, [esp+12C8h+fmt]", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 10h"], ["mov     bip, [bip+84h]", "test    bip, bip", "jz      loc_7E38"], ["push    eax", "lea     esi, [bip+4]", "push    bip; bip", "mov     eax, [ebp+0]", "push    eax; s", "mov     eax, [ebp+4]", "push    eax; af_0", "call    __rpc_broadenable", "mov     eax, [esp+12CCh+var_12B8]", "add     esp, 10h", "mov     eax, [eax]", "test    eax, eax", "jnz     short loc_7D68"], ["push    eax", "push    eax", "mov     eax, [ebp+10h]", "push    eax; addr_len", "push    addr_0; addr", "push    0; flags", "mov     edx, [esp+12D0h+outlen]", "push    edx; n", "mov     ecx, [esp+12D4h+outbuf]", "mov     eax, [ebp+0]", "push    ecx; buf", "push    eax; fd", "call    _sendto", "add     esp, 20h", "cmp     eax, [esp+12BCh+outlen]", "jz      loc_7F90"], ["mov     eax, [esp+12BCh+var_127C]", "mov     eax, [eax]", "test    eax, eax", "jle     short loc_7E0F"], ["call    ___errno_location", "push    esi", "push    esi", "mov     eax, [eax]", "push    eax", "mov     eax, [esp+12C8h+var_1254]", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 10h"], ["sub     esp, 0Ch", "mov     ecx, [esp+12C8h+format]", "push    ecx; format", "call    _warnx", "mov     bip, [bip+84h]", "add     esp, 10h", "test    edi, edi", "mov     [esp+12BCh+stat], 3", "jnz     loc_7DA6"], ["lea     esi, [esi+0]"], ["mov     bip, ebp", "add     edi, 0A0h", "cmp     [esp+12BCh+var_1288], edi", "jnz     loc_7D48"], ["mov     ebp, [esp+12BCh+var_1258]", "test    ebp, ebp", "jz      loc_81FC"], ["lea     eax, [esp+12BCh+pfd]", "mov     [esp+12BCh+var_1268], eax"], ["push    0A0h", "mov     ecx, [esp+12C0h+msec]", "push    ecx", "mov     esi, [esp+12C4h+fdlistno]", "push    esi", "mov     edi, [esp+12C8h+var_1268]", "push    edi", "call    ___poll_chk", "mov     [esp+12CCh+pollretval], eax", "add     esp, 10h", "cmp     pollretval_0, 0FFFFFFFFh", "jz      short loc_7E61"], ["test    pollretval_0, pollretval_0", "jz      loc_8048"], ["jle     loc_7F60"], ["lea     esi, [esp+12BCh+fdlist.raddr]", "xor     edi, edi", "mov     ebp, esi", "mov     [esp+12BCh+np], edi", "mov     esi, [esp+12BCh+var_1268]", "jmp     short loc_7ED6"], ["mov     dword ptr [esi+i*8], 0FFFFFFFFh"], ["inc     i", "add     ebp, 0A0h", "cmp     [esp+12BCh+fdlistno], i", "jbe     loc_7F60"], ["mov     ecx, [esp+12BCh+pollretval]", "cmp     [esp+12BCh+np], ecx", "jge     loc_7F60"], ["mov     ax, [esi+i*8+6]", "test    ax, ax", "jz      short loc_7EB7"], ["mov     edx, [esp+12BCh+np]", "inc     edx", "test    al, 20h", "mov     [esp+12BCh+np], edx", "jnz     short loc_7EB0"], ["mov     eax, [esp+12BCh+var_126C]", "cmp     dword ptr [eax], 2", "jg      loc_8028"], ["lea     eax, [ebp-8]", "mov     [esp+12BCh+addr_len], eax"], ["push    eax", "push    eax", "mov     eax, [esp+12C4h+addr_len]", "push    eax; addr_len", "push    ebp; addr", "push    0; flags", "mov     eax, [ebp-4]", "push    eax; n", "mov     eax, [esp+12D4h+inbuf]", "mov     edx, [ebp-18h]", "push    eax; buf", "push    edx; fd", "call    _recvfrom", "add     esp, 20h", "test    inlen_0, inlen_0", "jns     loc_8058"], ["call    ___errno_location", "cmp     dword ptr [eax], 4", "jz      short loc_7F01"], ["sub     esp, 0Ch", "inc     i", "add     ebp, 0A0h", "mov     eax, [esp+12C8h+var_1264]", "push    eax; format", "call    _warnx", "add     esp, 10h", "mov     [esp+12BCh+stat], 4", "cmp     [esp+12BCh+fdlistno], i", "ja      loc_7EC8"], ["lea     esi, [esi+0]", "nop"], ["mov     ebp, [esp+12BCh+msec]", "add     ebp, ebp", "mov     [esp+12BCh+msec], ebp", "mov     eax, [esp+12BCh+msec]", "cmp     [esp+12BCh+waittime], eax", "jge     loc_7D28"], ["jmp     loc_7B3D"], ["mov     eax, [esp+12BCh+var_12B8]", "mov     edx, [eax]", "test    edx, edx", "jnz     loc_7D68"], ["mov     eax, [esp+12BCh+udpbufsz]", "cmp     dword ptr [eax], 2", "jg      short loc_8008"], ["mov     eax, [esp+12BCh+pmap_flag]", "test    eax, eax", "jz      loc_7D98"], ["cmp     dword ptr [ebp+8], 11h", "jnz     loc_7D98"], ["push    eax", "push    eax", "mov     edx, [ebp+10h]", "push    edx; addr_len", "push    addr_0; addr", "push    0; flags", "mov     addr_0, [esp+12D0h+outlen_pmap]", "push    esi; n", "mov     ecx, [esp+12D4h+outbuf_pmap]", "mov     eax, [ebp+0]", "push    ecx; buf", "push    eax; fd", "call    _sendto", "add     esp, 20h", "cmp     eax, esi", "jz      loc_7D7A"], ["sub     esp, 0Ch", "mov     eax, [esp+12C8h+var_1240]", "push    eax; format", "call    _warnx", "add     esp, 10h", "mov     [esp+12BCh+stat], 3", "jmp     loc_7D98"], ["push    eax", "push    eax", "mov     eax, [ebp+0Ch]", "mov     eax, [eax]", "push    eax", "mov     eax, [esp+12C8h+var_1270]", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "jmp     loc_7D68"], ["push    ecx", "push    ecx", "mov     eax, [ebp-0Ch]", "mov     eax, [eax]", "push    eax", "mov     eax, [esp+12C8h+var_1248]", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "jmp     loc_7EFA"], ["mov     [esp+12BCh+stat], 5", "jmp     loc_7F60"], ["cmp     inlen_0, 3", "jle     loc_7EB7"], ["mov     edx, [esp+12BCh+inbuf]", "mov     ecx, [esp+12BCh+outbuf]", "mov     edx, [edx]", "cmp     edx, [ecx]", "jz      loc_83C7"], ["mov     ecx, [esp+12BCh+pmap_flag]", "test    ecx, ecx", "jz      loc_7EB7"], ["mov     ecx, [esp+12BCh+outbuf_pmap]", "cmp     edx, [ecx]", "jnz     loc_7EB7"], ["mov     ecx, [esp+12BCh+var_1230]", "mov     esi, ebp", "mov     ebp, i", "mov     i, [esp+12BCh+pmap_flag]", "mov     edx, [ecx]", "mov     [esp+12BCh+si_0.si_alen], edx", "mov     edx, [ecx+4]", "mov     [esp+12BCh+var_1170], edx", "mov     edx, [ecx+8]", "mov     [esp+12BCh+var_116C], edx", "lea     edx, [esp+12BCh+bres_pmap]", "mov     [esp+12BCh+var_1164], edx", "mov     edx, [esp+12BCh+var_122C]", "mov     [esp+12BCh+var_1160], edx"], ["push    1; xop", "push    inlen_0; size", "mov     inlen_0, [esp+12C4h+inbuf]", "push    eax; addr", "mov     eax, [esp+12C8h+xdrs]", "push    eax; xdrs", "call    _xdrmem_create", "pop     eax", "pop     edx", "mov     ecx, [esp+12C4h+rmsg]", "push    ecx; rmsg", "mov     eax, [esp+12C8h+xdrs]", "push    eax; xdrs", "call    _xdr_replymsg", "add     esp, 10h", "test    eax, eax", "jz      loc_8234"], ["mov     eax, [esp+12BCh+si_0.si_socktype]", "or      eax, [esp+12BCh+var_1168]", "jnz     loc_83B0"], ["test    [esp+12BCh+pmap_flag], pmap_reply_flag", "jnz     loc_8431"], ["mov     eax, [esp+12BCh+var_126C]", "cmp     dword ptr [eax], 2", "jg      loc_8412"], ["push    edi", "push    edi", "lea     edi, [i+i*4+0]", "shl     edi, 5", "mov     eax, [esp+12C4h+uaddrp]", "push    eax; uaddr", "lea     eax, [esp+12C8h+var_1C]", "add     edi, eax", "mov     eax, [edi-1078h]", "push    eax; nconf", "call    _uaddr2taddr", "add     esp, 10h", "mov     edx, eax", "test    np_0, np_0", "jz      loc_84DA"], ["push    eax", "lea     eax, [i+i*4+0]", "shl     eax, 5", "mov     eax, [esp+eax+12C0h+fdlist.nconf]", "push    eax", "push    np_0", "mov     eax, [esp+12C8h+var_1250]", "mov     [esp+12C8h+np], np_0", "push    eax", "mov     eax, [esp+12CCh+var_1258]", "call    eax", "mov     edx, [esp+12CCh+np]", "mov     [esp+12CCh+addr], edx; ptr", "mov     esi, eax", "call    _free", "add     esp, 10h"], ["mov     eax, [esp+12BCh+var_1218]", "mov     [esp+12BCh+xdr_stream.x_op], 2", "mov     [esp+12BCh+var_1160], eax", "push    eax", "push    eax", "mov     eax, [esp+12C4h+rmsg]", "push    eax; rmsg", "mov     edi, [esp+12C8h+xdrs]", "push    edi; xdrs", "call    _xdr_replymsg", "pop     eax", "pop     edx", "mov     ecx, [esp+12C4h+var_1250]", "push    ecx", "push    edi", "mov     eax, [esp+12CCh+var_124C]", "call    eax", "mov     eax, [esp+12CCh+xdr_stream.x_ops]", "mov     eax, [eax+1Ch]", "add     esp, 10h", "test    eax, eax", "jz      short loc_81F4"], ["sub     esp, 0Ch", "push    edi", "call    eax", "add     esp, 10h"], ["test    done, done", "jz      loc_7E61"], ["mov     [esp+12BCh+stat], 0", "jmp     loc_7B3D"], ["mov     [esp+12BCh+stat], 0Ch", "jmp     loc_791C"], ["sub     esp, 0Ch", "mov     edx, [esp+12C8h+sys_auth]", "mov     handle_0, [edx+20h]", "push    edx", "call    dword ptr [eax+10h]", "add     esp, 10h", "mov     [esp+12BCh+stat], 11h", "jmp     loc_791C"], ["mov     [esp+12BCh+xdr_stream.x_op], 2", "mov     eax, [esp+12BCh+var_1220]"], ["mov     [esp+12BCh+var_1160], eax", "push    edx", "push    edx", "mov     ecx, [esp+12C4h+rmsg]", "push    ecx; rmsg", "mov     esi, [esp+12C8h+xdrs]", "push    esi; xdrs", "call    _xdr_replymsg", "pop     edi", "pop     i", "mov     eax, [esp+12C4h+var_1250]", "push    eax", "push    esi", "mov     eax, [esp+12CCh+var_124C]", "call    eax", "mov     eax, [esp+12CCh+xdr_stream.x_ops]", "mov     eax, [eax+1Ch]", "add     esp, 10h", "test    eax, eax", "jz      loc_7E61"], ["sub     esp, 0Ch", "push    esi", "call    eax", "add     esp, 10h", "jmp     loc_7E61"], ["mov     eax, [esp+12BCh+prog]", "mov     ecx, [esp+12BCh+si_0.si_af]", "mov     [esp+12BCh+barg_pmap.prog], eax", "mov     eax, [esp+12BCh+vers]", "mov     [esp+12BCh+barg_pmap.vers], eax", "mov     eax, [esp+12BCh+proc]", "mov     [esp+12BCh+barg_pmap.proc], eax", "mov     eax, [esp+12BCh+pollretval]", "mov     [esp+12BCh+barg_pmap.args_ptr], eax", "mov     eax, [esp+12BCh+var_129C]", "mov     [esp+12BCh+barg_pmap.xdr_args], eax", "lea     eax, [esp+12BCh+port]", "mov     [esp+12BCh+bres_pmap.port_ptr], eax", "mov     eax, [esp+12BCh+var_124C]", "mov     [esp+12BCh+bres_pmap.xdr_results], eax", "inc     ecx", "mov     eax, [esp+12BCh+var_1250]", "mov     [esp+12BCh+si_0.si_af], ecx", "mov     [esp+12BCh+si_0.si_alen], 186A0h", "mov     [esp+12BCh+var_1170], 2", "mov     [esp+12BCh+var_116C], 5", "mov     [esp+12BCh+bres_pmap.results_ptr], eax", "push    0; xop", "mov     esi, [esp+12C0h+udpbufsz]", "push    esi; size", "mov     edi, [esp+12C4h+outbuf_pmap]", "push    edi; addr", "mov     esi, [esp+12C8h+xdrs]", "push    esi; xdrs", "call    _xdrmem_create", "pop     inbuf_0", "pop     eax", "mov     eax, [esp+12C4h+rmsg]", "push    eax; cmsg", "push    esi; xdrs", "call    _xdr_callmsg", "add     esp, 10h", "test    eax, eax", "jz      loc_7B35"], ["push    edx", "push    edx", "lea     eax, [esp+12C4h+barg_pmap]", "push    eax; crp", "push    esi; xdrs", "call    _xdr_rmtcall_args", "add     esp, 10h", "test    eax, eax", "jz      loc_7B35"], ["sub     esp, 0Ch", "push    esi", "mov     eax, [esp+12CCh+xdr_stream.x_ops]", "call    dword ptr [eax+10h]", "mov     [esp+12CCh+outlen_pmap], eax", "mov     outlen_pmap_0, [esp+12CCh+xdr_stream.x_ops]", "add     esp, 10h", "mov     eax, [eax+1Ch]", "test    eax, eax", "jz      loc_7C2A"], ["sub     esp, 0Ch", "push    esi", "call    eax", "add     esp, 10h", "jmp     loc_7C2A"], ["mov     [esp+12BCh+xdr_stream.x_op], 2", "mov     eax, [esp+12BCh+var_121C]", "jmp     loc_8246"], ["mov     ecx, [esp+12BCh+var_1228]", "mov     esi, ebp", "mov     ebp, i", "xor     i, i", "mov     edx, [ecx]", "mov     [esp+12BCh+si_0.si_alen], edx", "mov     edx, [ecx+4]", "mov     [esp+12BCh+var_1170], edx", "mov     edx, [ecx+8]", "mov     [esp+12BCh+var_116C], edx", "lea     edx, [esp+12BCh+bres]", "mov     [esp+12BCh+var_1164], edx", "mov     edx, [esp+12BCh+var_1224]", "mov     [esp+12BCh+var_1160], edx", "jmp     loc_80D3"], ["push    eax", "push    eax", "mov     eax, [esp+12C4h+uaddrp]", "push    eax", "mov     eax, [esp+12C8h+var_1210]", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "jmp     loc_8135"], ["mov     eax, [esi]", "mov     [esp+12BCh+taddr.buf], esi", "mov     [esp+12BCh+var_1150], eax", "mov     eax, [esi+4]", "mov     [esp+12BCh+var_114C], eax", "mov     eax, [esi+8]", "mov     [esp+12BCh+var_1148], eax", "mov     eax, [esi+0Ch]", "mov     [esp+12BCh+var_1144], eax", "xor     eax, eax", "mov     ax, word ptr [esp+12BCh+port]", "mov     [esp+12BCh+taddr.maxlen], 80h", "rol     ax, 8", "mov     word ptr [esp+12BCh+var_1150+2], ax", "mov     [esp+12BCh+taddr.len], 80h", "mov     sin_0, [esp+12BCh+var_1150]", "mov     [esi], eax", "lea     eax, [i+i*4+0]", "shl     eax, 5", "push    edx", "mov     ecx, [esp+eax+12C0h+fdlist.nconf]", "push    ecx", "lea     eax, [esp+12C4h+taddr]", "push    eax", "mov     esi, [esp+12C8h+var_1250]", "push    esi", "mov     eax, [esp+12CCh+var_1258]", "call    eax", "add     esp, 10h", "mov     esi, eax", "jmp     loc_8199"], ["mov     edi, [esp+12BCh+inbuf]", "test    edi, edi", "jnz     loc_8575"], ["mov     [esp+12BCh+stat], 0Ch", "jmp     loc_7B4D"], ["cmp     word ptr [edi-106Ch], 2", "jnz     short loc_8559"], ["lea     edi, [esp+12BCh+var_1150]", "mov     ecx, 4", "mov     [esp+12BCh+np], edi", "rep movsd", "push    esi", "push    esi", "push    [esp+12C4h+uaddrp]; uaddr", "push    0Ah; af_0", "call    ___rpc_uaddr2taddr_af", "add     esp, 10h", "mov     edx, eax", "test    eax, eax", "jz      short loc_8559"], ["mov     ax, [eax+2]", "mov     ecx, 4", "mov     word ptr [esp+12BCh+var_1150+2], ax", "mov     edi, [edx+8]", "mov     esi, [esp+12BCh+np]", "rep movsd", "mov     dword ptr [edx+4], 10h", "jmp     loc_8168"], ["sub     esp, 0Ch", "push    edx; fd", "call    _close", "add     esp, 10h", "mov     [esp+12BCh+stat], 0Ch", "cmp     [esp+12BCh+fdlistno], 0", "jnz     loc_796C"], ["jmp     loc_7900"], ["mov     [esp+12BCh+xdr_stream.x_op], 2", "mov     eax, [esp+12BCh+var_1214]", "jmp     loc_8246"], ["call    __stack_chk_fail_local"], ["mov     [esp+12BCh+stat], 0Ch", "jmp     loc_7B3D"]], "clnt_dg_freeres": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 138h", "mov     eax, [esp+148h+xdr_res]", "lea     edi, [esp+148h+newmask]", "mov     [esp+148h+var_134], eax", "mov     ebp, [esp+148h+res_ptr]", "mov     eax, large gs:14h", "mov     [esp+148h+var_20], eax", "xor     eax, eax", "mov     eax, [esp+148h+cl_0]", "mov     esi, [eax+8]", "lea     eax, [cu+0A8h]", "mov     [esp+148h+xdrs], eax", "push    edi; set", "call    _sigfillset", "add     esp, 0Ch", "lea     eax, [esp+140h+mask]", "mov     [esp+140h+var_130], eax", "push    eax; oldmask", "push    edi; newmask", "push    2; how", "call    _pthread_sigmask", "lea     edi, (clnt_fd_lock - 2BB6Ch)[ebx]", "mov     [esp+14Ch+mutex], edi; mutex", "call    _pthread_mutex_lock", "jmp     short loc_86B7"], ["lea     eax, [eax+eax*2]", "push    edx", "push    edx", "mov     ecx, ds:(dg_cv - 2BB6Ch)[ebx]", "shl     eax, 4", "push    edi; mutex", "add     eax, ecx", "push    eax; cond", "call    _pthread_cond_wait"], ["mov     eax, [cu]", "mov     edx, ds:(dg_fd_locks - 2BB6Ch)[ebx]", "add     esp, 10h", "mov     edx, [edx+eax*4]", "test    edx, edx", "jnz     short loc_86A0"], ["mov     dword ptr [cu+0A8h], 2", "push    eax", "push    eax", "push    ebp", "mov     edx, [esp+148h+xdrs]", "push    edx", "mov     eax, [esp+14Ch+var_134]", "call    eax", "mov     [esp+14Ch+mutex], edi; mutex", "mov     ebp, eax", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     ecx, [esp+144h+var_130]", "push    ecx; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [cu]", "mov     cu, ds:(dg_cv - 2BB6Ch)[ebx]", "lea     eax, [eax+eax*2]", "shl     eax, 4", "add     eax, esi", "mov     [esp+14Ch+mutex], eax; cond", "call    _pthread_cond_signal", "add     esp, 10h", "mov     eax, [esp+13Ch+var_20]", "xor     eax, large gs:14h", "jnz     short loc_8734"], ["add     esp, 12Ch", "mov     eax, dummy", "pop     ebx", "pop     esi", "pop     edi", "pop     dummy", "retn"], ["call    __stack_chk_fail_local"]], "clnt_dg_destroy": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 148h", "mov     eax, [esp+158h+cl_0]", "lea     esi, [esp+158h+newmask]", "mov     [esp+158h+ptr], eax", "mov     ebp, [eax+8]", "mov     edx, large gs:14h", "mov     [esp+158h+var_20], edx", "xor     edx, edx", "mov     edi, [cu_0+0]", "mov     [esp+158h+cu_fd], edi", "push    esi; set", "call    _sigfillset", "add     esp, 0Ch", "lea     eax, [esp+150h+mask]", "mov     [esp+150h+var_138], eax", "push    eax; oldmask", "push    esi; newmask", "push    2; how", "call    _pthread_sigmask", "lea     esi, (clnt_fd_lock - 2BB6Ch)[ebx]", "mov     [esp+15Ch+mutex], esi; mutex", "call    _pthread_mutex_lock", "lea     eax, [cu_fd_0+cu_fd_0*2]", "shl     eax, 4", "mov     [esp+15Ch+var_13C], eax", "mov     eax, ds:(dg_fd_locks - 2BB6Ch)[ebx]", "add     esp, 10h", "mov     eax, [eax+cu_fd_0*4]", "test    eax, eax", "jz      short loc_87F5"], ["shl     cu_fd_0, 2", "mov     [esp+14Ch+cu], cu_0", "mov     cu_0, [esp+14Ch+var_13C]", "xchg    ax, ax"], ["push    eax", "push    eax", "mov     eax, ds:(dg_cv - 2BB6Ch)[ebx]", "push    esi; mutex", "add     eax, ebp", "push    eax; cond", "call    _pthread_cond_wait", "mov     eax, ds:(dg_fd_locks - 2BB6Ch)[ebx]", "add     esp, 10h", "mov     eax, [eax+edi]", "test    eax, eax", "jnz     short loc_87D0"], ["mov     ebp, [esp+14Ch+cu]"], ["mov     eax, [ebp+4]", "test    eax, eax", "jnz     loc_88C8"], ["mov     eax, [ebp+0ACh]", "mov     eax, [eax+1Ch]", "test    eax, eax", "jz      short loc_881C"], ["sub     esp, 0Ch", "lea     edx, [ebp+0A8h]", "push    edx", "call    eax", "add     esp, 10h"], ["sub     esp, 0Ch", "push    ebp; ptr", "call    _free", "mov     eax, [esp+15Ch+ptr]", "add     esp, 10h", "mov     eax, [eax+0Ch]", "test    eax, eax", "jz      short loc_8838"], ["cmp     byte ptr [eax], 0", "jnz     short loc_88B0"], ["mov     eax, [esp+14Ch+ptr]", "mov     eax, [eax+10h]", "test    eax, eax", "jz      short loc_8848"], ["cmp     byte ptr [eax], 0", "jnz     short loc_88A0"], ["sub     esp, 0Ch", "mov     eax, [esp+158h+ptr]", "push    eax; ptr", "call    _free", "mov     [esp+15Ch+mutex], esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     edx, [esp+154h+var_138]", "push    edx; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [esp+15Ch+var_13C]", "mov     ecx, ds:(dg_cv - 2BB6Ch)[ebx]", "add     eax, ecx", "mov     [esp+15Ch+mutex], eax; cond", "call    _pthread_cond_signal", "add     esp, 10h", "mov     eax, [esp+14Ch+var_20]", "xor     eax, large gs:14h", "jnz     short loc_88DD"], ["add     esp, 13Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h", "jmp     short loc_8848"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h", "jmp     loc_8838"], ["sub     esp, 0Ch", "mov     edi, [esp+158h+cu_fd]", "push    edi; fd", "call    _close", "add     esp, 10h", "jmp     loc_8800"], ["call    __stack_chk_fail_local"]], "clnt_dg_call": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 208h", "mov     ecx, [esp+218h+xargs]", "mov     eax, [esp+218h+cl_0]", "mov     [esp+218h+timeout.tv_usec], ecx", "mov     ecx, [esp+218h+argsp]", "mov     [esp+218h+var_1E4], ecx", "mov     ecx, [esp+218h+xresults]", "mov     [esp+218h+var_1CC], ecx", "mov     esi, [esp+218h+utimeout.tv_sec]", "mov     ecx, [esp+218h+resultsp]", "mov     [esp+218h+var_1F0], eax", "mov     [esp+218h+var_1C8], ecx", "mov     [esp+218h+outlen], esi", "mov     esi, large gs:14h", "mov     [esp+218h+var_20], esi", "xor     esi, esi", "lea     esi, [esp+218h+newmask]", "mov     edi, [esp+218h+utimeout.tv_usec]", "mov     ebp, [eax+8]", "push    esi; set", "call    _sigfillset", "add     esp, 0Ch", "lea     eax, [esp+210h+mask]", "mov     [esp+210h+var_1D4], eax", "push    eax; oldmask", "push    esi; newmask", "push    2; how", "call    _pthread_sigmask", "lea     esi, (clnt_fd_lock - 2BB6Ch)[ebx]", "mov     [esp+21Ch+mutex], esi; mutex", "call    _pthread_mutex_lock", "jmp     short loc_89AF"], ["lea     eax, [eax+eax*2]", "push    ecx", "push    ecx", "mov     edx, ds:(dg_cv - 2BB6Ch)[ebx]", "shl     eax, 4", "push    esi; mutex", "add     eax, edx", "push    eax; cond", "call    _pthread_cond_wait"], ["mov     eax, [cu+0]", "mov     edx, ds:(dg_fd_locks - 2BB6Ch)[ebx]", "add     esp, 10h", "lea     edx, [edx+eax*4]", "mov     ecx, [edx]", "test    ecx, ecx", "jnz     short loc_8998"], ["sub     esp, 0Ch", "mov     dword ptr [edx], 1", "push    esi; mutex", "call    _pthread_mutex_unlock", "mov     eax, [cu+98h]", "mov     [esp+21Ch+cmsg], eax", "add     esp, 10h", "inc     eax", "jz      loc_8D00"], ["mov     eax, [cu+94h]", "mov     [esp+20Ch+timeout.tv_sec], eax"], ["mov     eax, [esp+20Ch+timeout.tv_sec]", "mov     edi, 10624DD3h", "lea     eax, [eax+eax*4]", "lea     eax, [eax+eax*4]", "lea     ecx, [eax+eax*4]", "mov     eax, [esp+20Ch+cmsg]", "imul    edi", "sar     edx, 6", "mov     eax, [esp+20Ch+cmsg]", "sar     eax, 1Fh", "sub     edx, eax", "lea     eax, [edx+ecx*8]", "mov     [esp+20Ch+total_time], eax", "mov     total_time_0, [cu+8Ch]", "lea     eax, [eax+eax*4]", "lea     eax, [eax+eax*4]", "lea     ecx, [eax+eax*4]", "mov     eax, edi", "imul    dword ptr [cu+90h]", "mov     eax, [cu+90h]", "mov     edi, edx", "sar     eax, 1Fh", "mov     edx, [cu+0D4h]", "sar     edi, 6", "sub     edi, eax", "test    edx, edx", "lea     eax, [edi+ecx*8]", "mov     [esp+20Ch+nextsend_time], eax", "mov     nextsend_time_0, [cu+0D8h]", "jz      short loc_8A78"], ["test    eax, eax", "jz      loc_8D18"], ["mov     [esp+20Ch+salen], 0", "mov     [esp+20Ch+sa], 0", "jmp     short call_again"], ["test    eax, eax", "jnz     short loc_8A62"], ["lea     eax, [cu+8]", "mov     [esp+20Ch+sa], eax", "mov     sa_0, [cu+88h]", "mov     [esp+20Ch+salen], eax"], ["mov     eax, [esp+20Ch+timeout.tv_usec]", "lea     edi, [cu+0A8h]", "test    eax, eax", "mov     eax, ds:(_null_auth_ptr - 2BB6Ch)[ebx]", "mov     [esp+20Ch+var_1C4], eax", "mov     eax, ds:(xdr_void_ptr - 2BB6Ch)[ebx]", "mov     [esp+20Ch+tv], 0", "mov     [esp+20Ch+nrefreshes], 2", "mov     [esp+20Ch+outlen], 0", "mov     [esp+20Ch+var_1C0], eax", "setz    byte ptr [esp+20Ch+var_1D8+3]"], ["cmp     dword ptr [cu+0D0h], 1", "jnz     short loc_8ADE"], ["cmp     byte ptr [esp+20Ch+var_1D8+3], 0", "jnz     get_reply"], ["mov     dword ptr [cu+0A8h], 0", "push    ecx", "push    ecx", "mov     edx, [cu+0C0h]", "mov     eax, [cu+0ACh]", "push    edx", "push    edi", "call    dword ptr [eax+14h]", "mov     edx, [cu+0C8h]", "mov     eax, [edx]", "bswap   eax", "inc     eax", "bswap   xid", "mov     [edx], eax", "mov     eax, [esp+21Ch+proc]", "mov     [esp+21Ch+msg.msg_name], eax", "pop     ecx", "pop     eax", "mov     eax, [cu+0ACh]", "lea     edx, [esp+214h+msg]", "push    edx", "push    edi", "call    dword ptr [eax+4]", "add     esp, 10h", "test    eax, eax", "jz      loc_8DDD"], ["mov     eax, [esp+20Ch+var_1F0]", "mov     eax, [eax]", "push    edx", "push    edx", "mov     edx, [eax+20h]", "push    edi", "push    eax", "call    dword ptr [edx+4]", "add     esp, 10h", "test    eax, eax", "jz      loc_8DDD"], ["mov     eax, [esp+20Ch+var_1F0]", "mov     ecx, [esp+20Ch+var_1E4]", "mov     eax, [eax]", "mov     edx, [eax+20h]", "push    ecx", "mov     ecx, [esp+210h+timeout.tv_usec]", "push    ecx", "push    edi", "push    eax", "call    dword ptr [edx+14h]", "add     esp, 10h", "test    eax, eax", "jz      loc_8DDD"], ["sub     esp, 0Ch", "mov     eax, [cu+0ACh]", "push    edi", "call    dword ptr [eax+10h]", "mov     [esp+21Ch+outlen], eax", "add     esp, 10h", "mov     outlen_0, [esp+20Ch+timeout.tv_sec]", "or      eax, [esp+20Ch+cmsg]", "jz      loc_8E2A"], ["mov     eax, [esp+20Ch+total_time]", "test    eax, eax", "jle     loc_8E2A"], ["mov     eax, [cu+8Ch]", "mov     edx, 10624DD3h", "lea     eax, [eax+eax*4]", "lea     eax, [eax+eax*4]", "lea     ecx, [eax+eax*4]", "mov     eax, edx", "imul    dword ptr [cu+90h]", "sar     edx, 6", "mov     eax, [cu+90h]", "sar     eax, 1Fh", "sub     edx, eax", "lea     eax, [edx+ecx*8]", "mov     [esp+20Ch+nextsend_time], eax", "push    eax", "push    eax", "mov     eax, [esp+214h+salen]", "mov     edx, [cu+0C8h]", "push    eax; addr_len", "mov     eax, [esp+218h+sa]", "push    eax; addr", "push    0; flags", "mov     eax, [esp+220h+outlen]", "push    eax; n", "push    edx; buf", "mov     ecx, [cu+0]", "push    ecx; fd", "call    _sendto", "add     esp, 20h", "cmp     eax, [esp+20Ch+outlen]", "jnz     loc_8D53"], ["mov     ecx, [esp+20Ch+var_1C4]", "mov     dword ptr [esp+20Ch+reply_msg.ru+14h], 0", "mov     eax, [ecx]", "mov     dword ptr [esp+20Ch+reply_msg.ru+4], eax", "mov     eax, [ecx+4]", "mov     dword ptr [esp+20Ch+reply_msg.ru+8], eax", "mov     eax, [ecx+8]", "mov     dword ptr [esp+20Ch+reply_msg.ru+0Ch], eax", "mov     eax, [esp+20Ch+var_1C0]", "mov     dword ptr [esp+20Ch+reply_msg.ru+18h], eax", "mov     eax, [cu+0]", "mov     [esp+20Ch+fd.fd], eax", "mov     dword ptr [esp+20Ch+fd.events], 1"], ["mov     ecx, [esp+20Ch+total_time]", "test    ecx, ecx", "jle     short loc_8C8C"], ["mov     eax, [esp+20Ch+total_time]", "mov     ecx, [esp+20Ch+nextsend_time]", "mov     [esp+20Ch+tv], eax", "cmp     eax, ecx", "jg      loc_8DE9"], ["push    ecx", "mov     eax, [esp+210h+tv]", "push    eax; timeout", "push    1; nfds", "lea     eax, [esp+218h+fd]", "push    eax; fds", "call    _poll", "add     esp, 10h", "cmp     eax, 0FFFFFFFFh", "jz      loc_8E05"], ["test    eax, eax", "jz      loc_8DF2"], ["test    byte ptr [esp+20Ch+fd.revents], 8", "jnz     loc_8FAE"], ["lea     eax, [cu+0DCh]", "mov     [esp+20Ch+ret], edi", "mov     [esp+20Ch+cbuf], eax", "jmp     short loc_8CB8"], ["call    ___errno_location", "mov     eax, [eax]", "cmp     eax, 4", "jnz     loc_8F20"], ["mov     edx, [cu+0CCh]", "mov     eax, [cu+0]", "push    ecx", "push    ecx", "push    0; addr_len", "push    0; addr", "push    0; flags", "push    edx; n", "mov     edi, [esp+224h+cbuf]", "push    edi; buf", "push    eax; fd", "call    _recvfrom", "add     esp, 20h", "mov     edi, eax", "test    recvlen, recvlen", "js      short loc_8CA8"], ["mov     edx, recvlen", "mov     edi, [esp+20Ch+ret]", "cmp     recvlen, 3", "jg      loc_8E39"], ["mov     eax, [esp+20Ch+total_time]", "mov     ecx, [esp+20Ch+tv]", "sub     eax, ecx", "mov     [esp+20Ch+total_time], eax", "jmp     send_again"], ["mov     eax, [esp+20Ch+outlen]", "mov     [esp+20Ch+cmsg], edi", "mov     [esp+20Ch+timeout.tv_sec], eax", "jmp     loc_89F1"], ["push    edx", "lea     eax, [cu+8]", "mov     ecx, [cu+88h]", "push    ecx; len", "push    eax; addr", "mov     edi, [cu+0]", "push    edi; fd", "call    _connect", "add     esp, 10h", "test    eax, eax", "js      short loc_8D53"], ["mov     dword ptr [cu+0D8h], 1", "mov     [esp+20Ch+salen], 0", "mov     [esp+20Ch+sa], 0", "jmp     call_again"], ["call    ___errno_location", "mov     eax, [eax]", "mov     dword ptr [cu+9Ch], 3", "mov     [cu+0A0h], eax"], ["sub     esp, 0Ch", "push    esi; mutex", "call    _pthread_mutex_lock", "mov     edx, [cu+0]", "mov     eax, ds:(dg_fd_locks - 2BB6Ch)[ebx]", "mov     dword ptr [eax+edx*4], 0", "mov     [esp+21Ch+mutex], esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     eax, [esp+214h+var_1D4]", "push    eax; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [cu+0]", "mov     edx, ds:(dg_cv - 2BB6Ch)[ebx]", "lea     eax, [eax+eax*2]", "shl     eax, 4", "add     eax, edx", "mov     [esp+21Ch+mutex], eax; cond", "call    _pthread_cond_signal", "mov     eax, [cu+9Ch]", "add     esp, 10h"], ["mov     esi, [esp+20Ch+var_20]", "xor     esi, large gs:14h", "jnz     loc_91EE"], ["add     esp, 1FCh", "pop     ebx", "pop     esi", "pop     edi", "pop     cu", "retn"], ["mov     dword ptr [cu+9Ch], 1", "jmp     short out"], ["mov     [esp+20Ch+tv], ecx", "jmp     loc_8C66"], ["mov     edx, [esp+20Ch+total_time]", "mov     eax, [esp+20Ch+tv]", "sub     edx, eax", "mov     [esp+20Ch+total_time], edx", "jmp     send_again"], ["call    ___errno_location", "cmp     dword ptr [eax], 4", "jz      loc_8C4A"], ["mov     dword ptr [cu+9Ch], 4", "mov     eax, [eax]", "mov     [cu+0A0h], eax", "jmp     out"], ["mov     dword ptr [cu+9Ch], 5", "jmp     out"], ["mov     eax, [cu+0D0h]", "test    eax, eax", "jnz     short loc_8E57"], ["mov     eax, [cu+0C8h]", "mov     eax, [eax]", "cmp     [cu+0DCh], eax", "jnz     loc_8CED"], ["push    1; xop", "push    recvlen; size", "mov     eax, [esp+214h+cbuf]", "push    eax; addr", "lea     eax, [esp+218h+reply_xdrs]", "mov     [esp+218h+cbuf], eax", "push    eax; xdrs", "call    _xdrmem_create", "pop     eax", "pop     edx", "lea     ecx, [esp+214h+reply_msg]", "push    ecx; rmsg", "mov     [esp+218h+ret], ecx", "mov     ecx, [esp+218h+cbuf]", "push    ecx; xdrs", "call    _xdr_replymsg", "add     esp, 10h", "test    ok, ok", "jz      loc_91F3"], ["mov     ok, dword ptr [esp+20Ch+reply_msg.ru]", "mov     ecx, [esp+20Ch+ret]", "or      eax, dword ptr [esp+20Ch+reply_msg.ru+10h]", "jnz     loc_8F48"], ["mov     dword ptr [cu+9Ch], 0"], ["mov     eax, [esp+20Ch+var_1F0]", "mov     eax, [eax]", "push    edx", "push    edx", "mov     edx, [eax+20h]", "lea     ecx, [esp+214h+reply_msg.ru+4]", "mov     [esp+214h+cmsg], ecx", "push    ecx", "push    eax", "call    dword ptr [edx+8]", "add     esp, 10h", "test    eax, eax", "jnz     loc_91AE"], ["mov     dword ptr [cu+9Ch], 7", "mov     dword ptr [cu+0A0h], 6"], ["cmp     dword ptr [esp+20Ch+reply_msg.ru+8], 0", "jz      out"], ["mov     dword ptr [cu+0A8h], 2", "push    ecx", "push    ecx", "push    [esp+214h+cmsg]; struct opaque_auth *", "push    edi; XDR *", "call    _xdr_opaque_auth", "add     esp, 10h", "jmp     out"], ["mov     edx, recvlen", "cmp     eax, 0Bh", "mov     recvlen, [esp+20Ch+ret]", "jz      loc_8E39"], ["mov     [cu+0A0h], eax", "mov     dword ptr [cu+9Ch], 4", "jmp     out"], ["push    eax", "push    eax", "lea     eax, [cu+9Ch]", "push    eax; error", "push    ecx; msg", "mov     [esp+21Ch+ret], ecx", "call    __seterr_reply", "mov     eax, [cu+9Ch]", "add     esp, 10h", "test    eax, eax", "mov     ecx, [esp+20Ch+ret]", "jz      loc_8EB5"], ["mov     edx, [esp+20Ch+nrefreshes]", "test    edx, edx", "jz      out"], ["cmp     eax, 7", "jnz     out"], ["mov     eax, [esp+20Ch+var_1F0]", "mov     eax, [eax]", "push    edx", "push    edx", "mov     edx, [eax+20h]", "push    ecx", "push    eax", "call    dword ptr [edx+0Ch]", "add     esp, 10h", "test    eax, eax", "jz      out"], ["mov     ecx, [esp+20Ch+nrefreshes]", "dec     ecx", "mov     [esp+20Ch+nrefreshes], ecx", "jmp     loc_8ACA"], ["push    edx", "push    edx", "mov     eax, [esp+214h+outlen]", "add     eax, 100h", "push    eax; size", "push    1; nmemb", "call    _calloc", "mov     [esp+21Ch+cbuf], eax", "add     esp, 10h", "test    cbuf_0, cbuf_0", "jz      loc_9195"], ["mov     edx, [esp+20Ch+cbuf]", "mov     cbuf_0, [esp+20Ch+outlen]", "mov     [esp+20Ch+iov.iov_len], eax", "lea     eax, [esp+20Ch+err_addr]", "mov     [esp+20Ch+msg.msg_name], eax", "lea     ecx, [cbuf_0+100h]", "lea     eax, [esp+20Ch+iov]", "mov     [esp+20Ch+msg.msg_control], cbuf_0", "mov     [esp+20Ch+msg.msg_iov], eax", "mov     [esp+20Ch+iov.iov_base], ecx", "mov     [esp+20Ch+s1], ecx", "mov     [esp+20Ch+msg.msg_namelen], 10h", "mov     [esp+20Ch+msg.msg_iovlen], 1", "mov     [esp+20Ch+msg.msg_flags], 0", "mov     [esp+20Ch+msg.msg_controllen], 100h", "push    eax", "push    2000h; flags", "lea     eax, [esp+214h+msg]", "push    eax; message", "mov     eax, [cu+0]", "push    eax; fd", "call    _recvmsg", "add     esp, 10h", "mov     edx, eax", "test    ret_0, ret_0", "js      short loc_9092"], ["push    eax", "push    ret_0; n", "mov     eax, [cu+0C8h]", "mov     [esp+214h+ret], ret_0", "push    eax; s2", "mov     ecx, [esp+218h+s1]", "push    ecx; s1", "call    _memcmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_9092"], ["test    byte ptr [esp+20Ch+msg.msg_flags+1], 20h", "jz      short loc_9092"], ["mov     eax, [esp+20Ch+msg.msg_namelen]", "test    eax, eax", "jnz     short loc_90A7"], ["mov     edx, [esp+20Ch+ret]", "cmp     edx, 0Bh", "jg      short loc_90D1"], ["sub     esp, 0Ch", "mov     eax, [esp+218h+cbuf]", "push    eax; ptr", "call    _free", "add     esp, 10h", "jmp     loc_8C97"], ["cmp     eax, 10h", "jnz     short loc_9092"], ["cmp     [esp+20Ch+err_addr.sin_family], 2", "jnz     short loc_9092"], ["mov     eax, [esp+20Ch+err_addr.sin_addr.s_addr]", "cmp     [cu+0Ch], eax", "jnz     short loc_9092"], ["mov     ax, [cu+0Ah]", "cmp     [esp+20Ch+err_addr.sin_port], ax", "jnz     short loc_9092"], ["mov     edx, [esp+20Ch+msg.msg_controllen]", "cmp     edx, 0Bh", "jbe     short loc_9092"], ["mov     ecx, [esp+20Ch+msg.msg_control]", "add     edx, ecx"], ["test    cmsg_0, cmsg_0", "jz      short loc_9092"], ["cmp     dword ptr [cmsg_0+4], 0", "jnz     short loc_90F6"], ["cmp     dword ptr [cmsg_0+8], 0Bh", "jz      short loc_911F"], ["mov     eax, [cmsg_0]", "cmp     eax, 0Bh", "jbe     short loc_9092"], ["add     eax, 3", "and     eax, 0FFFFFFFCh", "add     cmsg_0, eax", "lea     eax, [ecx+0Ch]", "cmp     edx, eax", "jb      short loc_9092"], ["mov     eax, [ecx]", "add     eax, 3", "and     eax, 0FFFFFFFCh", "add     eax, ecx", "cmp     edx, eax", "jnb     short loc_90E6"], ["jmp     loc_9092"], ["mov     [esp+20Ch+cmsg], cmsg_0", "sub     esp, 0Ch", "push    [esp+218h+cbuf]; ptr", "call    _free", "mov     ecx, [esp+21Ch+cmsg]", "mov     eax, [ecx+0Ch]", "mov     [cu+0A0h], eax", "mov     [esp+21Ch+mutex], esi; mutex", "call    _pthread_mutex_lock", "mov     edx, [cu+0]", "mov     eax, ds:(dg_fd_locks - 2BB6Ch)[ebx]", "mov     dword ptr [eax+edx*4], 0", "mov     [esp+21Ch+mutex], esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "push    [esp+214h+var_1D4]; newmask", "push    2; how", "call    _pthread_sigmask", "imul    eax, [cu+0], 30h ; '0'", "add     eax, ds:(dg_cv - 2BB6Ch)[ebx]", "mov     [esp+21Ch+mutex], eax; cond", "call    _pthread_cond_signal", "mov     dword ptr [cu+9Ch], 4", "add     esp, 10h"], ["mov     eax, 4", "jmp     loc_8DBE"], ["call    ___errno_location", "mov     eax, [eax]", "mov     dword ptr [cu+9Ch], 4", "mov     [cu+0A0h], eax", "jmp     short loc_918B"], ["mov     eax, [esp+20Ch+var_1F0]", "mov     eax, [eax]", "mov     edx, [eax+20h]", "push    [esp+20Ch+var_1C8]", "push    [esp+210h+var_1CC]", "push    [esp+214h+cbuf]", "push    eax", "call    dword ptr [edx+18h]", "add     esp, 10h", "test    eax, eax", "jnz     loc_8EEF"], ["cmp     dword ptr [cu+9Ch], 0", "jnz     loc_8EEF"], ["mov     dword ptr [cu+9Ch], 2", "jmp     loc_8EEF"], ["call    __stack_chk_fail_local"], ["mov     dword ptr [cu+9Ch], 2", "jmp     out"]], "clnt_dg_control": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 138h", "mov     eax, [esp+148h+info]", "lea     edi, [esp+148h+newmask]", "mov     [esp+148h+addr], eax", "mov     esi, [esp+148h+request]", "mov     eax, large gs:14h", "mov     [esp+148h+var_20], eax", "xor     eax, eax", "mov     eax, [esp+148h+cl_0]", "mov     ebp, [eax+8]", "push    edi; set", "call    _sigfillset", "add     esp, 0Ch", "lea     eax, [esp+140h+mask]", "mov     [esp+140h+var_138], eax", "push    eax; oldmask", "push    edi; newmask", "push    2; how", "call    _pthread_sigmask", "lea     edi, (clnt_fd_lock - 2BB6Ch)[ebx]", "mov     [esp+14Ch+mutex], edi; mutex", "call    _pthread_mutex_lock", "jmp     short loc_929F"], ["lea     eax, [eax+eax*2]", "push    edx", "push    edx", "mov     ecx, ds:(dg_cv - 2BB6Ch)[ebx]", "shl     eax, 4", "push    edi; mutex", "add     eax, ecx", "push    eax; cond", "call    _pthread_cond_wait"], ["mov     eax, [cu+0]", "mov     edx, ds:(dg_fd_locks - 2BB6Ch)[ebx]", "add     esp, 10h", "lea     edx, [edx+eax*4]", "mov     ecx, [edx]", "test    ecx, ecx", "jnz     short loc_9288"], ["sub     esp, 0Ch", "mov     dword ptr [edx], 1", "push    edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "cmp     esi, 8", "jz      short loc_92F8"], ["cmp     esi, 9", "jz      loc_9378"], ["mov     eax, [esp+13Ch+addr]", "test    eax, eax", "jz      _L147; jumptable 000092F2 default case, cases 0,8,9,17,18"], ["cmp     esi, 14h; switch 21 cases", "ja      _L147; jumptable 000092F2 default case, cases 0,8,9,17,18"], ["mov     eax, ds:(jpt_92F2 - 2BB6Ch)[ebx+esi*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["mov     dword ptr [cu+4], 1"], ["sub     esp, 0Ch", "push    edi; mutex", "call    _pthread_mutex_lock", "mov     edx, [cu+0]", "mov     eax, ds:(dg_fd_locks - 2BB6Ch)[ebx]", "mov     dword ptr [eax+edx*4], 0", "mov     [esp+14Ch+mutex], edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     eax, [esp+144h+var_138]", "push    eax; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [cu+0]", "mov     edx, ds:(dg_cv - 2BB6Ch)[ebx]", "lea     eax, [eax+eax*2]", "shl     eax, 4", "add     eax, edx", "mov     [esp+14Ch+mutex], eax; cond", "call    _pthread_cond_signal", "add     esp, 10h", "mov     eax, 1"], ["mov     ecx, [esp+13Ch+var_20]", "xor     ecx, large gs:14h", "jnz     loc_95A6"], ["add     esp, 12Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     cu", "retn"], ["mov     dword ptr [cu+4], 0", "jmp     loc_92FF"], ["sub     esp, 0Ch; jumptable 000092F2 default case, cases 0,8,9,17,18", "push    edi; mutex", "call    _pthread_mutex_lock", "mov     edx, [cu+0]", "mov     eax, ds:(dg_fd_locks - 2BB6Ch)[ebx]", "mov     dword ptr [eax+edx*4], 0", "mov     [esp+14Ch+mutex], edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     ecx, [esp+144h+var_138]", "push    ecx; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [cu+0]", "mov     esi, ds:(dg_cv - 2BB6Ch)[ebx]", "lea     eax, [eax+eax*2]", "shl     eax, 4", "add     eax, esi", "mov     [esp+14Ch+mutex], eax; cond", "call    _pthread_cond_signal", "add     esp, 10h", "xor     eax, eax", "jmp     loc_9352"], ["mov     ecx, [esp+13Ch+addr]; jumptable 000092F2 case 1", "mov     eax, [ecx]", "mov     [esp+13Ch+var_130], eax", "inc     eax", "cmp     eax, 5F5E101h", "ja      short _L147; jumptable 000092F2 default case, cases 0,8,9,17,18"], ["mov     eax, [ecx+4]", "mov     [esp+13Ch+var_130], eax", "inc     eax", "cmp     eax, 0F4241h", "ja      short _L147; jumptable 000092F2 default case, cases 0,8,9,17,18"], ["mov     edx, [ecx+4]", "mov     eax, [ecx]", "mov     [cu+94h], eax", "mov     [cu+98h], edx", "jmp     loc_92FF"], ["mov     eax, [esp+13Ch+addr]; jumptable 000092F2 case 20", "mov     eax, [eax]", "mov     [cu+0D4h], eax", "jmp     loc_92FF"], ["mov     eax, [esp+13Ch+addr]; jumptable 000092F2 case 19", "mov     eax, [eax]", "mov     [cu+0D0h], eax", "jmp     loc_92FF"], ["mov     eax, [esp+13Ch+addr]; jumptable 000092F2 case 16", "mov     eax, [eax+4]", "cmp     eax, 7Fh", "jbe     _L147; jumptable 000092F2 default case, cases 0,8,9,17,18"], ["push    ecx", "lea     edx, [cu+8]", "push    eax; n", "mov     esi, [esp+144h+addr]", "mov     eax, [esi+8]", "push    eax; src", "push    edx; dest", "call    _memcpy", "mov     eax, [esi+4]", "add     esp, 10h", "mov     [cu+88h], eax", "jmp     loc_92FF"], ["mov     eax, [esp+13Ch+addr]; jumptable 000092F2 case 15", "mov     edx, [cu+0C8h]", "mov     eax, [eax]", "bswap   eax", "mov     [edx+0Ch], eax", "jmp     loc_92FF"], ["mov     eax, [cu+0C8h]; jumptable 000092F2 case 14", "mov     ecx, [esp+13Ch+addr]", "mov     eax, [eax+0Ch]", "bswap   eax", "mov     [ecx], eax", "jmp     loc_92FF"], ["mov     eax, [esp+13Ch+addr]; jumptable 000092F2 case 13", "mov     edx, [cu+0C8h]", "mov     eax, [eax]", "bswap   eax", "mov     [edx+10h], eax", "jmp     loc_92FF"], ["mov     eax, [cu+0C8h]; jumptable 000092F2 case 12", "mov     ecx, [esp+13Ch+addr]", "mov     eax, [eax+10h]", "bswap   eax", "mov     [ecx], eax", "jmp     loc_92FF"], ["mov     eax, [esp+13Ch+addr]; jumptable 000092F2 case 11", "mov     edx, [cu+0C8h]", "mov     eax, [eax]", "dec     eax", "bswap   eax", "mov     [edx], eax", "jmp     loc_92FF"], ["mov     eax, [cu+0C8h]; jumptable 000092F2 case 10", "mov     ecx, [esp+13Ch+addr]", "mov     eax, [eax]", "bswap   eax", "mov     [ecx], eax", "jmp     loc_92FF"], ["mov     ecx, [esp+13Ch+addr]; jumptable 000092F2 case 7", "lea     eax, [cu+8]", "mov     [ecx+8], eax", "mov     eax, [cu+88h]", "mov     [ecx+4], eax", "mov     dword ptr [ecx], 80h", "jmp     loc_92FF"], ["mov     ecx, [esp+13Ch+addr]; jumptable 000092F2 case 6", "mov     eax, [cu+0]", "mov     [ecx], eax", "jmp     loc_92FF"], ["mov     ecx, [esp+13Ch+addr]; jumptable 000092F2 case 5", "mov     eax, [cu+8Ch]", "mov     edx, [cu+90h]", "mov     [ecx+4], edx", "mov     [ecx], eax", "jmp     loc_92FF"], ["mov     ecx, [esp+13Ch+addr]; jumptable 000092F2 case 4", "mov     eax, [ecx]", "mov     [esp+13Ch+var_130], eax", "inc     eax", "cmp     eax, 5F5E101h", "ja      _L147; jumptable 000092F2 default case, cases 0,8,9,17,18"], ["mov     eax, [ecx+4]", "mov     [esp+13Ch+var_130], eax", "inc     eax", "cmp     eax, 0F4241h", "ja      _L147; jumptable 000092F2 default case, cases 0,8,9,17,18"], ["mov     edx, [ecx+4]", "mov     eax, [ecx]", "mov     [cu+8Ch], eax", "mov     [cu+90h], edx", "jmp     loc_92FF"], ["push    edx; jumptable 000092F2 case 3", "lea     eax, [cu+8]", "mov     ecx, [cu+88h]", "push    ecx; n", "push    eax; src", "mov     esi, [esp+148h+addr]", "push    esi; dest", "call    _memcpy", "add     esp, 10h", "jmp     loc_92FF"], ["mov     ecx, [esp+13Ch+addr]; jumptable 000092F2 case 2", "mov     eax, [cu+94h]", "mov     edx, [cu+98h]", "mov     [ecx+4], edx", "mov     [ecx], eax", "jmp     loc_92FF"], ["call    __stack_chk_fail_local"]], "clnt_dg_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 288h", "mov     eax, [esp+298h+svcaddr]", "lea     esi, [esp+298h+newmask]", "mov     [esp+298h+var_288], eax", "mov     eax, large gs:14h", "mov     [esp+298h+var_20], eax", "xor     eax, eax", "mov     [esp+298h+one], 1", "push    esi; set", "call    _sigfillset", "add     esp, 0Ch", "lea     edi, [esp+290h+mask]", "push    edi; oldmask", "push    esi; newmask", "push    2; how", "call    _pthread_sigmask", "lea     esi, (clnt_fd_lock - 2BB6Ch)[ebx]", "mov     [esp+29Ch+mutex], esi; mutex", "call    _pthread_mutex_lock", "mov     eax, ds:(dg_fd_locks - 2BB6Ch)[ebx]", "add     esp, 10h", "test    eax, eax", "jz      loc_98F8"], ["sub     esp, 0Ch", "push    esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "push    edi; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [esp+29Ch+var_288]", "add     esp, 10h", "test    eax, eax", "jz      loc_9AE0"], ["push    eax", "push    eax", "lea     eax, [esp+294h+si_0]", "push    eax; sip", "mov     edx, [esp+298h+fd]", "push    edx; fd", "call    ___rpc_fd2sockinfo", "add     esp, 10h", "test    eax, eax", "jz      loc_99A0"], ["push    esi", "mov     edi, [esp+290h+sendsz]", "push    edi; size", "mov     ebp, [esp+294h+si_0.si_proto]", "push    ebp; proto", "mov     eax, [esp+298h+si_0.si_af]", "push    eax; af_0", "call    ___rpc_get_t_size", "add     esp, 0Ch", "mov     esi, eax", "mov     sendsz_0, [esp+290h+recvsz]", "push    eax; size", "mov     eax, [esp+294h+si_0.si_proto]", "push    eax; proto", "mov     eax, [esp+298h+si_0.si_af]", "push    eax; af_0", "call    ___rpc_get_t_size", "add     esp, 10h", "mov     edi, eax", "test    sendsz_0, sendsz_0", "jz      loc_99A0"], ["test    recvsz_0, recvsz_0", "jz      loc_99A0"], ["push    ecx", "push    ecx", "push    14h; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     ebp, eax", "test    cl_0, cl_0", "jz      loc_9AF7"], ["add     sendsz_0, 3", "add     recvsz_0, 3", "mov     cl_0, esi", "and     edi, 0FFFFFFFCh", "and     eax, 0FFFFFFFCh", "push    edx", "push    edx", "mov     [esp+294h+dtbsize], sendsz_0", "lea     sendsz_0, [sendsz_0+recvsz_0+0E0h]", "push    eax; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     esi, eax", "test    cu, cu", "jz      loc_9A9D"], ["mov     edx, [esp+28Ch+var_288]", "sub     esp, 4", "lea     cu, [cu+8]", "mov     ecx, [edx+4]", "mov     edx, [edx+8]", "push    ecx; n", "mov     [esp+294h+var_288], ecx", "push    edx; src", "push    eax; dest", "call    _memcpy", "lea     eax, [cu+recvsz_0+0DCh]", "mov     ecx, [esp+29Ch+var_288]", "mov     [cu+0C8h], eax", "mov     eax, [esp+29Ch+dtbsize]", "mov     [cu+0C4h], eax", "mov     [cu+88h], ecx", "mov     dword ptr [cu+8Ch], 0Fh", "mov     dword ptr [cu+90h], 0", "mov     dword ptr [cu+94h], 0FFFFFFFFh", "mov     dword ptr [cu+98h], 0FFFFFFFFh", "mov     [cu+0CCh], recvsz_0", "mov     dword ptr [cu+0D0h], 0", "mov     dword ptr [cu+0D4h], 0", "mov     dword ptr [cu+0D8h], 0", "pop     ecx", "pop     recvsz_0", "lea     edi, [cu+0A8h]", "push    0; tz", "lea     eax, [esp+298h+now]", "push    eax; tv", "call    _gettimeofday", "call    _getpid", "mov     edx, [esp+29Ch+now.tv_usec]", "mov     ecx, eax", "mov     eax, [esp+29Ch+now.tv_sec]", "xor     eax, edx", "xor     eax, ecx", "mov     [esp+29Ch+call_msg.rm_xid], eax", "mov     eax, [esp+29Ch+program]", "mov     dword ptr [esp+29Ch+call_msg.ru+4], eax", "mov     eax, [esp+29Ch+version]", "mov     dword ptr [esp+29Ch+call_msg.ru+8], eax", "push    0; xop", "mov     ecx, [esp+2A0h+dtbsize]", "mov     eax, [cu+0C8h]", "push    ecx; size", "push    eax; addr", "push    edi; xdrs", "call    _xdrmem_create", "add     esp, 18h", "lea     eax, [esp+294h+call_msg]", "push    eax; cmsg", "push    edi; xdrs", "call    _xdr_callhdr", "add     esp, 10h", "test    eax, eax", "jz      loc_99C0"], ["sub     esp, 0Ch", "mov     eax, [cu+0ACh]", "push    edi", "call    dword ptr [eax+10h]", "mov     [cu+0C0h], eax", "lea     eax, [esp+29Ch+on]", "mov     [esp+29Ch+on], 1", "mov     [esp+29Ch+mutex], 4; optlen", "push    eax; optval", "push    0Bh; optname", "push    0; level", "mov     edx, [esp+2A8h+fd]", "push    edx; fd", "call    _setsockopt", "add     esp, 1Ch", "lea     eax, [esp+290h+one]", "push    eax", "push    5421h; request", "mov     ecx, [esp+298h+fd]", "push    ecx; fd", "call    _ioctl", "mov     eax, [esp+29Ch+fd]", "mov     dword ptr [cu+4], 0", "mov     [cu], eax", "pop     edi", "lea     edi, [esp+298h+set]", "push    edi; set", "call    _sigfillset", "add     esp, 0Ch", "lea     eax, [esp+290h+oldmask]", "mov     [esp+290h+var_288], eax", "push    eax; oldmask", "push    edi; newmask", "push    2; how", "call    _pthread_sigmask", "lea     edi, (ops_lock - 2BB6Ch)[ebx]", "mov     [esp+29Ch+mutex], edi; mutex", "call    _pthread_mutex_lock", "mov     eax, ds:(ops_7971 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    eax, eax", "jz      loc_9A50"], ["sub     esp, 0Ch", "push    edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     eax, [esp+294h+var_288]", "push    eax; newmask", "push    2; how", "call    _pthread_sigmask", "lea     eax, (ops_7971 - 2BB6Ch)[ebx]", "mov     [cl_0+8], cu", "mov     [cl_0+4], eax", "call    _authnone_create", "mov     dword ptr [cl_0+10h], 0", "mov     [cl_0+0], eax", "mov     dword ptr [cl_0+0Ch], 0", "add     esp, 10h"], ["mov     eax, [esp+28Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_9AF2"], ["add     esp, 27Ch", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["call    ___rpc_dtbsize", "mov     ecx, eax", "cmp     dtbsize_0, 5555555h", "ja      loc_99F8"], ["push    ebp", "lea     dtbsize_0, ds:0[dtbsize_0*4]", "push    ebp", "mov     [esp+294h+dtbsize], dtbsize_0", "push    eax; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     ebp, eax", "mov     ds:(dg_fd_locks - 2BB6Ch)[ebx], eax", "test    eax, eax", "mov     ecx, [esp+28Ch+dtbsize]", "jz      loc_9B40"], ["mov     [esp+28Ch+var_280], ecx", "lea     eax, [ecx+ecx*2]", "shl     eax, 4", "push    edx", "push    edx", "mov     [esp+294h+dtbsize], cv_allocsz_0", "push    cv_allocsz_0; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     edx, eax", "mov     ds:(dg_cv - 2BB6Ch)[ebx], eax", "test    eax, eax", "jz      loc_9B03"], ["mov     eax, [esp+28Ch+dtbsize]", "mov     ecx, [esp+28Ch+var_280]", "add     eax, edx", "test    ecx, ecx", "jz      loc_9623"], ["mov     [esp+28Ch+dtbsize], edi", "mov     ebp, eax", "mov     edi, edx", "lea     esi, [esi+0]", "nop"], ["push    ecx", "push    ecx", "push    0; cond_attr", "push    edi; cond", "add     edi, 30h ; '0'", "call    _pthread_cond_init", "add     esp, 10h", "cmp     edi, ebp", "jnz     short loc_9980"], ["mov     edi, [esp+28Ch+dtbsize]", "jmp     loc_9623"], ["call    ___rpc_createerr", "xor     ebp, ebp", "mov     dword ptr [eax], 14h", "call    ___rpc_createerr", "mov     dword ptr [eax+8], 0", "jmp     loc_98D4"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 1", "call    ___rpc_createerr", "sub     esp, 0Ch", "mov     dword ptr [eax+8], 0", "push    cl_0; ptr", "xor     cl_0, cl_0", "call    _free", "mov     [esp+29Ch+mutex], cu; ptr", "call    _free", "add     esp, 10h", "jmp     loc_98D4"], ["sub     esp, 0Ch", "push    esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "push    edi; newmask", "push    2; how", "call    _pthread_sigmask", "call    ___errno_location", "add     esp, 10h", "mov     esi, eax", "mov     dword ptr [eax], 4Bh ; 'K'"], ["sub     esp, 0Ch", "lea     eax, (mem_err_clnt_dg - 2BB6Ch)[ebx]; \"clnt_dg_create: out of memory\"", "xor     ebp, ebp", "push    eax; format", "call    _warnx", "call    ___rpc_createerr", "mov     dword ptr [eax], 0Ch", "call    ___rpc_createerr", "mov     edx, [esi]", "add     esp, 10h", "mov     [eax+8], edx", "jmp     loc_98D4"], ["lea     eax, (clnt_dg_call - 2BB6Ch)[ebx]", "mov     ds:(ops_7971 - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_dg_abort - 2BB6Ch)[ebx]", "mov     ds:(dword_2C0BC - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_dg_geterr - 2BB6Ch)[ebx]", "mov     ds:(dword_2C0C0 - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_dg_freeres - 2BB6Ch)[ebx]", "mov     ds:(dword_2C0C4 - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_dg_destroy - 2BB6Ch)[ebx]", "mov     ds:(dword_2C0C8 - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_dg_control - 2BB6Ch)[ebx]", "mov     ds:(dword_2C0CC - 2BB6Ch)[ebx], eax", "jmp     loc_9895"], ["sub     esp, 0Ch", "lea     eax, (mem_err_clnt_dg - 2BB6Ch)[ebx]; \"clnt_dg_create: out of memory\"", "push    eax; format", "call    _warnx", "call    ___rpc_createerr", "mov     dword ptr [eax], 0Ch", "call    ___errno_location", "mov     esi, eax", "call    ___rpc_createerr", "mov     edx, [esi]", "mov     [eax+8], edx", "mov     [esp+29Ch+mutex], cl_0; ptr", "call    _free", "xor     cl_0, cl_0", "add     esp, 10h", "jmp     loc_98D4"], ["call    ___rpc_createerr", "xor     ebp, ebp", "mov     dword ptr [eax], 13h", "jmp     loc_98D4"], ["call    __stack_chk_fail_local"], ["call    ___errno_location", "mov     sendsz_0, eax", "jmp     loc_9A1E"], ["sub     esp, 0Ch", "push    ebp; ptr", "call    _free", "mov     ds:(dg_fd_locks - 2BB6Ch)[ebx], 0", "mov     [esp+29Ch+mutex], esi; mutex"], ["call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "push    edi; newmask", "push    2; how", "call    _pthread_sigmask", "call    ___errno_location", "add     esp, 10h", "mov     esi, eax", "mov     dword ptr [eax], 0Ch", "jmp     loc_9A1E"], ["sub     esp, 0Ch", "push    esi", "jmp     short loc_9B19"]], "__rpc_raise_fd": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "lea     eax, (__rpc_minfd - 2BB6Ch)[ebx]", "mov     edi, [esp+0Ch+fd]", "mov     eax, [eax]", "cmp     eax, edi", "jg      short loc_9B78"], ["mov     esi, edi"], ["pop     ebx", "mov     eax, esi", "pop     esi", "pop     edi", "retn"], ["push    edx", "push    eax", "push    0; cmd", "push    fd_0; fd", "call    _fcntl", "add     esp, 10h", "mov     esi, eax", "cmp     nfd, 0FFFFFFFFh", "jz      short loc_9B6E"], ["sub     esp, 0Ch", "push    nfd; fd", "call    _fsync", "add     esp, 10h", "inc     eax", "jz      short loc_9BC0"], ["sub     esp, 0Ch", "push    fd_0; fd", "call    _close", "add     esp, 10h", "inc     eax", "jnz     short loc_9B70"], ["push    fd_0", "lea     eax, (aCouldNotCloseF - 2BB6Ch)[ebx]; \"could not close() fd %d; mem & fd leak\"", "push    eax", "push    1", "push    3", "call    ___syslog_chk", "add     esp, 10h", "jmp     short loc_9B70"], ["sub     esp, 0Ch", "push    nfd; fd", "call    _close", "add     esp, 10h", "jmp     short loc_9B6E"]], "clnt_tli_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "mov     eax, [esp+4Ch+svcaddr]", "mov     ebp, [esp+4Ch+nconf]", "mov     [esp+4Ch+madefd], eax", "mov     eax, large gs:14h", "mov     [esp+4Ch+var_20], eax", "xor     eax, eax", "cmp     [esp+4Ch+fd], 0FFFFFFFFh", "mov     [esp+4Ch+one], 1", "jnz     loc_9CB0"], ["test    ebp, ebp", "jz      loc_9E70"], ["sub     esp, 0Ch", "push    ebp; nconf", "call    ___rpc_nconf2fd", "mov     [esp+5Ch+fd], eax", "add     esp, 10h", "cmp     [esp+4Ch+fd], 0FFFFFFFFh", "jz      loc_9EC0"], ["lea     fd_0, (__rpc_minfd - 2BB6Ch)[ebx]", "mov     edi, [esp+4Ch+fd]", "cmp     [eax], edi", "jg      loc_9EA0"], ["mov     esi, [ebp+4]", "push    eax", "push    eax", "lea     eax, [esp+54h+si_0]", "push    eax; sip", "mov     eax, [esp+58h+fd]", "push    eax; fd", "call    ___rpc_fd2sockinfo", "add     esp, 10h", "mov     edx, 1", "test    eax, eax", "jnz     loc_9DB8"], ["mov     [esp+4Ch+madefd], edx", "call    ___rpc_createerr", "mov     dword ptr [eax], 0Ch", "call    ___errno_location", "mov     esi, eax", "call    ___rpc_createerr", "mov     ecx, [esi]", "mov     edx, [esp+4Ch+madefd]", "mov     [eax+8], ecx"], ["xor     esi, esi", "test    madefd_0, madefd_0", "jnz     loc_9DA0"], ["mov     eax, [esp+4Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_9ED9"], ["add     esp, 3Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    esi", "push    esi", "lea     eax, [esp+54h+si_0]", "push    eax; sip", "mov     edi, [esp+58h+fd]", "push    edi; fd", "call    ___rpc_fd2sockinfo", "add     esp, 10h", "mov     edx, eax", "test    eax, eax", "jz      short err"], ["sub     esp, 0Ch", "mov     ecx, [esp+58h+si_0.si_socktype]", "push    ecx; socktype", "call    ___rpc_socktype2seman", "add     esp, 10h", "xor     edx, edx", "mov     esi, eax", "cmp     servtype, 0FFFFFFFFh", "jz      loc_9E70"], ["mov     eax, [esp+4Ch+madefd]", "xor     edi, edi", "mov     eax, [eax+8]", "mov     di, [eax]", "mov     eax, edi", "cmp     [esp+4Ch+si_0.si_af], eax", "jnz     loc_9E88"], ["cmp     servtype, 2", "jz      loc_9E33"], ["cmp     servtype, 3", "jz      loc_9DD8"], ["dec     servtype", "jnz     err"], ["mov     [esp+4Ch+var_40], madefd_0", "push    eax", "push    eax", "mov     eax, [esp+54h+recvsz]", "push    eax; recvsz", "mov     eax, [esp+58h+sendsz]", "push    eax; sendsz", "mov     eax, [esp+5Ch+vers]", "push    eax; version", "mov     eax, [esp+60h+prog]", "push    eax; program", "mov     madefd_0, [esp+64h+madefd]", "push    edx; svcaddr", "mov     ecx, [esp+68h+fd]", "push    ecx; fd", "call    _clnt_dg_create", "add     esp, 20h", "mov     esi, eax", "mov     edx, [esp+4Ch+var_40]"], ["test    esi, esi", "jz      err1"], ["test    ebp, ebp", "jz      loc_9EC8"], ["mov     [esp+4Ch+madefd], edx", "sub     esp, 0Ch", "mov     ecx, [ebp+0]", "push    ecx; s", "call    _strdup", "mov     [cl_0+0Ch], eax", "mov     ebp, [ebp+14h]", "pop     edi", "push    ebp; s", "call    _strdup", "add     esp, 10h", "mov     [cl_0+10h], eax", "mov     edx, [esp+4Ch+madefd]"], ["test    edx, edx", "jz      loc_9C94"], ["push    edx", "mov     eax, [cl_0+4]", "push    0", "push    8", "push    cl_0", "call    dword ptr [eax+14h]", "add     esp, 10h", "jmp     loc_9C94"], ["sub     esp, 0Ch", "mov     eax, [esp+58h+fd]", "push    eax; fd", "call    _close", "add     esp, 10h", "jmp     loc_9C94"], ["mov     [esp+4Ch+var_40], edx", "push    eax", "push    eax", "push    0; sock_in", "mov     eax, [esp+58h+fd]", "push    eax; sockfd", "call    _bindresvport", "add     esp, 10h", "mov     edx, [esp+4Ch+var_40]", "jmp     loc_9CE7"], ["test    ebp, ebp", "jz      short loc_9E33"], ["mov     eax, [ebp+0Ch]", "mov     ecx, 5", "lea     edi, (aInet - 2BB6Ch)[ebx]; \"inet\"", "mov     servtype, eax", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      short loc_9E10"], ["mov     esi, eax", "mov     ecx, 6", "lea     edi, (aInet6 - 2BB6Ch)[ebx]; \"inet6\"", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_9E33"], ["mov     [esp+4Ch+var_40], madefd_0", "sub     esp, 0Ch", "push    4; optlen", "lea     eax, [esp+5Ch+one]", "push    eax; optval", "push    1; optname", "push    6; level", "mov     madefd_0, [esp+68h+fd]", "push    edx; fd", "call    _setsockopt", "add     esp, 20h", "mov     edx, [esp+4Ch+var_40]"], ["mov     [esp+4Ch+var_40], edx", "push    esi", "push    esi", "mov     edi, [esp+54h+recvsz]", "push    edi; recvsz", "mov     eax, [esp+58h+sendsz]", "push    eax; sendsz", "mov     eax, [esp+5Ch+vers]", "push    eax; vers", "mov     eax, [esp+60h+prog]", "push    eax; prog", "mov     eax, [esp+64h+madefd]", "push    eax; raddr", "mov     eax, [esp+68h+fd]", "push    eax; fd", "call    _clnt_vc_create", "add     esp, 20h", "mov     esi, eax", "mov     edx, [esp+4Ch+var_40]", "jmp     loc_9D4A"], ["call    ___rpc_createerr", "xor     esi, esi", "mov     dword ptr [eax], 11h", "jmp     loc_9C94"], ["mov     [esp+4Ch+madefd], madefd_0", "call    ___rpc_createerr", "mov     edx, [esp+4Ch+madefd]", "mov     dword ptr [eax], 0Dh", "jmp     err1"], ["sub     esp, 0Ch", "mov     eax, [esp+58h+fd]", "push    eax; fd", "call    __rpc_raise_fd", "mov     [esp+5Ch+fd], eax", "add     esp, 10h", "jmp     loc_9C42"], ["xor     edx, edx", "jmp     err"], ["lea     cl_0, (aContinuingIn10+1Ah - 2BB6Ch)[ebx]; \"\"", "mov     [cl_0+0Ch], eax", "mov     [cl_0+10h], eax", "jmp     loc_9D81"], ["call    __stack_chk_fail_local"]], "clnt_tp_create_timed": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     ecx, large gs:14h", "mov     [esp+2Ch+var_20], ecx", "xor     ecx, ecx", "mov     edi, [esp+2Ch+nconf]", "mov     eax, [esp+2Ch+hostname]", "mov     edx, [esp+2Ch+tp]", "mov     [esp+2Ch+cl_0], 0", "test    edi, edi", "jz      loc_A008"], ["push    esi", "push    esi", "push    edx; tp", "lea     edx, [esp+38h+cl_0]", "push    edx; clpp", "push    eax; host", "push    edi; nconf", "mov     ebp, [esp+44h+vers]", "push    ebp; version", "mov     eax, [esp+48h+prog]", "push    eax; program", "call    __rpcb_findaddr_timed", "add     esp, 20h", "mov     esi, eax", "test    svcaddr, svcaddr", "jz      short loc_9FA4"], ["mov     svcaddr, [esp+2Ch+cl_0]", "test    eax, eax", "jz      loc_A000"], ["push    edx", "mov     edx, [eax+4]", "push    svcaddr", "push    10h", "push    eax", "call    dword ptr [edx+14h]", "add     esp, 10h", "dec     eax", "jz      short loc_9FC0"], ["mov     eax, [esp+2Ch+cl_0]", "sub     esp, 0Ch", "mov     edx, [eax+4]", "push    eax", "call    dword ptr [edx+10h]", "add     esp, 0Ch"], ["push    0; recvsz", "push    0; sendsz", "mov     edx, [esp+38h+vers]", "push    edx; vers", "mov     ecx, [esp+3Ch+prog]", "push    ecx; prog", "push    svcaddr; svcaddr", "push    edi; nconf", "push    0FFFFFFFFh; fd", "call    _clnt_tli_create", "mov     [esp+4Ch+cl_0], eax", "add     esp, 20h"], ["sub     esp, 0Ch", "mov     eax, [svcaddr+8]", "push    eax; ptr", "call    _free", "mov     [esp+3Ch+ptr], svcaddr; ptr", "call    _free", "mov     svcaddr, [esp+3Ch+cl_0]", "add     esp, 10h"], ["mov     eax, [esp+2Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_A043"], ["add     esp, 1Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ebp, [esp+2Ch+cl_0]", "mov     eax, [ebp+0Ch]", "test    eax, eax", "jz      short loc_A030"], ["mov     eax, [ebp+10h]", "test    eax, eax", "jz      short loc_A018"], ["push    edi", "mov     eax, [ebp+4]", "lea     edx, [esp+30h+prog]", "push    edx", "push    0Fh", "push    ebp", "call    dword ptr [eax+14h]", "mov     eax, [esp+3Ch+cl_0]", "add     esp, 0Ch", "lea     ecx, [esp+30h+vers]", "mov     edx, [eax+4]", "push    ecx", "push    0Dh", "push    eax", "call    dword ptr [edx+14h]", "add     esp, 10h", "jmp     short loc_9F89"], ["push    ecx", "jmp     loc_9F6B"], ["call    ___rpc_createerr", "xor     esi, esi", "mov     dword ptr [eax], 11h", "jmp     short loc_9FA4"], ["sub     esp, 0Ch", "mov     eax, [edi+14h]", "push    eax; s", "call    _strdup", "add     esp, 10h", "mov     [ebp+10h], eax", "jmp     short loc_9FD2"], ["sub     esp, 0Ch", "mov     eax, [edi]", "push    eax; s", "call    _strdup", "add     esp, 10h", "mov     [ebp+0Ch], eax", "jmp     short loc_9FCB"], ["call    __stack_chk_fail_local"]], "clnt_create_timed": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 4Ch", "mov     eax, large gs:14h", "mov     [esp+5Ch+var_20], eax", "xor     eax, eax", "mov     esi, [esp+5Ch+netclass]", "mov     edi, [esp+5Ch+hostname]", "mov     ebp, [esp+5Ch+tp]", "test    esi, esi", "jz      short loc_A0A5"], ["sub     esp, 0Ch", "push    esi; s", "call    _strlen", "add     esp, 10h", "cmp     len, 1Fh", "ja      loc_A1F0"], ["push    20h ; ' '", "inc     len", "push    eax", "push    esi", "lea     esi, [esp+68h+nettype_array]", "push    nettype", "call    ___memcpy_chk", "add     esp, 10h"], ["sub     esp, 0Ch", "push    nettype; nettype", "call    ___rpc_setconf", "add     esp, 10h", "mov     nettype, eax", "test    handle, handle", "jz      loc_A1F0"], ["call    ___rpc_createerr", "mov     [esp+5Ch+save_cf_stat], 0", "mov     dword ptr [eax], 0", "jmp     short loc_A0FE"], ["sub     esp, 0Ch", "push    ebp; tp", "push    nconf_0; nconf", "mov     edx, [esp+70h+vers]", "push    edx; vers", "mov     ecx, [esp+74h+prog]", "push    ecx; prog", "push    edi; hostname", "call    _clnt_tp_create_timed", "add     esp, 20h", "test    clnt_0, clnt_0", "jnz     loc_A1B0"], ["call    ___rpc_createerr", "cmp     dword ptr [eax], 16h", "jnz     loc_A1B8"], ["sub     esp, 0Ch", "push    handle; vhandle", "call    ___rpc_getconf", "add     esp, 10h", "test    nconf_0, nconf_0", "jnz     short loc_A0D0"], ["mov     [esp+5Ch+clnt], nconf_0", "call    ___rpc_createerr", "mov     edx, [esp+5Ch+clnt]", "mov     edi, [eax]", "test    edi, edi", "jz      loc_A202"], ["mov     [esp+5Ch+clnt], edx", "call    ___rpc_createerr", "mov     edx, [esp+5Ch+clnt]", "cmp     dword ptr [eax], 16h", "jz      short loc_A178"], ["mov     [esp+5Ch+clnt], edx", "call    ___rpc_createerr", "mov     edx, [esp+5Ch+clnt]", "cmp     dword ptr [eax], 0Dh", "jz      short loc_A178"], ["mov     [esp+5Ch+clnt], edx", "sub     esp, 0Ch", "push    handle; vhandle", "call    ___rpc_endconf", "add     esp, 10h", "mov     edx, [esp+5Ch+clnt]"], ["mov     eax, [esp+5Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_A216"], ["add     esp, 4Ch", "mov     eax, edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esp+5Ch+save_cf_stat]", "test    eax, eax", "jz      short loc_A149"], ["mov     [esp+5Ch+clnt], edx", "call    ___rpc_createerr", "mov     ecx, [esp+5Ch+save_cf_stat]", "mov     [eax], ecx", "call    ___rpc_createerr", "mov     ecx, [esp+5Ch+save_cf_error.re_status]", "mov     edx, [esp+5Ch+clnt]", "mov     [eax+4], ecx", "mov     ecx, dword ptr [esp+5Ch+save_cf_error.ru]", "mov     [eax+8], ecx", "mov     ecx, dword ptr [esp+5Ch+save_cf_error.ru+4]", "mov     [eax+0Ch], ecx", "jmp     short loc_A149"], ["mov     edx, clnt_0", "jmp     loc_A125"], ["call    ___rpc_createerr", "cmp     dword ptr [eax], 0Dh", "jz      loc_A0FE"], ["call    ___rpc_createerr", "mov     eax, [eax]", "mov     [esp+5Ch+save_cf_stat], eax", "call    ___rpc_createerr", "mov     edx, [eax+4]", "mov     [esp+5Ch+save_cf_error.re_status], edx", "mov     edx, [eax+8]", "mov     eax, [eax+0Ch]", "mov     dword ptr [esp+5Ch+save_cf_error.ru], edx", "mov     dword ptr [esp+5Ch+save_cf_error.ru+4], eax", "jmp     loc_A0FE"], ["call    ___rpc_createerr", "xor     edx, edx", "mov     dword ptr [eax], 11h", "jmp     loc_A15D"], ["call    ___rpc_createerr", "mov     edx, [esp+5Ch+clnt]", "mov     dword ptr [eax], 11h", "jmp     loc_A125"], ["call    __stack_chk_fail_local"]], "clnt_create_vers_timed": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 38h", "mov     eax, [esp+48h+vers_out]", "mov     [esp+48h+var_30], ebx", "mov     [esp+48h+var_34], eax", "mov     esi, [esp+48h+tp]", "mov     eax, large gs:14h", "mov     [esp+48h+var_20], eax", "xor     eax, eax", "mov     edi, [esp+48h+vers_low]", "push    esi; tp", "mov     ebp, [esp+4Ch+nettype]", "push    ebp; netclass", "mov     eax, [esp+50h+vers_high]", "push    eax; vers", "mov     eax, [esp+54h+prog]", "push    eax; prog", "mov     eax, [esp+58h+hostname]", "push    eax; hostname", "call    _clnt_create_timed", "add     esp, 20h", "mov     esi, eax", "test    clnt, clnt", "jz      loc_A360"], ["mov     clnt, [clnt+4]", "push    0", "push    0Ah", "mov     ebx, ds:(xdr_void_ptr - 2BB6Ch)[ebx]", "push    0", "push    ebx", "push    0", "push    ebx", "push    0", "push    clnt", "call    dword ptr [eax]", "add     esp, 20h", "mov     edx, eax", "test    edx, edx", "lea     rpc_stat_0, [esp+3Ch+vers_high]", "lea     ebp, [esp+3Ch+minvers]", "mov     [esp+3Ch+rpc_stat], eax", "mov     eax, rpc_stat_0", "jnz     short loc_A2DC"], ["jmp     loc_A378"], ["push    ecx", "mov     minvers_0, [esp+40h+rpc_stat]", "mov     eax, [clnt+4]", "push    edx", "push    0Dh", "push    clnt", "call    dword ptr [eax+14h]", "mov     eax, [clnt+4]", "push    0", "push    0Ah", "push    0", "push    ebx", "push    0", "push    ebx", "push    0", "push    clnt", "call    dword ptr [eax]", "add     esp, 30h", "test    rpc_stat_0, rpc_stat_0", "jz      loc_A378"], ["mov     edx, [clnt+4]", "cmp     [esp+3Ch+vers_high], vers_low_0", "mov     edx, [edx+8]", "jbe     loc_A388"], ["cmp     rpc_stat_0, 9", "jnz     loc_A388"], ["push    ecx", "push    ecx", "push    ebp", "push    clnt", "call    edx", "mov     eax, [esp+4Ch+maxvers]", "mov     ecx, [esp+4Ch+vers_high]", "mov     edx, [esp+4Ch+var_28]", "add     esp, 10h", "cmp     ecx, maxvers_0", "ja      short loc_A311"], ["lea     maxvers_0, [ecx-1]"], ["mov     [esp+3Ch+vers_high], eax", "cmp     vers_low_0, minvers_0", "jnb     short loc_A31B"], ["mov     vers_low_0, minvers_0"], ["cmp     vers_low_0, eax", "jbe     short loc_A2B0"], ["mov     minvers_0, 9"], ["mov     ebx, [esp+3Ch+var_30]", "mov     [esp+3Ch+rpc_stat], edx", "call    ___rpc_createerr", "mov     edx, [esp+3Ch+rpc_stat]", "mov     [eax], edx", "call    ___rpc_createerr", "mov     edx, [esp+3Ch+minvers]", "sub     esp, 0Ch", "mov     [eax+4], edx", "mov     edx, [esp+48h+var_28]", "mov     [eax+8], edx", "mov     edx, [esp+48h+maxvers]", "mov     [eax+0Ch], edx", "mov     eax, [clnt+4]", "push    clnt", "xor     clnt, clnt", "call    dword ptr [eax+10h]", "add     esp, 10h"], ["mov     eax, [esp+3Ch+var_20]", "xor     eax, large gs:14h", "jnz     short loc_A39D"], ["add     esp, 2Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ecx, [esp+3Ch+var_34]", "mov     rpc_stat_0, [esp+3Ch+vers_high]", "mov     [ecx], eax", "jmp     short loc_A360"], ["mov     [esp+3Ch+rpc_stat], rpc_stat_0", "mov     ecx, edx", "push    edx", "push    edx", "push    ebp", "push    clnt", "call    ecx", "add     esp, 10h", "mov     edx, [esp+3Ch+rpc_stat]", "jmp     short error"], ["call    __stack_chk_fail_local"]], "clnt_sperror": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     edi, [esp+3Ch+rpch]", "mov     ebp, [esp+3Ch+s]", "test    edi, edi", "jz      loc_A640"], ["test    ebp, ebp", "jz      loc_A640"], ["mov     esi, ds:(buf - 2BB6Ch)[ebx]", "test    esi, esi", "jz      loc_A620"], ["push    eax", "push    eax", "mov     eax, [edi+4]", "lea     edx, [esp+44h+e]", "push    edx", "push    edi", "call    dword ptr [eax+8]", "pop     eax", "lea     eax, (aS - 2BB6Ch)[ebx]; \"%s: \"", "pop     edx", "push    ebp", "push    eax", "push    0FFFFFFFFh", "push    1", "push    100h", "push    strstart", "call    ___snprintf_chk", "add     esp, 20h", "test    eax, eax", "jle     loc_A5E0"], ["sub     esp, 0Ch", "mov     ebp, 0FFh", "push    strstart; s", "call    _strlen", "add     esp, 10h", "mov     edx, 100h", "sub     edx, i", "lea     edi, [strstart+i]", "mov     [esp+3Ch+len], edx", "sub     ebp, i"], ["sub     esp, 0Ch", "mov     eax, [esp+48h+e.re_status]", "push    eax; num", "call    _clnt_sperrno", "add     esp, 0Ch", "push    ebp; n", "push    eax; src", "push    str; dest", "call    _strncpy", "mov     [esp+4Ch+var_4C], str; s", "call    _strlen", "add     esp, 10h", "mov     ebp, [esp+3Ch+len]", "add     str, i", "sub     ebp, i", "cmp     [esp+3Ch+e.re_status], 11h; switch 18 cases", "ja      def_A55A; jumptable 0000A55A default case"], ["mov     i, [esp+3Ch+e.re_status]", "mov     ecx, ds:(jpt_A55A - 2BB6Ch)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["mov     eax, dword ptr [esp+3Ch+e.ru]; jumptable 0000A55A case 7", "cmp     eax, 7", "ja      loc_A678"], ["mov     edx, ds:(auth_errlist - 2BB6Ch)[ebx+eax*4]", "lea     eax, (aWhy - 2BB6Ch)[ebx]; \"; why = \"", "mov     [esp+3Ch+len], edx", "push    ecx", "push    eax; format", "push    len_0; maxlen", "push    str; s", "call    _snprintf", "mov     [esp+4Ch+var_4C], str; s", "call    _strlen", "add     esp, 10h", "test    i, i", "mov     edx, [esp+3Ch+len]", "jz      short loc_A59E"], ["add     str, i", "sub     len_0, i"], ["test    edx, edx", "jz      loc_A69A"], ["push    edx", "lea     i, (aBadRecordInSS+14h - 2BB6Ch)[ebx]; \"%s\"", "push    eax; format", "push    len_0; maxlen", "push    str; s", "call    _snprintf", "add     esp, 10h"], ["mov     byte ptr [strstart+0FFh], 0; jumptable 0000A55A cases 0-2,5,8,10-17"], ["mov     eax, [esp+3Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_A6AC"], ["add     esp, 2Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edi, strstart", "mov     ebp, 0FFh", "mov     [esp+3Ch+len], 100h", "jmp     loc_A517"], ["push    eax; jumptable 0000A55A cases 6,9", "mov     eax, dword ptr [esp+40h+e.ru+4]", "push    eax", "mov     eax, dword ptr [esp+44h+e.ru]", "push    eax", "lea     eax, (aLowVersionUHig - 2BB6Ch)[ebx]; \"; low version = %u, high version = %u\""], ["push    eax", "push    0FFFFFFFFh", "push    1", "push    len_0", "push    str", "call    ___snprintf_chk", "add     esp, 20h", "jmp     short _L14; jumptable 0000A55A cases 0-2,5,8,10-17"], ["sub     esp, 0Ch", "push    100h; size", "call    _malloc", "add     esp, 10h", "mov     esi, eax", "mov     ds:(buf - 2BB6Ch)[ebx], eax", "test    str, str", "jnz     loc_A4C4"], ["xor     esi, esi", "jmp     loc_A5BF"], ["sub     esp, 0Ch; jumptable 0000A55A cases 3,4", "mov     eax, dword ptr [esp+48h+e.ru]", "push    eax; errnum", "call    _strerror", "pop     edx", "pop     ecx", "push    eax", "lea     eax, (aErrnoS - 2BB6Ch)[ebx]; \"; errno = %s\"", "jmp     short loc_A609"], ["push    edx; jumptable 0000A55A default case", "mov     ecx, dword ptr [esp+40h+e.ru+4]", "push    ecx", "mov     i, dword ptr [esp+44h+e.ru]", "push    eax", "lea     eax, (aS1US2U - 2BB6Ch)[ebx]; \"; s1 = %u, s2 = %u\"", "jmp     short loc_A609"], ["push    eax", "lea     eax, (aWhy - 2BB6Ch)[ebx]; \"; why = \"", "push    eax; format", "push    len_0; maxlen", "push    str; s", "call    _snprintf", "mov     [esp+4Ch+var_4C], str; s", "call    _strlen", "add     esp, 10h", "test    i, i", "jz      short loc_A69A"], ["add     str, i", "sub     len_0, i"], ["push    eax", "push    eax", "lea     eax, (aUnknownAuthent - 2BB6Ch)[ebx]; \"(unknown authentication error - %d)\"", "mov     edx, dword ptr [esp+44h+e.ru]", "push    edx", "jmp     loc_A609"], ["call    __stack_chk_fail_local"]], "clnt_spcreateerror": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     edi, [esp+2Ch+s]", "test    edi, edi", "jz      loc_A8F8"], ["mov     esi, ds:(buf - 2BB6Ch)[ebx]", "test    esi, esi", "jz      loc_A8D8"], ["push    eax", "push    eax", "lea     eax, (aS - 2BB6Ch)[ebx]; \"%s: \"", "push    edi", "mov     edi, 0FFh", "push    eax", "push    0FFFFFFFFh", "push    1", "push    100h", "push    str", "call    ___snprintf_chk", "add     esp, 14h", "push    str; s", "call    _strlen", "add     esp, 10h", "sub     edi, eax", "mov     ebp, eax", "call    ___rpc_createerr", "sub     esp, 0Ch", "mov     eax, [eax]", "push    eax; num", "call    _clnt_sperrno", "add     esp, 0Ch", "push    edi; n", "push    eax; src", "push    str; dest", "call    _strncat", "call    ___rpc_createerr", "add     esp, 10h", "mov     eax, [eax]", "cmp     eax, 0Ch", "jz      loc_A898"], ["cmp     eax, 0Eh", "jz      short loc_A7F0"], ["mov     byte ptr [str+0FFh], 0", "add     esp, 1Ch", "mov     eax, str", "pop     ebx", "pop     str", "pop     edi", "pop     ebp", "retn"], ["push    ecx", "lea     eax, (asc_1D3CE - 2BB6Ch)[ebx]; \" - \"", "push    edi; n", "push    eax; src", "push    str; dest", "call    _strncat", "call    ___rpc_createerr", "pop     edi", "mov     eax, [eax+4]", "push    eax; num", "call    _clnt_sperrno", "add     esp, 10h", "test    err, err", "jz      short loc_A82B"], ["push    edx", "mov     edx, 0FBh", "sub     edx, i_0", "add     err, 5", "push    edx; n", "push    eax; src", "push    str; dest", "call    _strncat", "add     esp, 10h"], ["call    ___rpc_createerr", "mov     eax, [eax+4]", "sub     eax, 3", "cmp     eax, 1", "ja      short loc_A7DD"], ["sub     esp, 0Ch", "mov     edi, 100h", "sub     edi, i_0", "push    str; s", "call    _strlen", "add     esp, 10h", "sub     edi, i_0", "mov     [esp+2Ch+i], i_0", "call    ___rpc_createerr", "sub     esp, 0Ch", "mov     ebp, [eax+8]", "push    ebp; errnum", "call    _strerror", "mov     ebp, eax", "call    ___rpc_createerr", "add     esp, 0Ch", "mov     eax, [eax+8]", "push    ebp", "push    eax", "lea     eax, (aErrnoDS - 2BB6Ch)[ebx]; \": errno %d (%s)\"", "push    eax", "push    0FFFFFFFFh", "push    1", "push    len", "mov     edx, [esp+48h+i]", "add     edx, str", "push    edx", "call    ___snprintf_chk", "add     esp, 20h", "jmp     loc_A7DD"], ["push    eax", "lea     eax, (asc_1D3CE - 2BB6Ch)[ebx]; \" - \"", "push    edi; n", "push    eax; src", "push    str; dest", "call    _strncat", "call    ___rpc_createerr", "pop     edx", "mov     ecx, [eax+8]", "push    ecx; errnum", "call    _strerror", "add     esp, 0Ch", "mov     edx, eax", "mov     eax, 0FCh", "sub     eax, i_0", "push    eax; n", "push    edx; src", "push    str; dest", "call    _strncat", "add     esp, 10h", "jmp     loc_A7DD"], ["sub     esp, 0Ch", "push    100h; size", "call    _malloc", "add     esp, 10h", "mov     esi, eax", "mov     ds:(buf - 2BB6Ch)[ebx], eax", "test    str, str", "jnz     loc_A77C"], ["add     esp, 1Ch", "xor     esi, esi", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "clnt_raw_call": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 8Ch", "mov     esi, ds:(clntraw_private_0 - 2BB6Ch)[ebx]", "mov     edx, [esp+9Ch+xargs]", "mov     ecx, [esp+9Ch+argsp]", "mov     eax, [esp+9Ch+h]", "mov     [esp+9Ch+var_7C], edx", "mov     [esp+9Ch+var_78], ecx", "mov     edx, [esp+9Ch+xresults]", "mov     ecx, [esp+9Ch+resultsp]", "mov     [esp+9Ch+var_8C], eax", "mov     [esp+9Ch+var_74], edx", "mov     [esp+9Ch+var_70], ecx", "mov     edx, large gs:14h", "mov     [esp+9Ch+var_20], edx", "xor     edx, edx", "test    eax, eax", "jz      loc_ACD4"], ["sub     esp, 0Ch", "lea     ebp, (clntraw_lock - 2BB6Ch)[ebx]", "push    ebp; mutex", "call    _pthread_mutex_lock", "add     esp, 10h", "test    clp, clp", "jz      loc_ACA8"], ["sub     esp, 0Ch", "lea     edi, [clp+14h]", "push    ebp; mutex", "call    _pthread_mutex_unlock", "lea     eax, [clp+30h]", "mov     ebp, ds:(_null_auth_ptr - 2BB6Ch)[ebx]", "mov     [esp+0ACh+var_84], eax", "add     esp, 10h", "lea     eax, [esp+9Ch+var_60]", "mov     [esp+9Ch+var_80], eax", "jmp     call_again"], ["mov     eax, [esp+9Ch+proc]", "mov     [esp+9Ch+var_60], eax", "push    ecx", "push    ecx", "mov     edx, [esp+0A4h+var_80]", "mov     eax, [clp+18h]", "push    edx", "push    xdrs", "call    dword ptr [eax+4]", "add     esp, 10h", "test    eax, eax", "jz      loc_ABEB"], ["mov     eax, [esp+9Ch+var_8C]", "mov     eax, [eax]", "push    edx", "push    edx", "mov     edx, [eax+20h]", "push    xdrs", "push    eax", "call    dword ptr [edx+4]", "add     esp, 10h", "test    eax, eax", "jz      loc_ABEB"], ["push    eax", "push    eax", "mov     eax, [esp+0A4h+var_78]", "push    eax", "push    xdrs", "mov     eax, [esp+0ACh+var_7C]", "call    eax", "add     esp, 10h", "test    eax, eax", "jz      loc_ABEB"], ["sub     esp, 0Ch", "mov     eax, [clp+18h]", "push    xdrs", "call    dword ptr [eax+10h]", "mov     [esp+0ACh+fd], 400h; fd", "call    _svc_getreq_common", "mov     dword ptr [clp+14h], 1", "pop     eax", "mov     eax, [clp+18h]", "pop     edx", "push    0", "push    xdrs", "call    dword ptr [eax+14h]", "mov     eax, [ebp+0]", "mov     dword ptr [esp+0ACh+msg.ru+4], eax", "mov     eax, [ebp+4]", "mov     dword ptr [esp+0ACh+msg.ru+8], eax", "mov     eax, [ebp+8]", "mov     dword ptr [esp+0ACh+msg.ru+0Ch], eax", "mov     eax, [esp+0ACh+var_70]", "mov     dword ptr [esp+0ACh+msg.ru+14h], eax", "mov     eax, [esp+0ACh+var_74]", "mov     dword ptr [esp+0ACh+msg.ru+18h], eax", "pop     ecx", "pop     eax", "lea     eax, [esp+0A4h+msg]", "mov     [esp+0A4h+rmsg], eax", "push    eax; rmsg", "push    xdrs; xdrs", "call    _xdr_replymsg", "add     esp, 10h", "test    eax, eax", "jz      loc_AC10"], ["push    eax", "push    eax", "lea     eax, [esp+0A4h+error]", "push    eax; error", "mov     eax, [esp+0A8h+rmsg]", "push    eax; msg", "call    __seterr_reply", "mov     ecx, [esp+0ACh+error.re_status]", "add     esp, 10h", "test    status_0, status_0", "jz      loc_AC38"], ["mov     eax, [esp+9Ch+var_8C]", "mov     [esp+9Ch+var_88], status_0", "mov     eax, [eax]", "push    edx", "push    edx", "mov     status_0, [esp+0A4h+rmsg]", "mov     edx, [eax+20h]", "push    ecx", "push    eax", "call    dword ptr [edx+0Ch]", "add     esp, 10h", "test    eax, eax", "mov     ecx, [esp+9Ch+var_88]", "jz      short loc_ABF0"], ["mov     dword ptr [clp+14h], 0", "push    ecx", "push    ecx", "mov     eax, [clp+18h]", "push    0", "push    xdrs", "call    dword ptr [eax+14h]", "add     esp, 0Ch", "mov     eax, [clp+30h]", "mov     edx, [clp+60h]", "inc     eax", "mov     [clp+30h], eax", "mov     eax, [clp+18h]", "push    edx", "mov     ecx, [esp+0A4h+var_84]", "push    ecx", "push    xdrs", "call    dword ptr [eax+0Ch]", "add     esp, 10h", "test    eax, eax", "jnz     loc_AAB0"], ["mov     ecx, 1"], ["mov     eax, [esp+9Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_ACCF"], ["add     esp, 8Ch", "mov     eax, ecx", "pop     ebx", "pop     clp", "pop     edi", "pop     ebp", "retn"], ["mov     ebp, [clp+14h]", "mov     dword ptr [clp+14h], 2", "push    eax", "push    eax", "mov     eax, [esp+0A4h+rmsg]", "push    eax; rmsg", "push    xdrs; xdrs", "call    _xdr_replymsg", "mov     [clp+14h], op", "add     esp, 10h", "mov     ecx, 2", "jmp     short loc_ABF0"], ["mov     eax, [esp+9Ch+var_8C]", "mov     [esp+9Ch+rmsg], status_0", "mov     eax, [eax]", "push    ebp", "push    ebp", "mov     edx, [eax+20h]", "lea     ebp, [esp+0A4h+msg.ru+4]", "push    ebp", "push    eax", "call    dword ptr [edx+8]", "add     esp, 10h", "test    eax, eax", "mov     ecx, [esp+9Ch+rmsg]", "jz      short loc_ACC5"], ["mov     eax, [esp+9Ch+var_8C]", "mov     [esp+9Ch+rmsg], ecx", "mov     eax, [eax]", "push    ecx", "push    ecx", "mov     edx, [eax+20h]", "push    ebp", "push    eax", "call    dword ptr [edx+8]", "add     esp, 10h", "test    eax, eax", "mov     ecx, [esp+9Ch+rmsg]", "jz      short loc_ACBE"], ["mov     edx, dword ptr [esp+9Ch+msg.ru+8]", "test    edx, edx", "jz      loc_ABF0"], ["mov     [esp+9Ch+rmsg], status_0", "mov     dword ptr [clp+14h], 2", "push    eax", "push    eax", "push    ebp; struct opaque_auth *", "push    xdrs; XDR *", "call    _xdr_opaque_auth", "add     esp, 10h", "mov     ecx, [esp+9Ch+rmsg]", "jmp     loc_ABF0"], ["sub     esp, 0Ch", "push    ebp; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "mov     ecx, 10h", "jmp     loc_ABF0"], ["mov     ecx, 7", "jmp     short loc_AC7A"], ["mov     ecx, 7", "jmp     loc_ABF0"], ["call    __stack_chk_fail_local"], ["lea     eax, (__PRETTY_FUNCTION___6614 - 2BB6Ch)[ebx]; \"clnt_raw_call\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_2 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/clnt_raw.c\"", "push    96h; line", "push    eax; file", "lea     eax, (aHNull - 2BB6Ch)[ebx]; \"h != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "clnt_raw_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 68h", "lea     edi, (clntraw_lock - 2BB6Ch)[ebx]", "mov     eax, large gs:14h", "mov     [esp+78h+var_20], eax", "xor     eax, eax", "push    edi; mutex", "call    _pthread_mutex_lock", "mov     ebp, ds:(clntraw_private_0 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    clp, clp", "jz      loc_AE48"], ["mov     eax, [esp+6Ch+prog]", "mov     [esp+6Ch+var_60], clp", "mov     dword ptr [esp+6Ch+call_msg.ru+4], eax", "mov     eax, [esp+6Ch+vers]", "mov     dword ptr [esp+6Ch+call_msg.ru+8], eax", "mov     [esp+6Ch+call_msg.rm_direction], 0", "mov     dword ptr [esp+6Ch+call_msg.ru], 2", "push    0; xop", "push    18h; size", "lea     eax, [clp+30h]", "push    eax; addr", "lea     esi, [clp+14h]", "push    xdrs; xdrs", "call    _xdrmem_create", "pop     ecx", "pop     eax", "lea     eax, [esp+74h+call_msg]", "push    eax; cmsg", "push    xdrs; xdrs", "call    _xdr_callhdr", "add     esp, 10h", "test    eax, eax", "jz      loc_AE30"], ["sub     esp, 0Ch", "mov     eax, [client+18h]", "push    xdrs", "call    dword ptr [eax+10h]", "mov     [client+60h], eax", "mov     eax, [client+18h]", "add     esp, 10h", "mov     eax, [eax+1Ch]", "test    eax, eax", "jz      short loc_ADBB"], ["sub     esp, 0Ch", "push    xdrs", "call    eax", "add     esp, 10h"], ["push    2; xop", "mov     eax, [client+2Ch]", "push    2260h; size", "push    eax; addr", "push    xdrs; xdrs", "call    _xdrmem_create", "lea     xdrs, (ops_lock - 2BB6Ch)[ebx]", "mov     [esp+7Ch+mutex], esi; mutex", "call    _pthread_mutex_lock", "mov     edx, ds:(ops_6642 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    edx, edx", "jz      loc_AE80"], ["sub     esp, 0Ch", "push    esi; mutex", "call    _pthread_mutex_unlock", "lea     eax, (ops_6642 - 2BB6Ch)[ebx]", "mov     [client+4], eax", "call    _authnone_create", "mov     [client+0], eax", "mov     [esp+7Ch+mutex], edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h"], ["mov     eax, [esp+6Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_AEE5"], ["mov     eax, [esp+6Ch+var_60]", "add     esp, 5Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     clp", "retn"], ["sub     esp, 0Ch", "lea     eax, (aClntrawCreateF - 2BB6Ch)[ebx]; \"clntraw_create - Fatal header serializa\"...", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     loc_AD98"], ["push    eax", "push    eax", "push    64h ; 'd'; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     clp, eax", "test    clp, clp", "jz      loc_AEEA"], ["mov     esi, ds:(__rpc_rawcombuf_ptr - 2BB6Ch)[ebx]", "mov     clp, [esi]", "test    eax, eax", "jz      short loc_AED0"], ["mov     [clp+2Ch], eax", "mov     ds:(clntraw_private_0 - 2BB6Ch)[ebx], clp", "jmp     loc_AD4B"], ["lea     eax, (clnt_raw_call - 2BB6Ch)[ebx]", "mov     ds:(ops_6642 - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_raw_abort - 2BB6Ch)[ebx]", "mov     ds:(dword_2C0E0 - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_raw_geterr - 2BB6Ch)[ebx]", "mov     ds:(dword_2C0E4 - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_raw_freeres - 2BB6Ch)[ebx]", "mov     ds:(dword_2C0E8 - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_raw_destroy - 2BB6Ch)[ebx]", "mov     ds:(dword_2C0EC - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_raw_control - 2BB6Ch)[ebx]", "mov     ds:(dword_2C0F0 - 2BB6Ch)[ebx], eax", "jmp     loc_ADEB"], ["push    eax", "push    eax", "push    1; size", "push    2260h; nmemb", "call    _calloc", "add     esp, 10h", "mov     [esi], eax", "jmp     short loc_AE6C"], ["call    __stack_chk_fail_local"], ["sub     esp, 0Ch", "push    edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "mov     [esp+6Ch+var_60], 0", "jmp     loc_AE10"]], "rpc_call": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "lea     ebp, (rpc_call_key - 2BB6Ch)[ebx]", "mov     eax, [esp+4Ch+host]", "mov     edi, [esp+4Ch+nettype]", "mov     [esp+4Ch+s], eax", "mov     eax, [esp+4Ch+inproc]", "mov     [esp+4Ch+var_3C], eax", "mov     eax, [esp+4Ch+in]", "mov     [esp+4Ch+var_38], eax", "mov     eax, [esp+4Ch+outproc]", "mov     [esp+4Ch+var_34], eax", "mov     eax, [esp+4Ch+out]", "mov     [esp+4Ch+var_30], eax", "mov     eax, large gs:14h", "mov     [esp+4Ch+var_20], eax", "xor     eax, eax", "mov     eax, [ebp+0]", "cmp     eax, 0FFFFFFFFh", "jz      loc_B1A0"], ["sub     esp, 0Ch", "push    eax; key", "call    _pthread_getspecific", "add     esp, 10h", "mov     esi, eax", "test    rcp, rcp", "jz      loc_B1D0"], ["mov     rcp, [rcp]", "test    edi, edi", "jz      short loc_AFCD"], ["cmp     byte ptr [edi], 0", "jnz     short loc_AFD3"], ["lea     edi, (aNetpath - 2BB6Ch)[ebx]; \"netpath\""], ["test    eax, eax", "jnz     loc_B120"], ["mov     ebp, [rcp+4]"], ["mov     dword ptr [rcp], 0", "test    ebp, ebp", "jz      short loc_AFF5"], ["sub     esp, 0Ch", "mov     eax, [ebp+4]", "push    ebp", "call    dword ptr [eax+10h]", "add     esp, 10h"], ["push    edi; prot", "mov     ecx, [esp+50h+versnum]", "push    ecx; vers", "mov     ebp, [esp+54h+prognum]", "push    ebp; prog", "mov     eax, [esp+58h+s]", "push    eax; host", "call    _clnt_create", "mov     [rcp+4], eax", "call    _getpid", "add     esp, 10h", "mov     [rcp+8], eax", "mov     eax, [rcp+4]", "test    eax, eax", "jz      loc_B218"], ["mov     [esp+4Ch+timeout.tv_usec], 0", "mov     [esp+4Ch+timeout.tv_sec], 5", "push    edx", "mov     edx, [eax+4]", "lea     ecx, [esp+50h+timeout]", "push    ecx", "push    4", "push    eax", "call    dword ptr [edx+14h]", "add     esp, 0Ch", "mov     eax, [rcp+4]", "lea     ecx, [esp+50h+fd]", "mov     edx, [eax+4]", "push    ecx", "push    6", "push    eax", "call    dword ptr [edx+14h]", "add     esp, 10h", "test    eax, eax", "jnz     loc_B188"], ["mov     eax, [esp+4Ch+prognum]", "sub     esp, 0Ch", "mov     [rcp+0Ch], eax", "mov     eax, [esp+58h+versnum]", "mov     [rcp+10h], eax", "mov     eax, [esp+58h+s]", "push    eax; s", "call    _strlen", "add     esp, 10h", "mov     ebp, eax", "cmp     eax, 3Fh ; '?'", "jbe     short loc_B0E0"], ["mov     dword ptr [rcp], 0"], ["mov     ebp, [rcp+4]"], ["mov     eax, [ebp+4]", "push    0", "push    19h", "mov     edx, [esp+54h+var_30]", "push    edx", "mov     ecx, [esp+58h+var_34]", "push    ecx", "mov     ebx, [esp+5Ch+var_38]", "push    ebx", "mov     edi, [esp+60h+var_3C]", "push    edi", "mov     edx, [esp+64h+procnum]", "push    edx", "push    ebp", "call    dword ptr [eax]", "add     esp, 20h", "test    clnt_stat, clnt_stat", "jnz     short loc_B0D8"], ["mov     ecx, [esp+4Ch+var_20]", "xor     ecx, large gs:14h", "jnz     loc_B24F"], ["add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     dword ptr [rcp], 0", "jmp     short loc_B0B9"], ["sub     esp, 0Ch", "push    edi; s", "call    _strlen", "add     esp, 10h", "cmp     eax, 1Fh", "ja      short loc_B086"], ["push    40h ; '@'", "inc     ebp", "push    ebp", "lea     eax, [rcp+14h]", "mov     ecx, [esp+54h+s]", "push    ecx", "push    eax", "call    ___memcpy_chk", "pop     ebp", "pop     eax", "lea     eax, [rcp+54h]", "push    edi; src", "push    eax; dest", "call    _strcpy", "mov     dword ptr [rcp], 1", "add     esp, 10h", "jmp     loc_B08C"], ["mov     ebp, [rcp+8]", "call    _getpid", "cmp     ebp, eax", "mov     ebp, [rcp+4]", "jnz     loc_AFDE"], ["mov     eax, [esp+4Ch+prognum]", "cmp     [rcp+0Ch], eax", "jnz     loc_AFDE"], ["mov     eax, [esp+4Ch+versnum]", "cmp     [rcp+10h], eax", "jnz     loc_AFDE"], ["push    ecx", "lea     eax, [rcp+14h]", "push    ecx", "mov     edx, [esp+54h+s]", "push    edx; s2", "push    eax; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "jnz     loc_AFDE"], ["push    edx", "lea     eax, [rcp+54h]", "push    edx", "push    nettype_0; s2", "push    eax; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "jz      loc_B08F"], ["jmp     loc_AFDE"], ["push    eax", "push    1", "push    2; cmd", "mov     eax, [esp+58h+fd]", "push    eax; fd", "call    _fcntl", "add     esp, 10h", "jmp     loc_B061"], ["sub     esp, 0Ch", "lea     esi, (tsd_lock - 2BB6Ch)[ebx]", "push    esi; mutex", "call    _pthread_mutex_lock", "add     esp, 10h", "cmp     dword ptr [ebp+0], 0FFFFFFFFh", "jz      loc_B238"], ["sub     esp, 0Ch", "push    esi; mutex", "call    _pthread_mutex_unlock", "mov     eax, [ebp+0]", "add     esp, 10h", "jmp     loc_AFAC"], ["sub     esp, 0Ch", "push    74h ; 't'; size", "call    _malloc", "add     esp, 10h", "mov     rcp, eax", "test    rcp, rcp", "jz      short loc_B254"], ["push    ecx", "push    ecx", "push    rcp; pointer", "mov     ebp, [ebp+0]", "push    ebp; key", "call    _pthread_setspecific", "add     esp, 10h", "mov     dword ptr [rcp], 0", "mov     dword ptr [rcp+4], 0", "test    edi, edi", "jz      short loc_B228"], ["cmp     byte ptr [edi], 0", "jnz     loc_AFDB"], ["lea     edi, (aNetpath - 2BB6Ch)[ebx]; \"netpath\"", "jmp     loc_AFDB"], ["call    ___rpc_createerr", "mov     eax, [eax]", "jmp     loc_B0B9"], ["lea     edi, (aNetpath - 2BB6Ch)[ebx]; \"netpath\"", "jmp     loc_AFF5"], ["push    eax", "push    eax", "lea     eax, (rpc_call_destroy - 2BB6Ch)[ebx]", "push    eax; destr_function", "push    ebp; key", "call    _pthread_key_create", "add     esp, 10h", "jmp     loc_B1BC"], ["call    __stack_chk_fail_local"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Ch", "call    ___errno_location", "mov     rcp, eax", "call    ___rpc_createerr", "mov     edx, [esi]", "mov     [eax+8], edx", "call    ___rpc_createerr", "mov     eax, [eax]", "jmp     loc_B0B9"]], "clnt_vc_destroy": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 138h", "mov     eax, [esp+148h+cl_0]", "lea     esi, [esp+148h+newmask]", "mov     [esp+148h+ptr], eax", "mov     ebp, [eax+8]", "mov     ecx, large gs:14h", "mov     [esp+148h+var_20], ecx", "xor     ecx, ecx", "mov     edx, [ct_0+0]", "mov     [esp+148h+ct_fd], edx", "push    esi; set", "call    _sigfillset", "add     esp, 0Ch", "lea     eax, [esp+140h+mask]", "mov     [esp+140h+var_134], eax", "push    eax; oldmask", "push    esi; newmask", "push    2; how", "call    _pthread_sigmask", "lea     esi, (clnt_fd_lock - 2BB6Ch)[ebx]", "mov     [esp+14Ch+mutex], esi; mutex", "call    _pthread_mutex_lock", "mov     edx, [esp+14Ch+ct_fd]", "lea     eax, [edx+edx*2]", "shl     eax, 4", "mov     [esp+14Ch+ct_fd], eax", "mov     eax, ds:(vc_fd_locks - 2BB6Ch)[ebx]", "add     esp, 10h", "mov     eax, [eax+edx*4]", "test    eax, eax", "jz      short loc_B34D"], ["mov     [esp+13Ch+ct], ct_0", "lea     edi, ds:0[edx*4]", "mov     ct_0, [esp+13Ch+ct_fd]", "xchg    ax, ax"], ["push    eax", "push    eax", "mov     eax, ds:(vc_cv - 2BB6Ch)[ebx]", "push    esi; mutex", "add     eax, ebp", "push    eax; cond", "call    _pthread_cond_wait", "mov     eax, ds:(vc_fd_locks - 2BB6Ch)[ebx]", "add     esp, 10h", "mov     eax, [eax+edi]", "test    eax, eax", "jnz     short loc_B328"], ["mov     ebp, [esp+13Ch+ct]"], ["mov     eax, [ebp+4]", "test    eax, eax", "jz      short loc_B360"], ["mov     eax, [ebp+0]", "cmp     eax, 0FFFFFFFFh", "jnz     loc_B410"], ["mov     eax, [ebp+4Ch]", "mov     eax, [eax+1Ch]", "test    eax, eax", "jz      short loc_B376"], ["sub     esp, 0Ch", "lea     edx, [ebp+48h]", "push    edx", "call    eax", "add     esp, 10h"], ["mov     eax, [ebp+1Ch]", "test    eax, eax", "jz      short loc_B389"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "push    ebp; ptr", "call    _free", "mov     eax, [esp+14Ch+ptr]", "add     esp, 10h", "mov     eax, [eax+0Ch]", "test    eax, eax", "jz      short loc_B3A9"], ["cmp     byte ptr [eax], 0", "jnz     loc_B438"], ["mov     eax, [esp+13Ch+ptr]", "mov     eax, [eax+10h]", "test    eax, eax", "jz      short loc_B3B8"], ["cmp     byte ptr [eax], 0", "jnz     short loc_B428"], ["sub     esp, 0Ch", "mov     eax, [esp+148h+ptr]", "push    eax; ptr", "call    _free", "mov     [esp+14Ch+mutex], esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     edx, [esp+144h+var_134]", "push    edx; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [esp+14Ch+ct_fd]", "mov     ecx, ds:(vc_cv - 2BB6Ch)[ebx]", "add     eax, ecx", "mov     [esp+14Ch+mutex], eax; cond", "call    _pthread_cond_signal", "add     esp, 10h", "mov     eax, [esp+13Ch+var_20]", "xor     eax, large gs:14h", "jnz     short loc_B449"], ["add     esp, 12Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    eax; fd", "call    _close", "add     esp, 10h", "jmp     loc_B360"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h", "jmp     short loc_B3B8"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h", "jmp     loc_B3A9"], ["call    __stack_chk_fail_local"]], "clnt_vc_freeres": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 12Ch", "mov     ecx, [esp+13Ch+xdr_res]", "mov     eax, [esp+13Ch+cl_0]", "mov     [esp+13Ch+var_134], ecx", "mov     ebp, [esp+13Ch+res_ptr]", "mov     ecx, large gs:14h", "mov     [esp+13Ch+var_20], ecx", "xor     ecx, ecx", "test    eax, eax", "jz      loc_B569"], ["mov     esi, [eax+8]", "sub     esp, 0Ch", "lea     eax, [ct+48h]", "mov     [esp+148h+var_138], eax", "lea     edi, [esp+148h+newmask]", "push    edi; set", "call    _sigfillset", "add     esp, 0Ch", "lea     eax, [esp+140h+mask]", "mov     [esp+140h+var_130], eax", "push    eax; oldmask", "push    edi; newmask", "push    2; how", "call    _pthread_sigmask", "lea     edi, (clnt_fd_lock - 2BB6Ch)[ebx]", "mov     [esp+14Ch+mutex], edi; mutex", "call    _pthread_mutex_lock", "jmp     short loc_B4EF"], ["lea     eax, [eax+eax*2]", "push    edx", "push    edx", "mov     ecx, ds:(vc_cv - 2BB6Ch)[ebx]", "shl     eax, 4", "push    edi; mutex", "add     eax, ecx", "push    eax; cond", "call    _pthread_cond_wait"], ["mov     eax, [ct]", "mov     edx, ds:(vc_fd_locks - 2BB6Ch)[ebx]", "add     esp, 10h", "mov     edx, [edx+eax*4]", "test    edx, edx", "jnz     short loc_B4D8"], ["mov     dword ptr [ct+48h], 2", "push    eax", "push    eax", "push    ebp", "mov     edx, [esp+148h+var_138]", "push    edx", "mov     eax, [esp+14Ch+var_134]", "call    eax", "mov     [esp+14Ch+mutex], edi; mutex", "mov     ebp, eax", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     ecx, [esp+144h+var_130]", "push    ecx; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [ct]", "mov     ct, ds:(vc_cv - 2BB6Ch)[ebx]", "lea     eax, [eax+eax*2]", "shl     eax, 4", "add     eax, esi", "mov     [esp+14Ch+mutex], eax; cond", "call    _pthread_cond_signal", "add     esp, 10h", "mov     eax, [esp+13Ch+var_20]", "xor     eax, large gs:14h", "jnz     short loc_B588"], ["add     esp, 12Ch", "mov     eax, dummy", "pop     ebx", "pop     esi", "pop     edi", "pop     dummy", "retn"], ["lea     eax, (__PRETTY_FUNCTION___8216 - 2BB6Ch)[ebx]; \"clnt_vc_freeres\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_3 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/clnt_vc.c\"", "push    1F1h; line", "push    eax; file", "lea     eax, (aClNull - 2BB6Ch)[ebx]; \"cl != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["call    __stack_chk_fail_local"]], "clnt_vc_control": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 12Ch", "mov     ecx, [esp+13Ch+infop]", "mov     eax, [esp+13Ch+cl_0]", "mov     [esp+13Ch+dest], ecx", "mov     esi, [esp+13Ch+request]", "mov     ecx, large gs:14h", "mov     [esp+13Ch+var_20], ecx", "xor     ecx, ecx", "test    eax, eax", "jz      loc_B835"], ["sub     esp, 0Ch", "mov     ebp, [eax+8]", "lea     edi, [esp+148h+newmask]", "push    edi; set", "call    _sigfillset", "add     esp, 0Ch", "lea     eax, [esp+140h+mask]", "mov     [esp+140h+var_134], eax", "push    eax; oldmask", "push    edi; newmask", "push    2; how", "call    _pthread_sigmask", "lea     edi, (clnt_fd_lock - 2BB6Ch)[ebx]", "mov     [esp+14Ch+mutex], edi; mutex", "call    _pthread_mutex_lock", "jmp     short loc_B627"], ["lea     eax, [eax+eax*2]", "push    edx", "push    edx", "mov     ecx, ds:(vc_cv - 2BB6Ch)[ebx]", "shl     eax, 4", "push    edi; mutex", "add     eax, ecx", "push    eax; cond", "call    _pthread_cond_wait"], ["mov     eax, [ct+0]", "mov     edx, ds:(vc_fd_locks - 2BB6Ch)[ebx]", "add     esp, 10h", "lea     edx, [edx+eax*4]", "mov     ecx, [edx]", "test    ecx, ecx", "jnz     short loc_B610"], ["sub     esp, 0Ch", "mov     dword ptr [edx], 1", "push    edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "cmp     esi, 8", "jz      loc_B6F0"], ["cmp     esi, 9", "jnz     short loc_B6D8"], ["mov     dword ptr [ct+4], 0"], ["sub     esp, 0Ch", "push    edi; mutex", "call    _pthread_mutex_lock", "mov     edx, [ct+0]", "mov     eax, ds:(vc_fd_locks - 2BB6Ch)[ebx]", "mov     dword ptr [eax+edx*4], 0", "mov     [esp+14Ch+mutex], edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     eax, [esp+144h+var_134]", "push    eax; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [ct+0]", "mov     edx, ds:(vc_cv - 2BB6Ch)[ebx]", "lea     eax, [eax+eax*2]", "shl     eax, 4", "add     eax, edx", "mov     [esp+14Ch+mutex], eax; cond", "call    _pthread_cond_signal", "add     esp, 10h", "mov     eax, 1"], ["mov     ecx, [esp+13Ch+var_20]", "xor     ecx, large gs:14h", "jnz     loc_B854"], ["add     esp, 12Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ct", "retn"], ["mov     eax, [esp+13Ch+dest]", "test    eax, eax", "jz      short _L56; jumptable 0000B6EE default case, cases 0,4,5,8,9,16"], ["cmp     esi, 10h; switch 17 cases", "ja      short _L56; jumptable 0000B6EE default case, cases 0,4,5,8,9,16"], ["mov     eax, ds:(jpt_B6EE - 2BB6Ch)[ebx+esi*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["mov     dword ptr [ct+4], 1", "jmp     loc_B663"], ["sub     esp, 0Ch; jumptable 0000B6EE default case, cases 0,4,5,8,9,16", "push    edi; mutex", "call    _pthread_mutex_lock", "mov     edx, [ct+0]", "mov     eax, ds:(vc_fd_locks - 2BB6Ch)[ebx]", "mov     dword ptr [eax+edx*4], 0", "mov     [esp+14Ch+mutex], edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     ecx, [esp+144h+var_134]", "push    ecx; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [ct+0]", "mov     esi, ds:(vc_cv - 2BB6Ch)[ebx]", "lea     eax, [eax+eax*2]", "shl     eax, 4", "add     eax, esi", "mov     [esp+14Ch+mutex], eax; cond", "call    _pthread_cond_signal", "add     esp, 10h", "xor     eax, eax", "jmp     loc_B6B6"], ["mov     eax, [esp+13Ch+dest]; jumptable 0000B6EE case 15", "mov     eax, [eax]", "bswap   eax", "mov     [ct+38h], tmp", "jmp     loc_B663"], ["mov     eax, [esp+13Ch+dest]; jumptable 0000B6EE case 1", "cmp     dword ptr [eax], 5F5E100h", "ja      short _L56; jumptable 0000B6EE default case, cases 0,4,5,8,9,16"], ["cmp     dword ptr [eax+4], 0F4240h", "ja      short _L56; jumptable 0000B6EE default case, cases 0,4,5,8,9,16"], ["mov     edx, [eax+4]", "mov     eax, [eax]", "mov     [ct+8], eax", "mov     [ct+0Ch], edx", "mov     dword ptr [ct+10h], 1", "jmp     loc_B663"], ["mov     ecx, [esp+13Ch+dest]; jumptable 0000B6EE case 2", "mov     eax, [ct+8]", "mov     edx, [ct+0Ch]", "mov     [ecx+4], edx", "mov     [ecx], eax", "jmp     loc_B663"], ["mov     eax, [ct+1Ch]; jumptable 0000B6EE case 3", "push    edx", "mov     ecx, [ct+18h]", "push    ecx; n", "push    eax; src", "mov     esi, [esp+148h+dest]", "push    esi; dest", "call    _memcpy", "add     esp, 10h", "jmp     loc_B663"], ["mov     ecx, [esp+13Ch+dest]; jumptable 0000B6EE case 6", "mov     eax, [ct+0]", "mov     [ecx], eax", "jmp     loc_B663"], ["mov     ecx, [esp+13Ch+dest]; jumptable 0000B6EE case 7", "mov     eax, [ct+14h]", "mov     [ecx], eax", "mov     eax, [ct+18h]", "mov     [ecx+4], eax", "mov     eax, [ct+1Ch]", "mov     [ecx+8], eax", "jmp     loc_B663"], ["mov     eax, [ct+2Ch]; jumptable 0000B6EE case 10", "mov     ecx, [esp+13Ch+dest]", "bswap   eax", "mov     [ecx], eax", "jmp     loc_B663"], ["mov     eax, [esp+13Ch+dest]; jumptable 0000B6EE case 11", "mov     eax, [eax]", "inc     eax", "bswap   eax", "mov     [ct+2Ch], eax", "jmp     loc_B663"], ["mov     eax, [ct+3Ch]; jumptable 0000B6EE case 12", "mov     ecx, [esp+13Ch+dest]", "bswap   eax", "mov     [ecx], ltmp", "jmp     loc_B663"], ["mov     eax, [esp+13Ch+dest]; jumptable 0000B6EE case 13", "mov     eax, [eax]", "bswap   eax", "mov     [ct+3Ch], tmp", "jmp     loc_B663"], ["mov     eax, [ct+38h]; jumptable 0000B6EE case 14", "mov     ecx, [esp+13Ch+dest]", "bswap   eax", "mov     [ecx], ltmp", "jmp     loc_B663"], ["lea     eax, (__PRETTY_FUNCTION___8235 - 2BB6Ch)[ebx]; \"clnt_vc_control\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_3 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/clnt_vc.c\"", "push    219h; line", "push    eax; file", "lea     eax, (aClNull - 2BB6Ch)[ebx]; \"cl != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["call    __stack_chk_fail_local"]], "read_vc": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, [esp+3Ch+buf]", "mov     ebp, [esp+3Ch+ct]", "mov     [esp+3Ch+var_34], eax", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     eax, [esp+3Ch+len]", "test    eax, eax", "jz      loc_B940"], ["mov     eax, [ct_0+8]", "mov     edi, [ct_0+0Ch]", "mov     edx, 10624DD3h", "mov     [esp+3Ch+fd.events], 1", "lea     eax, [eax+eax*4]", "lea     eax, [eax+eax*4]", "lea     esi, [eax+eax*4]", "mov     eax, edi", "imul    edx", "sar     edi, 1Fh", "mov     eax, [ct_0+0]", "sar     edx, 6", "mov     [esp+3Ch+fd.fd], eax", "sub     edx, edi", "lea     edi, [edx+esi*8]", "lea     esi, [esp+3Ch+fd]"], ["push    eax", "push    edi; timeout", "push    1; nfds", "push    esi; fds", "call    _poll", "add     esp, 10h", "cmp     eax, 0FFFFFFFFh", "jz      short loc_B948"], ["test    eax, eax", "jnz     short loc_B908"], ["mov     dword ptr [ct_0+20h], 5", "or      edx, 0FFFFFFFFh"], ["mov     eax, [esp+3Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_B98E"], ["add     esp, 2Ch", "mov     eax, edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ct_0", "retn"], ["push    eax", "mov     edx, [esp+40h+len]", "push    edx; nbytes", "mov     ecx, [esp+44h+var_34]", "mov     esi, [ct_0+0]", "push    ecx; buf", "push    esi; fd", "call    _read", "add     esp, 10h", "mov     edx, eax", "cmp     eax, 0FFFFFFFFh", "jz      short loc_B970"], ["test    eax, eax", "jnz     short loc_B8EB"], ["mov     dword ptr [ct_0+24h], 68h ; 'h'", "mov     dword ptr [ct_0+20h], 4", "or      edx, 0FFFFFFFFh", "jmp     short loc_B8EB"], ["xor     edx, edx", "jmp     short loc_B8EB"], ["mov     [esp+3Ch+var_30], eax", "call    ___errno_location", "mov     edx, [esp+3Ch+var_30]", "cmp     dword ptr [eax], 4", "jz      loc_B8CB"], ["mov     dword ptr [ct_0+20h], 4", "mov     eax, [eax]", "mov     [ct_0+24h], eax", "jmp     loc_B8EB"], ["mov     [esp+3Ch+var_34], eax", "call    ___errno_location", "mov     edx, [esp+3Ch+var_34]", "mov     eax, [eax]", "mov     dword ptr [ct_0+20h], 4", "mov     [ct_0+24h], eax", "jmp     loc_B8EB"], ["call    __stack_chk_fail_local"]], "write_vc": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     ecx, [esp+1Ch+len]", "mov     esi, [esp+1Ch+buf]", "test    cnt, cnt", "jle     short loc_BA88"], ["mov     edi, [esp+1Ch+len]", "jmp     short loc_BA50"], ["sub     cnt, i", "add     esi, i", "test    cnt, cnt", "jle     short loc_BA88"], ["push    eax", "push    cnt; n", "push    buf_0; buf", "mov     eax, [esp+28h+ct]", "mov     edx, [eax]", "push    edx; fd", "call    _write", "add     esp, 10h", "mov     ebp, eax", "cmp     i, 0FFFFFFFFh", "jnz     short loc_BA48"], ["call    ___errno_location", "mov     edx, [esp+1Ch+ct]", "mov     eax, [eax]", "mov     dword ptr [edx+20h], 3", "mov     [edx+24h], eax", "add     esp, 0Ch", "mov     eax, i", "pop     ebx", "pop     buf_0", "pop     cnt", "pop     i", "retn"], ["mov     ebp, [esp+1Ch+len]", "add     esp, 0Ch", "mov     eax, ebp", "pop     ebx", "pop     buf_0", "pop     edi", "pop     ebp", "retn"]], "clnt_vc_call": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 198h", "mov     ecx, [esp+1A8h+xdr_args]", "mov     eax, [esp+1A8h+cl_0]", "mov     [esp+1A8h+var_174], ecx", "mov     ecx, [esp+1A8h+args_ptr]", "mov     [esp+1A8h+var_170], ecx", "mov     ecx, [esp+1A8h+xdr_results]", "mov     [esp+1A8h+var_178], ecx", "mov     ecx, [esp+1A8h+results_ptr]", "mov     [esp+1A8h+var_160], ecx", "mov     ecx, [esp+1A8h+timeout.tv_sec]", "mov     [esp+1A8h+var_180], ecx", "mov     ecx, [esp+1A8h+timeout.tv_usec]", "mov     [esp+1A8h+var_188], eax", "mov     [esp+1A8h+var_168], ecx", "lea     esi, [esp+1A8h+newmask]", "mov     ecx, large gs:14h", "mov     [esp+1A8h+var_20], ecx", "xor     ecx, ecx", "mov     ebp, [eax+8]", "push    esi; set", "call    _sigfillset", "add     esp, 0Ch", "lea     eax, [esp+1A0h+mask]", "lea     edi, [ct+48h]", "mov     [esp+1A0h+var_16C], eax", "push    eax; oldmask", "push    esi; newmask", "push    2; how", "call    _pthread_sigmask", "lea     eax, (clnt_fd_lock - 2BB6Ch)[ebx]", "mov     [esp+1ACh+var_198], eax", "mov     [esp+1ACh+mutex], eax; mutex", "call    _pthread_mutex_lock", "jmp     short loc_BB6B"], ["push    edx", "lea     eax, [eax+eax*2]", "push    edx", "mov     esi, ds:(vc_cv - 2BB6Ch)[ebx]", "shl     eax, 4", "mov     ecx, [esp+1A4h+var_198]", "push    ecx; mutex", "add     eax, esi", "push    eax; cond", "call    _pthread_cond_wait"], ["mov     eax, [ct+0]", "mov     edx, ds:(vc_fd_locks - 2BB6Ch)[ebx]", "add     esp, 10h", "lea     edx, [edx+eax*4]", "mov     ecx, [edx]", "test    ecx, ecx", "jnz     short loc_BB50"], ["sub     esp, 0Ch", "mov     dword ptr [edx], 1", "mov     eax, [esp+1A8h+var_198]", "push    eax; mutex", "call    _pthread_mutex_unlock", "mov     eax, [ct+10h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_BBAB"], ["cmp     [esp+19Ch+var_180], 5F5E100h", "jbe     loc_BDE0"], ["mov     esi, [esp+19Ch+var_178]", "mov     [esp+19Ch+shipnow], 1", "test    esi, esi", "jz      loc_BE10"], ["lea     eax, [ct+2Ch]", "mov     [esp+19Ch+var_164], 3", "mov     [esp+19Ch+msg_x_id], eax", "mov     eax, ds:(xdr_void_ptr - 2BB6Ch)[ebx]", "mov     esi, ds:(_null_auth_ptr - 2BB6Ch)[ebx]", "mov     [esp+19Ch+var_194], eax"], ["mov     eax, [ct+2Ch]", "mov     dword ptr [ct+48h], 0", "dec     eax", "mov     dword ptr [ct+20h], 0", "mov     [ct+2Ch], eax", "bswap   eax", "mov     [esp+19Ch+x_id], eax", "push    eax", "mov     edx, [ct+44h]", "mov     eax, [ct+4Ch]", "push    edx", "mov     ecx, [esp+1A4h+msg_x_id]", "push    ecx", "push    xdrs", "call    dword ptr [eax+0Ch]", "add     esp, 10h", "test    eax, eax", "jz      loc_BE29"], ["mov     eax, [esp+19Ch+proc]", "mov     [esp+19Ch+var_154], eax", "push    ecx", "push    ecx", "mov     eax, [ct+4Ch]", "lea     edx, [esp+1A4h+var_154]", "push    edx", "push    xdrs", "call    dword ptr [eax+4]", "add     esp, 10h", "test    eax, eax", "jz      loc_BE29"], ["mov     eax, [esp+19Ch+var_188]", "mov     eax, [eax]", "push    edx", "push    edx", "mov     edx, [eax+20h]", "push    xdrs", "push    eax", "call    dword ptr [edx+4]", "add     esp, 10h", "test    eax, eax", "jz      loc_BE29"], ["mov     eax, [esp+19Ch+var_188]", "mov     ecx, [esp+19Ch+var_170]", "mov     eax, [eax]", "mov     edx, [eax+20h]", "push    ecx", "mov     ecx, [esp+1A0h+var_174]", "push    ecx", "push    xdrs", "push    eax", "call    dword ptr [edx+14h]", "add     esp, 10h", "test    eax, eax", "jz      loc_BE29"], ["push    ecx", "push    ecx", "mov     eax, [esp+1A4h+shipnow]", "push    eax; sendnow", "push    xdrs; xdrs", "call    _xdrrec_endofrecord", "add     esp, 10h", "test    eax, eax", "jz      loc_BEB0"], ["mov     eax, [esp+19Ch+shipnow]", "test    eax, eax", "jz      loc_BF13"], ["mov     eax, [esp+19Ch+var_180]", "or      eax, [esp+19Ch+var_168]", "jz      loc_BE4D"], ["lea     eax, [esp+19Ch+reply_msg]", "mov     dword ptr [ct+48h], 1", "mov     [esp+19Ch+rmsg], eax"], ["mov     eax, [esi]", "mov     dword ptr [esp+19Ch+reply_msg.ru+14h], 0", "mov     dword ptr [esp+19Ch+reply_msg.ru+4], eax", "mov     eax, [esi+4]", "mov     dword ptr [esp+19Ch+reply_msg.ru+8], eax", "mov     eax, [esi+8]", "mov     dword ptr [esp+19Ch+reply_msg.ru+0Ch], eax", "mov     eax, [esp+19Ch+var_194]", "mov     dword ptr [esp+19Ch+reply_msg.ru+18h], eax", "sub     esp, 0Ch", "push    xdrs; xdrs", "call    _xdrrec_skiprecord", "add     esp, 10h", "test    eax, eax", "jz      short loc_BD0B"], ["push    eax", "push    eax", "mov     eax, [esp+1A4h+rmsg]", "push    eax; rmsg", "push    xdrs; xdrs", "call    _xdr_replymsg", "add     esp, 10h", "test    eax, eax", "jnz     loc_BD80"], ["mov     eax, [ct+20h]", "test    eax, eax", "jz      short loc_BCB8"], ["sub     esp, 0Ch", "mov     esi, [esp+1A8h+var_198]", "push    esi; mutex"], ["call    _pthread_mutex_lock", "mov     edx, [ct+0]", "mov     eax, ds:(vc_fd_locks - 2BB6Ch)[ebx]", "mov     dword ptr [eax+edx*4], 0", "mov     [esp+1ACh+mutex], esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     eax, [esp+1A4h+var_16C]", "push    eax; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [ct+0]", "mov     edx, ds:(vc_cv - 2BB6Ch)[ebx]", "lea     eax, [eax+eax*2]", "shl     eax, 4", "add     eax, edx", "mov     [esp+1ACh+mutex], eax; cond", "call    _pthread_cond_signal", "mov     eax, [ct+20h]", "add     esp, 10h"], ["mov     ecx, [esp+19Ch+var_20]", "xor     ecx, large gs:14h", "jnz     loc_BFE5"], ["add     esp, 18Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ct", "retn"], ["mov     eax, [esp+19Ch+x_id]", "cmp     [esp+19Ch+reply_msg.rm_xid], eax", "jnz     loc_BCB8"], ["push    ecx", "lea     eax, [ct+20h]", "push    ecx", "push    eax; error", "mov     eax, [esp+1A8h+rmsg]", "push    eax; msg", "call    __seterr_reply", "mov     eax, [ct+20h]", "add     esp, 10h", "test    eax, eax", "jz      loc_BF6C"], ["dec     [esp+19Ch+var_164]", "jz      loc_BD0B"], ["mov     eax, [esp+19Ch+var_188]", "mov     eax, [eax]", "push    ecx", "push    ecx", "mov     ecx, [esp+1A4h+rmsg]", "mov     edx, [eax+20h]", "push    ecx", "push    eax", "call    dword ptr [edx+0Ch]", "add     esp, 10h", "test    eax, eax", "jnz     call_again"], ["jmp     loc_BD0B"], ["cmp     [esp+19Ch+var_168], 0F4240h", "ja      loc_BBAB"], ["mov     eax, [esp+19Ch+var_180]", "mov     esi, [esp+19Ch+var_178]", "mov     [ct+8], eax", "mov     eax, [esp+19Ch+var_168]", "mov     [ct+0Ch], eax", "mov     [esp+19Ch+shipnow], 1", "test    esi, esi", "jnz     loc_BBBF"], ["mov     eax, [esp+19Ch+var_180]", "or      eax, [esp+19Ch+var_168]", "setnz   al", "and     eax, 0FFh", "mov     [esp+19Ch+shipnow], eax", "jmp     loc_BBBF"], ["mov     esi, [ct+20h]", "test    esi, esi", "jnz     short loc_BE37"], ["mov     dword ptr [ct+20h], 1"], ["push    eax", "push    eax", "push    1; sendnow", "push    xdrs; xdrs", "call    _xdrrec_endofrecord", "mov     esi, [esp+1ACh+var_198]", "mov     [esp+1ACh+mutex], esi", "jmp     loc_BD13"], ["sub     esp, 0Ch", "mov     esi, [esp+1A8h+var_198]", "push    esi; mutex", "call    _pthread_mutex_lock", "mov     edx, [ct+0]", "mov     eax, ds:(vc_fd_locks - 2BB6Ch)[ebx]", "mov     dword ptr [eax+edx*4], 0", "mov     [esp+1ACh+mutex], esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     edx, [esp+1A4h+var_16C]", "push    edx; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [ct+0]", "mov     ecx, ds:(vc_cv - 2BB6Ch)[ebx]", "lea     eax, [eax+eax*2]", "shl     eax, 4", "add     eax, ecx", "mov     [esp+1ACh+mutex], eax; cond", "call    _pthread_cond_signal", "mov     dword ptr [ct+20h], 5", "add     esp, 10h", "mov     eax, 5", "jmp     loc_BD60"], ["sub     esp, 0Ch", "mov     esi, [esp+1A8h+var_198]", "push    esi; mutex", "call    _pthread_mutex_lock", "mov     edx, [ct+0]", "mov     eax, ds:(vc_fd_locks - 2BB6Ch)[ebx]", "mov     dword ptr [eax+edx*4], 0", "mov     [esp+1ACh+mutex], esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     eax, [esp+1A4h+var_16C]", "push    eax; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [ct+0]", "mov     edx, ds:(vc_cv - 2BB6Ch)[ebx]", "lea     eax, [eax+eax*2]", "shl     eax, 4", "add     eax, edx", "mov     [esp+1ACh+mutex], eax; cond", "call    _pthread_cond_signal", "mov     dword ptr [ct+20h], 3", "add     esp, 10h", "mov     eax, 3", "jmp     loc_BD60"], ["sub     esp, 0Ch", "mov     esi, [esp+1A8h+var_198]", "push    esi; mutex", "call    _pthread_mutex_lock", "mov     edx, [ct+0]", "mov     eax, ds:(vc_fd_locks - 2BB6Ch)[ebx]", "mov     dword ptr [eax+edx*4], 0", "mov     [esp+1ACh+mutex], esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     esi, [esp+1A4h+var_16C]", "push    esi; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [ct+0]", "mov     xdrs, ds:(vc_cv - 2BB6Ch)[ebx]", "lea     eax, [eax+eax*2]", "shl     eax, 4", "add     eax, edi", "mov     [esp+1ACh+mutex], eax; cond", "call    _pthread_cond_signal", "add     esp, 10h", "xor     eax, eax", "jmp     loc_BD60"], ["mov     eax, [esp+19Ch+var_188]", "mov     eax, [eax]", "push    edx", "push    edx", "mov     edx, [eax+20h]", "lea     esi, [esp+1A4h+reply_msg.ru+4]", "push    esi", "push    eax", "call    dword ptr [edx+8]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_BFB9"], ["mov     dword ptr [ct+20h], 7", "mov     dword ptr [ct+24h], 6"], ["mov     eax, dword ptr [esp+19Ch+reply_msg.ru+8]", "test    eax, eax", "jz      loc_BD0B"], ["mov     dword ptr [ct+48h], 2", "push    eax", "push    eax", "push    esi; struct opaque_auth *", "push    xdrs; XDR *", "call    _xdr_opaque_auth", "add     esp, 10h", "jmp     loc_BD0B"], ["mov     eax, [esp+19Ch+var_188]", "mov     eax, [eax]", "mov     edx, [eax+20h]", "push    [esp+19Ch+var_160]", "push    [esp+1A0h+var_178]", "push    xdrs", "push    eax", "call    dword ptr [edx+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_BF95"], ["cmp     dword ptr [ct+20h], 0", "jnz     short loc_BF95"], ["mov     dword ptr [ct+20h], 2", "jmp     short loc_BF95"], ["call    __stack_chk_fail_local"]], "clnt_vc_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 308h", "mov     esi, [esp+318h+raddr]", "mov     [esp+318h+var_304], esi", "mov     eax, large gs:14h", "mov     [esp+318h+var_20], eax", "xor     eax, eax", "lea     eax, (disrupt_lock - 2BB6Ch)[ebx]", "mov     [esp+318h+mutex], eax", "push    eax; mutex", "call    _pthread_mutex_lock", "mov     edi, ds:(disrupt_8154 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    edi, edi", "jnz     short loc_C042"], ["mov     ds:(disrupt_8154 - 2BB6Ch)[ebx], esi"], ["sub     esp, 0Ch", "mov     eax, [esp+318h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "pop     eax", "pop     edx", "push    14h; size", "push    1; nmemb", "call    _calloc", "pop     ecx", "mov     ebp, eax", "pop     esi", "push    60h ; '`'; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     esi, eax", "test    cl_0_0, cl_0_0", "jz      loc_C570"], ["test    ct_0, ct_0", "jz      loc_C570"], ["sub     esp, 0Ch", "mov     dword ptr [ct_0+1Ch], 0", "lea     edi, [esp+318h+newmask]", "push    edi; set", "call    _sigfillset", "add     esp, 0Ch", "lea     eax, [esp+310h+mask]", "mov     [esp+310h+var_300], eax", "push    eax; oldmask", "push    edi; newmask", "push    2; how", "call    _pthread_sigmask", "lea     edi, (clnt_fd_lock - 2BB6Ch)[ebx]", "mov     [esp+31Ch+size], edi; mutex", "call    _pthread_mutex_lock", "mov     eax, ds:(vc_fd_locks - 2BB6Ch)[ebx]", "add     esp, 10h", "test    eax, eax", "jz      loc_C448"], ["mov     eax, ds:(vc_cv - 2BB6Ch)[ebx]", "test    eax, eax", "jz      loc_C5CE"], ["sub     esp, 0Ch", "push    edi; mutex", "call    _pthread_mutex_unlock", "mov     [esp+31Ch+slen], 80h", "lea     eax, [esp+31Ch+ss_0]", "add     esp, 0Ch", "lea     edx, [esp+310h+slen]", "push    edx; len", "push    eax; addr", "mov     eax, [esp+318h+fd]", "push    eax; fd", "call    _getpeername", "add     esp, 10h", "test    eax, eax", "jns     loc_C1B8"], ["call    ___errno_location", "mov     edi, eax", "cmp     dword ptr [eax], 6Bh ; 'k'", "jz      short loc_C188"], ["call    ___rpc_createerr", "mov     dword ptr [ce], 0Ch", "mov     edx, [edi]", "mov     [ce+8], edx", "push    edx", "push    0; oldmask", "mov     ecx, [esp+314h+var_300]", "push    ecx; newmask", "push    2; how", "call    _pthread_sigmask", "add     esp, 10h"], ["mov     eax, [esi+18h]", "test    eax, eax", "jnz     loc_C3E0"], ["sub     esp, 0Ch", "push    esi; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "push    ebp; ptr", "xor     ebp, ebp", "call    _free", "add     esp, 10h"], ["mov     eax, [esp+30Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_C56B"], ["add     esp, 2FCh", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    eax", "mov     eax, [esp+310h+var_304]", "mov     edx, [eax+4]", "mov     ecx, [eax+8]", "push    edx; len", "push    ecx; addr", "mov     eax, [esp+318h+fd]", "push    eax; fd", "call    _connect", "add     esp, 10h", "test    eax, eax", "jns     short loc_C1B8"], ["cmp     dword ptr [edi], 6Ah ; 'j'", "jnz     loc_C119"], ["lea     esi, [esi+0]"], ["push    eax", "push    eax", "lea     eax, [esp+314h+si_0]", "push    eax; sip", "mov     eax, [esp+318h+fd]", "push    eax; fd", "call    ___rpc_fd2sockinfo", "add     esp, 10h", "test    eax, eax", "jz      loc_C13B"], ["push    eax", "push    0; oldmask", "mov     eax, [esp+314h+var_300]", "push    eax; newmask", "push    2; how", "call    _pthread_sigmask", "mov     ecx, [esp+31Ch+var_304]", "mov     eax, [esp+31Ch+fd]", "mov     dword ptr [esi+4], 0", "mov     [esi], eax", "mov     dword ptr [esi+0Ch], 0", "mov     dword ptr [esi+10h], 0", "mov     edi, [ecx]", "mov     [esp+31Ch+size], edi; size", "call    _malloc", "add     esp, 10h", "mov     [esi+1Ch], eax", "test    eax, eax", "jz      loc_C13B"], ["mov     ecx, [esp+30Ch+var_304]", "sub     esp, 4", "mov     edx, [ecx+4]", "push    edx; n", "mov     [esp+314h+var_304], edx", "mov     edx, [ecx+8]", "push    edx; src", "push    eax; dest", "call    _memcpy", "mov     edx, [esp+31Ch+var_304]", "mov     [esi+14h], edi", "mov     [esi+18h], edx", "pop     ecx", "pop     edi", "push    0; tz", "lea     eax, [esp+318h+now]", "push    eax; tv", "call    _gettimeofday", "pop     eax", "mov     eax, [esp+318h+mutex]", "push    eax; mutex", "call    _pthread_mutex_lock", "mov     edi, ds:(disrupt_8154 - 2BB6Ch)[ebx]", "inc     edi", "mov     ds:(disrupt_8154 - 2BB6Ch)[ebx], edi", "call    _getpid", "mov     edx, [esp+31Ch+now.tv_sec]", "mov     ecx, [esp+31Ch+now.tv_usec]", "xor     edi, edx", "xor     edi, ecx", "xor     edi, eax", "mov     [esp+31Ch+call_msg.rm_xid], edi", "pop     edi", "mov     eax, [esp+318h+mutex]", "lea     edi, [esi+48h]", "push    eax; mutex", "call    _pthread_mutex_unlock", "mov     eax, [esp+31Ch+prog]", "mov     [esp+31Ch+call_msg.rm_direction], 0", "mov     dword ptr [esp+31Ch+call_msg.ru+4], eax", "mov     eax, [esp+31Ch+vers]", "mov     dword ptr [esp+31Ch+call_msg.ru+8], eax", "mov     dword ptr [esp+31Ch+call_msg.ru], 2", "push    0; xop", "lea     eax, [esi+2Ch]", "push    18h; size", "push    eax; addr", "push    edi; xdrs", "call    _xdrmem_create", "add     esp, 18h", "lea     eax, [esp+314h+call_msg]", "push    eax; cmsg", "push    edi; xdrs", "call    _xdr_callhdr", "add     esp, 10h", "test    eax, eax", "jz      loc_C510"], ["sub     esp, 0Ch", "mov     eax, [esi+4Ch]", "push    edi", "call    dword ptr [eax+10h]", "mov     [esi+44h], eax", "mov     eax, [esi+4Ch]", "add     esp, 10h", "mov     eax, [eax+1Ch]", "test    eax, eax", "jz      short loc_C2FE"], ["sub     esp, 0Ch", "push    edi", "call    eax", "add     esp, 10h"], ["sub     esp, 0Ch", "lea     edx, [esp+318h+set]", "push    edx; set", "mov     [esp+31Ch+var_304], edx", "call    _sigfillset", "add     esp, 0Ch", "lea     eax, [esp+310h+oldmask]", "mov     [esp+310h+mutex], eax", "push    eax; oldmask", "mov     edx, [esp+314h+var_304]", "push    edx; newmask", "push    2; how", "call    _pthread_sigmask", "lea     edx, (ops_lock - 2BB6Ch)[ebx]", "mov     [esp+31Ch+size], edx; mutex", "mov     [esp+31Ch+var_304], edx", "call    _pthread_mutex_lock", "mov     ecx, ds:(ops_8297 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    ecx, ecx", "mov     edx, [esp+30Ch+var_304]", "jz      loc_C3F8"], ["sub     esp, 0Ch", "push    edx; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     ecx, [esp+314h+mutex]", "push    ecx; newmask", "push    2; how", "call    _pthread_sigmask", "lea     eax, (ops_8297 - 2BB6Ch)[ebx]", "mov     [ebp+8], esi", "mov     [ebp+4], eax", "call    _authnone_create", "add     esp, 0Ch", "mov     esi, [esp+310h+sendsz]", "mov     [ebp+0], eax", "push    esi; size", "mov     eax, [esp+314h+si_0.si_proto]", "push    eax; proto", "mov     eax, [esp+318h+si_0.si_af]", "push    eax; af_0", "call    ___rpc_get_t_size", "add     esp, 0Ch", "mov     esi, eax", "mov     sendsz_0, [esp+310h+recvsz]", "push    eax; size", "mov     eax, [esp+314h+si_0.si_proto]", "push    eax; proto", "mov     eax, [esp+318h+si_0.si_af]", "push    eax; af_0", "call    ___rpc_get_t_size", "pop     edx", "lea     edx, (write_vc - 2BB6Ch)[ebx]", "pop     ecx", "push    edx; writeit", "lea     edx, (read_vc - 2BB6Ch)[ebx]", "push    edx; readit", "mov     edx, [ebp+8]", "push    edx; tcp_handle", "push    recvsz_0; recvsize", "push    sendsz_0; sendsize", "push    edi; xdrs", "call    _xdrrec_create", "add     esp, 20h", "jmp     loc_C160"], ["sub     esp, 0Ch", "mov     edx, [esi+1Ch]", "push    edx; ptr", "call    _free", "add     esp, 10h", "jmp     loc_C146"], ["lea     eax, (clnt_vc_call - 2BB6Ch)[ebx]", "mov     ds:(ops_8297 - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_vc_abort - 2BB6Ch)[ebx]", "mov     ds:(dword_2C0FC - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_vc_geterr - 2BB6Ch)[ebx]", "mov     ds:(dword_2C100 - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_vc_freeres - 2BB6Ch)[ebx]", "mov     ds:(dword_2C104 - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_vc_destroy - 2BB6Ch)[ebx]", "mov     ds:(dword_2C108 - 2BB6Ch)[ebx], eax", "lea     eax, (clnt_vc_control - 2BB6Ch)[ebx]", "mov     ds:(dword_2C10C - 2BB6Ch)[ebx], eax", "jmp     loc_C354"], ["call    ___rpc_dtbsize", "mov     [esp+30Ch+dtbsize], eax", "call    ___rpc_createerr", "cmp     [esp+30Ch+dtbsize], 5555555h", "mov     [esp+30Ch+cl_0], eax", "ja      loc_C538"], ["push    eax", "push    eax", "mov     eax, [esp+314h+dtbsize]", "shl     eax, 2", "push    fd_allocsz; size", "push    1; nmemb", "call    _calloc", "mov     [esp+31Ch+ptr], eax", "mov     ds:(vc_fd_locks - 2BB6Ch)[ebx], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_C60A"], ["mov     ecx, ds:(vc_cv - 2BB6Ch)[ebx]", "test    ecx, ecx", "jnz     loc_C657"], ["mov     eax, [esp+30Ch+dtbsize]", "push    edx", "push    edx", "lea     ecx, [eax+eax*2]", "shl     ecx, 4", "push    cv_allocsz_0; size", "mov     [esp+318h+cv_allocsz], cv_allocsz_0", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     edx, eax", "mov     ds:(vc_cv - 2BB6Ch)[ebx], eax", "test    eax, eax", "jz      loc_C63C"], ["mov     ecx, [esp+30Ch+cv_allocsz]", "add     ecx, eax", "mov     eax, [esp+30Ch+dtbsize]", "test    eax, eax", "jz      loc_C0D4"], ["mov     [esp+30Ch+dtbsize], ct_0", "mov     [esp+30Ch+cl_0], cl_0_0", "mov     ct_0, edx", "mov     cl_0_0, ecx", "lea     esi, [esi+0]"], ["push    eax", "push    eax", "push    0; cond_attr", "push    esi; cond", "add     esi, 30h ; '0'", "call    _pthread_cond_init", "add     esp, 10h", "cmp     esi, ebp", "jnz     short loc_C4E8"], ["mov     esi, [esp+30Ch+dtbsize]", "mov     ebp, [esp+30Ch+cl_0]", "jmp     loc_C0D4"], ["mov     eax, [esi+4]", "test    eax, eax", "jz      loc_C13B"], ["sub     esp, 0Ch", "mov     edi, [esp+318h+fd]", "push    edi; fd", "call    _close", "add     esp, 10h", "jmp     loc_C13B"], ["sub     esp, 0Ch", "push    edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "mov     eax, [esp+314h+var_300]", "push    eax; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [esp+31Ch+cl_0]", "add     esp, 10h", "mov     dword ptr [eax], 0Ch", "mov     dword ptr [eax+8], 4Bh ; 'K'", "jmp     loc_C13B"], ["call    __stack_chk_fail_local"], ["call    ___rpc_createerr", "mov     edi, eax", "mov     dword ptr [ce], 0Ch", "call    ___errno_location", "sub     esp, 0Ch", "mov     eax, [eax]", "mov     [ce+8], eax", "lea     eax, (__no_mem_str - 2BB6Ch)[ebx]; \"out of memory\"", "push    eax", "lea     eax, (clnt_vc_str - 2BB6Ch)[ebx]; \"clnt_vc_create\"", "push    eax", "lea     eax, (clnt_vc_errstr - 2BB6Ch)[ebx]; \"%s : %s\"", "push    eax", "push    1", "push    3", "call    ___syslog_chk", "add     esp, 20h", "test    cl_0_0, cl_0_0", "jnz     short loc_C5ED"], ["test    ct_0, ct_0", "jz      loc_C160"], ["cmp     dword ptr [ct_0+18h], 0", "jnz     short loc_C5FA"], ["sub     esp, 0Ch", "push    ct_0; ptr", "call    _free", "add     esp, 10h", "jmp     loc_C160"], ["lea     eax, (__PRETTY_FUNCTION___8166 - 2BB6Ch)[ebx]; \"clnt_vc_create\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_3 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/clnt_vc.c\"", "push    0F6h; line", "push    eax; file", "lea     eax, (aVcCvCondTNull - 2BB6Ch)[ebx]; \"vc_cv != (cond_t *) NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["test    ct_0, ct_0", "jz      loc_C152"], ["jmp     loc_C13B"], ["sub     esp, 0Ch", "push    dword ptr [ct_0+1Ch]; ptr", "call    _free", "add     esp, 10h", "jmp     short loc_C5BD"], ["sub     esp, 0Ch", "push    edi; mutex"], ["call    _pthread_mutex_unlock", "add     esp, 0Ch", "push    0; oldmask", "push    [esp+314h+var_300]; newmask", "push    2; how", "call    _pthread_sigmask", "mov     eax, [esp+31Ch+cl_0]", "add     esp, 10h", "mov     dword ptr [eax], 0Ch", "mov     dword ptr [eax+8], 0Ch", "jmp     loc_C13B"], ["sub     esp, 0Ch", "push    [esp+318h+ptr]; ptr", "call    _free", "mov     ds:(vc_fd_locks - 2BB6Ch)[ebx], 0", "mov     [esp+31Ch+size], edi", "jmp     short loc_C60E"], ["lea     eax, (__PRETTY_FUNCTION___8166 - 2BB6Ch)[ebx]; \"clnt_vc_create\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_3 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/clnt_vc.c\"", "push    0E4h; line", "push    eax; file", "lea     eax, (aVcCvCondTNull_0 - 2BB6Ch)[ebx]; \"vc_cv == (cond_t *) NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "__nc_error": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "lea     edi, (nc_key - 2BB6Ch)[ebx]", "mov     eax, [edi]", "cmp     eax, 0FFFFFFFFh", "jz      short loc_C6F0"], ["sub     esp, 0Ch", "push    eax; key", "call    _pthread_getspecific", "add     esp, 10h", "mov     esi, eax", "test    nc_addr, nc_addr", "jz      short loc_C718"], ["add     esp, 0Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     esi, (nc_lock_7536 - 2BB6Ch)[ebx]", "push    esi; mutex", "call    _pthread_mutex_lock", "add     esp, 10h", "cmp     dword ptr [edi], 0FFFFFFFFh", "jz      short loc_C768"], ["sub     esp, 0Ch", "push    esi; mutex", "call    _pthread_mutex_unlock", "mov     eax, [edi]", "add     esp, 10h", "jmp     short loc_C6CF"], ["sub     esp, 0Ch", "push    4; size", "call    _malloc", "add     esp, 10h", "mov     nc_addr, eax", "test    eax, eax", "jz      short loc_C75C"], ["push    eax", "mov     edx, [edi]", "push    eax", "push    esi; pointer", "push    edx; key", "call    _pthread_setspecific", "add     esp, 10h", "test    eax, eax", "jnz     short loc_C750"], ["mov     dword ptr [esi], 0", "add     esp, 0Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    esi; ptr", "call    _free", "add     esp, 10h"], ["lea     esi, (nc_error_7538 - 2BB6Ch)[ebx]", "jmp     loc_C6E1"], ["push    ecx", "mov     ebp, ds:(free_ptr - 2BB6Ch)[ebx]", "push    ecx", "push    ebp; destr_function", "push    edi; key", "call    _pthread_key_create", "mov     ebp, eax", "mov     [esp+2Ch+mutex], esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "test    error, error", "jnz     short loc_C75C"], ["mov     eax, [edi]", "jmp     loc_C6CF"]], "parse_ncp": [["push    ebp", "mov     ebp, ncp", "push    edi", "push    esi", "mov     esi, stringp", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     stringp, large gs:14h", "mov     [esp+3Ch+var_20], stringp", "xor     stringp, stringp", "call    __nc_error", "mov     edx, stringp", "mov     dword ptr [eax], 9"], ["mov     ecx, [edx]", "add     edx, 4", "lea     eax, [ecx-1010101h]", "xor     ecx, 0FFFFFFFFh", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_C7BF"], ["test    eax, 8080h", "jnz     short loc_C7E3"], ["shr     eax, 10h", "add     edx, 2"], ["mov     cl, al", "add     cl, al", "sbb     edx, 3", "mov     byte ptr [edx-1], 0", "push    eax", "lea     eax, (asc_1D890 - 2BB6Ch)[ebx]; \"\\t \"", "lea     edi, [esp+40h+lasts]", "mov     [esp+40h+save_ptr], edi", "push    edi; save_ptr", "mov     [esp+44h+delim], eax", "push    eax; delim", "push    stringp; s", "call    _strtok_r", "add     esp, 10h", "mov     [ncp+0], eax", "test    eax, eax", "jz      loc_C940"], ["push    eax", "push    edi; save_ptr", "mov     eax, [esp+44h+delim]", "push    eax; delim", "push    0; s", "call    _strtok_r", "add     esp, 10h", "test    tokenp, tokenp", "jz      loc_C940"], ["mov     ecx, 0Dh", "lea     edi, (aTpiCotsOrd - 2BB6Ch)[ebx]; \"tpi_cots_ord\"", "mov     stringp, tokenp", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jz      loc_C960"], ["mov     ecx, 9", "lea     edi, (aTpiCots - 2BB6Ch)[ebx]; \"tpi_cots\"", "mov     esi, eax", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     loc_C990"], ["mov     dword ptr [ncp+4], 2"], ["push    esi", "mov     edi, [esp+40h+save_ptr]", "push    edi; save_ptr", "mov     eax, [esp+44h+delim]", "push    eax; delim", "push    0; s", "call    _strtok_r", "add     esp, 10h", "test    tokenp, tokenp", "jz      loc_C940"], ["mov     dword ptr [ncp+8], 0", "mov     dl, [tokenp]", "test    dl, dl", "jz      short loc_C8BE"], ["cmp     dl, 62h ; 'b'", "jz      loc_C980"], ["cmp     dl, 76h ; 'v'", "jz      loc_C970"], ["cmp     dl, 2Dh ; '-'", "jnz     loc_C940"], ["mov     dl, [tokenp+1]", "inc     tokenp", "test    dl, dl", "jnz     short loc_C89B"], ["push    eax", "mov     edi, [esp+40h+save_ptr]", "push    edi; save_ptr", "mov     esi, [esp+44h+delim]", "push    esi; delim", "push    0; s", "call    _strtok_r", "add     esp, 10h", "mov     [ncp+0Ch], eax", "test    eax, eax", "jz      short loc_C940"], ["push    eax", "push    edi; save_ptr", "push    esi; delim", "push    0; s", "call    _strtok_r", "add     esp, 10h", "mov     [ncp+10h], eax", "test    eax, eax", "jz      short loc_C940"], ["push    eax", "push    edi; save_ptr", "push    esi; delim", "push    0; s", "call    _strtok_r", "add     esp, 10h", "mov     [ncp+14h], eax", "test    eax, eax", "jz      short loc_C940"], ["push    eax", "push    edi; save_ptr", "push    esi; delim", "push    0; s", "call    _strtok_r", "add     esp, 10h", "mov     esi, eax", "test    tokenp, tokenp", "jz      short loc_C940"], ["cmp     byte ptr [tokenp], 2Dh ; '-'", "jnz     loc_C9E8"], ["xor     tokenp, tokenp", "mov     al, [tokenp+1]", "test    eax, eax", "jnz     loc_C9E8"], ["mov     dword ptr [ncp+18h], 0", "mov     dword ptr [ncp+1Ch], 0", "jmp     short loc_C943"], ["or      eax, 0FFFFFFFFh"], ["mov     esi, [esp+3Ch+var_20]", "xor     esi, large gs:14h", "jnz     loc_CA55"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ncp", "retn"], ["mov     dword ptr [ncp+4], 3", "jmp     loc_C871"], ["mov     ecx, [ncp+8]", "or      ecx, 1", "mov     [ncp+8], ecx", "jmp     loc_C8B6"], ["mov     edx, [ncp+8]", "or      edx, 2", "mov     [ncp+8], edx", "jmp     loc_C8B6"], ["mov     ecx, 9", "lea     edi, (aTpiClts - 2BB6Ch)[ebx]; \"tpi_clts\"", "mov     esi, eax", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jz      short loc_C9D8"], ["mov     esi, eax", "mov     ecx, 8", "lea     edi, (aTpiRaw - 2BB6Ch)[ebx]; \"tpi_raw\"", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_C940"], ["mov     dword ptr [ncp+4], 4", "jmp     loc_C871"], ["mov     dword ptr [ncp+4], 1", "jmp     loc_C871"], ["mov     eax, [ncp+1Ch]", "test    eax, eax", "jz      short loc_C9FB"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "push    4; size", "call    _malloc", "mov     dword ptr [ncp+18h], 0", "mov     [ncp+1Ch], eax", "add     esp, 10h", "lea     cp, [cp+0]"], ["push    eax", "mov     edi, cp", "push    eax", "push    2Ch ; ','; token", "push    cp; npp", "call    __get_next_token", "mov     cp, eax", "mov     tokenp, [ncp+18h]", "mov     edx, [ncp+1Ch]", "lea     ecx, [eax+1]", "shl     eax, 2", "mov     [ncp+18h], ecx", "mov     [edx+eax], cp", "add     eax, 8", "pop     ecx", "pop     cp", "push    eax; size", "push    edx; ptr", "call    _realloc", "add     esp, 10h", "mov     [ncp+1Ch], eax", "test    cp, cp", "jnz     short loc_CA18"], ["xor     eax, eax", "jmp     loc_C943"], ["call    __stack_chk_fail_local"]], "setnetconfig": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "push    0Ch; size", "call    _malloc", "add     esp, 10h", "mov     esi, eax", "test    nc_vars, nc_vars", "jz      short loc_CACC"], ["sub     esp, 0Ch", "lea     edi, (nc_db_lock - 2BB6Ch)[ebx]", "push    edi; mutex", "call    _pthread_mutex_lock", "mov     ecx, ds:(ni.ref - 2BB6Ch)[ebx]", "mov     eax, ds:(nc_file - 2BB6Ch)[ebx]", "inc     ecx", "add     esp, 10h", "mov     ds:(ni.ref - 2BB6Ch)[ebx], ecx", "test    eax, eax", "jz      short loc_CAD8"], ["sub     esp, 0Ch", "mov     eax, ds:(ni.head - 2BB6Ch)[ebx]", "mov     dword ptr [nc_vars], 0FEEDh", "mov     dword ptr [nc_vars+4], 0", "mov     [nc_vars+8], eax", "push    edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h"], ["pop     ebx", "mov     eax, esi", "pop     esi", "pop     edi", "retn"], ["push    edx", "lea     eax, (aServerRejected_0+17h - 2BB6Ch)[ebx]; \"r\"", "push    edx", "push    eax; modes", "lea     eax, (aEtcNetconfig - 2BB6Ch)[ebx]; \"/etc/netconfig\"", "push    eax; filename", "call    _fopen", "add     esp, 10h", "mov     ds:(nc_file - 2BB6Ch)[ebx], eax", "test    eax, eax", "jnz     short loc_CAAA"], ["sub     esp, 0Ch", "mov     eax, ds:(ni.ref - 2BB6Ch)[ebx]", "dec     eax", "push    edi; mutex", "mov     ds:(ni.ref - 2BB6Ch)[ebx], eax", "call    _pthread_mutex_unlock", "call    __nc_error", "mov     dword ptr [eax], 2", "mov     [esp+1Ch+ptr], nc_vars; ptr", "call    _free", "xor     nc_vars, nc_vars", "add     esp, 10h", "jmp     short loc_CACC"]], "getnetconfig": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 28h", "lea     ebp, (nc_db_lock - 2BB6Ch)[ebx]", "push    ebp; mutex", "call    _pthread_mutex_lock", "mov     esi, [esp+3Ch+ncp]", "add     esp, 10h", "test    esi, esi", "jz      loc_CC58"], ["mov     esi, ds:(nc_file - 2BB6Ch)[ebx]", "test    esi, esi", "jz      loc_CC58"], ["mov     eax, [esp+2Ch+ncp]", "cmp     dword ptr [eax], 0FEEDh", "jnz     loc_CC58"], ["mov     ecx, [eax+4]", "test    ecx, ecx", "jz      loc_CC18"], ["mov     eax, [esp+2Ch+ncp]", "mov     eax, [eax+8]", "test    eax, eax", "jz      short loc_CB9C"], ["mov     eax, [eax+8]", "test    eax, eax", "jnz     loc_CC80"], ["cmp     dword ptr ds:(ni.eof - 2BB6Ch)[ebx], 1", "jz      loc_CC63"], ["sub     esp, 0Ch", "push    3E8h; size", "call    _malloc", "add     esp, 10h", "mov     edi, eax", "test    stringp, stringp", "jnz     short loc_CBD7"], ["jmp     loc_CC63"], ["cmp     byte ptr [stringp], 23h ; '#'", "jnz     loc_CC90"], ["mov     esi, ds:(nc_file - 2BB6Ch)[ebx]"], ["push    edx", "push    esi; stream", "push    3E8h; n", "push    stringp; s", "call    _fgets", "add     esp, 10h", "test    eax, eax", "jnz     short loc_CBC8"], ["sub     esp, 0Ch", "mov     esi, eax", "push    stringp; ptr", "call    _free", "mov     [esp+3Ch+mutex], ebp; mutex", "mov     dword ptr ds:(ni.eof - 2BB6Ch)[ebx], 1", "call    _pthread_mutex_unlock", "add     esp, 10h"], ["add     esp, 1Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     stringp", "pop     ebp", "retn"], ["mov     ecx, [esp+2Ch+ncp]", "mov     dword ptr [eax+4], 1", "mov     eax, ds:(ni.head - 2BB6Ch)[ebx]", "mov     [ecx+8], eax", "test    eax, eax", "jz      loc_CB9C"], ["sub     esp, 0Ch", "push    ebp; mutex", "call    _pthread_mutex_unlock", "mov     eax, [esp+3Ch+ncp]", "add     esp, 10h", "mov     eax, [eax+8]", "mov     esi, [eax+4]", "add     esp, 1Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["call    __nc_error", "mov     dword ptr [eax], 16h"], ["sub     esp, 0Ch", "xor     esi, esi", "push    ebp; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "mov     eax, esi", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ecx, [esp+2Ch+ncp]", "mov     [ecx+8], eax", "jmp     short loc_CC34"], ["sub     esp, 0Ch", "push    0Ch; size", "call    _malloc", "add     esp, 10h", "mov     esi, eax", "test    list, list", "jz      loc_CD5B"], ["sub     esp, 0Ch", "push    44h ; 'D'; size", "call    _malloc", "add     esp, 10h", "mov     edx, eax; ncp", "test    np_0, np_0", "jz      loc_CD55"], ["mov     [list+4], np_0", "mov     dword ptr [np_0+1Ch], 0", "mov     [esp+2Ch+np], np_0", "mov     dword ptr [list+8], 0", "mov     [list], stringp", "mov     np_0, stringp; stringp", "call    parse_ncp", "inc     eax", "jz      short loc_CD26"], ["mov     eax, ds:(ni.head - 2BB6Ch)[ebx]", "test    eax, eax", "jz      short loc_CD18"], ["mov     eax, ds:(ni.tail - 2BB6Ch)[ebx]", "mov     ds:(ni.tail - 2BB6Ch)[ebx], list", "mov     [eax+8], list"], ["mov     eax, [esp+2Ch+ncp]", "sub     esp, 0Ch", "mov     [eax+8], list", "mov     list, [list+4]", "push    ebp; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "mov     eax, result", "add     esp, 1Ch", "pop     ebx", "pop     result", "pop     stringp", "pop     ebp", "retn"], ["mov     ds:(ni.tail - 2BB6Ch)[ebx], list", "mov     ds:(ni.head - 2BB6Ch)[ebx], list", "jmp     short loc_CCF8"], ["sub     esp, 0Ch", "push    stringp; ptr", "call    _free", "mov     edx, [esp+3Ch+np]", "mov     [esp+3Ch+mutex], edx; ptr"], ["call    _free", "mov     [esp+3Ch+mutex], list; ptr", "call    _free", "xor     list, list", "mov     [esp+3Ch+mutex], ebp; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     loc_CC0B"], ["sub     esp, 0Ch", "push    stringp", "jmp     short loc_CD36"], ["sub     esp, 0Ch", "push    stringp; ptr", "call    _free", "mov     [esp+3Ch+mutex], ebp; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     loc_CC0B"]], "endnetconfig": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     edi, [esp+2Ch+nc_handlep]", "test    nc_handlep_0, nc_handlep_0", "jz      loc_CED2"], ["mov     eax, [nc_handlep_0]", "cmp     eax, 0FEEDh", "jz      short loc_CDB2"], ["cmp     eax, 0F00Dh", "jnz     loc_CED2"], ["sub     esp, 0Ch", "lea     eax, (nc_db_lock - 2BB6Ch)[ebx]", "mov     dword ptr [nc_handlep_0], 0", "mov     dword ptr [nc_handlep_0+4], 0", "mov     dword ptr [nc_handlep_0+8], 0", "mov     [esp+38h+mutex], eax", "push    eax; mutex", "call    _pthread_mutex_lock", "mov     eax, ds:(ni.ref - 2BB6Ch)[ebx]", "add     esp, 10h", "dec     eax", "mov     ds:(ni.ref - 2BB6Ch)[ebx], eax", "test    eax, eax", "jg      loc_CEB0"], ["mov     ebp, ds:(ni.head - 2BB6Ch)[ebx]", "mov     ds:(ni.ref - 2BB6Ch)[ebx], 0", "mov     dword ptr ds:(ni.eof - 2BB6Ch)[ebx], 0", "mov     ds:(ni.head - 2BB6Ch)[ebx], 0", "mov     ds:(ni.tail - 2BB6Ch)[ebx], 0", "test    p, p", "jz      short loc_CE67"], ["lea     esi, [esi+0]", "nop"], ["mov     esi, p", "mov     p, [p+8]", "mov     edx, [q+4]", "mov     ecx, [edx+1Ch]", "test    ecx, ecx", "jz      short loc_CE46"], ["sub     esp, 0Ch", "push    ecx; ptr", "call    _free", "mov     edx, [q+4]", "add     esp, 10h"], ["sub     esp, 0Ch", "push    edx; ptr", "call    _free", "pop     edx", "mov     ecx, [q]", "push    ecx; ptr", "call    _free", "mov     [esp+3Ch+ptr], q; ptr", "call    _free", "add     esp, 10h", "test    p, p", "jnz     short loc_CE28"], ["sub     esp, 0Ch", "push    nc_handlep_0; ptr", "call    _free", "mov     eax, ds:(nc_file - 2BB6Ch)[ebx]", "add     esp, 10h", "test    eax, eax", "jz      short loc_CE89"], ["sub     esp, 0Ch", "push    eax; stream", "call    _fclose", "add     esp, 10h"], ["sub     esp, 0Ch", "mov     ds:(nc_file - 2BB6Ch)[ebx], 0", "mov     eax, [esp+38h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "xor     eax, eax"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     nc_handlep_0", "pop     ebp", "retn"], ["sub     esp, 0Ch", "mov     esi, [esp+38h+mutex]", "push    esi; mutex", "call    _pthread_mutex_unlock", "mov     [esp+3Ch+ptr], nc_handlep_0; ptr", "call    _free", "add     esp, 10h", "xor     eax, eax", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     nc_handlep_0", "pop     ebp", "retn"], ["call    __nc_error", "mov     dword ptr [eax], 16h", "or      eax, 0FFFFFFFFh", "jmp     short loc_CEA5"]], "getnetconfigent": [["push    ebp", "mov     ebp, esp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "call    __nc_error", "mov     dword ptr [eax], 5Ch ; '\\'", "mov     eax, [ebp+netid]", "test    eax, eax", "jz      loc_D308"], ["mov     eax, [ebp+netid]", "cmp     byte ptr [eax], 0", "jz      loc_D308"], ["mov     esi, eax", "mov     ecx, 5", "lea     edi, (aUnix - 2BB6Ch)[ebx]; \"unix\"", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_D260"], ["sub     esp, 0Ch", "lea     eax, (nc_db_lock - 2BB6Ch)[ebx]", "mov     [ebp+mutex], eax", "push    eax; mutex", "call    _pthread_mutex_lock", "mov     eax, ds:(ni.head - 2BB6Ch)[ebx]", "add     esp, 10h", "test    eax, eax", "jz      short loc_CF9E"], ["mov     [ebp+list], eax", "mov     edi, [ebp+netid]", "nop"], ["mov     eax, [ebp+list]", "mov     esi, [eax+4]", "push    eax", "push    eax", "push    edi; s2", "mov     eax, [esi]", "push    eax; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "jz      loc_D0F0"], ["mov     eax, [ebp+list]", "mov     list_0, [list_0+8]", "mov     [ebp+list], eax", "test    list_0, list_0", "jnz     short loc_CF68"], ["cmp     dword ptr ds:(ni.eof - 2BB6Ch)[ebx], 1", "jz      loc_D0D0"], ["sub     esp, 0Ch", "mov     eax, [ebp+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "pop     eax", "lea     eax, (aServerRejected_0+17h - 2BB6Ch)[ebx]; \"r\"", "pop     edx", "push    eax; modes", "lea     eax, (aEtcNetconfig - 2BB6Ch)[ebx]; \"/etc/netconfig\"", "push    eax; filename", "call    _fopen", "add     esp, 10h", "mov     esi, eax", "test    file, file", "jz      loc_D330"], ["sub     esp, 0Ch", "push    3E8h; size", "call    _malloc", "add     esp, 10h", "mov     edi, eax", "test    linep, linep", "jz      loc_D347"], ["lea     linep, (asc_1D890 - 2BB6Ch)[ebx]; \"\\t \"", "mov     [ebp+accept], eax", "nop"], ["push    eax", "push    file; stream", "push    3E8h; n", "push    linep; s", "call    _fgets", "add     esp, 10h", "mov     [ebp+list], eax", "test    stringp, stringp", "jz      loc_D098"], ["cmp     byte ptr [stringp], 23h ; '#'", "jz      short loc_CFF0"], ["push    edx", "mov     ecx, [ebp+accept]", "push    edx", "push    ecx; accept", "push    stringp; s", "call    _strpbrk", "add     esp, 10h", "test    tmpp_0, tmpp_0", "jz      loc_D320"], ["sub     esp, 0Ch", "mov     [ebp+tmpp], tmpp_0", "mov     tmpp_0, [ebp+netid]", "push    eax; s", "call    _strlen", "mov     edx, [ebp+tmpp]", "mov     ecx, [ebp+list]", "sub     edx, stringp", "add     esp, 10h", "cmp     eax, len", "jnz     short loc_CFF0"], ["push    edx", "mov     stringp, [ebp+netid]", "push    eax; n", "mov     eax, [ebp+list]", "push    ecx; s2", "push    stringp; s1", "call    _strncmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_CFF0"], ["sub     esp, 0Ch", "push    44h ; 'D'; size", "call    _malloc", "add     esp, 10h", "mov     edx, eax; ncp", "mov     [ebp+list], eax", "test    ncp_0, ncp_0", "jz      short loc_D098"], ["mov     dword ptr [ncp_0+1Ch], 0", "mov     [ebp+tmpp], ncp_0", "mov     ncp_0, linep; stringp", "call    parse_ncp", "mov     edx, [ebp+tmpp]", "inc     eax", "jnz     short loc_D0AB"], ["sub     esp, 0Ch", "push    edx; ptr", "call    _free", "add     esp, 10h", "lea     file, [file+0]"], ["sub     esp, 0Ch", "push    linep; ptr", "call    _free", "add     esp, 10h", "mov     [ebp+list], 0"], ["sub     esp, 0Ch", "push    file; stream", "call    _fclose", "mov     eax, [ebp+list]", "add     esp, 10h", "lea     esp, [ebp-0Ch]", "pop     ebx", "pop     file", "pop     linep", "pop     ebp", "retn"], ["mov     [ebp+list], 0", "lea     esi, [esi+0]"], ["sub     esp, 0Ch", "mov     ecx, [ebp+mutex]", "push    ecx; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h"], ["mov     eax, [ebp+list]", "lea     esp, [ebp-0Ch]", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "mov     [ebp+var_28], esi", "push    3E8h; size", "call    _malloc", "add     esp, 10h", "mov     [ebp+accept], eax", "test    eax, eax", "jz      short loc_D0C2"], ["sub     esp, 0Ch", "push    44h ; 'D'; size", "call    _malloc", "add     esp, 10h", "mov     [ebp+list], eax", "test    eax, eax", "jz      loc_D36A"], ["mov     edi, [ebp+list]", "mov     esi, [ebp+var_28]", "mov     ecx, 11h", "rep movsd", "mov     esi, [ebp+var_28]", "push    edi", "push    3E8h", "mov     eax, [esi]", "mov     esi, [ebp+accept]", "push    eax", "push    esi", "call    ___strcpy_chk", "mov     edi, [ebp+list]", "mov     edx, esi", "mov     [edi], eax"], ["mov     ecx, [edx]", "add     edx, 4", "lea     eax, [ecx-1010101h]", "xor     ecx, 0FFFFFFFFh", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_D14B"], ["mov     [ebp+list], edi", "test    eax, 8080h", "jnz     short loc_D172"], ["shr     eax, 10h", "add     edx, 2"], ["mov     cl, al", "add     cl, al", "pop     eax", "sbb     edx, 3", "mov     eax, [ebp+var_28]", "lea     esi, [edx+1]", "mov     ecx, [eax+0Ch]", "pop     edx", "push    ecx; src", "push    esi; dest", "call    _strcpy", "mov     edi, [ebp+list]", "mov     [edi+0Ch], eax", "mov     [esp], esi; s", "call    _strlen", "pop     edx", "pop     ecx", "lea     esi, [esi+eax+1]", "mov     eax, [ebp+var_28]", "mov     eax, [eax+10h]", "push    eax; src", "push    esi; dest", "call    _strcpy", "mov     [edi+10h], eax", "mov     [ebp+list], edi", "mov     [esp], esi; s", "call    _strlen", "pop     edx", "lea     edi, [esi+eax+1]", "mov     eax, [ebp+var_28]", "pop     ecx", "mov     esi, [eax+14h]", "push    esi; src", "push    edi; dest", "call    _strcpy", "mov     ecx, [ebp+list]", "mov     [ecx+14h], eax", "mov     ecx, [ecx+18h]", "mov     [ebp+var_30], ecx", "lea     esi, ds:4[ecx*4]", "mov     [esp], esi; size", "call    _malloc", "mov     ecx, [ebp+list]", "add     esp, 10h", "mov     [ebp+tmpp], eax", "test    eax, eax", "mov     [ecx+1Ch], eax", "jz      loc_D37D"], ["lea     eax, [esi-4]", "mov     ecx, [ebp+var_30]", "xor     esi, esi", "mov     [ebp+accept], eax", "test    ecx, ecx", "jz      loc_D0D0"], ["mov     eax, [ebp+list]", "mov     [ebp+var_30], eax", "mov     eax, [ebp+var_28]", "mov     [ebp+list], eax", "lea     esi, [esi+0]", "nop"], ["sub     esp, 0Ch", "push    edi; s", "call    _strlen", "pop     edx", "lea     edi, [edi+eax+1]", "mov     eax, [ebp+list]", "pop     ecx", "mov     eax, [eax+1Ch]", "mov     eax, [eax+esi]", "push    eax; src", "push    edi; dest", "call    _strcpy", "mov     ecx, [ebp+tmpp]", "add     esp, 10h", "mov     [ecx+esi], eax", "add     esi, 4", "cmp     [ebp+accept], esi", "jnz     short loc_D220"], ["mov     eax, [ebp+var_30]", "mov     [ebp+list], eax", "jmp     loc_D0D0"], ["mov     esi, ds:(stderr_ptr - 2BB6Ch)[ebx]", "mov     eax, [esi]", "push    eax; s", "lea     eax, (aTheLocalTransp - 2BB6Ch)[ebx]; \"The local transport is called \\\"unix\\\" \"", "push    25h ; '%'; n", "push    1; size", "push    eax; ptr", "call    _fwrite", "mov     eax, [esi]", "push    eax; s", "lea     eax, (aInEtcNetconfig - 2BB6Ch)[ebx]; \"in /etc/netconfig.\\n\"", "push    13h; n", "push    1; size", "push    eax; ptr", "call    _fwrite", "add     esp, 20h", "mov     edx, [esi]", "lea     eax, (aPleaseChangeTh - 2BB6Ch)[ebx]; \"Please change this to \\\"local\\\" manuall\"...", "push    edx; s", "push    27h ; '''; n", "push    1; size", "push    eax; ptr", "call    _fwrite", "mov     ecx, [esi]", "lea     eax, (aOrRunMergemast - 2BB6Ch)[ebx]; \"or run mergemaster(8).\\n\"", "push    ecx; s", "push    17h; n", "push    1; size", "push    eax; ptr", "call    _fwrite", "add     esp, 20h", "mov     edi, [esi]", "lea     eax, (aSeeUpdatingEnt - 2BB6Ch)[ebx]; \"See UPDATING entry 20021216 for details\"...", "push    edi; s", "push    29h ; ')'; n", "push    1; size", "push    eax; ptr", "call    _fwrite", "mov     eax, [esi]", "push    eax; s", "lea     eax, (aContinuingIn10 - 2BB6Ch)[ebx]; \"Continuing in 10 seconds\\n\\n\"", "push    1Ah; n", "push    1; size", "push    eax; ptr", "call    _fwrite", "add     esp, 20h", "mov     eax, [esi]", "push    eax; s", "lea     eax, (aThisWarningWil - 2BB6Ch)[ebx]; \"This warning will be removed 20030301\\n\"", "push    26h ; '&'; n", "push    1; size", "push    eax; ptr", "call    _fwrite", "mov     dword ptr [esp], 0Ah; seconds", "call    _sleep", "add     esp, 10h", "jmp     loc_CF42"], ["mov     [ebp+list], 0", "mov     eax, [ebp+list]", "lea     esp, [ebp-0Ch]", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["call    __nc_error", "mov     dword ptr [eax], 9", "jmp     loc_D098"], ["call    __nc_error", "mov     [ebp+list], 0", "mov     dword ptr [eax], 2", "jmp     loc_D0DF"], ["sub     esp, 0Ch", "push    file; stream", "call    _fclose", "call    __nc_error", "add     esp, 10h", "mov     [ebp+list], 0", "mov     dword ptr [eax], 0Ch", "jmp     loc_D0DF"], ["sub     esp, 0Ch", "push    [ebp+accept]; ptr", "call    _free", "add     esp, 10h", "jmp     loc_D0D0"], ["sub     esp, 0Ch", "push    [ebp+list]; ptr", "call    _free", "pop     eax", "push    [ebp+accept]; ptr", "call    _free", "add     esp, 10h", "mov     [ebp+list], 0", "jmp     loc_D0D0"]], "nc_sperror": [["push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 8", "call    __nc_error", "mov     eax, [eax]", "cmp     eax, 0Ch", "jz      short loc_D450"], ["jle     short loc_D428"], ["cmp     eax, 16h", "jz      short loc_D440"], ["cmp     eax, 5Ch ; '\\'", "jnz     short loc_D458"], ["lea     eax, (aNetidNotFoundI - 2BB6Ch)[ebx]; \"Netid not found in netconfig database\""], ["add     esp, 8", "pop     ebx", "retn"], ["cmp     eax, 2", "jz      short loc_D448"], ["cmp     eax, 9", "jnz     short loc_D458"], ["add     esp, 8", "lea     eax, (aNetconfigDatab - 2BB6Ch)[ebx]; \"Netconfig database has invalid format\"", "pop     ebx", "retn"], ["lea     eax, (aNotInitialized - 2BB6Ch)[ebx]; \"Not initialized\"", "jmp     short loc_D41D"], ["lea     eax, (aNetconfigDatab_0 - 2BB6Ch)[ebx]; \"Netconfig database not found\"", "jmp     short loc_D41D"], ["lea     eax, (aNotEnoughMemor - 2BB6Ch)[ebx]; \"Not enough memory\"", "jmp     short loc_D41D"], ["lea     eax, (aUnknownNetwork - 2BB6Ch)[ebx]; \"Unknown network selection error\"", "jmp     short loc_D41D"]], "setnetpath": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 18h", "push    14h; size", "call    _malloc", "add     esp, 10h", "mov     esi, eax", "test    np_sessionp, np_sessionp", "jz      short loc_D536"], ["call    _setnetconfig", "mov     [np_sessionp+4], eax", "test    eax, eax", "jz      loc_D550"], ["sub     esp, 0Ch", "mov     dword ptr [np_sessionp], 0F00Dh", "mov     dword ptr [np_sessionp+10h], 0", "lea     eax, (aNetpath_0 - 2BB6Ch)[ebx]; \"NETPATH\"", "push    eax; name", "call    _getenv", "add     esp, 10h", "mov     edi, eax", "test    npp, npp", "jz      short loc_D540"], ["sub     esp, 0Ch", "mov     edx, [np_sessionp+4]", "push    edx; handlep", "call    _endnetconfig", "mov     dword ptr [np_sessionp+4], 0", "mov     [esp+2Ch+s], npp; s", "call    _strlen", "inc     eax", "mov     [esp+2Ch+s], eax; size", "call    _malloc", "add     esp, 10h", "mov     ebp, eax", "mov     [np_sessionp+8], eax", "test    eax, eax", "jz      short loc_D570"], ["push    eax", "push    eax", "push    npp; src", "push    ebp; dest", "call    _strcpy", "add     esp, 10h"], ["mov     [np_sessionp+0Ch], ebp"], ["add     esp, 0Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     dword ptr [np_sessionp+8], 0", "xor     ebp, ebp", "jmp     short loc_D533"], ["lea     eax, (aRpcFailedToOpe - 2BB6Ch)[ebx]; \"rpc: failed to open /etc/netconfig\"", "push    ecx", "push    eax", "push    1", "push    3", "call    ___syslog_chk", "mov     [esp+2Ch+s], np_sessionp; ptr", "call    _free", "xor     np_sessionp, np_sessionp", "add     esp, 10h", "jmp     short loc_D536"], ["sub     esp, 0Ch", "push    np_sessionp; ptr", "xor     np_sessionp, np_sessionp", "call    _free", "add     esp, 10h", "jmp     short loc_D536"]], "endnetpath": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+np_sessionp]", "test    edi, edi", "jz      short loc_D601"], ["cmp     dword ptr [edi], 0F00Dh", "jnz     short loc_D601"], ["mov     eax, [edi+4]", "test    eax, eax", "jz      short loc_D5B1"], ["sub     esp, 0Ch", "push    eax; handlep", "call    _endnetconfig", "add     esp, 10h"], ["mov     eax, [edi+0Ch]", "test    eax, eax", "jz      short loc_D5C4"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["mov     esi, [edi+10h]", "test    chainp, chainp", "jz      short loc_D5EF"], ["lea     chainp, [chainp+0]", "nop"], ["sub     esp, 0Ch", "mov     eax, [chainp]", "push    eax; netconfigp", "call    _freenetconfigent", "mov     eax, lastp", "mov     lastp, [lastp+4]", "mov     [esp+1Ch+ptr], lastp; ptr", "call    _free", "add     esp, 10h", "test    chainp, chainp", "jnz     short loc_D5D0"], ["sub     esp, 0Ch", "push    edi; ptr", "call    _free", "add     esp, 10h", "xor     eax, eax"], ["pop     ebx", "pop     esi", "pop     np_sessionp_0", "retn"], ["call    ___errno_location", "mov     dword ptr [eax], 16h", "or      eax, 0FFFFFFFFh", "jmp     short loc_D5FD"]], "_get_next_token": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     edi, [esp+1Ch+npp]", "mov     ebp, [esp+1Ch+token]", "jmp     short loc_D668"], ["cmp     edi, cp", "jnb     short loc_D688"], ["cmp     byte ptr [cp-1], 5Ch ; '\\'", "jnz     short loc_D688"], ["lea     cp, [edi+1]", "cmp     cp, eax", "jbe     short loc_D688"], ["cmp     byte ptr [cp-2], 5Ch ; '\\'", "jz      short loc_D688"], ["push    ecx", "lea     eax, [cp-1]", "push    ecx", "mov     edi, cp", "push    cp; src", "push    eax; dest", "call    _strcpy", "add     esp, 10h"], ["push    esi", "push    esi", "push    ebp; c", "push    edi; s", "call    _strchr", "add     esp, 10h", "mov     esi, eax", "test    cp, cp", "jnz     short loc_D640"], ["add     esp, 0Ch", "xor     ebp, ebp", "mov     cp, ebp", "pop     ebx", "pop     cp", "pop     edi", "pop     ebp", "retn"], ["lea     ebp, [cp+1]", "mov     byte ptr [esi], 0", "jmp     short loc_D6AC"], ["cmp     byte ptr [np+1], 5Ch ; '\\'", "lea     ep, [np+1]", "jnz     short loc_D6A0"], ["lea     edx, [eax+2]", "mov     eax, np", "mov     np, edx"], ["push    edx", "push    edx", "push    edi; src", "push    np; dest", "call    _strcpy", "add     esp, 10h"], ["push    eax", "push    eax", "push    5Ch ; '\\'; c", "push    ep; s", "call    _strchr", "add     esp, 10h", "test    np, np", "jnz     short loc_D690"], ["add     esp, 0Ch", "mov     np, cp", "pop     ebx", "pop     esi", "pop     ep", "pop     cp", "retn"]], "getnetpath": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     edi, [esp+1Ch+np_sessionp]", "test    np_sessionp_0, np_sessionp_0", "jz      loc_D788"], ["cmp     dword ptr [np_sessionp_0], 0F00Dh", "jnz     loc_D788"], ["mov     ecx, [np_sessionp_0+0Ch]", "test    ecx, ecx", "jnz     short loc_D773"], ["lea     ebp, (aRpcFailedToOpe - 2BB6Ch)[ebx]; \"rpc: failed to open /etc/netconfig\"", "jmp     short loc_D728"], ["sub     esp, 0Ch", "push    eax; handlep", "call    _getnetconfig", "add     esp, 10h", "mov     esi, eax", "test    ncp, ncp", "jz      short loc_D77A"], ["test    byte ptr [ncp+8], 1", "jnz     short loc_D77C"], ["mov     eax, [np_sessionp_0+4]", "test    eax, eax", "jnz     short loc_D710"], ["call    _setnetconfig", "mov     [np_sessionp_0+4], eax", "test    eax, eax", "jnz     short loc_D710"], ["push    edx", "push    ebp", "push    1", "push    3", "call    ___syslog_chk", "mov     eax, [np_sessionp_0+4]", "add     esp, 10h", "jmp     short loc_D710"], ["cmp     byte ptr [npp], 0", "jz      short loc_D77A"], ["push    eax", "push    eax", "push    3Ah ; ':'; token", "push    npp; npp", "call    __get_next_token", "mov     [np_sessionp_0+8], eax", "mov     [esp+2Ch+netid], npp; netid", "call    _getnetconfigent", "add     esp, 10h", "mov     npp, eax", "test    ncp, ncp", "jnz     short loc_D7A0"], ["mov     esi, [np_sessionp_0+8]", "test    npp, npp", "jnz     short loc_D750"], ["xor     esi, esi"], ["add     esp, 0Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     np_sessionp_0", "pop     ebp", "retn"], ["call    ___errno_location", "xor     esi, esi", "mov     dword ptr [eax], 16h", "add     esp, 0Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     np_sessionp_0", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    8; size", "call    _malloc", "mov     edx, [np_sessionp_0+10h]", "add     esp, 10h", "mov     [chainp], ncp", "mov     dword ptr [chainp+4], 0", "test    edx, edx", "jz      short loc_D7D0"], ["mov     [edx+4], chainp", "add     esp, 0Ch", "mov     chainp, ncp", "pop     ebx", "pop     ncp", "pop     np_sessionp_0", "pop     ebp", "retn"], ["mov     [np_sessionp_0+10h], chainp", "jmp     short loc_D77C"]], "getrpcport": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 24h", "mov     ecx, large gs:14h", "mov     [esp+2Ch+var_10], ecx", "xor     ecx, ecx", "mov     eax, [esp+2Ch+host]", "test    eax, eax", "jz      loc_D89C"], ["sub     esp, 0Ch", "push    eax; name", "call    _gethostbyname", "add     esp, 10h", "test    hp, hp", "jz      short loc_D898"], ["mov     [esp+2Ch+addr.sin_addr.s_addr], 0", "mov     dword ptr [esp+2Ch+addr.sin_zero], 0", "mov     dword ptr [esp+2Ch+addr.sin_zero+4], 0", "mov     dword ptr [esp+2Ch+addr.sin_family], 2", "mov     edx, [hp+0Ch]", "cmp     edx, 4", "ja      short loc_D888"], ["mov     hp, [hp+10h]", "push    0Ch", "push    edx", "mov     eax, [eax]", "push    eax", "lea     eax, [esp+38h+addr.sin_addr]", "lea     esi, [esp+38h+addr]", "push    eax", "call    ___memcpy_chk", "mov     edx, [esp+3Ch+proto]", "push    edx; protocol", "mov     ecx, [esp+40h+versnum]", "push    ecx; version", "mov     eax, [esp+44h+prognum]", "push    eax; program", "push    esi; address", "call    _pmap_getport", "add     esp, 20h", "and     eax, 0FFFFh"], ["mov     ecx, [esp+2Ch+var_10]", "xor     ecx, large gs:14h", "jnz     short loc_D8B8"], ["add     esp, 24h", "pop     ebx", "pop     esi", "retn"], ["mov     dword ptr [hp+0Ch], 4", "mov     edx, 4", "jmp     short loc_D841"], ["xor     hp, hp", "jmp     short loc_D875"], ["lea     eax, (__PRETTY_FUNCTION___6204 - 2BB6Ch)[ebx]; \"getrpcport\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_4 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/getrpcport.c\"", "push    35h ; '5'; line", "push    eax; file", "lea     eax, (aHostNull - 2BB6Ch)[ebx]; \"host != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["call    __stack_chk_fail_local"]], "__rpc_createerr": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "lea     esi, (tsd_lock - 2BB6Ch)[ebx]", "push    esi; mutex", "call    _pthread_mutex_lock", "lea     edi, (rce_key - 2BB6Ch)[ebx]", "add     esp, 10h", "cmp     dword ptr [edi], 0FFFFFFFFh", "jz      short loc_D910"], ["sub     esp, 0Ch", "push    esi; mutex", "call    _pthread_mutex_unlock", "pop     ecx", "mov     esi, [edi]", "push    esi; key", "call    _pthread_getspecific", "add     esp, 10h", "mov     esi, eax", "test    rce_addr, rce_addr", "jz      short loc_D928"], ["pop     ebx", "mov     eax, esi", "pop     esi", "pop     edi", "retn"], ["push    eax", "push    eax", "mov     eax, ds:(free_ptr - 2BB6Ch)[ebx]", "push    eax; destr_function", "push    edi; key", "call    _pthread_key_create", "add     esp, 10h", "jmp     short loc_D8EB"], ["sub     esp, 0Ch", "push    10h; size", "call    _malloc", "add     esp, 10h", "mov     rce_addr, eax", "test    rce_addr, rce_addr", "jz      short loc_D97C"], ["push    eax", "mov     edx, [edi]", "push    eax", "push    rce_addr; pointer", "push    edx; key", "call    _pthread_setspecific", "add     esp, 10h", "test    eax, eax", "jnz     short loc_D970"], ["mov     dword ptr [rce_addr], 0", "mov     dword ptr [rce_addr+4], 0", "mov     dword ptr [rce_addr+8], 0", "mov     dword ptr [rce_addr+0Ch], 0", "jmp     short loc_D906"], ["sub     esp, 0Ch", "push    rce_addr; ptr", "call    _free", "add     esp, 10h"], ["mov     rce_addr, ds:(rpc_createerr_ptr - 2BB6Ch)[ebx]", "jmp     short loc_D906"]], "tsd_key_delete": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ecx", "lea     eax, (clnt_broadcast_key - 2BB6Ch)[ebx]", "mov     eax, [eax]", "cmp     eax, 0FFFFFFFFh", "jz      short loc_D9B7"], ["sub     esp, 0Ch", "push    eax; key", "call    _pthread_key_delete", "add     esp, 10h"], ["lea     eax, (rpc_call_key - 2BB6Ch)[ebx]", "mov     eax, [eax]", "cmp     eax, 0FFFFFFFFh", "jz      short loc_D9D0"], ["sub     esp, 0Ch", "push    eax; key", "call    _pthread_key_delete", "add     esp, 10h"], ["lea     eax, (tcp_key - 2BB6Ch)[ebx]", "mov     eax, [eax]", "cmp     eax, 0FFFFFFFFh", "jz      short loc_D9E9"], ["sub     esp, 0Ch", "push    eax; key", "call    _pthread_key_delete", "add     esp, 10h"], ["lea     eax, (udp_key - 2BB6Ch)[ebx]", "mov     eax, [eax]", "cmp     eax, 0FFFFFFFFh", "jz      short loc_DA02"], ["sub     esp, 0Ch", "push    eax; key", "call    _pthread_key_delete", "add     esp, 10h"], ["lea     eax, (nc_key - 2BB6Ch)[ebx]", "mov     eax, [eax]", "cmp     eax, 0FFFFFFFFh", "jz      short loc_DA1B"], ["sub     esp, 0Ch", "push    eax; key", "call    _pthread_key_delete", "add     esp, 10h"], ["lea     esi, (rce_key - 2BB6Ch)[ebx]", "mov     eax, [esi]", "cmp     eax, 0FFFFFFFFh", "jz      short loc_DA34"], ["sub     esp, 0Ch", "push    eax; key", "call    _pthread_key_delete", "add     esp, 10h"], ["lea     eax, (rg_key - 2BB6Ch)[ebx]", "cmp     dword ptr [eax], 0FFFFFFFFh", "jz      short loc_DA4D"], ["sub     esp, 0Ch", "mov     edx, [esi]", "push    edx; key", "call    _pthread_key_delete", "add     esp, 10h"], ["pop     eax", "pop     ebx", "pop     esi", "retn"]], "pmap_set": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 40h", "mov     edx, large gs:14h", "mov     [esp+4Ch+var_10], edx", "xor     edx, edx", "mov     eax, [esp+4Ch+protocol]", "cmp     eax, 11h", "jz      loc_DB40"], ["cmp     eax, 6", "jz      short loc_DAB0"], ["xor     eax, eax"], ["mov     ecx, [esp+4Ch+var_10]", "xor     ecx, large gs:14h", "jnz     loc_DB61"], ["add     esp, 40h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["cmp     eax, 11h", "jz      loc_DB40"], ["lea     eax, (aTcp - 2BB6Ch)[ebx]; \"tcp\""], ["sub     esp, 0Ch", "push    eax; nettype", "call    ___rpc_getconfip", "add     esp, 10h", "mov     esi, eax", "test    nconf, nconf", "jz      short loc_DA90"], ["xor     nconf, nconf", "push    ecx", "mov     al, byte ptr [esp+50h+port]", "push    eax", "mov     eax, [esp+54h+port]", "movzx   eax, ah", "push    eax", "lea     eax, (a0000DD - 2BB6Ch)[ebx]; \"0.0.0.0.%d.%d\"", "push    eax", "push    20h ; ' '", "push    1", "push    20h ; ' '", "lea     edi, [esp+68h+buf]", "push    edi", "call    ___snprintf_chk", "add     esp, 18h", "push    edi; uaddr", "push    nconf; nconf", "call    _uaddr2taddr", "add     esp, 10h", "mov     edi, eax", "test    na, na", "jz      short loc_DB50"], ["push    na; address", "push    nconf; nconf", "mov     na, [esp+54h+version]", "push    eax; version", "mov     edx, [esp+58h+program]", "push    edx; program", "call    _rpcb_set", "mov     [esp+5Ch+ptr], na; ptr", "mov     [esp+5Ch+rslt], eax", "call    _free", "mov     [esp+5Ch+ptr], nconf; netconfigp", "call    _freenetconfigent", "add     esp, 10h", "mov     eax, [esp+4Ch+rslt]", "jmp     loc_DA92"], ["lea     eax, (aUdp - 2BB6Ch)[ebx]; \"udp\"", "jmp     loc_DABF"], ["sub     esp, 0Ch", "push    nconf; netconfigp", "call    _freenetconfigent", "add     esp, 10h", "jmp     loc_DA90"], ["call    __stack_chk_fail_local"]], "pmap_getmaps": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     edi, [esp+1Ch+address]", "mov     [esp+1Ch+head], 0", "mov     [esp+1Ch+sock], 0FFFFFFFFh", "test    edi, edi", "jz      loc_DCCC"], ["mov     word ptr [edi+2], 6F00h", "push    esi", "push    esi", "push    1F4h; recvsz", "push    32h ; '2'; sendsz", "lea     eax, [esp+2Ch+sock]", "push    eax; sockp", "push    2; version", "push    186A0h; prog", "push    edi; raddr", "call    _clnttcp_create", "add     esp, 20h", "mov     esi, eax", "test    client, client", "jz      short loc_DC98"], ["mov     client, [client+4]", "push    0", "push    3Ch ; '<'", "mov     ecx, ds:(xdr_void_ptr - 2BB6Ch)[ebx]", "lea     edx, [esp+24h+head]", "push    edx", "mov     edx, ds:(xdr_pmaplist_ptr_0 - 2BB6Ch)[ebx]", "push    edx", "push    0", "push    ecx", "push    4", "push    client", "call    dword ptr [eax]", "add     esp, 20h", "test    eax, eax", "jnz     short loc_DCB8"], ["sub     esp, 0Ch", "mov     eax, [client+4]", "push    client", "call    dword ptr [eax+10h]", "add     esp, 10h"], ["mov     word ptr [edi+2], 0", "mov     eax, [esp+1Ch+head]", "mov     ecx, [esp+1Ch+var_10]", "xor     ecx, large gs:14h", "jnz     short loc_DCE8"], ["add     esp, 10h", "pop     ebx", "pop     client", "pop     edi", "retn"], ["push    eax", "push    eax", "lea     eax, (aPmapGetmapsRpc - 2BB6Ch)[ebx]; \"pmap_getmaps rpc problem\"", "push    eax; msg", "push    client; clnt", "call    _clnt_perror", "add     esp, 10h", "jmp     short loc_DC8B"], ["lea     eax, (__PRETTY_FUNCTION___7249 - 2BB6Ch)[ebx]; \"pmap_getmaps\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_5 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/pmap_getmaps.c\"", "push    47h ; 'G'; line", "push    eax; file", "lea     eax, (aAddressNull - 2BB6Ch)[ebx]; \"address != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["call    __stack_chk_fail_local"]], "pmap_getport": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     edi, [esp+3Ch+address]", "mov     [esp+3Ch+port], 0", "mov     [esp+3Ch+sock], 0FFFFFFFFh", "test    edi, edi", "jz      loc_DE2A"], ["mov     word ptr [edi+2], 6F00h", "push    190h; recvsz", "push    190h; sendsz", "mov     esi, ds:(timeout.tv_usec - 2BB6Ch)[ebx]", "mov     ebp, dword ptr ds:(timeout.tv_sec - 2BB6Ch)[ebx]", "lea     eax, [esp+44h+sock]", "push    eax; sockp", "push    esi", "push    ebp; wait_resend", "push    2; version", "push    186A0h; program", "push    edi; raddr", "call    _clntudp_bufcreate", "add     esp, 20h", "mov     esi, eax", "test    client, client", "jz      short loc_DDCC"], ["mov     client, [esp+3Ch+program]", "mov     ecx, ds:(tottimeout.tv_usec - 2BB6Ch)[ebx]", "mov     [esp+3Ch+parms.pm_prog], eax", "mov     eax, [esp+3Ch+version]", "mov     [esp+3Ch+parms.pm_vers], eax", "mov     eax, [esp+3Ch+protocol]", "mov     [esp+3Ch+parms.pm_prot], eax", "mov     [esp+3Ch+parms.pm_port], 0", "mov     eax, [client+4]", "mov     ebp, dword ptr ds:(tottimeout.tv_sec - 2BB6Ch)[ebx]", "push    ecx", "mov     ecx, ds:(xdr_pmap_ptr - 2BB6Ch)[ebx]", "push    ebp", "lea     edx, [esp+44h+port]", "push    edx", "mov     edx, ds:(xdr_u_short_ptr - 2BB6Ch)[ebx]", "push    edx", "lea     edx, [esp+4Ch+parms]", "push    edx", "push    ecx", "push    3", "push    client", "call    dword ptr [eax]", "add     esp, 20h", "test    eax, eax", "jnz     short loc_DDF0"], ["cmp     [esp+3Ch+port], 0", "jz      short loc_DE18"], ["sub     esp, 0Ch", "mov     eax, [client+4]", "push    client", "call    dword ptr [eax+10h]", "add     esp, 10h"], ["mov     word ptr [edi+2], 0", "mov     ax, [esp+3Ch+port]", "mov     ecx, [esp+3Ch+var_20]", "xor     ecx, large gs:14h", "jnz     short loc_DE25"], ["add     esp, 2Ch", "pop     ebx", "pop     client", "pop     edi", "pop     ebp", "retn"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Eh", "mov     eax, [client+4]", "mov     ebp, [eax+8]", "call    ___rpc_createerr", "push    edx", "add     eax, 4", "push    edx", "push    eax", "push    client", "call    ebp", "add     esp, 10h", "jmp     short loc_DDBF"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Fh", "jmp     short loc_DDBF"], ["call    __stack_chk_fail_local"], ["lea     eax, (__PRETTY_FUNCTION___6920 - 2BB6Ch)[ebx]; \"pmap_getport\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_6 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/pmap_getport.c\"", "push    44h ; 'D'; line", "push    eax; file", "lea     eax, (aAddressNull - 2BB6Ch)[ebx]; \"address != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "xdr_pmap": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+xdrs]", "mov     esi, [esp+0Ch+regs]", "test    edi, edi", "jz      short loc_DEDB"], ["test    esi, esi", "jz      short loc_DEBF"], ["push    eax", "push    eax", "push    esi; ulp", "push    edi; xdrs", "call    _xdr_u_long", "add     esp, 10h", "test    eax, eax", "jnz     short loc_DE88"], ["xor     eax, eax"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    ecx", "lea     eax, [esi+4]", "push    ecx", "push    eax; ulp", "push    edi; xdrs", "call    _xdr_u_long", "add     esp, 10h", "test    eax, eax", "jz      short loc_DE7E"], ["push    edx", "lea     eax, [esi+8]", "push    edx", "push    eax; ulp", "push    edi; xdrs", "call    _xdr_u_long", "add     esp, 10h", "test    eax, eax", "jz      short loc_DE7E"], ["push    eax", "add     esi, 0Ch", "push    eax", "push    esi; ulp", "push    edi; xdrs", "call    _xdr_u_long", "add     esp, 10h", "jmp     short loc_DE80"], ["lea     eax, (__PRETTY_FUNCTION___4435 - 2BB6Ch)[ebx]; \"xdr_pmap\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_7 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/pmap_prot.c\"", "push    32h ; '2'; line", "push    eax; file", "lea     eax, (aRegsNull - 2BB6Ch)[ebx]; \"regs != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___4435 - 2BB6Ch)[ebx]; \"xdr_pmap\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_7 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/pmap_prot.c\"", "push    31h ; '1'; line", "push    eax; file", "lea     eax, (aXdrsNull - 2BB6Ch)[ebx]; \"xdrs != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "xdr_pmaplist": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     esi, [esp+3Ch+xdrs]", "mov     edi, [esp+3Ch+rp]", "test    esi, esi", "jz      loc_DFFB"], ["test    edi, edi", "jz      loc_DFDF"], ["mov     eax, [esi]", "lea     ebp, [esp+3Ch+more_elements]", "mov     [esp+3Ch+var_3C], eax", "mov     eax, ds:(xdr_pmap_ptr - 2BB6Ch)[ebx]", "mov     [esp+3Ch+proc], eax", "mov     [esp+3Ch+var_30], eax", "lea     esi, [esi+0]"], ["mov     edx, [rp_0]", "xor     eax, eax", "test    edx, edx", "setnz   al", "mov     [esp+3Ch+more_elements], eax", "push    ecx", "push    ecx", "push    ebp; bp", "push    esi; xdrs", "call    _xdr_bool", "add     esp, 10h", "test    eax, eax", "jz      short loc_DFC0"], ["mov     ecx, [esp+3Ch+more_elements]", "test    ecx, ecx", "jz      short loc_DFD8"], ["cmp     [esp+3Ch+var_3C], 2", "jz      short loc_DF98"], ["mov     eax, [esp+3Ch+proc]", "push    eax; proc", "push    14h; size", "push    rp_0; xpp", "push    esi; xdrs", "call    _xdr_reference", "add     esp, 10h", "test    eax, eax", "jz      short loc_DFC0"], ["mov     rp_0, [rp_0]", "add     edi, 10h", "jmp     short loc_DF50"], ["mov     eax, [rp_0]", "mov     edx, [esp+3Ch+var_30]", "add     eax, 10h", "mov     [esp+3Ch+next], eax", "push    edx; proc", "push    14h; size", "push    rp_0; xpp", "push    esi; xdrs", "call    _xdr_reference", "add     esp, 10h", "test    eax, eax", "jz      short loc_DFC0"], ["mov     rp_0, [esp+3Ch+next]", "jmp     short loc_DF50"], ["xor     eax, eax"], ["mov     edx, [esp+3Ch+var_20]", "xor     edx, large gs:14h", "jnz     short loc_E017"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     rp_0", "pop     ebp", "retn"], ["mov     eax, 1", "jmp     short loc_DFC2"], ["lea     eax, (__PRETTY_FUNCTION___4438 - 2BB6Ch)[ebx]; \"xdr_pmaplist\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_8 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/pmap_prot2.c\"", "push    60h ; '`'; line", "push    eax; file", "lea     eax, (aRpNull - 2BB6Ch)[ebx]; \"rp != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___4438 - 2BB6Ch)[ebx]; \"xdr_pmaplist\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_8 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/pmap_prot2.c\"", "push    5Fh ; '_'; line", "push    eax; file", "lea     eax, (aXdrsNull - 2BB6Ch)[ebx]; \"xdrs != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["call    __stack_chk_fail_local"]], "xdr_rmtcall_args": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     esi, [esp+2Ch+xdrs]", "mov     edi, [esp+2Ch+cap]", "test    esi, esi", "jz      loc_E170"], ["test    edi, edi", "jz      loc_E154"], ["push    eax", "push    eax", "push    edi; ulp", "push    esi; xdrs", "call    _xdr_u_long", "add     esp, 10h", "test    eax, eax", "jnz     short loc_E098"], ["xor     eax, eax"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    ebp", "lea     eax, [edi+4]", "push    ebp", "push    eax; ulp", "push    esi; xdrs", "call    _xdr_u_long", "add     esp, 10h", "test    eax, eax", "jz      short loc_E08A"], ["push    ecx", "lea     eax, [edi+8]", "push    ecx", "push    eax; ulp", "push    esi; xdrs", "call    _xdr_u_long", "add     esp, 10h", "test    eax, eax", "jz      short loc_E08A"], ["sub     esp, 0Ch", "mov     eax, [esi+4]", "lea     ebp, [edi+0Ch]", "push    esi", "call    dword ptr [eax+10h]", "mov     [esp+3Ch+var_28], eax", "pop     eax", "pop     edx", "push    ebp; ulp", "push    esi; xdrs", "call    _xdr_u_long", "add     esp, 10h", "test    eax, eax", "jz      short loc_E08A"], ["sub     esp, 0Ch", "mov     eax, [esi+4]", "push    esi", "call    dword ptr [eax+10h]", "mov     [esp+3Ch+var_24], eax", "pop     eax", "pop     edx", "mov     ecx, [edi+10h]", "push    ecx", "push    esi", "call    dword ptr [edi+14h]", "add     esp, 10h", "test    eax, eax", "jz      short loc_E08A"], ["sub     esp, 0Ch", "mov     eax, [esi+4]", "push    esi", "call    dword ptr [eax+10h]", "mov     ecx, [esp+3Ch+var_24]", "mov     edx, eax", "sub     edx, ecx", "mov     [esp+3Ch+var_20], eax", "mov     [edi+0Ch], edx", "pop     edi", "pop     eax", "mov     eax, [esi+4]", "mov     edx, [esp+34h+var_28]", "push    edx", "push    esi", "call    dword ptr [eax+14h]", "pop     ecx", "pop     edi", "push    ebp; ulp", "push    esi; xdrs", "call    _xdr_u_long", "add     esp, 10h", "test    eax, eax", "jz      loc_E08A"], ["push    eax", "push    eax", "mov     edx, [esp+34h+var_20]", "mov     eax, [esi+4]", "push    edx", "push    esi", "call    dword ptr [eax+14h]", "add     esp, 10h", "mov     eax, 1", "jmp     loc_E08C"], ["lea     eax, (__PRETTY_FUNCTION___7051 - 2BB6Ch)[ebx]; \"xdr_rmtcall_args\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_9 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/pmap_rmt.c\"", "push    7Dh ; '}'; line", "push    eax; file", "lea     eax, (unk_1DC3C - 2BB6Ch)[ebx]", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___7051 - 2BB6Ch)[ebx]; \"xdr_rmtcall_args\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_9 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/pmap_rmt.c\"", "push    7Ch ; '|'; line", "push    eax; file", "lea     eax, (aXdrsNull - 2BB6Ch)[ebx]; \"xdrs != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "xdr_rmtcallres": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     edi, [esp+1Ch+xdrs]", "mov     esi, [esp+1Ch+crp]", "test    edi, edi", "jz      loc_E244"], ["test    esi, esi", "jz      short loc_E225"], ["mov     eax, [esi]", "mov     [esp+1Ch+port_ptr], eax", "mov     eax, ds:(xdr_u_long_ptr - 2BB6Ch)[ebx]", "push    eax; proc", "push    4; size", "lea     eax, [esp+24h+port_ptr]", "push    eax; xpp", "push    edi; xdrs", "call    _xdr_reference", "add     esp, 10h", "test    eax, eax", "jnz     short loc_E1F8"], ["xor     eax, eax"], ["mov     edx, [esp+1Ch+var_10]", "xor     edx, large gs:14h", "jnz     short loc_E220"], ["add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    ecx", "lea     eax, [esi+4]", "push    ecx", "push    eax; ulp", "push    edi; xdrs", "call    _xdr_u_long", "add     esp, 10h", "test    eax, eax", "jz      short loc_E1E2"], ["mov     eax, [esp+1Ch+port_ptr]", "mov     [esi], eax", "push    eax", "push    eax", "mov     edx, [esi+8]", "push    edx", "push    edi", "call    dword ptr [esi+0Ch]", "add     esp, 10h", "jmp     short loc_E1E4"], ["call    __stack_chk_fail_local"], ["lea     eax, (__PRETTY_FUNCTION___7057 - 2BB6Ch)[ebx]; \"xdr_rmtcallres\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_9 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/pmap_rmt.c\"", "push    9Fh; line", "push    eax; file", "lea     eax, (unk_1DC48 - 2BB6Ch)[ebx]", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___7057 - 2BB6Ch)[ebx]; \"xdr_rmtcallres\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_9 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/pmap_rmt.c\"", "push    9Eh; line", "push    eax; file", "lea     eax, (aXdrsNull - 2BB6Ch)[ebx]; \"xdrs != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "pmap_rmtcall": [["push    ebp", "push    edi", "push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "sub     esp, 4Ch", "mov     eax, [esp+5Ch+xdrargs]", "mov     ebp, [esp+5Ch+addr]", "mov     [esp+5Ch+stat], eax", "mov     eax, [esp+5Ch+argsp]", "mov     [esp+5Ch+var_58], eax", "mov     eax, [esp+5Ch+xdrres]", "mov     [esp+5Ch+var_54], eax", "mov     eax, [esp+5Ch+resp]", "mov     [esp+5Ch+var_50], eax", "mov     edi, [esp+5Ch+port_ptr]", "mov     eax, large gs:14h", "mov     [esp+5Ch+var_20], eax", "xor     eax, eax", "mov     [esp+5Ch+sock], 0FFFFFFFFh", "test    ebp, ebp", "jz      loc_E3D2"], ["test    edi, edi", "jz      loc_E3B4"], ["mov     word ptr [ebp+2], 6F00h", "push    ecx", "push    ecx", "mov     ebx, ds:(timeout_0.tv_usec - 2BB6Ch)[esi]", "lea     eax, [esp+64h+sock]", "push    eax; sockp", "mov     eax, dword ptr ds:(timeout_0.tv_sec - 2BB6Ch)[esi]", "push    ebx", "mov     ebx, esi", "push    eax; wait_resend", "push    2; version", "push    186A0h; program", "push    ebp; raddr", "call    _clntudp_create", "add     esp, 20h", "mov     ebx, eax", "test    client, client", "jz      loc_E3A8"], ["mov     client, [esp+5Ch+prog]", "mov     edx, [esp+5Ch+tout.tv_usec]", "mov     [esp+5Ch+a.prog], eax", "mov     eax, [esp+5Ch+vers]", "mov     [esp+5Ch+a.vers], eax", "mov     eax, [esp+5Ch+proc]", "mov     [esp+5Ch+a.proc], eax", "mov     eax, [esp+5Ch+var_58]", "mov     [esp+5Ch+a.args_ptr], eax", "mov     eax, [esp+5Ch+stat]", "mov     [esp+5Ch+a.xdr_args], eax", "mov     eax, [esp+5Ch+var_50]", "mov     [esp+5Ch+r.results_ptr], eax", "mov     eax, [esp+5Ch+var_54]", "mov     [esp+5Ch+r.port_ptr], edi", "mov     [esp+5Ch+r.xdr_results], eax", "mov     eax, [client+4]", "push    edx", "mov     ecx, [esp+60h+tout.tv_sec]", "mov     edi, ds:(xdr_rmtcallres_ptr - 2BB6Ch)[esi]", "push    ecx", "lea     edx, [esp+64h+r]", "push    edx", "push    edi", "lea     edx, [esp+6Ch+a]", "push    edx", "mov     edx, ds:(xdr_rmtcall_args_ptr - 2BB6Ch)[esi]", "push    edx", "push    5", "push    client", "call    dword ptr [eax]", "mov     [esp+7Ch+stat], eax", "add     esp, 14h", "mov     edx, [client+4]", "push    client", "call    dword ptr [edx+10h]", "add     esp, 10h", "mov     eax, [esp+5Ch+stat]"], ["mov     word ptr [ebp+2], 0", "mov     ecx, [esp+5Ch+var_20]", "xor     ecx, large gs:14h", "jnz     short loc_E3AF"], ["add     esp, 4Ch", "pop     client", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     client, 10h", "jmp     short loc_E386"], ["call    __stack_chk_fail_local"], ["lea     eax, (__PRETTY_FUNCTION___7043 - 2BB6Ch)[esi]; \"pmap_rmtcall\"", "mov     ebx, esi", "push    eax; function", "lea     eax, (aLibtirpc126Src_9 - 2BB6Ch)[esi]; \"../../libtirpc-1.2.6/src/pmap_rmt.c\"", "push    58h ; 'X'; line", "push    eax; file", "lea     eax, (aPortPtrNull - 2BB6Ch)[esi]; \"port_ptr != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___7043 - 2BB6Ch)[esi]; \"pmap_rmtcall\"", "mov     ebx, esi", "push    eax; function", "lea     eax, (aLibtirpc126Src_9 - 2BB6Ch)[esi]; \"../../libtirpc-1.2.6/src/pmap_rmt.c\"", "push    57h ; 'W'; line", "push    eax; file", "lea     eax, (aAddrNull - 2BB6Ch)[esi]; \"addr != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "xdr_rejected_reply": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+xdrs]", "mov     esi, [esp+0Ch+rr]", "test    edi, edi", "jz      short loc_E47E"], ["test    esi, esi", "jz      short loc_E49D"], ["push    eax", "push    eax", "push    esi; ep", "push    edi; xdrs", "call    _xdr_enum", "add     esp, 10h", "test    eax, eax", "jz      short loc_E437"], ["mov     eax, [esi]", "test    eax, eax", "jz      short loc_E458"], ["dec     eax", "jz      short loc_E440"], ["pop     ebx", "xor     eax, eax", "pop     esi", "pop     edi", "retn"], ["push    eax", "add     esi, 4", "push    eax", "push    esi; ep", "push    edi; xdrs", "call    _xdr_enum", "add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    ecx", "lea     eax, [esi+4]", "push    ecx", "push    eax; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      short loc_E437"], ["push    edx", "add     esi, 8", "push    edx", "push    esi; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["lea     eax, (__PRETTY_FUNCTION___5915 - 2BB6Ch)[ebx]; \"xdr_rejected_reply\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_10 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_prot.c\"", "push    88h; line", "push    eax; file", "lea     eax, (aXdrsNull - 2BB6Ch)[ebx]; \"xdrs != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___5915 - 2BB6Ch)[ebx]; \"xdr_rejected_reply\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_10 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_prot.c\"", "push    89h; line", "push    eax; file", "lea     eax, (aRrNull - 2BB6Ch)[ebx]; \"rr != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "xdr_opaque_auth": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+xdrs]", "mov     esi, [esp+0Ch+ap]", "test    edi, edi", "jz      short loc_E52E"], ["test    esi, esi", "jz      short loc_E512"], ["push    eax", "push    eax", "push    esi; ep", "push    edi; xdrs", "call    _xdr_enum", "add     esp, 10h", "test    eax, eax", "jnz     short loc_E4F8"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    190h; maxsize", "lea     eax, [esi+8]", "push    eax; sizep", "add     esi, 4", "push    esi; cpp", "push    edi; xdrs", "call    _xdr_bytes", "add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["lea     eax, (__PRETTY_FUNCTION___5893 - 2BB6Ch)[ebx]; \"xdr_opaque_auth\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_10 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_prot.c\"", "push    42h ; 'B'; line", "push    eax; file", "lea     eax, (unk_1DC3D - 2BB6Ch)[ebx]", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___5893 - 2BB6Ch)[ebx]; \"xdr_opaque_auth\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_10 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_prot.c\"", "push    41h ; 'A'; line", "push    eax; file", "lea     eax, (aXdrsNull - 2BB6Ch)[ebx]; \"xdrs != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "xdr_accepted_reply": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+xdrs]", "mov     esi, [esp+0Ch+ar]", "test    edi, edi", "jz      loc_E617"], ["test    esi, esi", "jz      loc_E5FB"], ["push    eax", "push    eax", "push    esi; struct opaque_auth *", "push    edi; XDR *", "call    _xdr_opaque_auth", "add     esp, 10h", "test    eax, eax", "jnz     short loc_E590"], ["xor     eax, eax"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    ecx", "lea     eax, [esi+0Ch]", "push    ecx", "push    eax; ep", "push    edi; xdrs", "call    _xdr_enum", "add     esp, 10h", "test    eax, eax", "jz      short loc_E586"], ["mov     eax, [esi+0Ch]", "test    eax, eax", "jz      short loc_E5E8"], ["cmp     eax, 2", "jnz     short loc_E5D8"], ["push    edx", "lea     eax, [esi+10h]", "push    edx", "push    eax; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      short loc_E586"], ["push    eax", "add     esi, 14h", "push    eax", "push    esi; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "jmp     short loc_E588"], ["pop     ebx", "mov     eax, 1", "pop     esi", "pop     edi", "retn"], ["mov     eax, [esi+10h]", "mov     [esp+0Ch+xdrs], edi", "mov     [esp+0Ch+ar], eax", "pop     ebx", "mov     eax, [esi+14h]", "pop     esi", "pop     edi", "jmp     eax"], ["lea     eax, (__PRETTY_FUNCTION___5903 - 2BB6Ch)[ebx]; \"xdr_accepted_reply\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_10 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_prot.c\"", "push    65h ; 'e'; line", "push    eax; file", "lea     eax, (aArNull - 2BB6Ch)[ebx]; \"ar != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___5903 - 2BB6Ch)[ebx]; \"xdr_accepted_reply\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_10 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_prot.c\"", "push    64h ; 'd'; line", "push    eax; file", "lea     eax, (aXdrsNull - 2BB6Ch)[ebx]; \"xdrs != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "xdr_replymsg": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+xdrs]", "mov     esi, [esp+0Ch+rmsg]", "test    edi, edi", "jz      short loc_E73F"], ["test    esi, esi", "jz      short loc_E720"], ["push    edx", "push    edx", "push    esi; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jnz     short loc_E6E8"], ["xor     eax, eax"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    eax", "push    eax", "lea     eax, [esi+4]", "push    eax; ep", "push    edi; xdrs", "call    _xdr_enum", "add     esp, 10h", "test    eax, eax", "jz      short loc_E6DE"], ["cmp     dword ptr [esi+4], 1", "jnz     short loc_E6DE"], ["sub     esp, 0Ch", "lea     eax, (reply_dscrm.value - 2BB6Ch)[ebx]", "push    0; dfault", "push    eax; choices", "lea     eax, [esi+0Ch]", "push    eax; unp", "add     esi, 8", "push    esi; dscmp", "push    edi; xdrs", "call    _xdr_union", "add     esp, 20h", "jmp     short loc_E6E0"], ["lea     eax, (__PRETTY_FUNCTION___5923 - 2BB6Ch)[ebx]; \"xdr_replymsg\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_10 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_prot.c\"", "push    0AAh; line", "push    eax; file", "lea     eax, (aRmsgNull - 2BB6Ch)[ebx]; \"rmsg != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___5923 - 2BB6Ch)[ebx]; \"xdr_replymsg\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_10 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_prot.c\"", "push    0A9h; line", "push    eax; file", "lea     eax, (aXdrsNull - 2BB6Ch)[ebx]; \"xdrs != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "xdr_callhdr": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+xdrs]", "mov     esi, [esp+0Ch+cmsg]", "test    edi, edi", "jz      loc_E819"], ["test    esi, esi", "jz      short loc_E7FA"], ["mov     eax, [edi]", "mov     dword ptr [esi+4], 0", "mov     dword ptr [esi+8], 2", "test    eax, eax", "jz      short loc_E7A0"], ["xor     eax, eax"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    eax", "push    eax", "push    cmsg_0; u_int32_p", "push    xdrs_0; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      short loc_E796"], ["push    eax", "push    eax", "lea     eax, [cmsg_0+4]", "push    eax; ep", "push    xdrs_0; xdrs", "call    _xdr_enum", "add     esp, 10h", "test    eax, eax", "jz      short loc_E796"], ["push    ecx", "lea     eax, [cmsg_0+8]", "push    ecx", "push    eax; u_int32_p", "push    xdrs_0; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      short loc_E796"], ["push    edx", "lea     eax, [cmsg_0+0Ch]", "push    edx", "push    eax; u_int32_p", "push    xdrs_0; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      short loc_E796"], ["push    eax", "add     cmsg_0, 10h", "push    eax", "push    esi; u_int32_p", "push    xdrs_0; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "jmp     short loc_E798"], ["lea     eax, (__PRETTY_FUNCTION___5928 - 2BB6Ch)[ebx]; \"xdr_callhdr\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_10 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_prot.c\"", "push    0C3h; line", "push    eax; file", "lea     eax, (aCmsgNull - 2BB6Ch)[ebx]; \"cmsg != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___5928 - 2BB6Ch)[ebx]; \"xdr_callhdr\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_10 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_prot.c\"", "push    0C2h; line", "push    eax; file", "lea     eax, (aXdrsNull - 2BB6Ch)[ebx]; \"xdrs != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "_seterr_reply": [["push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 8", "mov     edx, [esp+0Ch+msg]", "mov     eax, [esp+0Ch+error]", "test    edx, edx", "jz      loc_E97F"], ["test    eax, eax", "jz      loc_E960"], ["mov     ecx, [edx+8]", "test    ecx, ecx", "jz      short loc_E8C8"], ["cmp     ecx, 1", "jz      short loc_E888"], ["mov     dword ptr [eax], 10h", "mov     [eax+4], ecx"], ["add     esp, 8", "pop     ebx", "retn"], ["mov     ecx, [edx+0Ch]", "test    ecx, ecx", "jz      short loc_E908"], ["cmp     ecx, 1", "jz      short loc_E8B0"], ["mov     dword ptr [eax], 10h", "mov     dword ptr [eax+4], 1", "mov     [eax+8], ecx", "add     esp, 8", "pop     ebx", "retn"], ["mov     edx, [edx+10h]", "mov     dword ptr [eax], 7", "mov     [eax+4], edx", "add     esp, 8", "pop     ebx", "retn"], ["mov     ecx, [edx+18h]", "test    ecx, ecx", "jnz     short loc_E8E0"], ["mov     dword ptr [eax], 0", "add     esp, 8", "pop     ebx", "retn"], ["cmp     ecx, 5; switch 6 cases", "ja      short _L93; jumptable 0000E8EC default case, case 0"], ["add     ebx, ds:(jpt_E8EC - 2BB6Ch)[ebx+ecx*4]", "jmp     ebx; switch jump"], ["mov     ecx, [edx+1Ch]; jumptable 0000E8EC case 2", "mov     edx, [edx+20h]", "mov     dword ptr [eax], 9", "mov     [eax+4], ecx", "mov     [eax+8], edx", "add     esp, 8", "pop     ebx", "retn"], ["mov     ecx, [edx+10h]", "mov     edx, [edx+14h]", "mov     dword ptr [eax], 6", "mov     [eax+4], ecx", "mov     [eax+8], edx", "add     esp, 8", "pop     ebx", "retn"], ["mov     dword ptr [eax], 0Ch; jumptable 0000E8EC case 5", "jmp     loc_E87C"], ["mov     dword ptr [eax], 10h; jumptable 0000E8EC default case, case 0", "mov     dword ptr [eax+4], 0", "mov     [eax+8], ecx", "jmp     loc_E87C"], ["mov     dword ptr [eax], 8; jumptable 0000E8EC case 1", "jmp     loc_E87C"], ["mov     dword ptr [eax], 0Ah; jumptable 0000E8EC case 3", "jmp     loc_E87C"], ["mov     dword ptr [eax], 0Bh; jumptable 0000E8EC case 4", "jmp     loc_E87C"], ["lea     eax, (__PRETTY_FUNCTION___5951 - 2BB6Ch)[ebx]; \"_seterr_reply\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_10 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_prot.c\"", "push    11Eh; line", "push    eax; file", "lea     eax, (aErrorNull - 2BB6Ch)[ebx]; \"error != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___5951 - 2BB6Ch)[ebx]; \"_seterr_reply\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_10 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_prot.c\"", "push    11Dh; line", "push    eax; file", "lea     eax, (aCmsgNull+1 - 2BB6Ch)[ebx]; \"msg != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "xdr_callmsg": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     edi, [esp+1Ch+xdrs]", "mov     esi, [esp+1Ch+cmsg]", "test    edi, edi", "jz      loc_ED91"], ["test    esi, esi", "jz      loc_ED75"], ["mov     eax, [edi]", "test    eax, eax", "jnz     short loc_EA48"], ["mov     eax, [esi+20h]", "cmp     eax, 190h", "ja      short loc_EA30"], ["mov     edx, [esi+2Ch]", "cmp     edx, 190h", "ja      short loc_EA30"], ["add     eax, 3", "add     edx, 3", "and     edx, 0FFFFFFFCh", "and     eax, 0FFFFFFFCh", "push    ebp", "push    ebp", "lea     eax, [eax+edx+28h]", "mov     ecx, [edi+4]", "push    eax", "push    edi", "call    dword ptr [ecx+18h]", "add     esp, 10h", "test    buf, buf", "jz      short loc_EA40"], ["mov     edx, [esi]", "bswap   edx", "mov     [eax], edx", "mov     edx, [esi+4]", "bswap   edx", "mov     [eax+4], edx", "mov     edi, [esi+4]", "test    edi, edi", "jnz     short loc_EA30"], ["mov     edx, [esi+8]", "bswap   edx", "mov     [eax+8], edx", "cmp     dword ptr [esi+8], 2", "jz      loc_EC38"], ["lea     esi, [esi+0]"], ["xor     eax, eax"], ["add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     buf, [edi]", "lea     esi, [esi+0]"], ["dec     eax", "jnz     loc_EB70"], ["push    ecx", "push    ecx", "mov     eax, [edi+4]", "push    20h ; ' '", "push    edi", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    buf, buf", "jz      loc_EB70"], ["mov     edx, [eax]", "bswap   edx", "mov     [esi], edx", "mov     edx, [eax+4]", "bswap   edx", "mov     [esi+4], edx", "test    edx, edx", "jnz     short loc_EA30"], ["mov     edx, [eax+8]", "bswap   edx", "mov     [esi+8], edx", "cmp     edx, 2", "jnz     short loc_EA30"], ["mov     edx, [eax+0Ch]", "bswap   edx", "mov     [esi+0Ch], edx", "mov     edx, [eax+10h]", "bswap   edx", "mov     [esi+10h], edx", "mov     edx, [eax+14h]", "bswap   edx", "mov     [esi+14h], edx", "mov     edx, [eax+18h]", "bswap   edx", "mov     [esi+18h], edx", "mov     ebp, [eax+1Ch]", "bswap   ebp", "mov     [esi+20h], ebp", "test    ebp, ebp", "jz      short loc_EAF4"], ["cmp     ebp, 190h", "ja      loc_EA30"], ["mov     edx, [esi+1Ch]", "test    edx, edx", "jz      loc_ED34"], ["push    eax", "add     ebp, 3", "push    eax", "and     ebp, 0FFFFFFFCh", "mov     eax, [edi+4]", "push    ebp", "push    edi", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    buf, buf", "jz      loc_ED15"], ["push    edx", "mov     ecx, [esi+20h]", "push    ecx; n", "push    buf; src", "mov     ebp, [esi+1Ch]", "push    ebp; dest", "call    _memmove", "add     esp, 10h"], ["push    ebp", "push    ebp", "mov     eax, [edi+4]", "push    8", "push    edi", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    buf, buf", "jz      loc_EC8A"], ["mov     edx, [eax]", "bswap   edx", "mov     [esi+24h], edx", "mov     ebp, [eax+4]", "bswap   ebp", "mov     [esi+2Ch], ebp"], ["test    ebp, ebp", "jz      loc_EC80"], ["cmp     ebp, 190h", "ja      loc_EA30"], ["mov     eax, [esi+28h]", "test    eax, eax", "jz      loc_ED58"], ["push    eax", "add     ebp, 3", "push    eax", "and     ebp, 0FFFFFFFCh", "mov     eax, [edi+4]", "push    ebp", "push    edi", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    buf, buf", "jz      loc_ECF4"], ["push    edx", "mov     ecx, [esi+2Ch]", "push    ecx; n", "push    buf; src", "mov     esi, [esi+28h]", "push    esi; dest", "call    _memmove", "add     esp, 10h", "mov     eax, 1", "jmp     loc_EA32"], ["push    eax", "push    eax", "push    esi; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      loc_EA30"], ["push    eax", "push    eax", "lea     eax, [esi+4]", "push    eax; ep", "push    edi; xdrs", "call    _xdr_enum", "add     esp, 10h", "test    eax, eax", "jz      loc_EA30"], ["mov     eax, [esi+4]", "test    eax, eax", "jnz     loc_EA30"], ["push    eax", "push    eax", "lea     eax, [esi+8]", "push    eax; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      loc_EA30"], ["cmp     dword ptr [esi+8], 2", "jnz     loc_EA30"], ["push    eax", "push    eax", "lea     eax, [esi+0Ch]", "push    eax; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      loc_EA30"], ["push    ebp", "lea     eax, [esi+10h]", "push    ebp", "push    eax; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      loc_EA30"], ["push    ecx", "lea     eax, [esi+14h]", "push    ecx", "push    eax; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      loc_EA30"], ["push    edx", "lea     eax, [esi+18h]", "push    edx", "push    eax; struct opaque_auth *", "push    edi; XDR *", "call    _xdr_opaque_auth", "add     esp, 10h", "test    eax, eax", "jz      loc_EA30"], ["push    eax", "add     esi, 24h ; '$'", "push    eax", "push    esi; struct opaque_auth *", "push    edi; XDR *", "call    _xdr_opaque_auth", "add     esp, 10h", "jmp     loc_EA32"], ["mov     edx, [esi+0Ch]", "lea     edi, [eax+20h]", "bswap   edx", "mov     [eax+0Ch], edx", "mov     edx, [esi+10h]", "bswap   edx", "mov     [eax+10h], edx", "mov     edx, [esi+14h]", "bswap   edx", "mov     [eax+14h], edx", "mov     edx, [esi+18h]", "bswap   edx", "mov     [eax+18h], edx", "mov     edx, [esi+20h]", "bswap   edx", "mov     [eax+1Ch], edx", "mov     eax, [esi+20h]", "test    eax, eax", "jnz     short loc_ECC0"], ["mov     eax, [esi+24h]", "bswap   eax", "mov     [edi], eax", "mov     eax, [esi+2Ch]", "bswap   eax", "mov     [edi+4], eax", "mov     eax, [esi+2Ch]", "test    eax, eax", "jnz     short loc_ECE0"], ["mov     eax, 1", "jmp     loc_EA32"], ["push    ecx", "lea     buf, [esi+24h]", "push    ecx", "push    eax; ep", "push    edi; xdrs", "call    _xdr_enum", "add     esp, 10h", "test    eax, eax", "jz      loc_EA30"], ["push    edx", "lea     eax, [esi+2Ch]", "push    edx", "push    eax; up", "push    edi; xdrs", "call    _xdr_u_int", "add     esp, 10h", "test    eax, eax", "jz      loc_EA30"], ["mov     ebp, [esi+2Ch]", "jmp     loc_EB19"], ["push    edx", "push    eax; n", "mov     ecx, [esi+1Ch]", "push    ecx; src", "push    buf; dest", "call    _memmove", "mov     eax, [esi+20h]", "add     esp, 10h", "add     eax, 3", "and     eax, 0FFFFFFFCh", "add     buf, eax", "jmp     short loc_EC6A"], ["push    ebp", "add     edi, 8", "push    eax; n", "mov     eax, [esi+28h]", "push    eax; src", "push    buf; dest", "call    _memmove", "add     esp, 10h", "jmp     short loc_EC80"], ["push    ebp", "mov     buf, [esi+2Ch]", "push    eax; cnt", "mov     eax, [esi+28h]", "push    eax; cp", "push    edi; xdrs", "call    _xdr_opaque", "add     esp, 10h", "test    eax, eax", "setnz   al", "and     eax, 0FFh", "jmp     loc_EA32"], ["push    eax", "mov     eax, [esi+20h]", "push    eax; cnt", "mov     eax, [esi+1Ch]", "push    eax; cp", "push    edi; xdrs", "call    _xdr_opaque", "add     esp, 10h", "test    eax, eax", "jnz     loc_EAF4"], ["jmp     loc_EA30"], ["push    eax", "push    eax", "push    ebp; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     [esi+1Ch], eax", "test    eax, eax", "jnz     loc_EAC7"], ["jmp     loc_EA30"], ["push    eax", "push    eax", "push    ebp; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     [esi+28h], eax", "test    eax, eax", "jnz     loc_EB38"], ["jmp     loc_EA30"], ["lea     eax, (__PRETTY_FUNCTION___5888 - 2BB6Ch)[ebx]; \"xdr_callmsg\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_11 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_callmsg.c\"", "push    39h ; '9'; line", "push    eax; file", "lea     eax, (aCmsgNull - 2BB6Ch)[ebx]; \"cmsg != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___5888 - 2BB6Ch)[ebx]; \"xdr_callmsg\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_11 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/rpc_callmsg.c\"", "push    38h ; '8'; line", "push    eax; file", "lea     eax, (aXdrsNull - 2BB6Ch)[ebx]; \"xdrs != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "__rpc_dtbsize": [["push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 18h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     eax, ds:(tbsize_7258 - 2BB6Ch)[ebx]", "test    eax, eax", "jz      short loc_EDE8"], ["mov     ecx, [esp+1Ch+var_10]", "xor     ecx, large gs:14h", "jnz     short loc_EE10"], ["add     esp, 18h", "pop     ebx", "retn"], ["push    eax", "push    eax", "lea     eax, [esp+24h+rl]", "push    eax; rlimits", "push    7; resource", "call    _getrlimit", "mov     edx, eax", "add     esp, 10h", "mov     eax, 20h ; ' '", "test    edx, edx", "jnz     short loc_EDD5"], ["mov     eax, [esp+1Ch+rl.rlim_max]", "mov     ds:(tbsize_7258 - 2BB6Ch)[ebx], eax", "jmp     short loc_EDD5"], ["call    __stack_chk_fail_local"]], "__rpc_get_t_size": [["mov     eax, [esp+proto]", "mov     edx, [esp+size]", "cmp     eax, 6", "jz      short loc_EE58"], ["cmp     eax, 11h", "setnz   al", "and     eax, 0FFh", "dec     eax", "and     al, 38h", "add     eax, 2328h"], ["test    edx, edx", "jz      short locret_EE4E"], ["mov     defsize, edx", "cmp     edx, 40000h", "jg      short loc_EE50"], ["retn"], ["mov     size_0, 40000h", "retn"], ["mov     proto_0, offset loc_10000", "jmp     short loc_EE40"]], "__rpc_getconfip": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "lea     eax, (tcp_key - 2BB6Ch)[ebx]", "mov     [esp+3Ch+var_24], eax", "mov     eax, [eax]", "cmp     eax, 0FFFFFFFFh", "jz      loc_F048"], ["sub     esp, 0Ch", "push    eax; key", "call    _pthread_getspecific", "mov     [esp+4Ch+confighandle], eax", "lea     netid_tcp_0, (udp_key - 2BB6Ch)[ebx]", "mov     [esp+4Ch+key], eax", "add     esp, 10h", "mov     eax, [eax]", "cmp     eax, 0FFFFFFFFh", "jz      loc_F080"], ["sub     esp, 0Ch", "push    eax; key", "call    _pthread_getspecific", "add     esp, 10h", "mov     ebp, eax", "lea     netid_udp, (aUdp - 2BB6Ch)[ebx]; \"udp\"", "mov     [esp+3Ch+var_34], eax", "mov     eax, [esp+3Ch+confighandle]", "or      eax, netid_udp", "mov     [esp+3Ch+var_2C], eax", "jz      short loc_EF70"], ["mov     ecx, 4", "mov     esi, [esp+3Ch+nettype]", "mov     edi, [esp+3Ch+var_34]", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_EF40"], ["test    netid, netid", "jz      short loc_EF30"], ["cmp     byte ptr [netid+0], 0", "jz      short loc_EF60"], ["sub     esp, 0Ch", "push    netid; netid", "call    _getnetconfigent", "add     esp, 10h", "mov     netid, eax"], ["add     esp, 2Ch", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ecx, 4", "lea     edi, (aTcp - 2BB6Ch)[ebx]; \"tcp\"", "mov     esi, [esp+3Ch+nettype]", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_EF60"], ["mov     netid_udp, [esp+3Ch+confighandle]", "jmp     short loc_EF18"], ["add     esp, 2Ch", "xor     ebp, ebp", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["call    _setnetconfig", "mov     [esp+3Ch+confighandle], eax", "test    confighandle_0, confighandle_0", "jz      loc_F113"], ["lea     confighandle_0, (aInet - 2BB6Ch)[ebx]; \"inet\"", "xor     netid_udp, netid_udp", "mov     [esp+3Ch+var_30], eax", "lea     eax, (aTcp - 2BB6Ch)[ebx]; \"tcp\"", "mov     [esp+3Ch+var_28], eax", "nop"], ["sub     esp, 0Ch", "mov     edx, [esp+48h+confighandle]", "push    edx; handlep", "call    _getnetconfig", "add     esp, 10h", "test    nconf, nconf", "jz      short loc_F028"], ["mov     esi, [nconf+0Ch]", "mov     ecx, 5", "mov     edi, [esp+3Ch+var_30]", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_EF98"], ["mov     edx, [nconf+10h]", "mov     ecx, 4", "mov     esi, edx", "mov     edi, [esp+3Ch+var_28]", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "movsx   ecx, cl", "or      ecx, [esp+3Ch+var_2C]", "jz      loc_F0B8"], ["mov     esi, edx", "mov     ecx, 4", "mov     edi, [esp+3Ch+var_34]", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "movsx   edx, dl", "or      edx, netid_udp", "jnz     short loc_EF98"], ["sub     esp, 0Ch", "mov     ecx, [nconf]", "push    ecx; s", "call    _strdup", "pop     esi", "mov     netid_udp, eax", "pop     edi", "push    netid_udp; pointer", "mov     netid_udp, [esp+48h+key]", "mov     eax, [eax]", "push    eax; key", "call    _pthread_setspecific", "add     esp, 10h", "jmp     loc_EF98"], ["sub     esp, 0Ch", "mov     nconf, [esp+48h+confighandle]", "push    eax; handlep", "call    _endnetconfig", "mov     eax, [esp+4Ch+var_2C]", "add     esp, 10h", "mov     [esp+3Ch+confighandle], eax", "jmp     loc_EF00"], ["sub     esp, 0Ch", "lea     esi, (tsd_lock - 2BB6Ch)[ebx]", "push    esi; mutex", "call    _pthread_mutex_lock", "mov     eax, [esp+4Ch+var_24]", "add     esp, 10h", "cmp     dword ptr [eax], 0FFFFFFFFh", "jz      loc_F0F8"], ["sub     esp, 0Ch", "push    esi; mutex", "call    _pthread_mutex_unlock", "mov     eax, [esp+4Ch+var_24]", "add     esp, 10h", "mov     eax, [eax]", "jmp     loc_EEB7"], ["sub     esp, 0Ch", "lea     esi, (tsd_lock - 2BB6Ch)[ebx]", "push    esi; mutex", "call    _pthread_mutex_lock", "mov     eax, [esp+4Ch+key]", "add     esp, 10h", "cmp     dword ptr [eax], 0FFFFFFFFh", "jz      short loc_F0E0"], ["sub     esp, 0Ch", "push    esi; mutex", "call    _pthread_mutex_unlock", "mov     eax, [esp+4Ch+key]", "add     esp, 10h", "mov     eax, [eax]", "jmp     loc_EEDC"], ["sub     esp, 0Ch", "mov     nconf, [nconf]", "push    eax; s", "call    _strdup", "mov     [esp+4Ch+var_2C], eax", "pop     edx", "pop     ecx", "push    netid_tcp_0; pointer", "mov     netid_tcp_0, [esp+48h+var_24]", "mov     esi, [eax]", "push    esi; key", "call    _pthread_setspecific", "add     esp, 10h", "jmp     loc_EF98"], ["push    ebp", "mov     eax, ds:(free_ptr - 2BB6Ch)[ebx]", "push    ebp", "push    eax; destr_function", "mov     eax, [esp+48h+key]", "push    eax; key", "call    _pthread_key_create", "add     esp, 10h", "jmp     short loc_F09B"], ["push    eax", "push    eax", "mov     eax, ds:(free_ptr - 2BB6Ch)[ebx]", "push    eax; destr_function", "mov     eax, [esp+48h+var_24]", "push    eax; key", "call    _pthread_key_create", "add     esp, 10h", "jmp     loc_F067"], ["lea     confighandle_0, (aRpcFailedToOpe - 2BB6Ch)[ebx]; \"rpc: failed to open /etc/netconfig\"", "push    edi", "push    eax", "xor     netid_udp, netid_udp", "push    1", "push    3", "call    ___syslog_chk", "add     esp, 10h", "jmp     loc_EF30"]], "__rpc_setconf": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 18h", "mov     edi, [esp+28h+nettype]", "push    0Ch; size", "call    _malloc", "add     esp, 10h", "mov     esi, eax", "test    handle, handle", "jz      short loc_F1D2"], ["test    edi, edi", "jz      loc_F200"], ["cmp     byte ptr [edi], 0", "jz      loc_F200"], ["xor     ebp, ebp", "lea     handle, (aNetpath - 2BB6Ch)[ebx]; \"netpath\"", "jmp     short loc_F18F"], ["inc     ebp", "lea     edx, ds:0[ebp*8]", "mov     eax, dword ptr ds:(_rpctypelist.name - 2BB6Ch)[edx+ebx]", "test    eax, eax", "jz      loc_F228"], ["push    edx", "push    edx", "push    eax; s2", "push    edi; s1", "call    _strcasecmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_F178"], ["mov     eax, ds:(_rpctypelist.type - 2BB6Ch)[ebx+ebp*8]"], ["mov     [handle+8], eax", "cmp     eax, 6", "jg      short loc_F1E0"], ["cmp     eax, 4", "jg      short loc_F207"], ["cmp     eax, 1", "jz      short loc_F207"], ["sub     eax, 2", "cmp     eax, 2", "ja      short loc_F1E8"], ["call    _setnetconfig", "mov     [handle], eax", "test    eax, eax", "jz      short loc_F238"], ["mov     dword ptr [handle+4], 0"], ["add     esp, 0Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     eax, 7", "cmp     eax, 1", "jbe     short loc_F1C0"], ["sub     esp, 0Ch", "push    handle; ptr", "call    _free", "add     esp, 10h", "xor     handle, handle", "add     esp, 0Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     dword ptr [esi+8], 1"], ["call    _setnetpath", "mov     [handle], eax", "test    eax, eax", "jz      short loc_F1E8"], ["mov     dword ptr [handle+4], 1", "add     esp, 0Ch", "mov     eax, handle", "pop     ebx", "pop     handle", "pop     edi", "pop     ebp", "retn"], ["mov     eax, ds:(_rpctypelist.type - 2BB6Ch)[ebx+edx]", "jmp     loc_F1A6"], ["push    eax", "lea     eax, (aRpcFailedToOpe - 2BB6Ch)[ebx]; \"rpc: failed to open /etc/netconfig\"", "push    eax", "push    1", "push    3", "call    ___syslog_chk", "mov     [esp+2Ch+ptr], handle; ptr", "call    _free", "xor     handle, handle", "add     esp, 10h", "jmp     loc_F1D2"]], "__rpc_getconf": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     ebp, [esp+2Ch+handle]", "test    handle_0, handle_0", "jz      short loc_F2D8"], ["lea     eax, (aInet - 2BB6Ch)[ebx]; \"inet\"", "mov     [esp+2Ch+var_24], eax", "lea     eax, (aUdp - 2BB6Ch)[ebx]; \"udp\"", "mov     [esp+2Ch+var_20], eax"], ["mov     edx, [handle_0+4]", "mov     eax, [handle_0+0]", "test    edx, edx", "jz      short loc_F2C8"], ["sub     esp, 0Ch", "push    eax; handlep", "call    _getnetpath", "add     esp, 10h"], ["test    nconf, nconf", "jz      short loc_F2D8"], ["mov     edx, [nconf+4]", "lea     ecx, [edx-1]", "cmp     ecx, 2", "ja      short loc_F28E"], ["cmp     dword ptr [handle_0+8], 8; switch 9 cases", "ja      short _L76; jumptable 0000F2C5 default case, cases 0,1"], ["mov     ecx, [handle_0+8]", "mov     esi, ds:(jpt_F2C5 - 2BB6Ch)[ebx+ecx*4]", "add     esi, ebx", "jmp     esi; switch jump"], ["sub     esp, 0Ch", "push    eax; handlep", "call    _getnetconfig", "add     esp, 10h", "jmp     short loc_F2A4"], ["xor     eax, eax"], ["add     esp, 1Ch; jumptable 0000F2C5 default case, cases 0,1", "pop     ebx", "pop     esi", "pop     edi", "pop     handle_0", "retn"], ["test    byte ptr [nconf+8], 1; jumptable 0000F2C5 case 4", "jz      short loc_F28E"], ["dec     edx; jumptable 0000F2C5 case 6", "jnz     short loc_F28E"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     handle_0", "retn"], ["test    byte ptr [nconf+8], 1; jumptable 0000F2C5 case 3", "jz      short loc_F28E"], ["sub     edx, 2; jumptable 0000F2C5 case 5", "cmp     edx, 1", "ja      short loc_F28E"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     handle_0", "retn"], ["test    byte ptr [nconf+8], 1; jumptable 0000F2C5 case 2", "jz      loc_F28E"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     handle_0", "retn"], ["dec     edx; jumptable 0000F2C5 case 8", "jnz     loc_F28E"], ["mov     edx, [nconf+0Ch]", "mov     ecx, 5", "mov     esi, edx", "mov     edi, [esp+2Ch+var_24]", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      short loc_F36E"], ["mov     esi, edx", "mov     ecx, 6", "lea     edi, (aInet6 - 2BB6Ch)[ebx]; \"inet6\"", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     loc_F28E"], ["mov     esi, [nconf+10h]", "mov     ecx, 4", "mov     edi, [esp+2Ch+var_20]", "jmp     short loc_F3D1"], ["sub     edx, 2; jumptable 0000F2C5 case 7", "cmp     edx, 1", "ja      loc_F28E"], ["mov     edx, [nconf+0Ch]", "mov     ecx, 5", "mov     esi, edx", "mov     edi, [esp+2Ch+var_24]", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      short loc_F3C3"], ["mov     esi, edx", "mov     ecx, 6", "lea     edi, (aInet6 - 2BB6Ch)[ebx]; \"inet6\"", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     loc_F28E"], ["mov     esi, [nconf+10h]", "mov     ecx, 4", "lea     edi, (aTcp - 2BB6Ch)[ebx]; \"tcp\""], ["repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     loc_F28E"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     handle_0", "retn"]], "__rpc_endconf": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ecx", "mov     esi, [esp+0Ch+handle]", "test    handle_0, handle_0", "jz      short loc_F427"], ["mov     edx, [handle_0+4]", "mov     eax, [handle_0]", "test    edx, edx", "jnz     short loc_F430"], ["sub     esp, 0Ch", "push    eax; handlep", "call    _endnetconfig", "add     esp, 10h"], ["sub     esp, 0Ch", "push    handle_0; ptr", "call    _free", "add     esp, 10h"], ["pop     eax", "pop     ebx", "pop     handle_0", "retn"], ["sub     esp, 0Ch", "push    eax; handlep", "call    _endnetpath", "add     esp, 10h", "jmp     short loc_F41B"]], "__rpc_fd2sockinfo": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 9Ch", "mov     eax, large gs:14h", "mov     [esp+0ACh+var_20], eax", "xor     eax, eax", "mov     esi, [esp+0ACh+fd]", "mov     edi, [esp+0ACh+sip]", "mov     [esp+0ACh+len], 80h", "lea     eax, [esp+0ACh+ss_0]", "push    edx", "lea     ebp, [esp+0B0h+len]", "push    ebp; len", "push    eax; addr", "push    esi; fd", "call    _getsockname", "add     esp, 10h", "test    eax, eax", "js      short loc_F540"], ["mov     eax, [esp+0ACh+len]", "mov     [esp+0ACh+len], 4", "sub     esp, 0Ch", "mov     [edi+0Ch], eax", "push    ebp; optlen", "lea     eax, [esp+0BCh+type]", "push    eax; optval", "push    3; optname", "push    1; level", "push    esi; fd", "call    _getsockopt", "add     esp, 20h", "test    eax, eax", "js      short loc_F540"], ["mov     eax, dword ptr [esp+0ACh+ss_0.ss_family]", "mov     edx, [esp+0ACh+type]", "cmp     ax, 1", "jz      short loc_F568"], ["cmp     edx, 1", "jz      short loc_F560"], ["mov     ecx, 11h", "cmp     edx, 2", "jnz     short loc_F540"], ["and     eax, 0FFFFh", "mov     [edi+4], proto", "mov     [edi], eax", "mov     [edi+8], edx", "mov     eax, 1", "jmp     short loc_F542"], ["xor     eax, eax"], ["mov     ecx, [esp+0ACh+var_20]", "xor     ecx, large gs:14h", "jnz     short loc_F56C"], ["add     esp, 9Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ecx, 6", "jmp     short loc_F528"], ["xor     ecx, ecx", "jmp     short loc_F528"], ["call    __stack_chk_fail_local"]], "__rpc_sockinfo2netid": [["push    ebp", "push    edi", "push    esi", "mov     esi, 2", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 28h", "lea     edi, (aLocal - 2BB6Ch)[ebx]; \"local\"", "push    edi; netid", "call    _getnetconfigent", "mov     edx, eax", "mov     nconf, [esp+3Ch+sip]", "xor     ecx, ecx", "mov     ebp, [eax]", "lea     eax, (na_cvt.netid - 2BB6Ch)[ebx]", "mov     [esp+3Ch+var_20], eax", "add     esp, 10h", "jmp     short loc_F5CC"], ["inc     i", "add     eax, 0Ch", "cmp     i, 5", "jz      short loc_F628"], ["mov     esi, [eax+4]"], ["cmp     ebp, esi", "jnz     short loc_F5C0"], ["mov     esi, [esp+2Ch+sip]", "mov     esi, [esi+4]", "cmp     [eax+8], esi", "jnz     short loc_F5C0"], ["lea     eax, [i+i*2]", "mov     i, [esp+2Ch+var_20]", "mov     eax, [ecx+eax*4]", "mov     ecx, 6", "mov     esi, eax", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      short loc_F64A"], ["mov     esi, [esp+2Ch+netid]", "test    esi, esi", "jz      short loc_F607"], ["mov     edi, [esp+2Ch+netid]", "mov     [edi], eax"], ["test    nconf, nconf", "jz      short loc_F617"], ["sub     esp, 0Ch", "push    nconf; netconfigp", "call    _freenetconfigent", "add     esp, 10h"], ["mov     eax, 1"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     eax, eax", "test    nconf, nconf", "jz      short loc_F61C"], ["mov     [esp+2Ch+var_20], eax", "sub     esp, 0Ch", "push    nconf; netconfigp", "call    _freenetconfigent", "add     esp, 10h", "mov     eax, [esp+2Ch+var_20]", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["test    nconf, nconf", "jz      short loc_F658"], ["mov     ecx, [esp+2Ch+netid]", "test    ecx, ecx", "jnz     short loc_F601"], ["jmp     short loc_F60B"], ["mov     edi, [esp+2Ch+netid]", "test    edi, edi", "jz      short loc_F617"], ["mov     edi, [esp+2Ch+netid]", "lea     eax, (aUnix - 2BB6Ch)[ebx]; \"unix\"", "mov     [edi], eax", "mov     eax, 1", "jmp     short loc_F61C"]], "__rpcgettp": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+34h+var_10], eax", "xor     eax, eax", "lea     esi, [esp+34h+si_0]", "push    esi; sip", "mov     ecx, [esp+38h+fd]", "push    ecx; fd", "call    ___rpc_fd2sockinfo", "add     esp, 10h", "test    eax, eax", "jz      short loc_F6D8"], ["push    edx", "push    edx", "lea     eax, [esp+34h+netid]", "push    eax; netid", "push    esi; sip", "call    ___rpc_sockinfo2netid", "add     esp, 10h", "test    eax, eax", "jz      short loc_F6D8"], ["sub     esp, 0Ch", "mov     eax, [esp+38h+netid]", "push    eax; netid", "call    _getnetconfigent", "add     esp, 10h", "jmp     short loc_F6DA"], ["xor     eax, eax"], ["mov     edx, [esp+2Ch+var_10]", "xor     edx, large gs:14h", "jnz     short loc_F6ED"], ["add     esp, 24h", "pop     ebx", "pop     esi", "retn"], ["call    __stack_chk_fail_local"]], "__rpc_taddr2uaddr_af": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 50h", "mov     esi, large gs:14h", "mov     [esp+5Ch+var_10], esi", "xor     esi, esi", "mov     ecx, [esp+5Ch+nbuf]", "mov     eax, [esp+5Ch+af_0]", "mov     edx, [ecx+4]", "test    edx, edx", "jz      short loc_F73A"], ["cmp     eax, 2", "jz      short loc_F7B0"], ["cmp     eax, 0Ah", "jz      short loc_F788"], ["dec     eax", "jz      short loc_F758"], ["xor     eax, eax"], ["mov     edi, [esp+5Ch+var_10]", "xor     edi, large gs:14h", "jnz     loc_F7EE"], ["add     esp, 50h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["sub     edx, 2", "js      short loc_F73A"], ["mov     eax, [ecx+8]", "sub     esp, 0Ch", "add     eax, 2", "push    eax", "lea     eax, (aS_0 - 2BB6Ch)[ebx]; \"%.*s\"", "push    path_len"], ["push    eax", "push    1", "lea     eax, [esp+78h+ret]", "push    eax", "call    ___asprintf_chk", "add     esp, 20h", "test    eax, eax", "js      short loc_F73A"], ["mov     eax, [esp+5Ch+ret]", "jmp     short loc_F73C"], ["cmp     edx, 1Bh", "jbe     short loc_F73A"], ["mov     edi, [ecx+8]", "push    2Eh ; '.'; len", "lea     esi, [esp+60h+namebuf6]", "lea     eax, [sin6+8]", "push    esi; buf", "push    eax; cp", "push    0Ah; af", "call    _inet_ntop", "add     esp, 10h", "test    eax, eax", "jnz     short loc_F7D5"], ["jmp     short loc_F73A"], ["cmp     edx, 0Fh", "jbe     short loc_F73A"], ["mov     edi, [ecx+8]", "push    10h; len", "lea     esi, [esp+60h+namebuf]", "lea     eax, [sin+4]", "push    esi; buf", "push    eax; cp", "push    2; af", "call    _inet_ntop", "add     esp, 10h", "test    eax, eax", "jz      loc_F73A"], ["mov     ax, [edi+2]", "push    edx", "push    edx", "movzx   edx, ah", "push    edx", "and     eax, 0FFh", "push    eax", "lea     eax, (aSUU - 2BB6Ch)[ebx]; \"%s.%u.%u\"", "push    esi", "jmp     short loc_F76E"], ["call    __stack_chk_fail_local"]], "__rpc_uaddr2taddr_af": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     eax, [esp+2Ch+uaddr]", "test    eax, eax", "jz      loc_F910"], ["sub     esp, 0Ch", "push    eax; s", "call    _strdup", "add     esp, 10h", "mov     esi, eax", "test    addrstr, addrstr", "jz      loc_F910"], ["cmp     byte ptr [addrstr], 2Fh ; '/'", "jz      loc_F900"], ["push    ecx", "push    ecx", "push    2Eh ; '.'; c", "push    addrstr; s", "call    _strrchr", "add     esp, 10h", "mov     ebp, eax", "test    p, p", "jz      loc_F8F8"], ["push    eax", "lea     eax, [p+1]", "push    0Ah; base", "push    0; endptr", "push    eax; nptr", "call    _strtol", "mov     byte ptr [p+0], 0", "mov     edi, eax", "pop     portlo", "pop     edx", "push    2Eh ; '.'; c", "push    addrstr; s", "call    _strrchr", "add     esp, 10h", "mov     p, eax", "test    p, p", "jz      short loc_F8F8"], ["push    eax", "lea     eax, [p+1]", "push    0Ah; base", "push    0; endptr", "push    eax; nptr", "call    _strtol", "shl     porthi, 8", "mov     byte ptr [p+0], 0", "or      eax, portlo", "mov     [esp+3Ch+sin6], eax", "add     esp, 10h"], ["sub     esp, 0Ch", "push    0Ch; size", "call    _malloc", "add     esp, 10h", "mov     ebp, eax", "test    ret, ret", "jz      short loc_F8F8"], ["cmp     [esp+2Ch+af_0], 2", "jz      short loc_F920"], ["cmp     [esp+2Ch+af_0], 0Ah", "jz      loc_F9E0"], ["cmp     [esp+2Ch+af_0], 1", "jz      loc_F988"], ["sub     esp, 0Ch", "push    addrstr; ptr", "call    _free", "add     esp, 10h", "mov     eax, ret", "add     esp, 1Ch", "pop     ebx", "pop     addrstr", "pop     edi", "pop     ret", "retn"], ["sub     esp, 0Ch", "push    sin; ptr"], ["call    _free", "mov     [esp+3Ch+ptr], ret; ptr", "call    _free", "add     esp, 10h", "lea     addrstr, [addrstr+0]"], ["xor     ebp, ebp", "jmp     short out"], ["mov     [esp+2Ch+sin6], 0", "jmp     short loc_F899"], ["add     esp, 1Ch", "xor     ebp, ebp", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    10h; size", "call    _malloc", "add     esp, 10h", "mov     edi, eax", "test    sin, sin", "jz      short out"], ["mov     dword ptr [sin+4], 0", "mov     dword ptr [sin+8], 0", "mov     dword ptr [sin+0Ch], 0", "mov     word ptr [sin], 2", "lea     edx, [sin+4]", "mov     sin, [esp+2Ch+sin6]", "rol     ax, 8", "mov     [sin+2], ax", "push    eax", "push    edx; buf", "push    addrstr; cp", "push    2; af", "call    _inet_pton", "add     esp, 10h", "test    eax, eax", "jle     loc_F8E0"], ["mov     dword ptr [ret+4], 10h", "mov     dword ptr [ret+0], 10h", "mov     [ret+8], sin", "jmp     out"], ["push    edx", "push    edx", "push    1; size", "push    6Eh ; 'n'; nmemb", "call    _calloc", "add     esp, 10h", "mov     edi, eax", "test    sun, sun", "jz      out"], ["mov     word ptr [sun], 1", "lea     edx, [sun+2]", "push    eax", "push    6Bh ; 'k'; n", "push    addrstr; src", "push    edx; dest", "mov     [esp+3Ch+sin6], edx", "call    _strncpy", "mov     edx, [esp+3Ch+sin6]", "mov     [esp+3Ch+ptr], edx; s", "call    _strlen", "add     eax, 2", "add     esp, 10h", "mov     [ret+4], eax", "mov     dword ptr [ret+0], 6Eh ; 'n'", "mov     [ret+8], sun", "jmp     out"], ["sub     esp, 0Ch", "push    1Ch; size", "call    _malloc", "add     esp, 10h", "mov     edx, eax", "test    sin6_0, sin6_0", "jz      out"], ["lea     edi, [sin6_0+4]", "mov     ecx, 6", "xor     sin6_0, sin6_0", "rep stosd", "mov     eax, [esp+2Ch+sin6]", "mov     word ptr [sin6_0], 0Ah", "rol     ax, 8", "mov     [sin6_0+2], ax", "push    ecx", "lea     eax, [sin6_0+8]", "mov     [esp+30h+sin6], sin6_0", "push    eax; buf", "push    addrstr; cp", "push    0Ah; af", "call    _inet_pton", "add     esp, 10h", "test    eax, eax", "mov     edx, [esp+2Ch+sin6]", "jle     short loc_FA48"], ["mov     dword ptr [ret+4], 1Ch", "mov     dword ptr [ret+0], 1Ch", "mov     [ret+8], edx", "jmp     out"], ["sub     esp, 0Ch", "push    edx", "jmp     loc_F8E4"]], "__rpc_nconf2sockinfo": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "lea     ebp, (aUdp - 2BB6Ch)[ebx]; \"udp\"", "mov     eax, [esp+3Ch+nconf]", "mov     [esp+3Ch+i], 0", "mov     eax, [eax]", "mov     [esp+3Ch+s2], eax", "lea     eax, (na_cvt.netid - 2BB6Ch)[ebx]", "mov     [esp+3Ch+var_2C], eax", "lea     eax, (aUnix - 2BB6Ch)[ebx]; \"unix\"", "mov     [esp+3Ch+var_24], eax", "lea     eax, (aLocal - 2BB6Ch)[ebx]; \"local\"", "mov     [esp+3Ch+var_20], eax"], ["push    edi", "push    edi", "mov     esi, [esp+44h+s2]", "push    esi; s2", "push    ebp; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "jz      short loc_FB40"], ["mov     ecx, 5", "mov     edi, [esp+3Ch+var_24]", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_FB16"], ["mov     ecx, 6", "mov     esi, ebp", "mov     edi, [esp+3Ch+var_20]", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      short loc_FB40"], ["mov     eax, [esp+3Ch+i]", "mov     edx, [esp+3Ch+var_2C]", "inc     eax", "add     edx, 0Ch", "mov     [esp+3Ch+i], eax", "mov     [esp+3Ch+var_2C], edx", "mov     eax, [esp+3Ch+i]", "mov     edx, [esp+3Ch+var_2C]", "cmp     i_0, 5", "jz      short loc_FB7A"], ["mov     ebp, [edx]", "jmp     short loc_FAD8"], ["mov     eax, [esp+3Ch+i]", "mov     ecx, [esp+3Ch+sip]", "sub     esp, 0Ch", "lea     eax, [eax+eax*2]", "lea     eax, (na_cvt.netid - 2BB6Ch)[ebx+eax*4]", "mov     edx, [eax+4]", "mov     eax, [eax+8]", "mov     [ecx+4], eax", "mov     eax, [esp+48h+nconf]", "mov     [ecx], edx", "mov     esi, [eax+4]", "push    esi; semantics", "call    ___rpc_seman2socktype", "mov     ecx, [esp+4Ch+sip]", "add     esp, 10h", "mov     [ecx+8], eax", "inc     eax", "jnz     short loc_FB88"], ["add     esp, 2Ch", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "mov     eax, [esp+48h+sip]", "mov     ecx, [eax]", "push    ecx; af_0", "call    ___rpc_get_a_size", "mov     edi, [esp+4Ch+sip]", "add     esp, 10h", "mov     [edi+0Ch], eax", "add     esp, 2Ch", "mov     eax, 1", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "__rpc_nconf2fd_flags": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+34h+var_10], eax", "xor     eax, eax", "lea     eax, [esp+34h+si_0]", "push    eax; sip", "mov     eax, [esp+38h+nconf]", "push    eax; nconf", "call    ___rpc_nconf2sockinfo", "add     esp, 10h", "mov     esi, eax", "test    eax, eax", "jnz     short loc_FC00"], ["mov     eax, [esp+2Ch+var_10]", "xor     eax, large gs:14h", "jnz     short loc_FC4C"], ["add     esp, 24h", "mov     eax, esi", "pop     ebx", "pop     esi", "retn"], ["push    eax", "mov     edx, [esp+30h+si_0.si_proto]", "push    edx; protocol", "mov     eax, [esp+34h+flags]", "mov     ecx, [esp+34h+si_0.si_socktype]", "or      eax, ecx", "push    eax; type", "mov     esi, [esp+38h+si_0.si_af]", "push    esi; domain", "call    _socket", "add     esp, 10h", "mov     esi, eax", "test    fd, fd", "js      short loc_FBE4"], ["cmp     [esp+2Ch+si_0.si_af], 0Ah", "jnz     short loc_FBE4"], ["mov     [esp+2Ch+val], 1", "sub     esp, 0Ch", "push    4; optlen", "lea     fd, [esp+3Ch+val]", "push    eax; optval", "push    1Ah; optname", "push    29h ; ')'; level", "push    fd; fd", "call    _setsockopt", "add     esp, 20h", "jmp     short loc_FBE4"], ["call    __stack_chk_fail_local"]], "taddr2uaddr": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+34h+var_10], eax", "xor     eax, eax", "lea     eax, [esp+34h+si_0]", "mov     esi, [esp+34h+nbuf]", "push    eax; sip", "mov     ecx, [esp+38h+nconf]", "push    ecx; nconf", "call    ___rpc_nconf2sockinfo", "add     esp, 10h", "test    eax, eax", "jz      short loc_FCE0"], ["push    eax", "push    eax", "push    esi; nbuf", "mov     edx, [esp+38h+si_0.si_af]", "push    edx; af_0", "call    ___rpc_taddr2uaddr_af", "add     esp, 10h"], ["mov     edx, [esp+2Ch+var_10]", "xor     edx, large gs:14h", "jnz     short loc_FCE4"], ["add     esp, 24h", "pop     ebx", "pop     esi", "retn"], ["xor     eax, eax", "jmp     short loc_FCC6"], ["call    __stack_chk_fail_local"]], "uaddr2taddr": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+34h+var_10], eax", "xor     eax, eax", "lea     eax, [esp+34h+si_0]", "mov     esi, [esp+34h+uaddr]", "push    eax; sip", "mov     ecx, [esp+38h+nconf]", "push    ecx; nconf", "call    ___rpc_nconf2sockinfo", "add     esp, 10h", "test    eax, eax", "jz      short loc_FD50"], ["push    eax", "push    eax", "push    esi; uaddr", "mov     edx, [esp+38h+si_0.si_af]", "push    edx; af_0", "call    ___rpc_uaddr2taddr_af", "add     esp, 10h"], ["mov     edx, [esp+2Ch+var_10]", "xor     edx, large gs:14h", "jnz     short loc_FD54"], ["add     esp, 24h", "pop     ebx", "pop     esi", "retn"], ["xor     eax, eax", "jmp     short loc_FD36"], ["call    __stack_chk_fail_local"]], "__rpc_fixup_addr": [["mov     eax, [esp+svc]", "mov     ecx, [eax+8]", "mov     eax, [esp+new]", "mov     edx, [eax+8]", "mov     ax, [sa_new]", "cmp     [sa_svc], ax", "jnz     short loc_FDAC"], ["cmp     ax, 0Ah", "jz      short loc_FDB8"], ["mov     eax, 1", "retn"], ["mov     eax, [sin6_new+8]", "and     eax, 0C0FFh", "cmp     eax, 80FEh", "jz      short loc_FDE8"], ["cmp     eax, 0C0FEh", "jnz     short loc_FDAC"], ["mov     eax, [sin6_svc+8]", "and     eax, 0C0FFh", "cmp     eax, 0C0FEh", "jnz     short loc_FDAC"], ["mov     eax, [sin6_svc+18h]", "mov     [sin6_new+18h], eax", "jmp     short loc_FDAC"], ["mov     eax, [sin6_svc+8]", "and     eax, 0C0FFh", "cmp     eax, 80FEh", "jnz     short loc_FDAC"], ["jmp     short loc_FDDD"]], "__rpc_sockisbound": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 100h", "mov     eax, large gs:14h", "mov     [esp+10Ch+var_10], eax", "xor     eax, eax", "mov     [esp+10Ch+slen], 80h", "lea     esi, [esp+10Ch+ss_0]", "push    eax", "lea     eax, [esp+110h+slen]", "push    eax; len", "push    esi; addr", "mov     edx, [esp+118h+fd]", "push    edx; fd", "call    _getsockname", "add     esp, 10h", "test    eax, eax", "js      short loc_FE5E"], ["mov     eax, dword ptr [esp+10Ch+ss_0.ss_family]", "cmp     ax, 2", "jz      short loc_FEB0"], ["cmp     ax, 0Ah", "jz      short loc_FE98"], ["dec     ax", "jz      short loc_FE80"], ["xor     eax, eax"], ["mov     edx, [esp+10Ch+var_10]", "xor     edx, large gs:14h", "jnz     short loc_FEBD"], ["add     esp, 100h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["lea     edi, [esp+10Ch+u_addr]", "mov     ecx, 1Bh", "rep movsd", "xor     eax, eax", "cmp     byte ptr [esp+10Ch+u_addr+2], 0", "setnz   al", "jmp     short loc_FE60"], ["lea     edi, [esp+10Ch+u_addr]", "mov     ecx, 7", "rep movsd", "xor     eax, eax", "cmp     word ptr [esp+10Ch+u_addr+2], 0", "setnz   al", "jmp     short loc_FE60"], ["xor     eax, eax", "cmp     word ptr [esp+10Ch+ss_0.__ss_padding], 0", "setnz   al", "jmp     short loc_FE60"], ["call    __stack_chk_fail_local"]], "__rpc_set_netbuf": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     esi, [esp+0Ch+nb]", "mov     edi, [esp+0Ch+len]", "mov     eax, [esi+4]", "cmp     eax, edi", "jz      short loc_FF38"], ["test    eax, eax", "jnz     short loc_FF20"], ["push    eax", "push    eax", "push    edi; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     [esi+8], eax", "test    eax, eax", "jz      short loc_FF1C"], ["mov     [esi+4], edi", "mov     [esi], edi"], ["push    edx", "push    edi; n", "mov     ecx, [esp+14h+ptr]", "push    ecx; src", "push    eax; dest", "call    _memcpy", "add     esp, 10h", "mov     eax, esi"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["sub     esp, 0Ch", "mov     eax, [nb_0+8]", "push    eax; ptr", "call    _free", "add     esp, 10h", "jmp     short loc_FEF1"], ["mov     eax, [nb_0+8]", "jmp     short loc_FF0A"]], "clnt_com_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 48h", "mov     [esp+58h+raddr], raddr_0", "mov     raddr_0, [esp+58h+fd]", "mov     [esp+58h+vers], vers_0", "mov     [esp+58h+var_30], eax", "mov     [esp+58h+prog], prog_0", "mov     eax, [eax]", "mov     prog_0, large gs:14h", "mov     [esp+58h+var_20], prog_0", "xor     prog_0, prog_0", "mov     [esp+58h+sockfd], eax", "lea     fd_0, (rpcsoc_lock - 2BB6Ch)[ebx]", "mov     esi, [esp+58h+tp]", "mov     [esp+58h+mutex], eax", "push    eax; mutex", "call    _pthread_mutex_lock", "mov     [esp+5Ch+nettype], esi; nettype", "call    ___rpc_getconfip", "add     esp, 10h", "test    nconf, nconf", "jz      loc_101E0"], ["cmp     [esp+4Ch+sockfd], 0FFFFFFFFh", "mov     ebp, nconf", "mov     [esp+4Ch+madefd], 0", "jz      loc_10110"], ["mov     edi, [esp+4Ch+raddr]", "cmp     word ptr [edi+2], 0", "jnz     short loc_10039"], ["sub     esp, 0Ch", "mov     edi, [esp+58h+mutex]", "push    edi; mutex", "lea     edi, (aUdp - 2BB6Ch)[ebx]; \"udp\"", "call    _pthread_mutex_unlock", "mov     ecx, 4", "repe cmpsb", "setnbe  al", "sbb     al, 0", "add     esp, 10h", "movsx   eax, al", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0Bh", "add     eax, 6"], ["push    proto_0; protocol", "mov     proto_0, [esp+50h+vers]", "push    eax; version", "mov     eax, [esp+54h+prog]", "push    eax; program", "mov     edi, [esp+58h+raddr]", "push    edi; address", "call    _pmap_getport", "add     esp, 10h", "test    ax, ax", "jz      err"], ["sub     esp, 0Ch", "rol     ax, 8", "mov     ecx, [esp+58h+mutex]", "mov     [edi+2], ax", "push    ecx; mutex", "call    _pthread_mutex_lock", "add     esp, 10h"], ["mov     eax, [esp+4Ch+raddr]", "mov     [esp+4Ch+bindaddr.len], 10h", "mov     [esp+4Ch+bindaddr.buf], eax", "mov     [esp+4Ch+bindaddr.maxlen], 10h", "push    eax", "push    eax", "push    0; sock_in", "mov     edi, [esp+58h+sockfd]", "push    edi; sockfd", "call    _bindresvport", "add     esp, 0Ch", "mov     eax, [esp+50h+recvsz]", "push    eax; recvsz", "mov     eax, [esp+54h+sendsz]", "push    eax; sendsz", "mov     eax, [esp+58h+vers]", "push    eax; vers", "mov     edx, [esp+5Ch+prog]", "push    edx; prog", "lea     eax, [esp+60h+bindaddr]", "push    eax; svcaddr", "push    nconf; nconf", "push    edi; fd", "call    _clnt_tli_create", "add     esp, 20h", "mov     esi, eax", "test    cl_0, cl_0", "jz      short err"], ["cmp     [esp+4Ch+madefd], 1", "jz      short loc_100C8"], ["sub     esp, 0Ch", "push    nconf; netconfigp", "call    _freenetconfigent", "pop     edi", "mov     nconf, [esp+58h+mutex]", "push    ebp; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h"], ["mov     eax, [esp+4Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_10202"], ["add     esp, 3Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    eax", "mov     eax, [cl_0+4]", "push    0", "push    8", "push    cl_0", "call    dword ptr [eax+14h]", "mov     eax, [esp+5Ch+var_30]", "mov     edx, [esp+5Ch+sockfd]", "add     esp, 10h", "mov     [eax], edx", "jmp     short loc_10092"], ["cmp     [esp+4Ch+madefd], 1", "jz      loc_101A0"], ["sub     esp, 0Ch", "xor     esi, esi", "push    nconf; netconfigp", "call    _freenetconfigent", "pop     eax", "mov     edx, [esp+58h+mutex]", "push    edx; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     short loc_100A9"], ["push    edi", "push    edi", "mov     nconf, [esp+54h+flags]", "push    eax; flags", "push    nconf; nconf", "call    ___rpc_nconf2fd_flags", "mov     ecx, eax", "mov     [esp+5Ch+sockfd], eax", "mov     fd_0, [esp+5Ch+flags]", "add     esp, 10h", "and     eax, 80000h", "inc     fd_0", "jz      short loc_10158"], ["mov     [esp+4Ch+madefd], 1", "test    eax, eax", "jz      loc_FFC5"], ["mov     ds:(have_cloexec_8126 - 2BB6Ch)[ebx], 1", "jmp     loc_FFC5"], ["test    eax, eax", "jz      short syserror"], ["mov     ecx, ds:(have_cloexec_8126 - 2BB6Ch)[ebx]", "test    ecx, ecx", "jg      short syserror"], ["sub     esp, 0Ch", "push    nconf; nconf", "call    ___rpc_nconf2fd", "mov     [esp+5Ch+sockfd], eax", "add     esp, 10h", "cmp     fd_0, 0FFFFFFFFh", "jz      short syserror"], ["push    edx", "mov     ds:(have_cloexec_8126 - 2BB6Ch)[ebx], 0FFFFFFFFh", "push    1", "push    2; cmd", "push    fd_0; fd", "call    _fcntl", "add     esp, 10h", "mov     [esp+4Ch+madefd], 1", "jmp     loc_FFC5"], ["sub     esp, 0Ch", "mov     ecx, [esp+58h+sockfd]", "push    ecx; fd", "call    _close", "add     esp, 10h", "jmp     loc_100F3"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Ch", "call    ___errno_location", "mov     esi, eax", "call    ___rpc_createerr", "mov     edx, [esi]", "mov     [eax+8], edx", "jmp     loc_100F3"], ["call    ___rpc_createerr", "sub     esp, 0Ch", "xor     esi, esi", "mov     dword ptr [eax], 11h", "mov     eax, [esp+58h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     loc_100A9"], ["call    __stack_chk_fail_local"]], "svc_com_create": [["push    ebp", "push    edi", "mov     edi, sendsize", "push    esi", "mov     esi, fd", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 28h", "mov     ebp, [esp+38h+netid]", "mov     [esp+38h+recvsize], recvsize_0", "push    ebp; nettype", "call    ___rpc_getconfip", "add     esp, 10h", "test    nconf, nconf", "jz      loc_102D0"], ["mov     ebp, nconf", "cmp     fd, 0FFFFFFFFh", "jz      short loc_10288"], ["sub     esp, 0Ch", "mov     nconf, [esp+38h+recvsize]", "push    eax; recvsz", "push    sendsize; sendsz", "push    0; bindaddr", "push    nconf; nconf", "push    fd; fd", "call    _svc_tli_create", "add     esp, 14h", "mov     sendsize, eax", "push    nconf; netconfigp", "call    _freenetconfigent", "add     esp, 10h", "test    svc, svc", "jz      short loc_10279"], ["mov     eax, [svc+40h]", "mov     ax, [eax+2]", "rol     ax, 8", "mov     [svc+4], ax"], ["add     esp, 1Ch", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    nconf; nconf", "call    ___rpc_nconf2fd", "add     esp, 10h", "mov     fd, eax", "cmp     fd, 0FFFFFFFFh", "jz      short loc_102F0"], ["sub     esp, 0Ch", "mov     edx, [esp+38h+recvsize]", "push    edx; recvsz", "push    sendsize; sendsz", "push    0; bindaddr", "push    nconf; nconf", "push    fd; fd", "call    _svc_tli_create", "add     esp, 14h", "mov     sendsize, eax", "push    nconf; netconfigp", "call    _freenetconfigent", "add     esp, 10h", "test    svc, svc", "jnz     short loc_1026A"], ["sub     esp, 0Ch", "push    fd; fd", "call    _close", "add     esp, 10h", "jmp     short loc_10279"], ["mov     fd, [esp+2Ch+netid]", "lea     nconf, (aCouldNotGetSTr - 2BB6Ch)[ebx]; \"Could not get %s transport\"", "push    esi", "xor     sendsize, sendsize", "push    eax", "push    1", "push    3", "call    ___syslog_chk", "add     esp, 10h", "jmp     short loc_10279"], ["sub     esp, 0Ch", "xor     sendsize, sendsize", "push    nconf; netconfigp", "call    _freenetconfigent", "mov     ecx, [esp+3Ch+netid]", "lea     eax, (aSvcSCreateCoul - 2BB6Ch)[ebx]; \"svc%s_create: could not open connection\"", "push    ecx", "push    eax", "push    1", "push    3", "call    ___syslog_chk", "add     esp, 20h", "jmp     loc_10279"]], "clntunix_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     ebp, [esp+3Ch+raddr]", "mov     edi, [esp+3Ch+sockp]", "mov     [esp+3Ch+svcaddr.maxlen], 0", "mov     [esp+3Ch+svcaddr.len], 0", "mov     [esp+3Ch+svcaddr.buf], 0", "lea     esi, [esp+3Ch+svcaddr]", "push    eax", "push    6Eh ; 'n'; len", "push    ebp; ptr", "push    esi; nb", "call    __rpc_set_netbuf", "add     esp, 10h", "test    eax, eax", "jz      loc_108F8"], ["mov     eax, [edi]", "test    eax, eax", "js      short loc_10868"], ["push    edx", "push    edx", "mov     ecx, [esp+44h+recvsz]", "push    ecx; recvsz", "mov     edi, [esp+48h+sendsz]", "push    edi; sendsz", "mov     ebp, [esp+4Ch+vers]", "push    ebp; vers", "mov     edx, [esp+50h+prog]", "push    edx; prog", "push    esi; raddr", "push    eax; fd", "call    _clnt_vc_create", "add     esp, 20h", "mov     edx, eax"], ["mov     [esp+3Ch+cl_0], edx", "sub     esp, 0Ch", "mov     eax, [esp+48h+svcaddr.buf]", "push    eax; ptr", "call    _free", "add     esp, 10h", "mov     edx, [esp+3Ch+cl_0]"], ["mov     eax, [esp+3Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_10921"], ["add     esp, 2Ch", "mov     eax, edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    ecx", "push    0; protocol", "push    1; type", "push    1; domain", "call    _socket", "add     esp, 10h", "mov     [edi], eax", "test    eax, eax", "mov     [esp+3Ch+cl_0], eax", "js      short loc_108B0"], ["sub     esp, 0Ch", "lea     eax, [ebp+2]", "push    eax; s", "call    _strlen", "add     esp, 0Ch", "add     eax, 2", "push    eax; len", "push    ebp; addr", "mov     edx, [esp+48h+cl_0]", "push    edx; fd", "call    _connect", "add     esp, 10h", "test    eax, eax", "js      short loc_108B0"], ["mov     eax, [edi]", "jmp     loc_1080D"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Ch", "call    ___errno_location", "mov     esi, eax", "call    ___rpc_createerr", "mov     edx, [esi]", "mov     [eax+8], edx", "xor     edx, edx", "mov     eax, [edi]", "cmp     eax, 0FFFFFFFFh", "jz      done"], ["mov     [esp+3Ch+cl_0], edx", "sub     esp, 0Ch", "push    eax; fd", "call    _close", "add     esp, 10h", "mov     edx, [esp+3Ch+cl_0]", "jmp     done"], ["mov     [esp+3Ch+cl_0], eax", "call    ___rpc_createerr", "mov     dword ptr [eax], 0Ch", "call    ___errno_location", "mov     esi, eax", "call    ___rpc_createerr", "mov     ecx, [esi]", "mov     edx, [esp+3Ch+cl_0]", "mov     [eax+8], ecx", "jmp     loc_10847"], ["call    __stack_chk_fail_local"]], "svcunix_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0ACh", "mov     eax, [esp+0BCh+path]", "mov     [esp+0BCh+src], eax", "mov     eax, large gs:14h", "mov     [esp+0BCh+var_20], eax", "xor     eax, eax", "call    _setnetconfig", "mov     [esp+0BCh+localhandle], eax", "lea     localhandle_0, (aLoopback - 2BB6Ch)[ebx]; \"loopback\"", "mov     ebp, eax", "nop"], ["sub     esp, 0Ch", "mov     esi, [esp+0C8h+localhandle]", "push    esi; handlep", "call    _getnetconfig", "add     esp, 10h", "test    nconf, nconf", "jz      loc_10AF8"], ["mov     esi, [nconf+0Ch]", "test    esi, esi", "jz      short loc_10970"], ["mov     ecx, 9", "mov     edi, ebp", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_10970"], ["sub     esp, 0Ch", "mov     ebp, nconf", "push    nconf; nconf", "call    ___rpc_nconf2fd", "mov     [esp+0CCh+fd], eax", "add     esp, 10h", "test    sock_0, sock_0", "js      loc_10AC8"], ["lea     esi, [esp+0BCh+sun]", "lea     sock_0, [esp+0BCh+sun.sun_path]", "mov     edi, esi", "mov     edx, 6Eh ; 'n'", "mov     [esp+0BCh+dest], eax", "test    esi, 2", "jnz     loc_10B1A"], ["mov     ecx, edx", "xor     eax, eax", "shr     ecx, 2", "and     edx, 2", "rep stosd", "jnz     loc_10B10"], ["mov     [esp+0BCh+sun.sun_family], 1", "push    eax", "push    6Bh ; 'k'; n", "mov     eax, [esp+0C4h+src]", "push    eax; src", "mov     eax, [esp+0C8h+dest]", "push    eax; dest", "call    _strncpy", "add     esp, 0Ch", "push    6Eh ; 'n'; len", "push    sa; addr", "mov     edx, [esp+0C8h+fd]", "push    edx; fd", "call    _bind", "add     esp, 10h", "test    eax, eax", "js      loc_10AC8"], ["mov     [esp+0BCh+taddr.addr.maxlen], 6Eh ; 'n'", "mov     [esp+0BCh+taddr.addr.len], 6Eh ; 'n'", "sub     esp, 0Ch", "push    6Eh ; 'n'; size", "call    _malloc", "mov     [esp+0CCh+taddr.addr.buf], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_10AC8"], ["mov     edi, eax", "mov     ecx, 1Bh", "rep movsd", "mov     ax, [esi]", "mov     [edi], ax", "cmp     dword ptr [nconf+4], 1", "jz      short loc_10A77"], ["push    eax", "push    eax", "push    1000h; n", "mov     eax, [esp+0C8h+fd]", "push    eax; fd", "call    _listen", "add     esp, 10h", "test    eax, eax", "js      short loc_10AB5"], ["sub     esp, 0Ch", "mov     ecx, [esp+0C8h+recvsize]", "push    ecx; recvsz", "mov     esi, [esp+0CCh+sendsize]", "push    esi; sendsz", "lea     eax, [esp+0D0h+taddr]", "push    eax; bindaddr", "push    nconf; nconf", "mov     edi, [esp+0D8h+fd]", "push    edi; fd", "call    _svc_tli_create", "add     esp, 20h", "mov     nconf, eax", "test    xprt, xprt", "jnz     short done"], ["sub     esp, 0Ch", "mov     edx, [esp+0C8h+fd]", "push    edx; fd", "call    _close", "add     esp, 10h", "jmp     short done"], ["sub     esp, 0Ch", "mov     nconf, [esp+0C8h+taddr.addr.buf]", "push    ebp; ptr", "call    _free", "add     esp, 10h", "lea     esi, [esi+0]"], ["xor     ebp, ebp"], ["sub     esp, 0Ch", "mov     eax, [esp+0C8h+localhandle]", "push    eax; handlep", "call    _endnetconfig", "add     esp, 10h"], ["mov     eax, [esp+0BCh+var_20]", "xor     eax, large gs:14h", "jnz     short loc_10B26"], ["add     esp, 0ACh", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "mov     ebp, nconf", "mov     ecx, [esp+0C8h+localhandle]", "push    ecx; handlep", "call    _endnetconfig", "add     esp, 10h", "jmp     short loc_10ADA"], ["mov     word ptr [edi], 0", "jmp     loc_109ED"], ["mov     edi, eax", "mov     edx, 6Ch ; 'l'", "jmp     loc_109DB"], ["call    __stack_chk_fail_local"]], "local_rpcb": [["push    ebp", "push    edi", "push    esi", "mov     esi, 6Eh ; 'n'", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0ACh", "mov     eax, large gs:14h", "mov     [esp+0BCh+var_20], eax", "xor     eax, eax", "lea     edx, [esp+0BCh+sun]", "mov     edi, edx", "test    dl, 2", "jnz     loc_10DB8"], ["mov     ecx, esi", "xor     eax, eax", "shr     ecx, 2", "and     esi, 2", "rep stosd", "jz      short loc_10BAB"], ["mov     word ptr [edi], 0"], ["mov     [esp+0BCh+tmpnconf], edx", "push    ecx", "push    0; protocol", "push    1; type", "push    1; domain", "call    _socket", "add     esp, 10h", "mov     ebp, eax", "test    sock, sock", "js      try_nconf"], ["lea     sock, [esp+0BCh+sun.sun_path]", "lea     esi, (aVarRunRpcbindS - 2BB6Ch)[ebx]; \"/var/run/rpcbind.sock\"", "mov     edi, eax", "mov     ecx, 5", "mov     [esp+0BCh+sun.sun_family], 1", "rep movsd", "mov     ax, [esi]", "mov     [edi], ax", "mov     [esp+0BCh+nbuf.len], 17h", "mov     edx, [esp+0BCh+tmpnconf]", "mov     [esp+0BCh+nbuf.maxlen], 6Eh ; 'n'", "mov     [esp+0BCh+nbuf.buf], edx", "push    esi", "push    0; size", "push    0; proto", "push    1; af_0", "call    ___rpc_get_t_size", "pop     edi", "pop     edx", "push    tsize_0; recvsz", "push    tsize_0; sendsz", "push    3; vers", "push    186A0h; prog", "lea     tsize_0, [esp+0D4h+nbuf]", "push    eax; raddr", "push    sock; fd", "call    _clnt_vc_create", "mov     [esp+0DCh+tmpnconf], eax", "mov     esi, client", "add     esp, 20h", "test    client, client", "jz      short loc_10C40"], ["push    ecx", "mov     client, [client+4]", "push    0", "push    8", "push    client", "call    dword ptr [eax+14h]", "add     esp, 10h", "jmp     short loc_10C97"], ["sub     esp, 0Ch", "push    sock; fd", "call    _close", "add     esp, 10h"], ["sub     esp, 0Ch", "lea     eax, (loopnconf_lock - 2BB6Ch)[ebx]", "mov     [esp+0C8h+mutex], eax", "push    eax; mutex", "call    _pthread_mutex_lock", "mov     eax, ds:(loopnconf_8006 - 2BB6Ch)[ebx]", "mov     [esp+0CCh+tmpnconf], eax", "add     esp, 10h", "test    eax, eax", "jz      short loc_10CC0"], ["sub     esp, 0Ch", "mov     eax, [esp+0C8h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "mov     edx, ds:(loopnconf_8006 - 2BB6Ch)[ebx]; nconf", "mov     eax, ds:(hostname_8007 - 2BB6Ch)[ebx]; host", "xor     ecx, ecx; targaddr", "call    getclnthandle", "mov     [esp+0CCh+tmpnconf], eax", "add     esp, 10h"], ["mov     eax, [esp+0BCh+var_20]", "xor     eax, large gs:14h", "jnz     loc_10E3F"], ["mov     eax, [esp+0BCh+tmpnconf]", "add     esp, 0ACh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["call    _setnetconfig", "mov     [esp+0BCh+nc_handle], eax", "test    nc_handle_0, nc_handle_0", "jz      loc_10E10"], ["lea     nc_handle_0, (aInet6 - 2BB6Ch)[ebx]; \"inet6\"", "mov     [esp+0BCh+var_A8], eax", "lea     eax, (aInet - 2BB6Ch)[ebx]; \"inet\"", "mov     [esp+0BCh+var_A0], eax", "lea     esi, [esi+0]"], ["sub     esp, 0Ch", "mov     eax, [esp+0C8h+nc_handle]", "push    eax; handlep", "call    _getnetconfig", "add     esp, 10h", "mov     ebp, eax", "test    nconf, nconf", "jz      loc_10D88"], ["mov     nconf, [ebp+0Ch]", "mov     ecx, 6", "mov     esi, eax", "mov     edi, [esp+0BCh+var_A8]", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jz      short loc_10D32"], ["mov     esi, eax", "mov     ecx, 5", "mov     edi, [esp+0BCh+var_A0]", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_10CE8"], ["mov     eax, [nconf+4]", "sub     eax, 2", "cmp     eax, 1", "ja      short loc_10CE8"], ["sub     esp, 0Ch", "push    nconf; nconf", "call    ___rpc_nconf2fd", "add     esp, 10h", "test    fd, fd", "js      short loc_10CE8"], ["sub     esp, 0Ch", "push    fd; fd", "call    _close", "mov     edi, [esp+0CCh+var_A0]", "mov     esi, [tmpnconf_0+0Ch]", "mov     ecx, 5", "repe cmpsb", "setnbe  al", "sbb     al, 0", "add     esp, 10h", "test    al, al", "jnz     short loc_10DD0"], ["lea     eax, (a127001 - 2BB6Ch)[ebx]; \"127.0.0.1\"", "mov     [esp+0BCh+tmpnconf], tmpnconf_0", "mov     ds:(hostname_8007 - 2BB6Ch)[ebx], eax", "jmp     loc_10CE8"], ["mov     nconf, [esp+0BCh+tmpnconf]", "test    eax, eax", "jz      short loc_10DE5"], ["sub     esp, 0Ch", "mov     eax, [esp+0C8h+tmpnconf]", "mov     edx, [eax]", "push    edx; netid", "call    _getnetconfigent", "pop     ecx", "mov     ds:(loopnconf_8006 - 2BB6Ch)[ebx], eax", "mov     esi, [esp+0C8h+nc_handle]", "push    esi; handlep", "call    _endnetconfig", "add     esp, 10h", "jmp     loc_10C70"], ["mov     [esp+0BCh+sun.sun_family], 0", "lea     edi, [esp+0BCh+sun.sun_path]", "mov     esi, 6Ch ; 'l'", "jmp     loc_10B98"], ["lea     eax, (a1 - 2BB6Ch)[ebx]; \"::1\"", "mov     [esp+0BCh+tmpnconf], tmpnconf_0", "mov     ds:(hostname_8007 - 2BB6Ch)[ebx], eax", "jmp     loc_10CE8"], ["call    ___rpc_createerr", "sub     esp, 0Ch", "mov     edi, [esp+0C8h+mutex]", "mov     dword ptr [eax], 11h", "push    edi; mutex", "call    _pthread_mutex_unlock", "pop     nconf", "mov     eax, [esp+0C8h+nc_handle]", "push    eax; handlep", "call    _endnetconfig", "add     esp, 10h", "jmp     loc_10C97"], ["push    eax", "lea     eax, (aRpcFailedToOpe - 2BB6Ch)[ebx]; \"rpc: failed to open /etc/netconfig\"", "push    eax", "push    1", "push    3", "call    ___syslog_chk", "call    ___rpc_createerr", "mov     dword ptr [eax], 11h", "pop     eax", "mov     edx, [esp+0C8h+mutex]", "push    edx; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     loc_10C97"], ["call    __stack_chk_fail_local"]], "getclnthandle": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 8Ch", "mov     [esp+9Ch+host], host_0", "mov     [esp+9Ch+targaddr], targaddr_0", "mov     host_0, large gs:14h", "mov     [esp+9Ch+var_20], host_0", "xor     host_0, host_0", "test    nconf_0, nconf_0", "jz      loc_11678"], ["mov     esi, [nconf_0+0Ch]", "mov     ebp, nconf_0", "test    esi, esi", "jz      short loc_10EAF"], ["mov     targaddr_0, 9", "lea     edi, (aLoopback - 2BB6Ch)[ebx]; \"loopback\"", "repe cmpsb", "setnbe  al", "sbb     al, 0", "mov     nconf_0, [esp+9Ch+host]", "movsx   eax, al", "test    edx, edx", "jnz     short loc_10EAF"], ["test    eax, eax", "jnz     loc_11666"], ["mov     eax, [esp+9Ch+targaddr]", "test    eax, eax", "jz      short loc_10EBD"], ["mov     dword ptr [eax], 0"], ["sub     esp, 0Ch", "lea     eax, (rpcbaddr_cache_lock - 2BB6Ch)[ebx]", "mov     [esp+0A8h+rwlock], eax", "push    eax; rwlock", "call    _pthread_rwlock_rdlock", "add     esp, 10h", "mov     eax, [esp+9Ch+host]", "test    eax, eax", "jz      short loc_10F1C"], ["mov     esi, ds:(front - 2BB6Ch)[ebx]", "mov     edi, [nconf_0+0]", "test    esi, esi", "jz      short loc_10F1C"], ["push    eax", "push    eax", "mov     eax, [esp+0A4h+host]", "push    eax; s2", "mov     eax, [esi]", "push    eax; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_10F15"], ["push    edx", "push    edx", "push    edi; s2", "mov     ecx, [esi+4]", "push    ecx; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "jz      loc_11278"], ["mov     esi, [esi+10h]", "test    esi, esi", "jnz     short loc_10EE8"], ["sub     esp, 0Ch", "mov     esi, [esp+0A8h+rwlock]", "push    esi; rwlock", "call    _pthread_rwlock_unlock", "add     esp, 10h"], ["push    edi", "push    edi", "lea     eax, [esp+0A4h+si_0]", "push    eax; sip", "push    ebp; nconf", "call    ___rpc_nconf2sockinfo", "add     esp, 10h", "test    eax, eax", "jz      loc_111E8"], ["lea     edx, [esp+9Ch+hints]", "xor     eax, eax", "mov     ecx, 8", "mov     edi, edx", "rep stosd", "lea     edi, (libtirpc_debug_level - 2BB6Ch)[ebx]", "mov     eax, [esp+9Ch+si_0.si_af]", "mov     esi, [esp+9Ch+si_0.si_socktype]", "mov     ecx, [esp+9Ch+si_0.si_proto]", "cmp     dword ptr [edi], 2", "mov     [esp+9Ch+hints.ai_family], eax", "mov     [esp+9Ch+hints.ai_socktype], esi", "mov     [esp+9Ch+hints.ai_protocol], ecx", "mov     [esp+9Ch+addr], edi", "jg      loc_114C0"], ["mov     esi, [ebp+0Ch]", "test    esi, esi", "jz      short loc_10F9F"], ["mov     ecx, 9", "lea     edi, (aLoopback - 2BB6Ch)[ebx]; \"loopback\"", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_114E8"], ["lea     eax, [esp+9Ch+res]", "push    eax; pai", "lea     eax, (aSunrpc - 2BB6Ch)[ebx]; \"sunrpc\"", "push    edx; req", "push    eax; service", "mov     edi, [esp+0A8h+host]", "push    edi; name", "call    _getaddrinfo", "add     esp, 10h", "test    eax, eax", "jnz     loc_114A8"], ["mov     edi, [esp+9Ch+res]", "test    tres_0, tres_0", "jz      loc_114B3"], ["lea     eax, [esp+9Ch+taddr]", "mov     [esp+9Ch+nconf], eax", "lea     eax, (log_stderr - 2BB6Ch)[ebx]", "mov     [esp+9Ch+s], eax", "mov     eax, ds:(stderr_ptr - 2BB6Ch)[ebx]", "mov     [esp+9Ch+tmpaddr], eax", "lea     esi, [esi+0]"], ["mov     eax, [tres_0+14h]", "mov     [esp+9Ch+taddr.buf], eax", "mov     eax, [tres_0+10h]", "mov     [esp+9Ch+taddr.maxlen], eax", "mov     [esp+9Ch+taddr.len], eax", "mov     eax, [esp+9Ch+addr]", "cmp     dword ptr [eax], 3", "jle     short loc_11019"], ["mov     eax, [esp+9Ch+s]", "mov     esi, [eax]", "test    esi, esi", "jnz     loc_113E8"], ["push    eax", "push    0; recvsz", "push    0; sendsz", "push    4; vers", "push    186A0h; prog", "mov     eax, [esp+0B0h+nconf]", "push    eax; svcaddr", "push    ebp; nconf", "push    0FFFFFFFFh; fd", "call    _clnt_tli_create", "add     esp, 20h", "mov     esi, eax", "test    client, client", "jz      loc_11218"], ["mov     client, [esp+9Ch+targaddr]", "test    eax, eax", "jz      loc_11300"], ["push    eax", "push    eax", "mov     eax, [esp+0A4h+nconf]", "push    eax; nbuf", "push    ebp; nconf", "call    _taddr2uaddr", "mov     [esp+0ACh+tmpaddr], eax", "add     esp, 10h", "mov     edx, [esp+9Ch+host]", "test    edx, edx", "jz      loc_111AB"], ["mov     tmpaddr_0, [ebp+0]", "sub     esp, 0Ch", "mov     [esp+0A8h+s], eax", "push    14h; size", "call    _malloc", "mov     [esp+0ACh+nconf], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_111AB"], ["sub     esp, 0Ch", "mov     eax, [esp+0A8h+host]", "push    eax; s", "call    _strdup", "mov     edi, [esp+0ACh+nconf]", "mov     [esp+0ACh+ptr], eax", "mov     ebp, eax", "mov     [edi], eax", "pop     eax", "mov     eax, [esp+0A8h+s]", "push    eax; s", "call    _strdup", "mov     [esp+0ACh+var_74], eax", "add     esp, 10h", "mov     [edi+4], eax", "test    eax, eax", "setz    dl", "test    ebp, ebp", "setz    al", "or      edx, eax", "mov     eax, [esp+9Ch+tmpaddr]", "mov     ebp, edx", "test    eax, eax", "jz      loc_11369"], ["sub     esp, 0Ch", "push    eax; s", "call    _strdup", "mov     [edi+8], eax", "mov     [esp+0ACh+nconf], edi", "mov     [esp+0ACh+tres], eax", "mov     [esp+0ACh+size], 0Ch; size", "call    _malloc", "mov     edi, eax", "mov     eax, [esp+0ACh+nconf]", "add     esp, 10h", "test    edi, edi", "mov     [eax+0Ch], edi", "jz      loc_113A8"], ["mov     eax, ebp", "test    al, al", "jnz     loc_113A8"], ["mov     ebp, [esp+9Ch+tres]", "test    ebp, ebp", "jz      loc_113A8"], ["mov     ebp, [esp+9Ch+taddr.len]", "sub     esp, 0Ch", "mov     [edi], ebp", "mov     [edi+4], ebp", "push    ebp; size", "call    _malloc", "add     esp, 10h", "mov     [edi+8], eax", "test    eax, eax", "jz      loc_113A8"], ["push    edx", "push    ebp; n", "mov     ecx, [esp+0A4h+taddr.buf]", "push    ecx; src", "push    eax; dest", "call    _memcpy", "mov     eax, [esp+0ACh+addr]", "add     esp, 10h", "cmp     dword ptr [eax], 2", "jg      loc_11771"], ["sub     esp, 0Ch", "mov     edi, [esp+0A8h+rwlock]", "push    edi; rwlock", "call    _pthread_rwlock_wrlock", "mov     eax, ds:(cachesize - 2BB6Ch)[ebx]", "add     esp, 10h", "cmp     eax, 5", "jg      loc_116D8"], ["mov     ecx, [esp+9Ch+nconf]", "mov     edx, ds:(front - 2BB6Ch)[ebx]", "inc     eax", "mov     ds:(front - 2BB6Ch)[ebx], ecx", "mov     [ecx+10h], edx", "mov     ds:(cachesize - 2BB6Ch)[ebx], eax"], ["sub     esp, 0Ch", "mov     eax, [esp+0A8h+rwlock]", "push    eax; rwlock", "call    _pthread_rwlock_unlock", "add     esp, 10h"], ["mov     eax, [esp+9Ch+targaddr]", "test    eax, eax", "jz      short loc_111B5"], ["mov     eax, [esp+9Ch+targaddr]", "mov     edx, [esp+9Ch+tmpaddr]", "mov     [eax], edx"], ["mov     ecx, [esp+9Ch+res]", "xor     eax, eax", "mov     edi, client", "test    ecx, ecx", "jnz     loc_1125C"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+9Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_117BF"], ["add     esp, 8Ch", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["call    ___rpc_createerr", "xor     edi, edi", "mov     dword ptr [eax], 11h", "mov     al, 1"], ["mov     edx, [esp+9Ch+targaddr]", "test    edx, edx", "jz      short loc_111C8"], ["test    al, al", "jz      short loc_111C8"], ["sub     esp, 0Ch", "mov     eax, [edx]", "push    eax; ptr", "call    _free", "add     esp, 10h", "jmp     short loc_111C8"], ["mov     client, [esp+9Ch+addr]", "mov     eax, [eax]", "test    eax, eax", "jle     short loc_11243"], ["sub     esp, 0Ch", "lea     eax, (aClntTliCreateF - 2BB6Ch)[ebx]; \"clnt_tli_create failed\"", "push    eax; msg", "call    _clnt_spcreateerror", "pop     ecx", "pop     client", "push    eax", "lea     eax, (aGetclnthandleS - 2BB6Ch)[ebx]; \"getclnthandle: %s\"", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 10h"], ["mov     edi, [edi+1Ch]", "test    tres_0, tres_0", "jnz     loc_10FF0"], ["mov     ecx, [esp+9Ch+res]", "mov     al, 1", "test    ecx, ecx", "jz      loc_114B3"], ["mov     byte ptr [esp+9Ch+host], al", "sub     esp, 0Ch", "push    ecx; ai", "call    _freeaddrinfo", "add     esp, 10h", "mov     al, byte ptr [esp+9Ch+host]", "jmp     short out_err"], ["lea     eax, (libtirpc_debug_level - 2BB6Ch)[ebx]", "cmp     dword ptr [eax], 2", "jg      short loc_112E8"], ["mov     ecx, [ad_cache+0Ch]", "push    edi", "push    0; recvsz", "push    0; sendsz", "push    4; vers", "push    186A0h; prog", "push    addr_0; svcaddr", "mov     [esp+0B4h+addr], addr_0", "push    nconf_0; nconf", "push    0FFFFFFFFh; fd", "call    _clnt_tli_create", "add     esp, 20h", "mov     edi, eax", "test    client, client", "mov     ecx, [esp+9Ch+addr]", "jz      loc_11530"], ["mov     nconf_0, [esp+9Ch+targaddr]", "test    ebp, ebp", "jz      short loc_112CE"], ["mov     client, [ad_cache+8]", "test    eax, eax", "jz      short loc_112CE"], ["sub     esp, 0Ch", "push    eax; s", "call    _strdup", "add     esp, 10h", "mov     [ebp+0], eax"], ["sub     esp, 0Ch", "mov     eax, [esp+0A8h+rwlock]", "push    eax; rwlock", "call    _pthread_rwlock_unlock", "add     esp, 10h", "jmp     loc_111C8"], ["push    eax", "push    edi", "mov     eax, [esp+0A4h+host]", "push    eax", "lea     eax, (aCheckCacheFoun - 2BB6Ch)[ebx]; \"check_cache: Found cache entry for %s: \"...", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "jmp     short loc_11283"], ["mov     eax, [esp+9Ch+host]", "test    eax, eax", "jz      loc_111B5"], ["mov     eax, [ebp+0]", "sub     esp, 0Ch", "mov     [esp+0A8h+s], eax", "push    14h; size", "call    _malloc", "mov     [esp+0ACh+nconf], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_111B5"], ["sub     esp, 0Ch", "mov     eax, [esp+0A8h+host]", "push    eax; s", "call    _strdup", "mov     ebp, [esp+0ACh+nconf]", "mov     [esp+0ACh+ptr], eax", "mov     edi, eax", "mov     [ebp+0], eax", "pop     edx", "mov     ecx, [esp+0A8h+s]", "push    ecx; s", "call    _strdup", "mov     [esp+0ACh+var_74], eax", "mov     [ebp+4], eax", "add     esp, 10h", "test    edi, edi", "setz    dl", "test    eax, eax", "setz    al", "or      edx, eax", "mov     ebp, edx"], ["mov     eax, [esp+9Ch+nconf]", "sub     esp, 0Ch", "mov     dword ptr [eax+8], 0", "push    0Ch; size", "call    _malloc", "mov     edi, eax", "mov     eax, [esp+0ACh+nconf]", "mov     [esp+0ACh+tmpaddr], 0", "add     esp, 10h", "mov     [eax+0Ch], edi", "test    edi, edi", "mov     [esp+9Ch+tres], 0", "jz      short loc_113A8"], ["mov     eax, ebp", "test    al, al", "jz      loc_1111D"], ["sub     esp, 0Ch", "mov     eax, [esp+0A8h+ptr]", "push    eax; ptr", "call    _free", "pop     edx", "mov     ecx, [esp+0A8h+var_74]", "push    ecx; ptr", "call    _free", "pop     ebp", "mov     eax, [esp+0A8h+tres]", "push    eax; ptr", "call    _free", "mov     [esp+0ACh+size], edi; ptr", "call    _free", "pop     eax", "mov     eax, [esp+0A8h+nconf]", "push    eax; ptr", "call    _free", "add     esp, 10h", "jmp     loc_111A3"], ["push    ecx", "push    ecx", "mov     esi, [esp+0A4h+nconf]", "push    esi; nbuf", "push    ebp; nconf", "call    _taddr2uaddr", "push    eax", "mov     esi, eax", "lea     ua, (aGotItS - 2BB6Ch)[ebx]; \"Got it [%s]\\n\"", "push    eax", "push    1", "mov     eax, [esp+0B8h+tmpaddr]", "mov     eax, [eax]", "push    eax", "call    ___fprintf_chk", "add     esp, 14h", "push    ua; ptr", "call    _free", "pop     eax", "mov     eax, [esp+0A8h+taddr.maxlen]", "push    eax", "mov     eax, [esp+0ACh+taddr.len]", "push    eax", "lea     eax, (aNetbufLenDMaxl - 2BB6Ch)[ebx]; \"\\tnetbuf len = %d, maxlen = %d\\n\"", "push    eax", "push    1", "mov     ua, [esp+0B8h+tmpaddr]", "mov     eax, [esi]", "push    eax", "call    ___fprintf_chk", "add     esp, 20h", "mov     edx, [esi]", "lea     eax, (aAddressIs - 2BB6Ch)[ebx]; \"\\tAddress is \"", "push    edx; s", "push    0Ch; n", "push    1; size", "push    eax; ptr", "call    _fwrite", "mov     ecx, [esp+0ACh+taddr.len]", "add     esp, 10h", "test    ecx, ecx", "jz      short loc_1148E"], ["xor     esi, esi", "lea     eax, (aU - 2BB6Ch)[ebx]; \"%u.\"", "mov     [esp+9Ch+tres], tres_0", "mov     tres_0, esi", "mov     esi, eax", "nop"], ["mov     eax, [esp+9Ch+taddr.buf]", "movsx   eax, byte ptr [eax+i]", "push    eax", "inc     i", "push    esi", "push    1", "mov     eax, [esp+0A8h+tmpaddr]", "mov     eax, [eax]", "push    eax", "call    ___fprintf_chk", "add     esp, 10h", "cmp     [esp+9Ch+taddr.len], i", "ja      short loc_11468"], ["mov     i, [esp+9Ch+tres]"], ["push    eax", "push    eax", "mov     eax, [esp+0A4h+tmpaddr]", "mov     edx, [eax]", "push    edx; stream", "push    0Ah; c", "call    _fputc", "add     esp, 10h", "jmp     loc_11019"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Dh"], ["mov     al, 1", "xor     edi, edi", "jmp     out_err"], ["mov     [esp+9Ch+nconf], edx", "sub     esp, 0Ch", "push    esi", "mov     esi, [ebp+0]", "push    ecx", "push    eax", "lea     eax, (aGetclnthandleT - 2BB6Ch)[ebx]; \"getclnthandle: trying netid %s family %\"...", "push    esi", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 20h", "mov     edx, [esp+9Ch+nconf]", "jmp     loc_10F7E"], ["call    local_rpcb", "mov     edi, eax", "test    client, client", "jz      loc_11690"], ["mov     esi, [esp+9Ch+targaddr]", "test    esi, esi", "jz      loc_111C8"], ["sub     esp, 0Ch", "push    6Ch ; 'l'; size", "call    _malloc", "add     esp, 0Ch", "mov     [esi], eax", "lea     ecx, (aVarRunRpcbindS - 2BB6Ch)[ebx]; \"/var/run/rpcbind.sock\"", "push    6Ch ; 'l'; n", "push    ecx; src", "push    eax; dest", "call    _strncpy", "add     esp, 10h", "jmp     loc_111C8"], ["mov     ad_cache, [ecx+4]", "mov     [esp+9Ch+nconf], ecx", "mov     [esp+9Ch+tmpaddr], esi", "sub     esp, 0Ch", "push    addr_to_delete; size", "call    _malloc", "mov     [esp+0ACh+addr], eax", "mov     edx, eax", "add     esp, 10h", "test    eax, eax", "jz      loc_10F1C"], ["mov     ecx, [esp+9Ch+nconf]", "mov     eax, [ecx+8]", "push    ecx", "push    esi; n", "push    eax; src", "push    edx; dest", "call    _memcpy", "pop     eax", "mov     eax, [esp+0A8h+rwlock]", "push    eax; rwlock", "call    _pthread_rwlock_unlock", "add     esp, 10h", "test    esi, esi", "jz      loc_10F2C"], ["sub     esp, 0Ch", "mov     esi, [esp+0A8h+rwlock]", "push    esi; rwlock", "call    _pthread_rwlock_wrlock", "mov     esi, ds:(front - 2BB6Ch)[ebx]", "add     esp, 10h", "test    esi, esi", "jz      loc_1163E"], ["mov     [esp+9Ch+nconf], nconf_0", "mov     nconf_0, [esp+9Ch+tmpaddr]", "jmp     short loc_115B7"], ["mov     eax, [esi+10h]", "mov     edi, esi", "test    eax, eax", "jz      loc_11660"], ["mov     esi, eax"], ["push    eax", "push    ebp; n", "mov     edx, [esp+0A4h+addr]", "push    edx; s2", "mov     eax, [esi+0Ch]", "mov     ecx, [eax+8]", "push    ecx; s1", "call    _memcmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_115A8"], ["mov     ebp, [esp+9Ch+nconf]", "sub     esp, 0Ch", "mov     eax, [esi]", "push    eax; ptr", "call    _free", "pop     edx", "mov     ecx, [esi+4]", "push    ecx; ptr", "call    _free", "pop     eax", "mov     eax, [esi+0Ch]", "mov     eax, [eax+8]", "push    eax; ptr", "call    _free", "pop     eax", "mov     eax, [esi+0Ch]", "push    eax; ptr", "call    _free", "mov     eax, [esi+8]", "add     esp, 10h", "test    eax, eax", "jz      short loc_11617"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["mov     eax, [esi+10h]", "test    edi, edi", "jz      loc_116C8"], ["mov     [edi+10h], eax"], ["sub     esp, 0Ch", "push    esi; ptr", "call    _free", "mov     eax, ds:(cachesize - 2BB6Ch)[ebx]", "add     esp, 10h", "dec     eax", "mov     ds:(cachesize - 2BB6Ch)[ebx], eax"], ["sub     esp, 0Ch", "mov     eax, [esp+0A8h+rwlock]", "push    eax; rwlock", "call    _pthread_rwlock_unlock", "pop     eax", "mov     eax, [esp+0A8h+addr]", "push    eax; ptr", "call    _free", "add     esp, 10h", "jmp     loc_10F2C"], ["mov     ebp, [esp+9Ch+nconf]", "jmp     short loc_1163E"], ["call    ___rpc_createerr", "xor     edi, edi", "mov     dword ptr [eax], 0Dh", "jmp     loc_111C8"], ["call    ___rpc_createerr", "xor     edi, edi", "mov     dword ptr [eax], 11h", "jmp     loc_111C8"], ["mov     client, [esp+9Ch+addr]", "mov     ecx, [eax]", "test    ecx, ecx", "jle     loc_114B3"], ["sub     esp, 0Ch", "lea     eax, (aLocalRpcbFaile - 2BB6Ch)[ebx]; \"local_rpcb failed\"", "push    eax; msg", "call    _clnt_spcreateerror", "pop     ebp", "pop     edx", "push    eax", "lea     eax, (aGetclnthandleS - 2BB6Ch)[ebx]; \"getclnthandle: %s\"", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "mov     al, 1", "jmp     out_err"], ["mov     ds:(front - 2BB6Ch)[ebx], eax", "jmp     loc_11625"], ["mov     edi, ds:(front - 2BB6Ch)[ebx]", "xor     ebp, ebp", "jmp     short loc_116EC"], ["mov     ebp, edi", "mov     edi, eax"], ["mov     eax, [edi+10h]", "test    eax, eax", "jnz     short loc_116E8"], ["mov     edx, [esp+9Ch+addr]", "mov     eax, [edi]", "cmp     dword ptr [edx], 2", "jg      loc_11790"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "pop     eax", "mov     edx, [edi+4]", "push    edx; ptr", "call    _free", "mov     eax, [edi+0Ch]", "pop     ecx", "mov     eax, [eax+8]", "push    eax; ptr", "call    _free", "pop     eax", "mov     eax, [edi+0Ch]", "push    eax; ptr", "call    _free", "mov     eax, [edi+8]", "add     esp, 10h", "test    eax, eax", "jz      short loc_11742"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["test    ebp, ebp", "jz      short loc_117AC"], ["mov     edx, [esp+9Ch+nconf]", "mov     eax, ds:(front - 2BB6Ch)[ebx]", "mov     dword ptr [ebp+10h], 0", "mov     ds:(front - 2BB6Ch)[ebx], edx", "mov     [edx+10h], eax"], ["sub     esp, 0Ch", "push    edi; ptr", "call    _free", "add     esp, 10h", "jmp     loc_11193"], ["push    ebp", "mov     eax, [esp+0A0h+s]", "push    eax", "mov     eax, [esp+0A4h+host]", "push    eax", "lea     eax, (aAddCacheAddedT - 2BB6Ch)[ebx]; \"add_cache: Added to cache: %s : %s\\n\"", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "jmp     loc_1115A"], ["push    edx", "mov     ecx, [edi+4]", "push    ecx", "push    eax", "lea     eax, (aAddCacheDelete - 2BB6Ch)[ebx]; \"add_cache: Deleted from cache: %s : %s\"...", "push    eax; fmt", "call    libtirpc_log_dbg", "mov     eax, [edi]", "add     esp, 10h", "jmp     loc_11702"], ["mov     eax, [esp+9Ch+nconf]", "mov     ds:(front - 2BB6Ch)[ebx], eax", "mov     dword ptr [eax+10h], 0", "jmp     short loc_11760"], ["call    __stack_chk_fail_local"]], "__rpc_control": [["push    ebx", "call    __x86_get_pc_thunk_dx", "add     edx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+4+request]", "cmp     eax, 3", "jz      short loc_11858"], ["jg      short loc_11810"], ["cmp     eax, 1", "jz      short loc_11838"], ["cmp     eax, 2", "jnz     short loc_11830"], ["mov     eax, [esp+4+info]", "mov     ebx, [eax+4]", "mov     ecx, [eax]", "mov     dword ptr (tottimeout_0.tv_sec - 2BB6Ch)[edx], ecx", "mov     (tottimeout_0.tv_usec - 2BB6Ch)[edx], ebx", "mov     eax, 1", "pop     ebx", "retn"], ["cmp     request_0, 4", "jnz     short loc_11830"], ["lea     request_0, (__rpc_lowvers - 2BB6Ch)[edx]", "mov     ebx, [esp+4+info]", "mov     eax, [eax]", "mov     [ebx], eax", "mov     eax, 1", "pop     ebx", "retn"], ["xor     request_0, request_0", "pop     ebx", "retn"], ["mov     ebx, [esp+4+info]", "mov     request_0, dword ptr (tottimeout_0.tv_sec - 2BB6Ch)[edx]", "mov     edx, (tottimeout_0.tv_usec - 2BB6Ch)[edx]", "mov     [ebx+4], edx", "mov     [ebx], eax", "pop     ebx", "mov     eax, 1", "retn"], ["mov     request_0, [esp+4+info]", "mov     ecx, [eax]", "lea     eax, (__rpc_lowvers - 2BB6Ch)[edx]", "mov     [eax], ecx", "mov     eax, 1", "pop     ebx", "retn"]], "rpcb_set": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 4Ch", "mov     eax, large gs:14h", "mov     [esp+5Ch+var_20], eax", "xor     eax, eax", "mov     edi, [esp+5Ch+nconf]", "mov     ebp, [esp+5Ch+address]", "mov     [esp+5Ch+rslt], 0", "test    edi, edi", "jz      loc_119A8"], ["test    ebp, ebp", "jz      loc_11998"], ["call    local_rpcb", "mov     esi, eax", "test    client, client", "jz      loc_11970"], ["push    eax", "push    eax", "push    ebp; nbuf", "push    edi; nconf", "call    _taddr2uaddr", "mov     [esp+6Ch+parms.r_addr], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_11978"], ["mov     eax, [esp+5Ch+program]", "mov     [esp+5Ch+parms.r_prog], eax", "mov     eax, [esp+5Ch+version]", "mov     [esp+5Ch+parms.r_vers], eax", "mov     eax, [edi]", "mov     [esp+5Ch+parms.r_netid], eax", "call    _geteuid", "push    edx", "push    edx", "push    eax", "lea     eax, (aLibtirpcDebugL+16h - 2BB6Ch)[ebx]; \"%d\"", "push    eax", "push    20h ; ' '", "push    1", "push    20h ; ' '", "lea     edi, [esp+78h+uidbuf]", "push    edi", "call    ___snprintf_chk", "mov     [esp+7Ch+parms.r_owner], edi", "add     esp, 20h", "mov     ecx, (tottimeout_0.tv_usec - 2BB6Ch)[ebx]", "mov     eax, [client+4]", "mov     edi, dword ptr (tottimeout_0.tv_sec - 2BB6Ch)[ebx]", "push    ecx", "push    edi", "mov     ebp, ds:(xdr_bool_ptr - 2BB6Ch)[ebx]", "lea     edx, [esp+64h+rslt]", "push    edx", "push    ebp", "lea     edx, [esp+6Ch+parms]", "push    edx", "mov     edx, ds:(xdr_rpcb_ptr - 2BB6Ch)[ebx]", "push    edx", "push    1", "push    client", "call    dword ptr [eax]", "add     esp, 14h", "mov     eax, [client+4]", "push    client", "call    dword ptr [eax+10h]", "pop     ecx", "mov     client, [esp+68h+parms.r_addr]", "push    esi; ptr", "call    _free", "mov     eax, [esp+6Ch+rslt]", "add     esp, 10h"], ["mov     ecx, [esp+5Ch+var_20]", "xor     ecx, large gs:14h", "jnz     short loc_119B7"], ["add     esp, 4Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     client, client", "jmp     short loc_1195B"], ["sub     esp, 0Ch", "mov     eax, [client+4]", "push    client", "call    dword ptr [eax+10h]", "call    ___rpc_createerr", "add     esp, 10h", "mov     dword ptr [eax], 16h", "xor     eax, eax", "jmp     short loc_1195B"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 13h", "xor     eax, eax", "jmp     short loc_1195B"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 11h", "xor     eax, eax", "jmp     short loc_1195B"], ["call    __stack_chk_fail_local"]], "rpcb_unset": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 40h", "mov     eax, large gs:14h", "mov     [esp+4Ch+var_10], eax", "xor     eax, eax", "mov     edi, [esp+4Ch+nconf]", "mov     [esp+4Ch+rslt], 0", "call    local_rpcb", "test    client, client", "jz      loc_11AB0"], ["mov     esi, client", "mov     client, [esp+4Ch+program]", "mov     [esp+4Ch+parms.r_prog], eax", "mov     eax, [esp+4Ch+version]", "mov     [esp+4Ch+parms.r_vers], eax", "test    edi, edi", "jz      loc_11AA0"], ["mov     edx, [edi]", "lea     eax, (nullstring - 2BB6Ch)[ebx]"], ["mov     [esp+4Ch+parms.r_netid], edx", "mov     [esp+4Ch+parms.r_addr], eax", "call    _geteuid", "push    edx", "push    edx", "push    eax", "lea     eax, (aLibtirpcDebugL+16h - 2BB6Ch)[ebx]; \"%d\"", "push    eax", "push    20h ; ' '", "push    1", "push    20h ; ' '", "lea     edi, [esp+68h+uidbuf]", "push    edi", "call    ___snprintf_chk", "mov     [esp+6Ch+parms.r_owner], edi", "add     esp, 20h", "mov     ecx, (tottimeout_0.tv_usec - 2BB6Ch)[ebx]", "mov     eax, [client+4]", "mov     edi, dword ptr (tottimeout_0.tv_sec - 2BB6Ch)[ebx]", "push    ecx", "push    edi", "mov     ecx, ds:(xdr_rpcb_ptr - 2BB6Ch)[ebx]", "lea     edx, [esp+54h+rslt]", "push    edx", "mov     edx, ds:(xdr_bool_ptr - 2BB6Ch)[ebx]", "push    edx", "lea     edx, [esp+5Ch+parms]", "push    edx", "push    ecx", "push    2", "push    client", "call    dword ptr [eax]", "add     esp, 14h", "mov     eax, [client+4]", "push    client", "call    dword ptr [eax+10h]", "mov     eax, [esp+5Ch+rslt]", "add     esp, 10h"], ["mov     ecx, [esp+4Ch+var_10]", "xor     ecx, large gs:14h", "jnz     short loc_11AB4"], ["add     esp, 40h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["lea     eax, (nullstring - 2BB6Ch)[ebx]", "mov     edx, eax", "jmp     loc_11A18"], ["xor     client, client", "jmp     short loc_11A85"], ["call    __stack_chk_fail_local"]], "__rpcb_findaddr_timed": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 9Ch", "mov     eax, [esp+0ACh+nconf]", "mov     ecx, [esp+0ACh+host]", "mov     edi, [esp+0ACh+clpp]", "mov     esi, [esp+0ACh+tp]", "mov     [esp+0ACh+var_9C], eax", "mov     [esp+0ACh+var_88], ecx", "mov     [esp+0ACh+var_98], edi", "mov     [esp+0ACh+clnt_st], esi", "mov     ecx, large gs:14h", "mov     [esp+0ACh+var_20], ecx", "xor     ecx, ecx", "mov     [esp+0ACh+ua], 0", "test    eax, eax", "jz      loc_12078"], ["mov     ebp, [esp+0ACh+clnt_st]", "mov     [esp+0ACh+parms.r_addr], 0", "test    ebp, ebp", "jz      loc_12038"], ["mov     eax, [esp+0ACh+program]", "mov     edx, [esp+0ACh+var_9C]; nconf", "mov     [esp+0ACh+parms.r_prog], eax", "mov     eax, [esp+0ACh+version]", "mov     [esp+0ACh+parms.r_vers], eax", "mov     eax, [edx]", "mov     [esp+0ACh+parms.r_netid], eax", "lea     eax, (aLibtirpc - 2BB6Ch)[ebx]; \"libtirpc\"", "mov     [esp+0ACh+parms.r_owner], eax", "lea     ecx, [esp+0ACh+parms.r_addr]; targaddr", "mov     eax, [esp+0ACh+var_88]; host", "call    getclnthandle", "mov     ebp, eax", "test    client, client", "jz      loc_12048"], ["mov     edi, [esp+0ACh+parms.r_addr]", "test    edi, edi", "jz      loc_12068"], ["lea     edi, (rpcbrmttime.tv_sec - 2BB6Ch)[ebx]", "push    esi", "mov     [esp+0B0h+var_80], edi", "mov     eax, [client+4]", "push    edi", "push    4", "push    client", "call    dword ptr [eax+14h]", "mov     [esp+0BCh+vers], 4", "add     esp, 10h", "mov     edi, ds:(xdr_wrapstring_ptr - 2BB6Ch)[ebx]", "lea     eax, [esp+0ACh+vers]", "lea     esi, [esp+0ACh+parms]", "mov     [esp+0ACh+var_90], eax", "lea     eax, [esp+0ACh+ua]", "mov     [esp+0ACh+objp], eax", "mov     eax, ds:(xdr_rpcb_ptr - 2BB6Ch)[ebx]", "mov     [esp+0ACh+netid], eax", "lea     eax, [esp+0ACh+rpcerr]", "mov     [esp+0ACh+var_84], eax"], ["push    eax", "mov     edx, [esp+0B0h+var_90]", "mov     eax, [client+4]", "push    edx", "push    0Dh", "push    client", "call    dword ptr [eax+14h]", "mov     ecx, [esp+0BCh+clnt_st]", "mov     eax, [client+4]", "mov     edx, [ecx+4]", "push    edx", "mov     ecx, [ecx]", "push    ecx", "mov     edx, [esp+0C4h+objp]", "push    edx", "push    edi", "push    esi", "mov     ecx, [esp+0D0h+netid]", "push    ecx", "push    3", "push    client", "call    dword ptr [eax]", "add     esp, 30h", "mov     edx, eax", "cmp     clnt_st_0, 9", "jz      loc_12010"], ["ja      loc_11CA0"], ["test    clnt_st_0, clnt_st_0", "jnz     loc_11D80"], ["mov     clnt_st_0, [esp+0ACh+ua]", "test    eax, eax", "jz      short loc_11C29"], ["cmp     byte ptr [eax], 0", "jnz     loc_11CD8"], ["call    ___rpc_createerr", "xor     esi, esi", "mov     dword ptr [eax], 0Fh"], ["sub     esp, 0Ch", "mov     eax, [client+4]", "push    client", "call    dword ptr [eax+10h]", "mov     eax, [esp+0BCh+var_9C]", "add     esp, 10h", "cmp     dword ptr [eax+4], 1", "jz      loc_11D67"], ["mov     edi, [esp+0ACh+var_98]", "test    edi, edi", "jz      short loc_11C61"], ["xor     ebp, ebp"], ["mov     eax, [esp+0ACh+var_98]", "mov     [eax], ebp"], ["mov     eax, [esp+0ACh+parms.r_addr]", "test    eax, eax", "jz      short loc_11C7F"], ["lea     edx, (nullstring - 2BB6Ch)[ebx]", "cmp     eax, edx", "jz      short loc_11C7F"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["mov     eax, [esp+0ACh+var_20]", "xor     eax, large gs:14h", "jnz     loc_1216C"], ["add     esp, 9Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     clnt_st_0, 0Bh", "jz      loc_11D89"], ["mov     [esp+0ACh+clnt_st], edx", "call    ___rpc_createerr", "mov     edx, [esp+0ACh+clnt_st]", "mov     [eax], edx", "mov     eax, [client+4]", "mov     esi, [eax+8]", "call    ___rpc_createerr", "push    edi", "add     eax, 4", "push    edi", "push    eax", "push    client", "call    esi", "add     esp, 10h", "xor     esi, esi", "jmp     loc_11C36"], ["push    esi", "push    esi", "push    eax; uaddr", "mov     eax, [esp+0B8h+var_9C]", "push    eax; nconf", "call    _uaddr2taddr", "mov     esi, eax", "lea     address, (libtirpc_debug_level - 2BB6Ch)[ebx]", "add     esp, 10h", "cmp     dword ptr [eax], 2", "jle     short loc_11D19"], ["lea     eax, (aResolvable - 2BB6Ch)[ebx]; \"Resolvable\"", "test    address, address", "jz      loc_120A0"], ["push    edx", "push    eax", "lea     eax, (aRpcbFindaddrTi - 2BB6Ch)[ebx]; \"__rpcb_findaddr_timed: Remote address i\"...", "mov     ecx, [esp+0B4h+ua]", "push    ecx", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 10h"], ["push    ecx", "push    ecx", "mov     eax, [esp+0B4h+objp]", "push    eax; objp", "push    edi; proc", "call    _xdr_free", "add     esp, 10h", "test    address, address", "jz      loc_12090"], ["push    ecx", "mov     eax, [client+4]", "lea     edi, [esp+0B0h+servaddr]", "push    edi", "push    7", "push    client", "call    dword ptr [eax+14h]", "pop     eax", "pop     edx", "push    edi; svc", "push    address; new", "call    ___rpc_fixup_addr", "mov     eax, [esp+0BCh+var_9C]", "add     esp, 10h", "cmp     dword ptr [eax+4], 1", "jz      loc_1217E"], ["sub     esp, 0Ch", "mov     eax, [client+4]", "push    client", "call    dword ptr [eax+10h]", "add     esp, 10h"], ["mov     eax, [esp+0ACh+var_98]", "xor     ebp, ebp", "test    eax, eax", "jnz     loc_11C5B"], ["jmp     loc_11C61"], ["cmp     clnt_st_0, 8", "jnz     loc_11CA9"], ["mov     eax, [esp+0ACh+vers]", "dec     eax", "mov     [esp+0ACh+vers], eax", "cmp     eax, 2", "ja      loc_11BCE"], ["mov     eax, [esp+0ACh+var_9C]", "lea     edx, (aInet - 2BB6Ch)[ebx]; \"inet\"", "mov     ecx, 5", "mov     edi, edx", "mov     eax, [eax+0Ch]", "mov     esi, eax", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jnz     loc_120B8"], ["mov     esi, [esp+0ACh+var_9C]", "lea     edi, (aUdp - 2BB6Ch)[ebx]; \"udp\"", "mov     ecx, 4", "mov     [esp+0ACh+var_7A], 0", "mov     esi, [esi+10h]", "mov     [esp+0ACh+netid], edi", "mov     [esp+0ACh+objp], esi", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      loc_12100"], ["lea     edi, (aTcp - 2BB6Ch)[ebx]; \"tcp\"", "mov     ecx, 4", "mov     esi, [esp+0ACh+objp]", "mov     [esp+0ACh+var_90], edi", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jnz     loc_1202C"], ["mov     ecx, 4", "mov     [esp+0ACh+var_58], 2", "mov     esi, [esp+0ACh+objp]", "mov     edi, [esp+0ACh+var_90]", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      loc_120BF"], ["mov     ecx, 4", "mov     esi, [esp+0ACh+objp]", "mov     edi, [esp+0ACh+netid]", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jnz     loc_1202C"], ["mov     esi, eax", "mov     ecx, 5", "mov     edi, edx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_1202C"], ["lea     ecx, [esp+0ACh+targaddr]; targaddr", "mov     edx, [esp+0ACh+var_9C]; nconf", "mov     eax, [esp+0ACh+var_88]; host", "call    getclnthandle", "mov     [esp+0ACh+objp], eax"], ["mov     edi, [esp+0ACh+objp]", "test    edi, edi", "jz      loc_1202C"], ["push    eax", "mov     eax, [edi+4]", "lea     esi, [esp+0B0h+var_58]", "mov     [esp+0B0h+netid], esi", "push    esi", "push    0Dh", "push    edi", "call    dword ptr [eax+14h]", "add     esp, 0Ch", "mov     edx, [esp+0B0h+var_80]", "mov     eax, [edi+4]", "push    edx", "push    4", "mov     [esp+0B8h+objp], edi", "push    edi", "call    dword ptr [eax+14h]", "mov     eax, [esp+0BCh+program]", "mov     [esp+0BCh+var_58], eax", "mov     eax, [esp+0BCh+version]", "mov     [esp+0BCh+var_54], eax", "mov     eax, [esp+0BCh+var_9C]", "mov     edi, [esp+0BCh+var_90]", "mov     ecx, 4", "mov     esi, [eax+10h]", "repe cmpsb", "setnbe  al", "sbb     al, 0", "add     esp, 10h", "movsx   eax, al", "cmp     eax, 1", "mov     ecx, [esp+0ACh+clnt_st]", "sbb     eax, eax", "mov     edi, [esp+0ACh+objp]", "and     eax, 0FFFFFFF5h", "mov     esi, [ecx+4]", "add     eax, 11h", "mov     [esp+0ACh+var_4C], 0", "mov     [esp+0ACh+var_50], eax", "mov     eax, [edi+4]", "push    esi", "mov     edx, [ecx]", "mov     ecx, ds:(xdr_u_short_ptr - 2BB6Ch)[ebx]", "push    edx", "lea     edx, [esp+0B4h+var_7A]", "push    edx", "mov     edx, ds:(xdr_pmap_ptr - 2BB6Ch)[ebx]", "push    ecx", "mov     esi, [esp+0BCh+netid]", "push    esi", "push    edx", "push    3", "push    edi", "call    dword ptr [eax]", "add     esp, 20h", "test    eax, eax", "jnz     loc_1210F"], ["mov     ax, [esp+0ACh+var_7A]", "test    ax, ax", "jz      loc_1214D"], ["rol     ax, 8", "mov     [esp+0ACh+var_7A], ax", "push    eax", "mov     edi, [esp+0B0h+objp]", "lea     edx, [esp+0B0h+var_64]", "mov     eax, [edi+4]", "push    edx", "push    7", "mov     [esp+0B8h+objp], edi", "push    edi", "call    dword ptr [eax+14h]", "mov     [esp+0BCh+size], 0Ch; size", "call    _malloc", "add     esp, 10h", "mov     esi, eax", "test    eax, eax", "jz      loc_12171"], ["mov     edx, [esp+0ACh+var_60]", "sub     esp, 0Ch", "push    edx; size", "mov     [esp+0BCh+clnt_st], edx", "call    _malloc", "add     esp, 10h", "mov     edi, eax", "mov     [esi+8], eax", "test    eax, eax", "jz      loc_1219B"], ["push    ecx", "mov     edx, [esp+0B0h+clnt_st]", "push    edx; n", "mov     eax, [esp+0B4h+src]", "mov     [esp+0B4h+clnt_st], edx", "push    eax; src", "push    edi; dest", "call    _memcpy", "mov     ax, [esp+0BCh+var_7A]", "mov     edx, [esp+0BCh+clnt_st]", "mov     [edi+2], ax", "mov     edi, [esp+0BCh+objp]", "mov     [esi], edx", "mov     [esi+4], edx", "mov     eax, [edi+4]", "mov     [esp+0BCh+size], edi", "call    dword ptr [eax+10h]", "mov     eax, [address+4]", "add     esp, 10h", "test    eax, eax", "jnz     loc_11C36"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Fh", "mov     eax, [client+4]", "mov     edi, [eax+8]", "call    ___rpc_createerr", "push    edx", "add     eax, 4", "push    edx", "push    eax", "push    client", "call    edi", "add     esp, 10h", "jmp     loc_11C36"], ["push    eax", "push    eax", "mov     clnt_st_0, [esp+0B4h+var_84]", "mov     eax, [client+4]", "push    edx", "push    client", "call    dword ptr [eax+8]", "add     esp, 10h", "cmp     dword ptr [esp+0ACh+rpcerr.ru], 4", "jbe     loc_11D89"], ["xor     esi, esi", "jmp     loc_11C36"], ["lea     eax, (tottimeout_0.tv_sec - 2BB6Ch)[ebx]", "mov     [esp+0ACh+clnt_st], eax", "jmp     loc_11B35"], ["mov     eax, [esp+0ACh+var_9C]", "cmp     dword ptr [eax+4], 1", "jnz     short loc_120B0"], ["xor     esi, esi", "cmp     [esp+0ACh+var_98], 0", "jnz     loc_11C5B"], ["jmp     loc_11C61"], ["lea     client, (nullstring - 2BB6Ch)[ebx]", "mov     [esp+0ACh+parms.r_addr], eax", "jmp     loc_11B82"], ["call    ___rpc_createerr", "xor     esi, esi", "mov     dword ptr [eax], 11h", "jmp     loc_11C7F"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 16h", "jmp     loc_11C36"], ["lea     eax, (unk_1DF71 - 2BB6Ch)[ebx]", "jmp     loc_11D03"], ["xor     esi, esi", "jmp     loc_11C51"], ["xor     esi, esi", "jmp     loc_11FE9"], ["sub     esp, 0Ch", "mov     ecx, [esp+0B8h+netid]", "push    ecx; netid", "call    _getnetconfigent", "add     esp, 10h", "mov     esi, eax", "test    eax, eax", "jz      loc_1215A"], ["lea     ecx, [esp+0ACh+targaddr]; targaddr", "mov     edx, eax; nconf", "mov     eax, [esp+0ACh+var_88]; host", "call    getclnthandle", "sub     esp, 0Ch", "mov     [esp+0B8h+objp], eax", "push    esi; netconfigp", "call    _freenetconfigent", "add     esp, 10h", "jmp     loc_11E87"], ["lea     esi, (aTcp - 2BB6Ch)[ebx]; \"tcp\"", "mov     [esp+0ACh+var_90], esi", "jmp     loc_11E15"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Eh"], ["mov     edi, [esp+0ACh+objp]", "mov     eax, [edi+4]", "mov     esi, [eax+8]", "call    ___rpc_createerr", "push    edx", "add     eax, 4", "push    edx", "push    eax", "push    edi", "call    esi", "add     esp, 10h"], ["sub     esp, 0Ch", "mov     esi, [esp+0B8h+objp]", "mov     eax, [esi+4]", "push    esi", "xor     esi, esi", "call    dword ptr [eax+10h]", "add     esp, 10h", "jmp     loc_11C36"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Fh", "jmp     short loc_12135"], ["call    ___rpc_createerr", "xor     esi, esi", "mov     dword ptr [eax], 11h", "jmp     loc_11C36"], ["call    __stack_chk_fail_local"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Ch", "jmp     short loc_1211A"], ["cmp     [esp+0ACh+var_98], 0", "jnz     loc_11C5B"], ["sub     esp, 0Ch", "mov     eax, [client+4]", "push    client", "call    dword ptr [eax+10h]", "add     esp, 10h", "jmp     loc_11C61"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Ch", "mov     eax, [esp+0ACh+objp]", "mov     eax, [eax+4]", "mov     edi, [eax+8]", "call    ___rpc_createerr", "push    ecx", "add     eax, 4", "push    ecx", "push    eax", "push    [esp+0B8h+objp]", "call    edi", "mov     [esp+0BCh+size], esi; ptr", "call    _free", "add     esp, 10h", "jmp     loc_12135"]], "rpcb_getmaps": [["push    ebp", "xor     ecx, ecx", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     edx, [esp+3Ch+nconf]; nconf", "mov     eax, [esp+3Ch+host]; host", "mov     [esp+3Ch+head], 0", "mov     [esp+3Ch+vers], 0", "call    getclnthandle", "test    client, client", "jz      loc_123C0"], ["mov     esi, (tottimeout_0.tv_usec - 2BB6Ch)[ebx]", "mov     ebp, dword ptr (tottimeout_0.tv_sec - 2BB6Ch)[ebx]", "mov     edi, client", "mov     client, [client+4]", "push    esi", "mov     edx, ds:(xdr_rpcblist_ptr_ptr - 2BB6Ch)[ebx]", "push    ebp", "mov     esi, ds:(xdr_void_ptr - 2BB6Ch)[ebx]", "lea     ebp, [esp+44h+head]", "push    ebp", "mov     [esp+48h+var_34], edx", "push    edx", "push    0", "push    esi", "push    4", "push    client", "call    dword ptr [eax]", "add     esp, 20h", "test    clnt_st, clnt_st", "jz      done"], ["sub     clnt_st, 8", "cmp     eax, 1", "ja      short loc_12373"], ["push    ecx", "mov     eax, [client+4]", "lea     ecx, [esp+40h+vers]", "push    ecx", "mov     [esp+44h+var_30], ecx", "push    0Ch", "push    client", "call    dword ptr [eax+14h]", "add     esp, 10h", "mov     ecx, [esp+3Ch+var_30]", "cmp     [esp+3Ch+vers], 4", "jnz     short loc_12373"], ["mov     [esp+3Ch+vers], 3", "push    eax", "mov     eax, [client+4]", "push    ecx", "push    0Dh", "push    client", "call    dword ptr [eax+14h]", "mov     edx, (tottimeout_0.tv_usec - 2BB6Ch)[ebx]", "mov     eax, [client+4]", "mov     ecx, dword ptr (tottimeout_0.tv_sec - 2BB6Ch)[ebx]", "push    edx", "push    ecx", "push    ebp", "mov     ebp, [esp+58h+var_34]", "push    ebp", "push    0", "push    esi", "push    4", "push    client", "call    dword ptr [eax]", "add     esp, 30h", "test    eax, eax", "jz      short done"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0Eh", "mov     eax, [client+4]", "mov     esi, [eax+8]", "call    ___rpc_createerr", "push    edx", "add     eax, 4", "push    edx", "push    eax", "push    client", "call    esi", "add     esp, 10h"], ["sub     esp, 0Ch", "mov     eax, [client+4]", "push    client", "call    dword ptr [eax+10h]", "mov     eax, [esp+4Ch+head]", "add     esp, 10h"], ["mov     esi, [esp+3Ch+var_20]", "xor     esi, large gs:14h", "jnz     short loc_123C6"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     client, [esp+3Ch+head]", "jmp     short loc_123A6"], ["call    __stack_chk_fail_local"]], "rpcb_rmtcall": [["push    ebp", "call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 5Ch", "mov     ebx, [esp+6Ch+xdrres]", "mov     ecx, [esp+6Ch+addr_ptr]", "mov     edx, [esp+6Ch+nconf]; nconf", "mov     [esp+6Ch+var_58], eax", "mov     [esp+6Ch+stat], ebx", "mov     [esp+6Ch+var_54], ecx", "mov     [esp+6Ch+var_50], edx", "xor     ecx, ecx; targaddr", "mov     eax, [esp+6Ch+host]; host", "mov     ebp, large gs:14h", "mov     [esp+6Ch+var_20], ebp", "xor     ebp, ebp", "mov     esi, [esp+6Ch+xdrargs]", "mov     edi, [esp+6Ch+argsp]", "mov     ebx, [esp+6Ch+resp]", "call    getclnthandle", "test    client, client", "jz      loc_12620"], ["mov     ebp, client", "push    eax", "mov     edx, [esp+70h+var_58]", "mov     eax, [client+4]", "lea     ecx, [edx-0DAD0h]", "push    ecx", "push    4", "push    client", "call    dword ptr [eax+14h]", "mov     eax, [esp+7Ch+prog]", "mov     [esp+7Ch+r.results.results_val], ebx", "mov     [esp+7Ch+a.prog], eax", "mov     eax, [esp+7Ch+vers]", "mov     ebx, [esp+7Ch+stat]", "mov     [esp+7Ch+a.vers], eax", "mov     eax, [esp+7Ch+proc]", "mov     [esp+7Ch+a.args.args_val], edi", "mov     [esp+7Ch+a.xdr_args], esi", "mov     [esp+7Ch+r.xdr_res], ebx", "mov     [esp+7Ch+a.proc], eax", "mov     [esp+7Ch+r.addr], 0", "mov     [esp+7Ch+rpcb_vers], 4", "add     esp, 10h", "mov     eax, [esp+6Ch+var_54]", "test    eax, eax", "lea     eax, [esp+6Ch+rpcb_vers]", "mov     [esp+6Ch+stat], eax", "mov     eax, [esp+6Ch+var_58]", "lea     edi, [esp+6Ch+a]", "lea     esi, [esp+6Ch+r]", "mov     ebx, ds:(xdr_rpcb_rmtcallres_ptr - 2BB6Ch)[eax]", "setnz   [esp+6Ch+var_59]", "mov     [esp+6Ch+var_60], ebx", "mov     ebx, ds:(xdr_rpcb_rmtcallargs_ptr - 2BB6Ch)[eax]", "mov     eax, edi", "mov     edi, client", "mov     client, eax", "jmp     short loc_124F0"], ["lea     ecx, [stat_0-8]", "cmp     ecx, 1", "ja      loc_125A0"], ["mov     edx, [esp+6Ch+rpcb_vers]", "lea     ecx, [edx-1]", "mov     [esp+6Ch+rpcb_vers], ecx", "cmp     ecx, 2", "jbe     loc_125A0"], ["push    ecx", "mov     edx, [esp+70h+stat]", "mov     eax, [client+4]", "push    edx", "push    0Dh", "push    client", "call    dword ptr [eax+14h]", "mov     ecx, [esp+7Ch+tout.tv_usec]", "mov     eax, [client+4]", "push    ecx", "mov     edx, [esp+80h+tout.tv_sec]", "push    edx", "push    esi", "mov     ecx, [esp+88h+var_60]", "push    ecx", "push    ebp", "push    ebx", "push    5", "push    client", "call    ds:(_GLOBAL_OFFSET_TABLE_ - 2BB6Ch)[eax]", "add     esp, 30h", "test    stat_0, stat_0", "jnz     short loc_124D0"], ["cmp     [esp+6Ch+var_59], 0", "jz      short loc_124D0"], ["push    eax", "mov     ebp, client", "push    eax", "mov     eax, [esp+74h+r.addr]", "push    eax; uaddr", "mov     edx, [esp+78h+var_50]", "push    edx; nconf", "mov     ebx, [esp+7Ch+var_58]", "call    _uaddr2taddr", "add     esp, 10h", "mov     client, eax", "test    na, na", "jz      loc_12627"], ["mov     ebx, [esp+6Ch+var_54]", "mov     na, [na+4]", "mov     ecx, [na+8]", "cmp     eax, [ebx]", "ja      loc_125F0"], ["push    ebx", "push    eax; n", "push    ecx; src", "mov     eax, [esp+78h+var_54]", "mov     eax, [eax+8]", "push    eax; dest", "mov     ebx, [esp+7Ch+var_58]", "call    _memcpy", "mov     edx, [esp+7Ch+var_54]", "mov     eax, [na+4]", "mov     [edx+4], eax", "pop     eax", "mov     eax, [na+8]", "push    eax; ptr", "call    _free", "mov     [esp+7Ch+ptr], na; ptr", "call    _free", "add     esp, 10h", "xor     eax, eax", "jmp     short error"], ["mov     ebp, client"], ["mov     [esp+6Ch+stat], eax", "sub     esp, 0Ch", "mov     ecx, [client+4]", "push    client", "call    dword ptr [ecx+10h]", "add     esp, 10h", "mov     ecx, [esp+6Ch+r.addr]", "mov     eax, [esp+6Ch+stat]", "test    ecx, ecx", "jz      short loc_125DB"], ["push    eax", "push    eax", "push    esi; objp", "mov     eax, [esp+78h+var_58]", "mov     ebx, eax", "mov     edx, ds:(xdr_wrapstring_ptr - 2BB6Ch)[eax]", "push    edx; proc", "call    _xdr_free", "add     esp, 10h", "mov     eax, [esp+6Ch+stat]"], ["mov     esi, [esp+6Ch+var_20]", "xor     esi, large gs:14h", "jnz     short loc_1263C"], ["add     esp, 5Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    ecx; ptr", "mov     ebx, [esp+7Ch+var_58]", "call    _free", "mov     [esp+7Ch+ptr], na; ptr", "call    _free", "mov     eax, [esp+7Ch+var_54]", "add     esp, 10h", "mov     dword ptr [eax+4], 0", "mov     eax, 10h", "jmp     short error"], ["mov     client, 10h", "jmp     short loc_125DB"], ["mov     na, [esp+6Ch+var_54]", "mov     dword ptr [eax+4], 0", "mov     eax, 16h", "jmp     error"], ["call    __stack_chk_fail_local"]], "rpcb_gettime": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     esi, [esp+3Ch+host]", "mov     ebp, [esp+3Ch+timep]", "test    esi, esi", "jz      short loc_1267F"], ["cmp     byte ptr [esi], 0", "jnz     short loc_126B0"], ["sub     esp, 0Ch", "push    ebp; timer", "call    _time", "add     esp, 10h", "mov     eax, 1"], ["mov     ecx, [esp+3Ch+var_20]", "xor     ecx, large gs:14h", "jnz     loc_12838"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     eax, (aNetpath - 2BB6Ch)[ebx]; \"netpath\"", "push    eax; nettype", "call    ___rpc_setconf", "add     esp, 10h", "mov     edi, eax", "test    handle, handle", "jz      loc_12810"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 0", "jmp     short loc_126ED"], ["xor     ecx, ecx; targaddr", "mov     nconf, esi; host", "call    getclnthandle", "test    client_0, client_0", "jnz     short loc_12728"], ["sub     esp, 0Ch", "push    handle; vhandle", "call    ___rpc_getconf", "add     esp, 10h", "mov     edx, eax; nconf", "test    nconf, nconf", "jnz     short loc_126E0"], ["call    ___rpc_createerr", "mov     ebp, [eax]", "test    ebp, ebp", "jz      loc_12828"], ["sub     esp, 0Ch", "push    handle; vhandle", "call    ___rpc_endconf", "add     esp, 10h", "xor     eax, eax", "jmp     loc_12690"], ["mov     [esp+3Ch+client], client_0", "sub     esp, 0Ch", "push    handle; vhandle", "call    ___rpc_endconf", "mov     edx, [esp+4Ch+client]", "mov     ecx, (tottimeout_0.tv_usec - 2BB6Ch)[ebx]", "mov     esi, dword ptr (tottimeout_0.tv_sec - 2BB6Ch)[ebx]", "mov     handle, ds:(xdr_int_ptr - 2BB6Ch)[ebx]", "mov     eax, [edx+4]", "push    ecx", "push    esi", "mov     ecx, ds:(xdr_void_ptr - 2BB6Ch)[ebx]", "push    ebp", "push    edi", "push    0", "mov     [esp+60h+var_34], ecx", "push    ecx", "push    6", "push    edx", "mov     [esp+6Ch+client], edx", "call    dword ptr [eax]", "mov     esi, eax", "add     esp, 30h", "lea     st, [st-8]", "mov     edx, [esp+3Ch+client]", "cmp     eax, 1", "jbe     short loc_12798"], ["sub     esp, 0Ch", "mov     eax, [edx+4]", "push    edx", "call    dword ptr [eax+10h]", "xor     eax, eax", "add     esp, 10h", "test    st, st", "setz    al", "jmp     loc_12690"], ["push    eax", "mov     eax, [edx+4]", "lea     ecx, [esp+40h+vers]", "push    ecx", "mov     [esp+44h+var_30], ecx", "push    0Ch", "push    edx", "mov     [esp+4Ch+client], edx", "call    dword ptr [eax+14h]", "add     esp, 10h", "mov     edx, [esp+3Ch+client]", "mov     ecx, [esp+3Ch+var_30]", "cmp     [esp+3Ch+vers], 4", "jnz     short loc_12779"], ["mov     [esp+3Ch+vers], 3", "push    eax", "mov     eax, [edx+4]", "push    ecx", "push    0Dh", "push    edx", "mov     [esp+4Ch+client], edx", "call    dword ptr [eax+14h]", "mov     edx, [esp+4Ch+client]", "mov     ecx, (tottimeout_0.tv_usec - 2BB6Ch)[ebx]", "mov     ebx, dword ptr (tottimeout_0.tv_sec - 2BB6Ch)[ebx]", "mov     eax, [edx+4]", "push    ecx", "push    ebx", "push    ebp", "push    edi", "push    0", "mov     st, [esp+60h+var_34]", "push    esi", "push    6", "push    edx", "mov     [esp+6Ch+client], edx", "call    dword ptr [eax]", "add     esp, 30h", "mov     esi, eax", "mov     edx, [esp+3Ch+client]", "jmp     loc_12779"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 11h", "xor     eax, eax", "jmp     loc_12690"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 11h", "jmp     loc_1270E"], ["call    __stack_chk_fail_local"]], "rpcb_taddr2uaddr": [["push    edi", "push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "sub     esp, 10h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ebx, [esp+1Ch+nconf]", "mov     edi, [esp+1Ch+taddr]", "mov     [esp+1Ch+uaddr], 0", "test    ebx, ebx", "jz      short loc_128F0"], ["test    edi, edi", "jz      short loc_128D8"], ["call    local_rpcb", "mov     ebx, eax", "test    client, client", "jz      short loc_128BB"], ["mov     edx, (tottimeout_0.tv_usec - 2BB6Ch)[esi]", "mov     client, [client+4]", "mov     ecx, dword ptr (tottimeout_0.tv_sec - 2BB6Ch)[esi]", "push    edx", "push    ecx", "mov     ecx, ds:(xdr_netbuf_ptr - 2BB6Ch)[esi]", "lea     edx, [esp+24h+uaddr]", "push    edx", "mov     edx, ds:(xdr_wrapstring_ptr - 2BB6Ch)[esi]", "push    edx", "push    edi", "push    ecx", "push    8", "push    client", "call    dword ptr [eax]", "add     esp, 14h", "mov     eax, [client+4]", "push    client", "call    dword ptr [eax+10h]", "mov     client, [esp+2Ch+uaddr]", "add     esp, 10h"], ["mov     eax, [esp+1Ch+var_10]", "xor     eax, large gs:14h", "jnz     short loc_12901"], ["add     esp, 10h", "mov     eax, ebx", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["mov     ebx, esi", "call    ___rpc_createerr", "xor     ebx, ebx", "mov     dword ptr [eax], 13h", "jmp     short loc_128BB"], ["mov     ebx, esi", "call    ___rpc_createerr", "xor     ebx, ebx", "mov     dword ptr [eax], 11h", "jmp     short loc_128BB"], ["call    __stack_chk_fail_local"]], "rpcb_uaddr2taddr": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+nconf]", "test    edi, edi", "jz      loc_129C0"], ["mov     esi, [esp+0Ch+uaddr]", "test    esi, esi", "jz      short loc_129B0"], ["call    local_rpcb", "mov     edi, eax", "test    client, client", "jz      short loc_129A8"], ["push    esi", "push    esi", "push    0Ch; size", "push    1; nmemb", "call    _calloc", "mov     esi, eax", "add     esp, 10h", "mov     taddr, [client+4]", "test    taddr, taddr", "jz      short loc_129CF"], ["mov     edx, (tottimeout_0.tv_usec - 2BB6Ch)[ebx]", "mov     ecx, dword ptr (tottimeout_0.tv_sec - 2BB6Ch)[ebx]", "push    edx", "mov     edx, ds:(xdr_netbuf_ptr - 2BB6Ch)[ebx]", "push    ecx", "mov     ecx, ds:(xdr_wrapstring_ptr - 2BB6Ch)[ebx]", "push    taddr", "push    edx", "lea     edx, [esp+1Ch+uaddr]", "push    edx", "push    ecx", "push    7", "push    client", "call    dword ptr [eax]", "add     esp, 20h", "test    eax, eax", "jnz     short loc_12998"], ["sub     esp, 0Ch", "mov     eax, [client+4]", "push    client", "call    dword ptr [eax+10h]", "add     esp, 10h"], ["pop     ebx", "mov     eax, esi", "pop     esi", "pop     edi", "retn"], ["sub     esp, 0Ch", "push    taddr; ptr", "xor     taddr, taddr", "call    _free", "add     esp, 10h", "jmp     short loc_12982"], ["xor     esi, esi", "pop     ebx", "mov     client, esi", "pop     esi", "pop     client", "retn"], ["call    ___rpc_createerr", "mov     dword ptr [eax], 13h", "jmp     short loc_1298F"], ["call    ___rpc_createerr", "xor     esi, esi", "mov     dword ptr [eax], 11h", "jmp     short loc_1298F"], ["sub     esp, 0Ch", "push    client", "call    dword ptr [eax+10h]", "add     esp, 10h", "jmp     short loc_1298F"]], "xdr_rpcb": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+xdrs]", "mov     esi, [esp+0Ch+objp]", "push    eax", "push    eax", "push    esi; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jnz     short loc_12A10"], ["xor     eax, eax"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    eax", "push    eax", "lea     eax, [esi+4]", "push    eax; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      short loc_12A06"], ["push    ecx", "lea     eax, [esi+8]", "push    2328h; maxsize", "push    eax; cpp", "push    edi; xdrs", "call    _xdr_string", "add     esp, 10h", "test    eax, eax", "jz      short loc_12A06"], ["push    edx", "lea     eax, [esi+0Ch]", "push    2328h; maxsize", "push    eax; cpp", "push    edi; xdrs", "call    _xdr_string", "add     esp, 10h", "test    eax, eax", "jz      short loc_12A06"], ["push    eax", "add     esi, 10h", "push    2328h; maxsize", "push    esi; cpp", "push    edi; xdrs", "call    _xdr_string", "add     esp, 10h", "test    eax, eax", "setnz   al", "and     eax, 0FFh", "jmp     short loc_12A08"]], "xdr_rpcb_entry": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+xdrs]", "mov     esi, [esp+0Ch+objp]", "push    eax", "push    2328h; maxsize", "push    esi; cpp", "push    edi; xdrs", "call    _xdr_string", "add     esp, 10h", "test    eax, eax", "jnz     short loc_12AA0"], ["xor     eax, eax"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    eax", "lea     eax, [esi+4]", "push    2328h; maxsize", "push    eax; cpp", "push    edi; xdrs", "call    _xdr_string", "add     esp, 10h", "test    eax, eax", "jz      short loc_12A9A"], ["push    ecx", "lea     eax, [esi+8]", "push    ecx", "push    eax; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      short loc_12A9A"], ["push    edx", "lea     eax, [esi+0Ch]", "push    2328h; maxsize", "push    eax; cpp", "push    edi; xdrs", "call    _xdr_string", "add     esp, 10h", "test    eax, eax", "jz      short loc_12A9A"], ["push    eax", "add     esi, 10h", "push    2328h; maxsize", "push    esi; cpp", "push    edi; xdrs", "call    _xdr_string", "add     esp, 10h", "test    eax, eax", "setnz   al", "and     eax, 0FFh", "jmp     short loc_12A9C"]], "xdr_rpcblist_ptr": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     esi, [esp+3Ch+xdrs]", "mov     ebp, [esp+3Ch+rp]", "lea     edi, [esp+3Ch+more_elements]", "mov     eax, [esi]", "mov     ecx, [ebp+0]", "mov     [esp+3Ch+var_3C], eax", "mov     eax, ds:(xdr_rpcb_ptr - 2BB6Ch)[ebx]", "mov     [esp+3Ch+proc], eax", "mov     [esp+3Ch+var_30], eax"], ["xor     eax, eax", "test    ecx, ecx", "setnz   al", "mov     [esp+3Ch+more_elements], eax", "push    eax", "push    eax", "push    edi; bp", "push    esi; xdrs", "call    _xdr_bool", "add     esp, 10h", "test    eax, eax", "jz      short loc_12BC0"], ["mov     ecx, [esp+3Ch+more_elements]", "test    ecx, ecx", "jz      short loc_12BD8"], ["cmp     [esp+3Ch+var_3C], 2", "jz      short loc_12B90"], ["mov     eax, [esp+3Ch+proc]", "push    eax; proc", "push    18h; size", "push    rp_0; xpp", "push    esi; xdrs", "call    _xdr_reference", "add     esp, 10h", "test    eax, eax", "jz      short loc_12BC0"], ["mov     eax, [rp_0+0]", "lea     rp_0, [eax+14h]", "mov     ecx, [eax+14h]", "jmp     short loc_12B40"], ["mov     eax, [rp_0+0]", "mov     edx, [esp+3Ch+var_30]", "mov     ecx, [eax+14h]", "mov     [esp+3Ch+next], ecx", "push    edx; proc", "push    18h; size", "push    rp_0; xpp", "push    esi; xdrs", "call    _xdr_reference", "add     esp, 10h", "test    eax, eax", "jz      short loc_12BC0"], ["mov     ecx, [esp+3Ch+next]", "lea     rp_0, [esp+3Ch+next_copy]", "mov     [esp+3Ch+next_copy], ecx", "jmp     short loc_12B40"], ["xor     eax, eax"], ["mov     edx, [esp+3Ch+var_20]", "xor     edx, large gs:14h", "jnz     short loc_12BDF"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     rp_0", "retn"], ["mov     eax, 1", "jmp     short loc_12BC2"], ["call    __stack_chk_fail_local"]], "xdr_rpcb_entry_list_ptr": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     esi, [esp+3Ch+xdrs]", "mov     ebp, [esp+3Ch+rp]", "lea     edi, [esp+3Ch+more_elements]", "mov     eax, [esi]", "mov     ecx, [ebp+0]", "mov     [esp+3Ch+var_3C], eax", "mov     eax, ds:(xdr_rpcb_entry_ptr - 2BB6Ch)[ebx]", "mov     [esp+3Ch+proc], eax", "mov     [esp+3Ch+var_30], eax"], ["xor     eax, eax", "test    ecx, ecx", "setnz   al", "mov     [esp+3Ch+more_elements], eax", "push    eax", "push    eax", "push    edi; bp", "push    esi; xdrs", "call    _xdr_bool", "add     esp, 10h", "test    eax, eax", "jz      short loc_12CE0"], ["mov     ecx, [esp+3Ch+more_elements]", "test    ecx, ecx", "jz      short loc_12CF8"], ["cmp     [esp+3Ch+var_3C], 2", "jz      short loc_12CB0"], ["mov     eax, [esp+3Ch+proc]", "push    eax; proc", "push    18h; size", "push    rp_0; xpp", "push    esi; xdrs", "call    _xdr_reference", "add     esp, 10h", "test    eax, eax", "jz      short loc_12CE0"], ["mov     eax, [rp_0+0]", "lea     rp_0, [eax+14h]", "mov     ecx, [eax+14h]", "jmp     short loc_12C60"], ["mov     eax, [rp_0+0]", "mov     edx, [esp+3Ch+var_30]", "mov     ecx, [eax+14h]", "mov     [esp+3Ch+next], ecx", "push    edx; proc", "push    18h; size", "push    rp_0; xpp", "push    esi; xdrs", "call    _xdr_reference", "add     esp, 10h", "test    eax, eax", "jz      short loc_12CE0"], ["mov     ecx, [esp+3Ch+next]", "lea     rp_0, [esp+3Ch+next_copy]", "mov     [esp+3Ch+next_copy], ecx", "jmp     short loc_12C60"], ["xor     eax, eax"], ["mov     edx, [esp+3Ch+var_20]", "xor     edx, large gs:14h", "jnz     short loc_12CFF"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     rp_0", "retn"], ["mov     eax, 1", "jmp     short loc_12CE2"], ["call    __stack_chk_fail_local"]], "xdr_rpcb_rmtcallargs": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 24h", "mov     edi, [esp+34h+xdrs]", "mov     esi, [esp+34h+objp]", "mov     eax, [edi+4]", "push    0Ch", "push    edi", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    buf, buf", "jz      loc_12DF0"], ["mov     ecx, [objp_0]", "bswap   ecx", "mov     [eax], ecx", "mov     ecx, [objp_0+4]", "bswap   ecx", "mov     [eax+4], ecx", "mov     ecx, [objp_0+8]", "bswap   ecx", "mov     [eax+8], ecx"], ["sub     esp, 0Ch", "mov     eax, [edi+4]", "lea     ebp, [objp_0+0Ch]", "push    edi", "call    dword ptr [eax+10h]", "mov     [esp+3Ch+lenposition], eax", "pop     eax", "pop     edx", "push    ebp; up", "push    edi; xdrs", "call    _xdr_u_int", "add     esp, 10h", "test    eax, eax", "jz      loc_12E13"], ["sub     esp, 0Ch", "mov     eax, [edi+4]", "push    edi", "call    dword ptr [eax+10h]", "mov     [esp+3Ch+argposition], eax", "pop     eax", "pop     edx", "mov     ecx, [objp_0+10h]", "push    ecx", "push    edi", "call    dword ptr [objp_0+14h]", "add     esp, 10h", "test    eax, eax", "jz      short loc_12E13"], ["sub     esp, 0Ch", "mov     eax, [edi+4]", "push    edi", "call    dword ptr [eax+10h]", "mov     ecx, [esp+3Ch+argposition]", "mov     edx, position_0", "sub     edx, ecx", "mov     [esp+3Ch+position], position_0", "mov     [objp_0+0Ch], edx", "pop     objp_0", "pop     position_0", "mov     eax, [edi+4]", "mov     edx, [esp+34h+lenposition]", "push    edx", "push    edi", "call    dword ptr [eax+14h]", "pop     ecx", "pop     esi", "push    ebp; up", "push    edi; xdrs", "call    _xdr_u_int", "add     esp, 10h", "test    eax, eax", "jz      short loc_12E13"], ["push    eax", "push    eax", "mov     ecx, [esp+34h+position]", "mov     eax, [edi+4]", "push    ecx", "push    edi", "call    dword ptr [eax+14h]", "add     esp, 10h", "mov     eax, 1", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    eax", "push    eax", "push    objp_0; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      short loc_12E13"], ["push    ebp", "lea     eax, [objp_0+4]", "push    ebp", "push    eax; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jnz     short loc_12E20"], ["add     esp, 1Ch", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    ecx", "lea     eax, [objp_0+8]", "push    ecx", "push    eax; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jnz     loc_12D54"], ["jmp     short loc_12E13"]], "xdr_rpcbs_rmtcalllist": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+xdrs]", "mov     esi, [esp+0Ch+objp]", "mov     eax, [edi]", "test    eax, eax", "jnz     loc_12FA8"], ["push    ecx", "push    ecx", "mov     eax, [edi+4]", "push    18h", "push    edi", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    buf, buf", "jz      short loc_12F90"], ["mov     edx, [esi]", "bswap   edx", "mov     [eax], edx", "mov     edx, [esi+4]", "bswap   edx", "mov     [eax+4], edx", "mov     edx, [esi+8]", "bswap   edx", "mov     [eax+8], edx", "mov     edx, [esi+0Ch]", "bswap   edx", "mov     [eax+0Ch], edx", "mov     edx, [esi+10h]", "bswap   edx", "mov     [eax+10h], edx", "mov     edx, [esi+14h]", "bswap   edx", "mov     [eax+14h], edx"], ["push    edx", "lea     eax, [esi+18h]", "push    2328h; maxsize", "push    eax; cpp", "push    edi; xdrs", "call    _xdr_string", "add     esp, 10h", "test    eax, eax", "jz      short loc_12FA0"], ["mov     eax, ds:(xdr_rpcbs_rmtcalllist_ptr_0 - 2BB6Ch)[ebx]", "add     esi, 1Ch", "push    eax; xdr_obj", "push    20h ; ' '; obj_size", "push    esi; objpp", "push    edi; xdrs", "call    _xdr_pointer", "add     esp, 10h", "test    eax, eax", "setnz   al", "pop     ebx", "and     eax, 0FFh", "pop     esi", "pop     edi", "retn"], ["push    edx", "push    edx", "push    esi; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jnz     short loc_12FF0"], ["xor     eax, eax"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["dec     eax", "jnz     short loc_12F90"], ["push    eax", "push    eax", "mov     eax, [xdrs_0+4]", "push    18h", "push    xdrs_0", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    buf, buf", "jz      short loc_12F90"], ["mov     edx, [eax]", "bswap   edx", "mov     [objp_0], edx", "mov     edx, [eax+4]", "bswap   edx", "mov     [objp_0+4], edx", "mov     edx, [eax+8]", "bswap   edx", "mov     [objp_0+8], edx", "mov     edx, [eax+0Ch]", "bswap   edx", "mov     [objp_0+0Ch], edx", "mov     edx, [eax+10h]", "bswap   edx", "mov     [objp_0+10h], edx", "mov     eax, [eax+14h]", "bswap   eax", "mov     [objp_0+14h], eax", "jmp     loc_12F50"], ["push    eax", "push    eax", "lea     eax, [esi+4]", "push    eax; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      short loc_12FA0"], ["push    eax", "push    eax", "lea     eax, [esi+8]", "push    eax; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      short loc_12FA0"], ["push    eax", "push    eax", "lea     eax, [esi+0Ch]", "push    eax; ip", "push    edi; xdrs", "call    _xdr_int", "add     esp, 10h", "test    eax, eax", "jz      loc_12FA0"], ["push    eax", "push    eax", "lea     eax, [esi+10h]", "push    eax; ip", "push    edi; xdrs", "call    _xdr_int", "add     esp, 10h", "test    eax, eax", "jz      loc_12FA0"], ["push    ecx", "lea     eax, [esi+14h]", "push    ecx", "push    eax; ip", "push    edi; xdrs", "call    _xdr_int", "add     esp, 10h", "test    eax, eax", "jnz     loc_12F50"], ["xor     eax, eax", "jmp     loc_12FA2"]], "xdr_rpcbs_addrlist": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+xdrs]", "mov     esi, [esp+0Ch+objp]", "push    eax", "push    eax", "push    esi; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jnz     short loc_130A0"], ["xor     eax, eax"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    eax", "push    eax", "lea     eax, [esi+4]", "push    eax; u_int32_p", "push    edi; xdrs", "call    _xdr_u_int32_t", "add     esp, 10h", "test    eax, eax", "jz      short loc_13096"], ["push    eax", "push    eax", "lea     eax, [esi+8]", "push    eax; ip", "push    edi; xdrs", "call    _xdr_int", "add     esp, 10h", "test    eax, eax", "jz      short loc_13096"], ["push    ecx", "lea     eax, [esi+0Ch]", "push    ecx", "push    eax; ip", "push    edi; xdrs", "call    _xdr_int", "add     esp, 10h", "test    eax, eax", "jz      short loc_13096"], ["push    edx", "lea     eax, [esi+10h]", "push    2328h; maxsize", "push    eax; cpp", "push    edi; xdrs", "call    _xdr_string", "add     esp, 10h", "test    eax, eax", "jz      short loc_13096"], ["mov     eax, ds:(xdr_rpcbs_addrlist_ptr_0 - 2BB6Ch)[ebx]", "add     esi, 14h", "push    eax; xdr_obj", "push    18h; obj_size", "push    esi; objpp", "push    edi; xdrs", "call    _xdr_pointer", "add     esp, 10h", "test    eax, eax", "setnz   al", "and     eax, 0FFh", "jmp     short loc_13098"]], "xdr_rpcb_stat": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+xdrs]", "mov     esi, [esp+0Ch+objp]", "push    eax", "push    eax", "push    esi; objp", "push    edi; xdrs", "call    _xdr_rpcbs_proc", "add     esp, 10h", "test    eax, eax", "jnz     short loc_13210"], ["xor     eax, eax"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    eax", "push    eax", "lea     eax, [esi+34h]", "push    eax; ip", "push    edi; xdrs", "call    _xdr_int", "add     esp, 10h", "test    eax, eax", "jz      short loc_13206"], ["push    ecx", "lea     eax, [esi+38h]", "push    ecx", "push    eax; ip", "push    edi; xdrs", "call    _xdr_int", "add     esp, 10h", "test    eax, eax", "jz      short loc_13206"], ["push    edx", "lea     eax, [esi+3Ch]", "push    edx", "push    eax; objp", "push    edi; xdrs", "call    _xdr_rpcbs_addrlist_ptr", "add     esp, 10h", "test    eax, eax", "jz      short loc_13206"], ["push    eax", "add     esi, 40h ; '@'", "push    eax", "push    esi; objp", "push    edi; xdrs", "call    _xdr_rpcbs_rmtcalllist_ptr", "add     esp, 10h", "test    eax, eax", "setnz   al", "and     eax, 0FFh", "jmp     short loc_13208"]], "__xprt_do_unregister": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "test    xprt, xprt", "jz      loc_13400"], ["mov     ebp, xprt", "mov     edi, dolock", "mov     esi, [xprt]", "test    dolock, dolock", "jnz     short loc_132F8"], ["call    __rpc_dtablesize", "cmp     sock, eax", "jge     short loc_132EA"], ["mov     eax, ds:(__svc_xports - 2BB6Ch)[ebx]", "lea     eax, [eax+sock*4]", "cmp     xprt, [eax]", "jz      short loc_13340"], ["add     esp, 1Ch", "pop     ebx", "pop     sock", "pop     dolock", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     dolock, (svc_fd_lock - 2BB6Ch)[ebx]", "push    edx; rwlock", "mov     [esp+3Ch+rwlock], edx", "call    _pthread_rwlock_wrlock", "call    __rpc_dtablesize", "add     esp, 10h", "cmp     sock, eax", "mov     edx, [esp+2Ch+rwlock]", "jge     short loc_13328"], ["mov     eax, ds:(__svc_xports - 2BB6Ch)[ebx]", "lea     eax, [eax+sock*4]", "cmp     xprt, [eax]", "jz      short loc_13340"], ["sub     esp, 0Ch", "push    edx; rwlock", "call    _pthread_rwlock_unlock", "add     esp, 10h", "add     esp, 1Ch", "pop     ebx", "pop     sock", "pop     dolock", "pop     ebp", "retn"], ["mov     dword ptr [eax], 0", "cmp     sock, 3FFh", "jg      short loc_1338D"], ["sub     esp, 0Ch", "push    __d", "call    ___fdelt_chk", "mov     xprt, eax", "mov     eax, __d", "sar     eax, 1Fh", "mov     edx, ds:(svc_fdset_ptr - 2BB6Ch)[ebx]", "shr     eax, 1Bh", "add     esp, 10h", "lea     ecx, [__d+eax]", "and     ecx, 1Fh", "sub     ecx, eax", "mov     eax, 0FFFFFFFEh", "rol     eax, cl", "mov     ecx, [edx+ebp*4]", "and     ecx, eax", "mov     [edx+ebp*4], ecx", "mov     ecx, ds:(svc_maxfd_ptr - 2BB6Ch)[ebx]", "mov     eax, [ecx]", "cmp     eax, __d", "jle     short loc_133D0"], ["mov     eax, ds:(svc_max_pollfd_ptr - 2BB6Ch)[ebx]", "mov     edx, [eax]", "test    edx, edx", "jle     short loc_133B9"], ["mov     eax, ds:(svc_pollfd_ptr - 2BB6Ch)[ebx]", "mov     eax, [eax]", "lea     edx, [eax+edx*8]", "lea     sock, [sock+0]"], ["cmp     [eax], sock", "jnz     short loc_133B2"], ["mov     dword ptr [eax], 0FFFFFFFFh"], ["add     eax, 8", "cmp     eax, edx", "jnz     short loc_133A8"], ["test    dolock, dolock", "jz      loc_132EA"], ["lea     edx, (svc_fd_lock - 2BB6Ch)[ebx]", "jmp     loc_13328"], ["dec     eax", "mov     [ecx], eax", "js      short loc_1338D"], ["mov     ebp, ds:(__svc_xports - 2BB6Ch)[ebx]", "xor     edx, edx", "jmp     short loc_133E8"], ["dec     eax", "mov     dl, 1", "cmp     eax, 0FFFFFFFFh", "jz      short loc_133F8"], ["cmp     dword ptr [ebp+eax*4+0], 0", "jz      short loc_133E0"], ["test    dl, dl", "jz      short loc_1338D"], ["mov     [ecx], eax", "jmp     short loc_1338D"], ["mov     dword ptr [ecx], 0FFFFFFFFh", "jmp     short loc_1338D"], ["lea     xprt, (__PRETTY_FUNCTION___6709 - 2BB6Ch)[ebx]; \"__xprt_do_unregister\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_12 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc.c\"", "push    0A7h; line", "push    eax; file", "lea     eax, (aXprtNull - 2BB6Ch)[ebx]; \"xprt != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "svc_find": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     esi, ds:(svc_head - 2BB6Ch)[ebx]", "mov     [esp+2Ch+prev], prev_0", "test    s, s", "jz      short loc_13499"], ["mov     edi, prog", "xor     ebp, ebp", "jmp     short loc_13452"], ["mov     eax, [p]", "mov     ebp, p", "test    s, s", "jz      short loc_1348B"], ["mov     p, s"], ["cmp     [s+4], prog", "jnz     short loc_13448"], ["cmp     [s+8], vers_0", "jnz     short loc_13448"], ["mov     eax, [esp+2Ch+netid]", "mov     [esp+2Ch+vers], vers_0", "test    eax, eax", "jz      short loc_13487"], ["mov     eax, [s+0Ch]", "test    eax, eax", "jz      short loc_13487"], ["push    edx", "push    edx", "push    eax; s2", "mov     ecx, [esp+38h+netid]", "push    ecx; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "mov     edx, [esp+2Ch+vers]", "jnz     short loc_13448"], ["mov     eax, s", "mov     s, p"], ["mov     ecx, [esp+2Ch+prev]", "mov     [ecx], esi", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     prog, prog", "jmp     short loc_1348B"]], "xprt_register": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     edi, [esp+2Ch+xprt]", "test    edi, edi", "jz      loc_135F7"], ["sub     esp, 0Ch", "lea     ebp, (svc_fd_lock - 2BB6Ch)[ebx]", "mov     esi, [edi]", "push    ebp; rwlock", "call    _pthread_rwlock_wrlock", "mov     ecx, ds:(__svc_xports - 2BB6Ch)[ebx]", "add     esp, 10h", "test    ecx, ecx", "jz      loc_13590"], ["call    __rpc_dtablesize", "cmp     eax, sock", "jle     unlock"], ["mov     eax, ds:(__svc_xports - 2BB6Ch)[ebx]", "cmp     sock, 3FFh", "mov     [eax+sock*4], edi", "jg      short loc_13543"], ["sub     esp, 0Ch", "push    __d", "call    ___fdelt_chk", "mov     edi, eax", "mov     eax, __d", "sar     eax, 1Fh", "mov     edx, ds:(svc_fdset_ptr - 2BB6Ch)[ebx]", "shr     eax, 1Bh", "add     esp, 10h", "lea     ecx, [__d+eax]", "and     ecx, 1Fh", "sub     ecx, eax", "mov     eax, 1", "shl     eax, cl", "mov     ecx, [edx+edi*4]", "or      ecx, eax", "mov     [edx+edi*4], ecx", "mov     edx, ds:(svc_maxfd_ptr - 2BB6Ch)[ebx]", "mov     eax, [edx]", "cmp     eax, __d", "jl      loc_135F0"], ["mov     [edx], eax"], ["mov     eax, ds:(svc_pollfd_ptr - 2BB6Ch)[ebx]", "mov     edi, ds:(svc_max_pollfd_ptr - 2BB6Ch)[ebx]", "mov     [esp+2Ch+new_svc_pollfd], eax", "mov     ecx, [edi]", "mov     eax, [eax]", "mov     [esp+2Ch+ptr], eax", "test    ecx, ecx", "jle     short loc_135B8"], ["xor     edx, edx", "jmp     short loc_13570"], ["inc     i", "add     eax, 8", "cmp     ecx, i", "jz      short loc_135B8"], ["cmp     dword ptr [eax], 0FFFFFFFFh", "jnz     short loc_13568"], ["mov     [eax], sock", "mov     word ptr [eax+4], 0C3h"], ["sub     esp, 0Ch", "push    ebp; rwlock", "call    _pthread_rwlock_unlock", "add     esp, 2Ch", "pop     ebx", "pop     sock", "pop     edi", "pop     ebp", "retn"], ["call    __rpc_dtablesize", "push    edx", "push    edx", "push    4; size", "push    eax; nmemb", "call    _calloc", "add     esp, 10h", "mov     ds:(__svc_xports - 2BB6Ch)[ebx], eax", "test    eax, eax", "jnz     loc_134E0"], ["jmp     short unlock"], ["push    eax", "push    eax", "lea     eax, ds:8[ecx*8]", "push    eax; size", "mov     edx, [esp+38h+ptr]", "push    edx; ptr", "call    _realloc", "add     esp, 10h", "test    new_svc_pollfd_0, new_svc_pollfd_0", "jz      short unlock"], ["mov     edx, [edi]", "mov     ecx, [esp+2Ch+new_svc_pollfd]", "mov     [ecx], new_svc_pollfd_0", "lea     new_svc_pollfd_0, [new_svc_pollfd_0+edx*8]", "lea     ecx, [edx+1]", "mov     [edi], ecx", "mov     [eax], sock", "mov     word ptr [eax+4], 0C3h", "jmp     short unlock"], ["mov     eax, __d", "jmp     loc_13541"], ["lea     eax, (__PRETTY_FUNCTION___6689 - 2BB6Ch)[ebx]; \"xprt_register\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_12 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc.c\"", "push    60h ; '`'; line", "push    eax; file", "lea     eax, (aXprtNull - 2BB6Ch)[ebx]; \"xprt != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "svc_reg": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, [esp+3Ch+dispatch]", "mov     edi, [esp+3Ch+xprt]", "mov     [esp+3Ch+var_38], eax", "mov     ebp, [esp+3Ch+nconf]", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     eax, [edi+34h]", "test    eax, eax", "jz      short loc_136A8"], ["sub     esp, 0Ch", "push    eax; s", "call    _strdup", "mov     esi, eax", "add     esp, 10h", "xor     netid, netid", "test    netid, netid", "jnz     short loc_136F8"], ["mov     ecx, [esp+3Ch+var_20]", "xor     ecx, large gs:14h", "jnz     loc_1386B"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["test    ebp, ebp", "jz      short loc_136B3"], ["mov     eax, [ebp+0]", "test    eax, eax", "jnz     short loc_13675"], ["sub     esp, 0Ch", "mov     eax, [edi]", "push    eax; fd", "call    ___rpcgettp", "add     esp, 10h", "mov     edx, eax", "test    tnconf_0, tnconf_0", "jz      loc_13768"], ["sub     esp, 0Ch", "mov     tnconf_0, [tnconf_0]", "push    eax; s", "mov     [esp+4Ch+tnconf], tnconf_0", "call    _strdup", "mov     edx, [esp+4Ch+tnconf]", "mov     esi, eax", "mov     [esp+4Ch+netconfigp], edx; netconfigp", "call    _freenetconfigent", "add     esp, 10h", "xor     eax, eax", "test    netid, netid", "jz      short loc_13689"], ["lea     netid, [netid+0]"], ["sub     esp, 0Ch", "lea     eax, (svc_lock - 2BB6Ch)[ebx]", "mov     [esp+48h+tnconf], eax", "push    eax; rwlock", "call    _pthread_rwlock_wrlock", "mov     edx, [esp+4Ch+vers]; vers", "lea     ecx, [esp+4Ch+prev]; prev", "mov     eax, [esp+4Ch+prog]; prog", "mov     [esp+4Ch+netconfigp], netid; netid", "call    svc_find", "add     esp, 10h", "test    s_0, s_0", "jz      loc_13818"], ["mov     [esp+3Ch+s], s_0", "sub     esp, 0Ch", "push    netid; ptr", "call    _free", "add     esp, 10h", "mov     eax, [esp+3Ch+s]"], ["mov     edx, [esp+3Ch+var_38]", "cmp     [eax+10h], edx", "jz      rpcb_it"], ["sub     esp, 0Ch", "mov     eax, [esp+48h+tnconf]", "push    eax; rwlock", "call    _pthread_rwlock_unlock", "add     esp, 10h", "xor     eax, eax", "jmp     loc_13689"], ["sub     esp, 0Ch", "lea     tnconf_0, (svc_lock - 2BB6Ch)[ebx]", "mov     [esp+48h+tnconf], eax", "push    eax; rwlock", "call    _pthread_rwlock_wrlock", "mov     edx, [esp+4Ch+vers]; vers", "lea     ecx, [esp+4Ch+prev]; prev", "mov     eax, [esp+4Ch+prog]; prog", "mov     [esp+4Ch+netconfigp], 0; netid", "call    svc_find", "add     esp, 10h", "test    s_0, s_0", "jnz     short loc_1373E"], ["push    eax", "push    eax", "push    14h; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "test    s_0, s_0", "jz      short loc_1374B"], ["mov     esi, [esp+3Ch+prog]", "mov     edx, ds:(svc_head - 2BB6Ch)[ebx]", "mov     [s_0+4], esi", "mov     esi, [esp+3Ch+vers]", "mov     [s_0+8], esi", "mov     esi, [esp+3Ch+var_38]", "mov     [s_0+10h], esi", "mov     dword ptr [s_0+0Ch], 0", "mov     [s_0], edx", "mov     ds:(svc_head - 2BB6Ch)[ebx], s_0", "xchg    ax, ax"], ["sub     esp, 0Ch", "mov     esi, [esp+48h+tnconf]", "push    esi; rwlock", "call    _pthread_rwlock_unlock", "add     esp, 10h", "mov     eax, 1", "test    ebp, ebp", "jz      loc_13689"], ["add     edi, 38h ; '8'", "push    edi; address", "push    ebp; nconf", "mov     edx, [esp+44h+vers]", "push    edx; version", "mov     ecx, [esp+48h+prog]", "push    ecx; program", "call    _rpcb_set", "add     esp, 10h", "jmp     loc_13689"], ["push    eax", "push    eax", "push    14h; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "test    s_0, s_0", "jz      short loc_13870"], ["mov     ecx, [esp+3Ch+prog]", "mov     edx, [esp+3Ch+vers]", "mov     [s_0+4], ecx", "mov     [s_0+8], edx", "mov     ecx, [esp+3Ch+var_38]", "mov     edx, ds:(svc_head - 2BB6Ch)[ebx]", "mov     [s_0+10h], ecx", "mov     [s_0+0Ch], netid", "mov     [s_0], edx", "mov     ds:(svc_head - 2BB6Ch)[ebx], s_0", "mov     s_0, [edi+34h]", "test    eax, eax", "jnz     short rpcb_it"], ["sub     esp, 0Ch", "push    netid; s", "call    _strdup", "add     esp, 10h", "mov     [edi+34h], eax", "jmp     rpcb_it"], ["call    __stack_chk_fail_local"], ["sub     esp, 0Ch", "push    netid; ptr", "call    _free", "add     esp, 10h", "jmp     loc_1374B"]], "svc_unreg": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 30h", "mov     eax, large gs:14h", "mov     [esp+40h+var_20], eax", "xor     eax, eax", "mov     esi, [esp+40h+prog]", "mov     edi, [esp+40h+vers]", "push    0; nconf", "push    edi; version", "push    esi; program", "call    _rpcb_unset", "lea     eax, (svc_lock - 2BB6Ch)[ebx]", "mov     [esp+4Ch+var_30], eax", "mov     [esp+4Ch+rwlock], eax; rwlock", "call    _pthread_rwlock_wrlock", "add     esp, 10h", "lea     ebp, [esp+3Ch+prev]", "jmp     short loc_13909"], ["mov     [edx], ecx"], ["mov     edx, [s_0+0Ch]", "test    edx, edx", "jz      short loc_138FD"], ["mov     [esp+3Ch+s], s_0", "sub     esp, 0Ch", "push    edx; ptr", "call    _free", "add     esp, 10h", "mov     eax, [esp+3Ch+s]"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "mov     ecx, ebp; prev", "mov     edx, edi; vers", "mov     eax, esi; prog", "push    0; netid", "call    svc_find", "add     esp, 10h", "test    s_0, s_0", "jz      short loc_13938"], ["mov     edx, [esp+3Ch+prev]", "mov     ecx, [s_0]", "test    edx, edx", "jnz     short loc_138E0"], ["mov     ds:(svc_head - 2BB6Ch)[ebx], ecx", "jmp     short loc_138E2"], ["sub     esp, 0Ch", "mov     s_0, [esp+48h+var_30]", "push    eax; rwlock", "call    _pthread_rwlock_unlock", "add     esp, 10h", "mov     eax, [esp+3Ch+var_20]", "xor     eax, large gs:14h", "jnz     short loc_1395D"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["call    __stack_chk_fail_local"]], "svc_register": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     edi, [esp+1Ch+xprt]", "mov     esi, [esp+1Ch+dispatch]", "test    edi, edi", "jz      loc_13A65"], ["test    esi, esi", "jz      loc_13A46"], ["lea     ecx, [esp+1Ch+prev]; prev", "sub     esp, 0Ch", "push    0; netid", "mov     edx, [esp+2Ch+vers]; vers", "mov     eax, [esp+2Ch+prog]; prog", "call    svc_find", "add     esp, 10h", "test    s, s", "jz      short loc_139E8"], ["cmp     [s+10h], esi", "jz      short pmap_it"], ["xor     s, s"], ["mov     edx, [esp+1Ch+var_10]", "xor     edx, large gs:14h", "jnz     loc_13A84"], ["add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    eax", "push    eax", "push    14h; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "test    s, s", "jz      short loc_139C7"], ["mov     edx, [esp+1Ch+prog]", "mov     [s+10h], esi", "mov     [s+4], edx", "mov     edx, [esp+1Ch+vers]", "mov     [s+8], edx", "mov     edx, ds:(svc_head - 2BB6Ch)[ebx]", "mov     [s], edx", "mov     ds:(svc_head - 2BB6Ch)[ebx], s"], ["mov     esi, [esp+1Ch+protocol]", "mov     s, 1", "test    esi, esi", "jz      short loc_139C9"], ["xor     eax, eax", "mov     ax, [edi+4]", "push    eax; port", "mov     eax, [esp+20h+protocol]", "push    eax; protocol", "mov     edx, [esp+24h+vers]", "push    edx; vers", "mov     ecx, [esp+28h+prog]", "push    ecx; program", "call    _pmap_set", "add     esp, 10h", "jmp     short loc_139C9"], ["lea     eax, (__PRETTY_FUNCTION___6755 - 2BB6Ch)[ebx]; \"svc_register\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_12 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc.c\"", "push    14Dh; line", "push    eax; file", "lea     eax, (unk_1E0D0 - 2BB6Ch)[ebx]", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___6755 - 2BB6Ch)[ebx]; \"svc_register\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_12 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc.c\"", "push    14Ch; line", "push    eax; file", "lea     eax, (aXprtNull - 2BB6Ch)[ebx]; \"xprt != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["call    __stack_chk_fail_local"]], "svc_unregister": [["push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 18h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "lea     ecx, [esp+1Ch+prev]; prev", "sub     esp, 0Ch", "push    0; netid", "mov     edx, [esp+2Ch+vers]; vers", "mov     eax, [esp+2Ch+prog]; prog", "call    svc_find", "add     esp, 10h", "test    s, s", "jz      short loc_13AF1"], ["mov     edx, [esp+1Ch+prev]", "mov     ecx, [s]", "test    edx, edx", "jz      short loc_13B08"], ["mov     [edx], ecx"], ["sub     esp, 0Ch", "push    s; ptr", "call    _free", "pop     eax", "pop     edx", "mov     ecx, [esp+24h+vers]", "push    ecx; vers", "mov     eax, [esp+28h+prog]", "push    eax; program", "call    _pmap_unset", "add     esp, 10h"], ["mov     eax, [esp+1Ch+var_10]", "xor     eax, large gs:14h", "jnz     short loc_13B10"], ["add     esp, 18h", "pop     ebx", "retn"], ["mov     ds:(svc_head - 2BB6Ch)[ebx], ecx", "jmp     short loc_13AD4"], ["call    __stack_chk_fail_local"]], "svc_getreq_common": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "mov     ebx, edi", "sub     esp, 53Ch", "mov     eax, large gs:14h", "mov     [esp+54Ch+var_20], eax", "xor     eax, eax", "lea     esi, (svc_fd_lock - 2BB6Ch)[edi]", "lea     eax, [esp+54Ch+cred_area]", "mov     dword ptr [esp+54Ch+msg.ru+14h], eax", "lea     eax, [esp+54Ch+cred_area+190h]", "mov     dword ptr [esp+54Ch+msg.ru+20h], eax", "lea     eax, [esp+54Ch+cred_area+320h]", "mov     [esp+54Ch+r.rq_clntcred], eax", "sub     esp, 0Ch", "mov     [esp+558h+var_544], esi", "push    esi; rwlock", "call    _pthread_rwlock_rdlock", "mov     eax, [esp+55Ch+fd]", "shl     eax, 2", "mov     ecx, eax", "mov     [esp+55Ch+var_538], eax", "mov     eax, ds:(__svc_xports - 2BB6Ch)[edi]", "mov     ebp, [eax+ecx]", "mov     [esp+55Ch+rwlock], esi; rwlock", "call    _pthread_rwlock_unlock", "add     esp, 10h", "test    xprt, xprt", "jz      loc_141C8"], ["lea     esi, [esp+54Ch+msg]", "jmp     loc_140EA"], ["mov     eax, dword ptr [esp+54Ch+msg.ru+4]", "mov     [esp+54Ch+r.rq_xprt], xprt", "mov     [esp+54Ch+r.rq_prog], eax", "mov     eax, dword ptr [esp+54Ch+msg.ru+8]", "mov     [esp+54Ch+r.rq_vers], eax", "mov     eax, dword ptr [esp+54Ch+msg.ru+0Ch]", "mov     [esp+54Ch+r.rq_proc], eax", "mov     eax, dword ptr [esp+54Ch+msg.ru+10h]", "mov     [esp+54Ch+r.rq_cred.oa_flavor], eax", "mov     eax, dword ptr [esp+54Ch+msg.ru+14h]", "mov     [esp+54Ch+r.rq_cred.oa_base], eax", "mov     eax, dword ptr [esp+54Ch+msg.ru+18h]", "mov     [esp+54Ch+r.rq_cred.oa_length], eax", "push    ecx", "mov     ebx, edi", "lea     eax, [esp+550h+no_dispatch]", "push    eax; no_dispatch", "push    esi; msg", "lea     eax, [esp+558h+r]", "mov     [esp+558h+var_534], eax", "push    eax; rqst", "call    __gss_authenticate", "add     esp, 10h", "test    why, why", "jnz     loc_141E8"], ["mov     ecx, [esp+54Ch+no_dispatch]", "test    ecx, ecx", "jz      short loc_14138"], ["sub     esp, 0Ch", "mov     eax, [xprt+8]", "push    xprt", "call    dword ptr [eax+4]", "add     esp, 10h", "test    stat, stat", "jz      loc_14230"], ["dec     stat", "jnz     loc_141C8"], ["push    ebx", "push    ebx", "mov     eax, [xprt+8]", "push    esi", "push    xprt", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jnz     loc_14070"], ["sub     esp, 0Ch", "mov     ebx, edi", "mov     ecx, [esp+558h+var_544]", "push    ecx; rwlock", "call    _pthread_rwlock_rdlock", "mov     eax, ds:(__svc_xports - 2BB6Ch)[edi]", "mov     ebx, [esp+55Ch+var_538]", "add     esp, 10h", "cmp     [eax+ebx], xprt", "jnz     loc_141B6"], ["sub     esp, 0Ch", "mov     ebx, edi", "mov     eax, [esp+558h+var_544]", "push    eax; rwlock", "call    _pthread_rwlock_unlock", "add     esp, 10h", "jmp     short call_done"], ["mov     edx, ds:(svc_head - 2BB6Ch)[edi]", "test    s, s", "jz      loc_14200"], ["mov     ebx, [esp+54Ch+r.rq_prog]", "mov     [esp+54Ch+low_vers], 0FFFFFFFFh", "mov     [esp+54Ch+var_530], ebx", "mov     ebx, [esp+54Ch+r.rq_vers]", "mov     [esp+54Ch+var_53C], ebx", "mov     ebx, [esp+54Ch+var_530]", "jmp     short loc_1416E"], ["mov     s, [s]", "test    s, s", "jz      short loc_1419B"], ["cmp     [s+4], ebx", "jnz     short loc_14168"], ["mov     prog_found, [s+8]", "cmp     ecx, [esp+54Ch+var_53C]", "jz      loc_14218"], ["cmp     [esp+54Ch+low_vers], ecx", "jbe     short loc_1418A"], ["mov     [esp+54Ch+low_vers], ecx"], ["cmp     high_vers_0, ecx", "jnb     short loc_14190"], ["mov     high_vers_0, ecx"], ["mov     s, [s]", "mov     ecx, 1", "test    s, s", "jnz     short loc_1416E"], ["test    prog_found, prog_found", "jz      short loc_14200"], ["push    ebx", "mov     ebx, edi", "push    high_vers_0; high_vers", "mov     high_vers_0, [esp+554h+low_vers]", "push    eax; low_vers", "push    xprt; xprt", "call    _svcerr_progvers", "add     esp, 10h", "jmp     loc_140FE"], ["sub     esp, 0Ch", "mov     ebx, edi", "mov     edx, [esp+558h+var_544]", "push    edx; rwlock", "call    _pthread_rwlock_unlock", "add     esp, 10h"], ["mov     eax, [esp+54Ch+var_20]", "xor     eax, large gs:14h", "jnz     short loc_1423F"], ["add     esp, 53Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     xprt", "retn"], ["push    edx", "push    edx", "push    why; why", "push    xprt; xprt", "call    _svcerr_auth", "add     esp, 10h", "jmp     call_done"], ["sub     esp, 0Ch", "mov     ebx, edi", "push    xprt; xprt", "call    _svcerr_noprog", "add     esp, 10h", "jmp     loc_140FE"], ["push    eax", "push    eax", "push    xprt", "mov     eax, [esp+558h+var_534]", "push    eax", "call    dword ptr [s+10h]", "add     esp, 10h", "jmp     call_done"], ["sub     esp, 0Ch", "mov     stat, [xprt+8]", "push    xprt", "call    dword ptr [eax+14h]", "add     esp, 10h", "jmp     short loc_141C8"], ["call    __stack_chk_fail_local"]], "svc_getreqset": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     esi, [esp+2Ch+readfds]", "test    esi, esi", "jz      loc_142F8"], ["call    __rpc_dtablesize", "mov     [esp+2Ch+setsize], setsize_0", "cmp     setsize_0, 400h", "jg      short loc_142EE"], ["mov     [esp+2Ch+maskp], esi", "test    eax, eax", "jle     short loc_142E6"], ["xor     edi, edi"], ["mov     eax, [esp+2Ch+maskp]", "add     eax, 4", "mov     [esp+2Ch+maskp], eax", "mov     eax, [esp+2Ch+maskp]", "mov     esi, [maskp_0-4]", "xor     maskp_0, maskp_0", "bsf     ebp, mask", "setz    al", "neg     eax", "or      ebp, eax", "inc     ebp", "jz      short loc_142DD"], ["lea     mask, [mask+0]"], ["sub     esp, 0Ch", "lea     eax, [bit+sock-1]", "push    fd; fd", "call    _svc_getreq_common", "lea     ecx, [bit-1]", "mov     eax, 1", "shl     eax, cl", "xor     mask, eax", "xor     eax, eax", "bsf     bit, mask", "setz    al", "neg     eax", "or      ebp, eax", "add     esp, 10h", "inc     ebp", "test    bit, bit", "jnz     short loc_142B0"], ["add     sock, 20h ; ' '", "cmp     [esp+2Ch+setsize], sock", "jg      short loc_14288"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     [esp+2Ch+setsize], 400h", "jmp     short loc_1427E"], ["lea     eax, (__PRETTY_FUNCTION___6834 - 2BB6Ch)[ebx]; \"svc_getreqset\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_12 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc.c\"", "push    282h; line", "push    eax; file", "lea     eax, (aReadfdsNull - 2BB6Ch)[ebx]; \"readfds != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "svc_getreq_poll": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     edi, ds:(svc_max_pollfd_ptr - 2BB6Ch)[ebx]", "mov     ebp, [esp+2Ch+pfdp]", "mov     ecx, [edi]", "test    ecx, ecx", "jle     short loc_14418"], ["xor     esi, esi", "mov     [esp+2Ch+fds_found], 0", "jmp     short loc_143ED"], ["mov     ecx, ds:(__svc_xports - 2BB6Ch)[ebx]", "sub     esp, 0Ch", "mov     edx, [ecx+eax*4]", "push    edx; xprt", "call    _xprt_unregister", "add     esp, 10h"], ["mov     eax, [esp+2Ch+fds_found]", "inc     eax", "mov     [esp+2Ch+fds_found], eax", "mov     eax, [esp+2Ch+fds_found]", "cmp     fds_found_0, [esp+2Ch+pollretval]", "jge     short loc_14418"], ["inc     i", "cmp     [edi], i", "jle     short loc_14418"], ["mov     eax, [ebp+i*8+0]", "cmp     eax, 0FFFFFFFFh", "jz      short loc_143E8"], ["mov     cx, [ebp+i*8+6]", "test    cx, cx", "jz      short loc_143E8"], ["and     ecx, 20h", "jnz     short loc_143C0"], ["sub     esp, 0Ch", "push    eax; fd", "call    _svc_getreq_common", "add     esp, 10h", "jmp     short loc_143D5"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "rpc_control": [["mov     eax, [esp+what]", "call    __x86_get_pc_thunk_dx", "add     edx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "test    eax, eax", "jz      short loc_14458"], ["dec     eax", "jnz     short loc_14450"], ["lea     eax, (__svc_maxrec - 2BB6Ch)[edx]", "mov     ecx, [esp+arg]", "mov     eax, [eax]", "mov     [ecx], eax", "mov     eax, 1", "retn"], ["xor     eax, eax", "retn"], ["mov     what_0, [esp+arg]", "mov     eax, [eax]", "test    val, val", "jle     short loc_14450"], ["lea     edx, (__svc_maxrec - 2BB6Ch)[edx]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2BB6Ch)[edx], val", "mov     val, 1", "retn"]], "_gss_authenticate": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     ecx, ds:(svc_auth_none_ptr - 2BB6Ch)[ebx]", "mov     ebp, [esp+2Ch+msg]", "mov     edi, [esp+2Ch+rqst]", "mov     ecx, [ecx]", "mov     eax, [ebp+18h]", "mov     [edi+0Ch], eax", "mov     eax, [ebp+1Ch]", "mov     [edi+10h], eax", "mov     eax, [ebp+20h]", "mov     [edi+14h], eax", "mov     eax, [edi+1Ch]", "mov     esi, [edi+0Ch]", "mov     edx, [eax+64h]", "cmp     esi, 2", "mov     [edx+4], ecx", "mov     dword ptr [edx+8], 0", "mov     edx, ds:(_null_auth_ptr - 2BB6Ch)[ebx]", "mov     dword ptr [eax+58h], 0", "mov     edx, [edx]", "mov     [eax+50h], edx", "mov     eax, [esp+2Ch+no_dispatch]", "mov     dword ptr [eax], 0", "jz      loc_145A8"], ["jg      short loc_14508"], ["test    cred_flavor, cred_flavor", "jz      loc_14590"], ["cmp     cred_flavor, 1", "jnz     short loc_14512"], ["push    esi", "push    esi", "push    ebp; msg", "push    edi; rqst", "call    __svcauth_unix", "add     esp, 10h", "mov     edx, eax"], ["add     esp, 1Ch", "mov     eax, edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edx, 7", "cmp     cred_flavor, 3", "jz      short loc_144F9"], ["sub     esp, 0Ch", "lea     ecx, (authsvc_lock - 2BB6Ch)[ebx]", "push    ecx; mutex", "mov     [esp+3Ch+as], ecx", "call    _pthread_mutex_lock", "mov     eax, ds:(Auths - 2BB6Ch)[ebx]", "add     esp, 10h", "test    asp, asp", "mov     ecx, [esp+2Ch+as]", "jnz     short loc_1455F"], ["sub     esp, 0Ch", "push    ecx; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "mov     edx, 2", "add     esp, 1Ch", "mov     eax, edx", "pop     ebx", "pop     cred_flavor", "pop     edi", "pop     ebp", "retn"], ["mov     asp, [asp+8]", "test    asp, asp", "jz      short loc_14536"], ["cmp     [asp], cred_flavor", "jnz     short loc_14558"], ["mov     [esp+2Ch+var_20], ecx", "push    edx", "push    edx", "push    ebp", "push    edi", "call    dword ptr [asp+4]", "mov     ecx, [esp+3Ch+var_20]", "mov     [esp+3Ch+as], eax", "mov     [esp+3Ch+mutex], ecx; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "mov     edx, [esp+2Ch+as]", "jmp     loc_144F9"], ["push    eax", "push    eax", "push    ebp; msg", "push    edi; rqst", "call    __svcauth_none", "add     esp, 10h", "mov     edx, eax", "add     esp, 1Ch", "mov     dummy, edx", "pop     ebx", "pop     cred_flavor", "pop     edi", "pop     ebp", "retn"], ["push    ecx", "push    ecx", "push    ebp; msg", "push    edi; rqst", "call    __svcauth_short", "add     esp, 10h", "mov     edx, eax", "add     esp, 1Ch", "mov     dummy, edx", "pop     ebx", "pop     cred_flavor", "pop     edi", "pop     ebp", "retn"]], "svc_auth_reg": [["push    ebp", "or      eax, 0FFFFFFFFh", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     esi, [esp+1Ch+cred_flavor]", "cmp     esi, 3", "ja      short loc_14638"], ["add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     edi, (authsvc_lock - 2BB6Ch)[ebx]", "push    edi; mutex", "call    _pthread_mutex_lock", "mov     ebp, ds:(Auths - 2BB6Ch)[ebx]", "add     esp, 10h", "test    asp, asp", "jz      short loc_14680"], ["mov     eax, asp", "jmp     short loc_1465F"], ["mov     asp, [asp+8]", "test    asp, asp", "jz      short loc_14680"], ["cmp     [asp], esi", "jnz     short loc_14658"], ["sub     esp, 0Ch", "push    edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "mov     eax, 1", "add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    eax", "push    eax", "push    0Ch; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "test    asp, asp", "jz      short loc_146BA"], ["mov     edx, [esp+1Ch+handler]", "sub     esp, 0Ch", "mov     [asp], esi", "mov     [asp+8], ebp", "mov     [asp+4], edx", "push    edi; mutex", "mov     ds:(Auths - 2BB6Ch)[ebx], asp", "call    _pthread_mutex_unlock", "add     esp, 10h", "xor     eax, eax", "add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "or      eax, 0FFFFFFFFh", "jmp     loc_1462E"]], "svc_dg_destroy": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 18h", "mov     esi, [esp+28h+xprt]", "mov     ebp, [esi+64h]", "mov     edi, [esi+60h]", "push    esi; xprt", "call    _xprt_unregister", "mov     eax, [esi]", "add     esp, 10h", "cmp     eax, 0FFFFFFFFh", "jz      short loc_14788"], ["sub     esp, 0Ch", "push    eax; fd", "call    _close", "add     esp, 10h"], ["mov     eax, [su+0Ch]", "mov     eax, [eax+1Ch]", "test    eax, eax", "jz      short loc_1479E"], ["sub     esp, 0Ch", "lea     edx, [su+8]", "push    edx", "call    eax", "add     esp, 10h"], ["sub     esp, 0Ch", "mov     eax, [esi+5Ch]", "push    eax; ptr", "call    _free", "mov     [esp+2Ch+ptr], su; ptr", "call    _free", "mov     [esp+2Ch+ptr], ext; ptr", "call    _free", "mov     eax, [esi+4Ch]", "add     esp, 10h", "test    eax, eax", "jz      short loc_147D0"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["mov     eax, [esi+40h]", "test    eax, eax", "jz      short loc_147E3"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["mov     eax, [esi+30h]", "test    eax, eax", "jz      short loc_147F6"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "push    esi; ptr", "call    _free", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     su", "pop     ext", "retn"]], "svc_dg_reply": [["push    ebp", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 3Ch", "mov     ebp, [esp+4Ch+xprt]", "mov     [esp+4Ch+var_4C], ecx", "mov     ebx, [esp+4Ch+msg]", "mov     eax, large gs:14h", "mov     [esp+4Ch+var_20], eax", "xor     eax, eax", "mov     esi, [ebp+60h]", "mov     edx, [ebx+8]", "mov     eax, [su+0Ch]", "lea     edi, [su+8]", "test    edx, edx", "mov     eax, [eax+14h]", "jnz     loc_148E0"], ["mov     edx, [ebx+18h]", "test    edx, edx", "jnz     loc_148E0"], ["mov     edx, [ebx+20h]", "mov     ecx, ds:(xdr_void_ptr - 2BB6Ch)[ecx]", "mov     [esp+4Ch+xdr_results], edx", "mov     xdr_results_0, [ebx+1Ch]", "mov     [esp+4Ch+xdr_location], edx", "mov     [ebx+20h], ecx", "mov     dword ptr [ebx+1Ch], 0", "mov     dword ptr [su+8], 0", "push    ecx", "push    ecx", "push    0", "push    xdrs", "call    eax", "mov     eax, [su+4]", "mov     [ebx], eax", "pop     eax", "pop     edx", "push    ebx; rmsg", "push    xdrs; xdrs", "mov     ebx, [esp+5Ch+var_4C]", "call    _xdr_replymsg", "add     esp, 10h", "test    eax, eax", "mov     edx, [esp+4Ch+xdr_location]", "jz      short loc_148BD"], ["mov     eax, [ebp+64h]", "add     eax, 4", "mov     ecx, [eax]", "push    edx", "mov     edx, [esp+50h+xdr_results]", "push    edx", "push    xdrs", "push    eax", "call    ds:(_GLOBAL_OFFSET_TABLE_ - 2BB6Ch)[ecx]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_14907"], ["xor     xdrs, xdrs"], ["mov     eax, [esp+4Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_14C35"], ["add     esp, 3Ch", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     dword ptr [su+8], 0", "push    edx", "push    edx", "push    0", "push    xdrs", "call    eax", "mov     eax, [su+4]", "mov     [ebx], eax", "pop     ecx", "pop     eax", "push    ebx; rmsg", "push    xdrs; xdrs", "mov     ebx, [esp+5Ch+var_4C]", "call    _xdr_replymsg", "add     esp, 10h", "test    eax, eax", "jz      short loc_148BD"], ["mov     eax, [ebp+5Ch]", "sub     esp, 0Ch", "mov     [esp+58h+iov.iov_base], eax", "mov     eax, [su+0Ch]", "push    xdrs", "xor     xdrs, xdrs", "call    dword ptr [eax+10h]", "mov     dword ptr [su+1C0h], 1", "mov     [esp+5Ch+xdr_results], slen_0", "mov     [esp+5Ch+iov.iov_len], slen_0", "lea     slen_0, [esp+5Ch+iov]", "add     esp, 0Ch", "mov     [su+1BCh], eax", "mov     eax, [ebp+4Ch]", "mov     [su+1B4h], eax", "mov     eax, [ebp+48h]", "mov     [su+1B8h], eax", "push    0; flags", "lea     eax, [su+1B4h]", "push    msg_0; message", "mov     msg_0, [ebp+0]", "push    eax; fd", "mov     ebx, [esp+5Ch+var_4C]", "call    _sendmsg", "add     esp, 10h", "cmp     eax, [esp+4Ch+xdr_results]", "jnz     loc_148BF"], ["mov     eax, [su+1B0h]", "mov     edi, 1", "test    eax, eax", "jz      loc_148BF"], ["mov     eax, [ebp+60h]", "sub     esp, 0Ch", "mov     [esp+58h+var_40], eax", "mov     su, [eax+1B0h]", "mov     [esp+58h+xdr_location], esi", "mov     ebx, [esp+58h+var_4C]", "lea     eax, [ebx+78Ch]", "mov     [esp+58h+mutex], eax", "push    eax; mutex", "call    _pthread_mutex_lock", "mov     edx, [esi+0Ch]", "mov     eax, [esi+8]", "add     esp, 10h", "mov     ecx, [eax+edx*4]", "test    ecx, ecx", "jz      loc_14B58"], ["mov     eax, [ebp+60h]", "xor     edx, edx", "mov     eax, [eax+1B0h]", "mov     ebx, [eax]", "mov     eax, ds:(_GLOBAL_OFFSET_TABLE_ - 2BB6Ch)[ecx]", "shl     ebx, 2", "div     ebx", "mov     eax, [esi+4]", "lea     edx, [eax+edx*4]", "mov     eax, [edx]", "test    eax, eax", "jnz     short loc_149F3"], ["jmp     loc_14BD8"], ["lea     edx, [esi+24h]", "test    eax, eax", "jz      loc_14BD8"], ["mov     esi, eax", "mov     eax, [eax+24h]", "cmp     ecx, esi", "jnz     short loc_149E8"], ["mov     [edx], eax", "mov     ecx, [esi+1Ch]"], ["mov     eax, [esp+4Ch+var_4C]", "lea     edi, [eax+97Ch]", "cmp     dword ptr [edi], 3", "jg      loc_14AD8"], ["mov     eax, [esp+4Ch+xdr_results]", "mov     [esi+20h], eax", "mov     eax, [ebp+5Ch]", "mov     [esi+1Ch], eax", "mov     [ebp+5Ch], ecx", "push    0; xop", "mov     edi, [esp+50h+var_40]", "mov     eax, [edi]", "push    eax; size", "lea     eax, [edi+8]", "push    ecx; addr", "push    eax; xdrs", "mov     ebx, [esp+5Ch+var_4C]", "call    _xdrmem_create", "mov     eax, [edi+4]", "mov     edi, [esp+5Ch+xdr_location]", "mov     [esi], eax", "mov     eax, [edi+18h]", "mov     [esi+4], eax", "mov     eax, [edi+14h]", "mov     [esi+8], eax", "mov     eax, [edi+10h]", "mov     [esi+0Ch], eax", "mov     eax, [ebp+44h]", "mov     [esi+10h], eax", "mov     eax, [ebp+48h]", "mov     [esi+14h], eax", "mov     eax, [ebp+4Ch]", "mov     [esi+18h], eax", "mov     edi, [ebp+48h]", "pop     edx", "pop     ecx", "push    edi; size", "push    1; nmemb", "call    _calloc", "add     esp, 0Ch", "mov     [esi+18h], eax", "push    edi; n", "mov     edi, [ebp+4Ch]", "push    edi; src", "push    eax; dest", "call    _memcpy", "mov     eax, [ebp+60h]", "mov     edi, [esp+5Ch+xdr_location]", "xor     edx, edx", "mov     eax, [eax+1B0h]", "mov     ecx, [eax]", "mov     eax, [esi]", "shl     ecx, 2", "div     ecx", "mov     eax, [edi+4]", "lea     eax, [eax+edx*4]", "mov     edx, [eax]", "mov     [esi+24h], edx", "mov     [eax], esi", "mov     edx, [edi+8]", "mov     eax, [edi+0Ch]", "mov     [edx+eax*4], esi", "inc     eax", "xor     edx, edx", "div     dword ptr [edi]", "mov     [edi+0Ch], edx"], ["pop     eax", "mov     edi, 1", "mov     eax, [esp+58h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     loc_148BF"], ["mov     [esp+4Ch+ptr], ecx", "sub     esp, 0Ch", "mov     eax, [ebp+34h]", "push    eax; netid", "mov     ebx, [esp+5Ch+var_4C]", "call    _getnetconfigent", "add     esp, 10h", "mov     edx, eax", "test    eax, eax", "mov     ecx, [esp+4Ch+ptr]", "jz      loc_14A13"], ["mov     [esp+4Ch+var_30], ecx", "push    eax", "push    eax", "lea     eax, [ebp+44h]", "push    eax; nbuf", "push    edx; nconf", "mov     [esp+5Ch+var_34], edx", "call    _taddr2uaddr", "mov     edx, [esp+5Ch+var_34]", "mov     [esp+5Ch+ptr], eax", "mov     [esp+5Ch+netconfigp], edx; netconfigp", "call    _freenetconfigent", "add     esp, 10h", "cmp     dword ptr [edi], 3", "mov     ecx, [esp+4Ch+var_30]", "jg      loc_14BF6"], ["mov     [esp+4Ch+var_34], ecx", "sub     esp, 0Ch", "mov     eax, [esp+58h+ptr]", "push    eax; ptr", "mov     ebx, [esp+5Ch+var_4C]", "call    _free", "add     esp, 10h", "mov     ecx, [esp+4Ch+var_34]", "jmp     loc_14A13"], ["push    eax", "push    eax", "push    28h ; '('; size", "push    1; nmemb", "mov     ebx, [esp+5Ch+var_4C]", "call    _calloc", "add     esp, 10h", "mov     esi, eax", "test    eax, eax", "jz      loc_14C3A"], ["mov     [esp+4Ch+ptr], eax", "push    eax", "push    eax", "mov     eax, [esp+54h+var_40]", "mov     edx, [eax]", "push    edx; size", "push    1; nmemb", "mov     ebx, [esp+5Ch+var_4C]", "call    _calloc", "add     esp, 10h", "mov     ecx, eax", "test    eax, eax", "mov     edx, [esp+4Ch+ptr]", "jnz     loc_14A01"], ["mov     [esp+4Ch+xdr_results], edx", "push    eax", "push    eax", "mov     ebx, [esp+54h+var_4C]", "lea     eax, [ebx-0D90Ch]", "push    eax", "lea     eax, [ebx-0D8C0h]", "push    eax; format", "call    _warnx", "mov     edx, [esp+5Ch+xdr_results]", "mov     [esp+5Ch+netconfigp], edx; ptr", "call    _free", "pop     eax", "push    [esp+58h+mutex]; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     loc_148BF"], ["push    eax", "push    eax", "mov     ebx, [esp+54h+var_4C]", "lea     eax, [ebx-0D8D4h]", "push    eax", "lea     eax, [ebx-0D8C0h]", "push    eax; format", "call    _warnx", "jmp     loc_14ABB"], ["mov     [esp+4Ch+var_34], ecx", "push    eax", "push    eax", "mov     eax, [esp+54h+ptr]", "push    eax", "mov     eax, [esp+58h+xdr_location]", "mov     edx, [eax+18h]", "push    edx", "mov     ecx, [eax+14h]", "push    ecx", "mov     ebx, [eax+10h]", "push    ebx", "mov     eax, [esp+64h+var_40]", "mov     edi, [eax+4]", "push    edi", "mov     ebx, [esp+68h+var_4C]", "lea     eax, [ebx-0D9B0h]", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 20h", "mov     ecx, [esp+4Ch+var_34]", "jmp     loc_14B31"], ["call    __stack_chk_fail_local"], ["push    ecx", "push    ecx", "mov     ebx, [esp+54h+var_4C]", "lea     eax, [ebx-0D8E8h]", "push    eax", "lea     eax, [ebx-0D8C0h]", "push    eax; format", "call    _warnx", "pop     esi", "push    [esp+58h+mutex]; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     loc_148BF"]], "svc_dg_recv": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0CCh", "mov     ebp, [esp+0DCh+xprt]", "mov     eax, [esp+0DCh+msg]", "mov     [esp+0DCh+cmsg], eax", "mov     esi, [ebp+60h]", "mov     eax, large gs:14h", "mov     [esp+0DCh+var_20], eax", "xor     eax, eax", "lea     eax, [su+1D0h]", "mov     [esp+0DCh+var_C8], eax", "lea     eax, [su+1B4h]", "mov     [esp+0DCh+message], eax", "lea     eax, [esp+0DCh+replylen]", "mov     [esp+0DCh+var_C0], eax", "lea     eax, [esp+0DCh+ss_0]", "mov     [esp+0DCh+ptr], eax", "mov     eax, su", "and     eax, 1", "mov     [esp+0DCh+nbuf], eax", "jmp     again"], ["test    edi, 2", "jnz     loc_14DA8"], ["mov     ecx, edx", "xor     eax, eax", "shr     ecx, 2", "rep stosd", "test    dl, 2", "jz      short loc_14D02"], ["mov     word ptr [edi], 0", "add     edi, 2"], ["and     edx, 1", "jz      short loc_14D0A"], ["mov     byte ptr [edi], 0"], ["mov     eax, [esp+0DCh+var_C0]", "mov     dword ptr [su+1C0h], 1", "mov     [su+1BCh], eax", "mov     eax, [esp+0DCh+ptr]", "mov     [su+1B4h], eax", "mov     eax, [esp+0DCh+var_C8]", "mov     [su+1C4h], eax", "mov     dword ptr [su+1B8h], 80h", "mov     dword ptr [su+1C8h], 40h ; '@'", "push    eax", "push    0; flags", "mov     eax, [esp+0E4h+message]", "push    eax; message", "mov     eax, [ebp+0]", "push    eax; fd", "call    _recvmsg", "add     esp, 10h", "cmp     rlen, 0FFFFFFFFh", "jnz     short loc_14DB8"], ["call    ___errno_location", "cmp     dword ptr [eax], 4", "jnz     short loc_14DC0"], ["mov     eax, [ebp+5Ch]", "mov     edi, [esp+0DCh+message]", "mov     [esp+0DCh+replylen], eax", "mov     eax, [su]", "mov     [esp+0DCh+var_A4], eax", "mov     eax, [esp+0DCh+nbuf]", "mov     edx, 1Ch", "test    eax, eax", "jz      loc_14CE0"], ["mov     byte ptr [edi], 0", "lea     edi, [edi+1]", "mov     edx, 1Bh", "test    edi, 2", "jz      loc_14CEC"], ["lea     su, [su+0]"], ["mov     word ptr [edi], 0", "sub     edx, 2", "add     edi, 2", "jmp     loc_14CEC"], ["cmp     rlen, 0Fh", "jg      short loc_14DE8"], ["lea     su, [su+0]"], ["xor     edx, edx"], ["mov     eax, [esp+0DCh+var_20]", "xor     eax, large gs:14h", "jnz     loc_15103"], ["add     esp, 0CCh", "mov     eax, edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     rlen, [ebp+44h]", "mov     [esp+0DCh+nbuf], eax", "push    edx", "mov     ecx, [su+1B8h]", "push    ecx; len", "mov     edi, [esp+0E4h+ptr]", "push    edi; ptr", "push    eax; nb", "call    __rpc_set_netbuf", "mov     eax, [su+1B4h]", "mov     [esp+0ECh+var_C8], eax", "add     esp, 10h", "test    eax, eax", "jz      short loc_14E70"], ["test    byte ptr [su+1CCh], 8", "jnz     short loc_14E70"], ["mov     edi, [su+1C8h]", "cmp     edi, 0Bh", "jbe     short loc_14E70"], ["mov     ecx, [su+1C4h]", "test    ecx, ecx", "jz      short loc_14E70"], ["mov     edx, [ecx]", "mov     [esp+0DCh+mutex], edx", "cmp     edx, 0Bh", "jbe     loc_14FE7"], ["add     edx, 3", "add     edi, ecx", "and     edx, 0FFFFFFFCh", "lea     eax, [ecx+edx]", "lea     edx, [ecx+edx+0Ch]", "cmp     edi, edx", "jb      loc_14FE7"], ["mov     edx, [eax]", "mov     [esp+0DCh+var_C0], edx", "add     edx, 3", "and     edx, 0FFFFFFFCh", "add     edx, eax", "cmp     edi, edx", "jb      loc_14FE7"], ["lea     su, [su+0]"], ["mov     dword ptr [su+1C4h], 0", "mov     dword ptr [su+1C8h], 0"], ["push    eax", "lea     edi, [su+8]", "push    eax", "mov     eax, [esp+0E4h+ptr]", "push    eax; ss_0", "push    ebp; xprt", "call    __xprt_set_raddr", "mov     dword ptr [su+8], 1", "pop     eax", "mov     eax, [su+0Ch]", "pop     edx", "push    0", "push    edi", "call    dword ptr [eax+14h]", "pop     ecx", "pop     eax", "mov     eax, [esp+0E4h+cmsg]", "push    eax; cmsg", "push    edi; xdrs", "call    _xdr_callmsg", "add     esp, 10h", "test    eax, eax", "jz      loc_14DC0"], ["mov     edi, [esp+0DCh+cmsg]", "mov     edx, 1", "mov     eax, [edi]", "mov     [su+4], eax", "mov     eax, [su+1B0h]", "test    eax, eax", "jz      loc_14DC2"], ["mov     su, [ebp+60h]", "sub     esp, 0Ch", "lea     edx, (dupreq_lock - 2BB6Ch)[ebx]", "mov     [esp+0E8h+var_B4], esi", "mov     eax, [esi+1B0h]", "mov     [esp+0E8h+var_C8], eax", "mov     [esp+0E8h+mutex], edx", "push    edx; mutex", "call    _pthread_mutex_lock", "mov     eax, [ebp+60h]", "mov     ecx, [esi+4]", "xor     edx, edx", "mov     eax, [eax+1B0h]", "mov     eax, [eax]", "lea     esi, ds:0[eax*4]", "mov     eax, ecx", "div     esi", "mov     eax, [esp+0ECh+var_C8]", "add     esp, 10h", "mov     eax, [eax+4]", "mov     esi, [eax+edx*4]", "test    esi, esi", "jz      loc_15029"], ["mov     eax, edi", "mov     edi, [edi+14h]", "mov     edx, [eax+10h]", "mov     eax, [eax+0Ch]", "mov     [esp+0DCh+ptr], edx", "mov     [esp+0DCh+var_C0], eax", "jmp     short loc_14F53"], ["mov     esi, [esi+24h]", "test    esi, esi", "jz      loc_15040"], ["cmp     ecx, [esi]", "jnz     short loc_14F48"], ["cmp     [esi+4], edi", "jnz     short loc_14F48"], ["mov     eax, [esp+0DCh+ptr]", "cmp     [esi+8], eax", "jnz     short loc_14F48"], ["mov     eax, [esp+0DCh+var_C0]", "cmp     [esi+0Ch], eax", "jnz     short loc_14F48"], ["mov     eax, [ebp+48h]", "cmp     [esi+14h], eax", "jnz     short loc_14F48"], ["mov     [esp+0DCh+var_B0], ecx", "push    edx", "push    eax; n", "mov     ecx, [ebp+4Ch]", "push    ecx; s2", "mov     eax, [esi+18h]", "push    eax; s1", "call    _memcmp", "add     esp, 10h", "mov     edx, eax", "test    eax, eax", "mov     ecx, [esp+0DCh+var_B0]", "jnz     short loc_14F48"], ["lea     eax, (libtirpc_debug_level - 2BB6Ch)[ebx]", "mov     [esp+0DCh+var_C8], eax", "cmp     dword ptr [eax], 3", "jg      loc_1509B"], ["mov     [esp+0DCh+ptr], edx", "sub     esp, 0Ch", "mov     edi, [esi+1Ch]", "mov     esi, [esi+20h]", "mov     edx, [esp+0E8h+mutex]", "push    edx; mutex", "call    _pthread_mutex_unlock", "mov     [esp+0ECh+var_A4], replylen_0", "mov     [esp+0ECh+replylen], reply", "add     esp, 0Ch", "push    0; flags", "mov     ecx, [esp+0E4h+message]", "mov     replylen_0, [ebp+0]", "push    ecx; message", "push    esi; fd", "call    _sendmsg", "add     esp, 10h", "mov     edx, [esp+0DCh+ptr]", "jmp     loc_14DC2"], ["mov     eax, [esp+0DCh+var_C8]", "mov     ax, [eax]", "cmp     ax, 2", "jz      short loc_1506F"], ["cmp     ax, 0Ah", "jnz     loc_14E70"], ["cmp     dword ptr [ecx+4], 29h ; ')'", "jnz     loc_14E70"], ["cmp     dword ptr [ecx+8], 32h ; '2'", "jnz     loc_14E70"], ["cmp     [esp+0DCh+mutex], 1Fh", "jbe     loc_14E70"], ["mov     dword ptr [ecx+1Ch], 0", "jmp     loc_14E84"], ["mov     eax, [esp+0DCh+cmsg]", "mov     edx, [eax+10h]", "mov     edi, [eax+14h]", "mov     eax, [eax+0Ch]", "mov     [esp+0DCh+ptr], edx", "mov     [esp+0DCh+var_C0], eax", "xchg    ax, ax"], ["mov     eax, [esp+0DCh+var_C8]", "mov     edx, [esp+0DCh+ptr]", "sub     esp, 0Ch", "mov     [eax+14h], edx", "mov     edx, [esp+0E8h+var_C0]", "mov     [eax+10h], edx", "mov     [eax+18h], edi", "mov     eax, [esp+0E8h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "mov     edx, 1", "jmp     loc_14DC2"], ["mov     eax, [ecx+4]", "test    eax, eax", "jnz     loc_14E70"], ["cmp     dword ptr [ecx+8], 8", "jnz     loc_14E70"], ["cmp     [esp+0DCh+mutex], 17h", "jbe     loc_14E70"], ["mov     dword ptr [ecx+0Ch], 0", "jmp     loc_14E84"], ["mov     [esp+0DCh+ptr], edx", "sub     esp, 0Ch", "push    dword ptr [ebp+34h]; netid", "call    _getnetconfigent", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "mov     edx, [esp+0DCh+ptr]", "jz      loc_14FA9"], ["mov     [esp+0DCh+var_C0], edx", "push    eax", "push    eax", "push    [esp+0E4h+nbuf]; nbuf", "push    edi; nconf", "call    _taddr2uaddr", "mov     [esp+0ECh+netconfigp], edi; netconfigp", "mov     [esp+0ECh+ptr], eax", "call    _freenetconfigent", "add     esp, 10h", "mov     eax, [esp+0DCh+var_C8]", "mov     edx, [esp+0DCh+var_C0]", "cmp     dword ptr [eax], 3", "jg      short loc_15108"], ["mov     [esp+0DCh+var_C8], edx", "sub     esp, 0Ch", "push    [esp+0E8h+ptr]; ptr", "call    _free", "add     esp, 10h", "mov     edx, [esp+0DCh+var_C8]", "jmp     loc_14FA9"], ["call    __stack_chk_fail_local"], ["mov     [esp+0DCh+var_C8], edx", "push    edi", "push    edi", "push    [esp+0E4h+ptr]", "mov     eax, [esp+0E8h+cmsg]", "push    dword ptr [eax+14h]", "push    dword ptr [eax+10h]", "push    dword ptr [eax+0Ch]", "mov     eax, [esp+0F4h+var_B4]", "push    dword ptr [eax+4]", "lea     eax, (aCacheEntryFoun - 2BB6Ch)[ebx]; \"cache entry found for xid=%x prog=%dver\"...", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 20h", "mov     edx, [esp+0DCh+var_C8]", "jmp     short loc_150E7"]], "svc_dg_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0C4h", "mov     eax, large gs:14h", "mov     [esp+0D4h+var_20], eax", "xor     eax, eax", "lea     eax, [esp+0D4h+si_0]", "push    eax; sip", "mov     eax, [esp+0D8h+fd]", "push    eax; fd", "call    ___rpc_fd2sockinfo", "add     esp, 10h", "test    eax, eax", "jz      loc_15428"], ["push    eax", "mov     eax, [esp+0D0h+sendsize]", "push    eax; size", "mov     eax, [esp+0D4h+si_0.si_proto]", "push    eax; proto", "mov     edx, [esp+0D8h+si_0.si_af]", "push    edx; af_0", "call    ___rpc_get_t_size", "mov     [esp+0DCh+size], eax", "add     esp, 0Ch", "mov     ecx, [esp+0D0h+recvsize]", "mov     edi, eax", "push    ecx; size", "mov     esi, [esp+0D4h+si_0.si_proto]", "push    esi; proto", "mov     ebp, [esp+0D8h+si_0.si_af]", "push    ebp; af_0", "call    ___rpc_get_t_size", "mov     [esp+0DCh+var_C0], eax", "add     esp, 10h", "test    sendsize_0, sendsize_0", "jz      loc_15448"], ["test    recvsize_0, recvsize_0", "jz      loc_15448"], ["push    eax", "push    eax", "push    6Ch ; 'l'; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     esi, eax", "test    xprt, xprt", "jz      loc_154BA"], ["push    ebp", "push    ebp", "push    0Ch; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     ebp, eax", "test    ext, ext", "jz      loc_1547B"], ["push    edi", "push    edi", "push    210h; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     edi, eax", "test    su, su", "jz      loc_1549D"], ["mov     su, [esp+0CCh+size]", "mov     ecx, [esp+0CCh+var_C0]", "cmp     eax, ecx", "jb      loc_15358"], ["lea     edx, [eax+3]", "and     edx, 0FFFFFFFCh", "mov     [su], edx", "push    ecx", "push    ecx", "push    edx; size", "mov     [esp+0D8h+size], edx", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     [xprt+5Ch], eax", "test    eax, eax", "jz      loc_15360"], ["push    1; xop", "mov     edx, [esp+0D0h+size]", "push    edx; size", "push    eax; addr", "lea     eax, [su+8]", "push    eax; xdrs", "call    _xdrmem_create", "mov     eax, [esp+0DCh+fd]", "lea     edx, (ops_lock - 2BB6Ch)[ebx]", "mov     [xprt], eax", "lea     eax, [su+20h]", "mov     dword ptr [su+1B0h], 0", "mov     [xprt+60h], su", "mov     [xprt+64h], ext", "mov     [xprt+54h], eax", "mov     [esp+0DCh+size], edx", "mov     [esp+0DCh+mutex], edx; mutex", "call    _pthread_mutex_lock", "mov     eax, ds:(ops_7693 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    eax, eax", "mov     edx, [esp+0CCh+size]", "jz      loc_153A0"], ["sub     esp, 0Ch", "lea     eax, (ops_7693 - 2BB6Ch)[ebx]", "mov     [xprt+8], eax", "lea     eax, (ops2_7694 - 2BB6Ch)[ebx]", "mov     [xprt+2Ch], eax", "push    edx; mutex", "call    _pthread_mutex_unlock", "mov     [esp+0DCh+slen], 80h", "lea     edx, [esp+0DCh+ss_0]", "add     esp, 0Ch", "mov     dword ptr [xprt+44h], 80h", "lea     eax, [esp+0D0h+slen]", "push    eax; len", "push    edx; addr", "mov     eax, [esp+0D8h+fd]", "mov     [esp+0D8h+size], edx", "push    eax; fd", "call    _getsockname", "add     esp, 10h", "test    eax, eax", "js      short loc_15360"], ["push    eax", "mov     eax, [esp+0D0h+slen]", "push    eax; len", "lea     eax, [xprt+38h]", "mov     edx, [esp+0D4h+size]", "push    edx; ptr", "push    eax; nb", "call    __rpc_set_netbuf", "mov     eax, [esp+0DCh+si_0.si_af]", "mov     [esp+0DCh+optval], 1", "add     esp, 10h", "cmp     eax, 2", "jz      loc_15458"], ["cmp     eax, 0Ah", "jz      loc_15400"], ["sub     esp, 0Ch", "push    xprt; xprt", "call    _xprt_register", "add     esp, 10h"], ["mov     eax, [esp+0CCh+var_20]", "xor     eax, large gs:14h", "jnz     loc_15498"], ["add     esp, 0BCh", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, ecx", "jmp     loc_1522B"], ["push    eax", "push    eax", "lea     eax, (__no_mem_str_0 - 2BB6Ch)[ebx]; \"out of memory\"", "push    eax", "lea     eax, (svc_dg_str - 2BB6Ch)[ebx]; \"svc_dg_create: %s\"", "push    eax; format", "call    _warnx", "mov     [esp+0DCh+mutex], su; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "push    ext; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "push    xprt; ptr", "xor     xprt, xprt", "call    _free", "add     esp, 10h", "jmp     short loc_15336"], ["lea     eax, (svc_dg_recv - 2BB6Ch)[ebx]", "mov     ds:(ops_7693 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_dg_stat - 2BB6Ch)[ebx]", "mov     ds:(dword_2C46C - 2BB6Ch)[ebx], eax", "lea     eax, (svc_dg_getargs - 2BB6Ch)[ebx]", "mov     ds:(dword_2C470 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_dg_reply - 2BB6Ch)[ebx]", "mov     ds:(dword_2C474 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_dg_freeargs - 2BB6Ch)[ebx]", "mov     ds:(dword_2C478 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_dg_destroy - 2BB6Ch)[ebx]", "mov     ds:(dword_2C47C - 2BB6Ch)[ebx], eax", "lea     eax, (svc_dg_control - 2BB6Ch)[ebx]", "mov     ds:(ops2_7694 - 2BB6Ch)[ebx], eax", "jmp     loc_152A6"], ["sub     esp, 0Ch", "push    4; optlen", "lea     eax, [esp+0DCh+optval]", "push    eax; optval", "push    31h ; '1'; optname", "push    29h ; ')'; level", "mov     ext, [esp+0E8h+fd]", "push    ebp; fd", "call    _setsockopt", "add     esp, 20h", "jmp     loc_1532A"], ["push    eax", "push    eax", "lea     eax, (svc_dg_err1 - 2BB6Ch)[ebx]; \"could not get transport information\""], ["push    eax", "lea     eax, (svc_dg_str - 2BB6Ch)[ebx]; \"svc_dg_create: %s\"", "push    eax; format", "xor     esi, esi", "call    _warnx", "add     esp, 10h", "jmp     loc_15336"], ["push    eax", "push    eax", "lea     eax, (svc_dg_err2 - 2BB6Ch)[ebx]; \" transport does not support data transf\"...", "jmp     short loc_15430"], ["sub     esp, 0Ch", "push    4; optlen", "lea     eax, [esp+0DCh+optval]", "push    eax; optval", "push    8; optname", "push    0; level", "mov     eax, [esp+0E8h+fd]", "push    eax; fd", "call    _setsockopt", "add     esp, 20h", "jmp     loc_1532A"], ["push    edx", "lea     eax, (__no_mem_str_0 - 2BB6Ch)[ebx]; \"out of memory\"", "push    edx", "push    eax", "lea     eax, (svc_dg_str - 2BB6Ch)[ebx]; \"svc_dg_create: %s\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     loc_1538C"], ["call    __stack_chk_fail_local"], ["push    ecx", "lea     eax, (__no_mem_str_0 - 2BB6Ch)[ebx]; \"out of memory\"", "push    ecx", "push    eax", "lea     eax, (svc_dg_str - 2BB6Ch)[ebx]; \"svc_dg_create: %s\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     loc_15380"], ["push    edi", "lea     xprt, (__no_mem_str_0 - 2BB6Ch)[ebx]; \"out of memory\"", "push    edi", "push    eax", "lea     eax, (svc_dg_str - 2BB6Ch)[ebx]; \"svc_dg_create: %s\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     loc_15336"]], "svc_dg_enablecache": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 18h", "lea     esi, (dupreq_lock - 2BB6Ch)[ebx]", "mov     eax, [esp+28h+transp]", "mov     edi, [eax+60h]", "push    esi; mutex", "call    _pthread_mutex_lock", "add     esp, 10h", "mov     eax, [su+1B0h]", "test    eax, eax", "jz      short loc_15548"], ["push    eax", "lea     eax, (asc_1D890+1 - 2BB6Ch)[ebx]; \" \"", "push    eax", "lea     eax, (enable_err - 2BB6Ch)[ebx]; \"cache already enabled\""], ["push    eax", "lea     eax, (cache_enable_str - 2BB6Ch)[ebx]; \"svc_enablecache: %s %s\"", "push    eax; format", "call    _warnx", "mov     [esp+2Ch+mutex], esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "xor     eax, eax"], ["add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    eax", "push    eax", "push    1Ch; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     ebp, eax", "test    uc, uc", "jz      short loc_155BF"], ["mov     uc, [esp+1Ch+size]", "mov     dword ptr [uc+0Ch], 0", "mov     [uc+0], eax", "push    eax", "push    eax", "mov     eax, [esp+24h+size]", "shl     eax, 4", "push    eax; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     [uc+4], eax", "test    eax, eax", "jz      short loc_155D2"], ["push    ecx", "push    ecx", "mov     eax, [esp+24h+size]", "shl     eax, 2", "push    eax; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     [uc+8], eax", "test    eax, eax", "jz      short loc_15607"], ["sub     esp, 0Ch", "mov     [su+1B0h], uc", "push    esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "mov     eax, 1", "add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     su", "pop     uc", "retn"], ["push    eax", "lea     eax, (asc_1D890+1 - 2BB6Ch)[ebx]; \" \"", "push    eax", "lea     eax, (alloc_err - 2BB6Ch)[ebx]; \"could not allocate cache \"", "jmp     loc_15520"], ["lea     eax, (aData - 2BB6Ch)[ebx]; \"data\"", "push    edi", "push    eax", "lea     eax, (alloc_err - 2BB6Ch)[ebx]; \"could not allocate cache \"", "push    eax", "lea     eax, (cache_enable_str - 2BB6Ch)[ebx]; \"svc_enablecache: %s %s\"", "push    eax; format", "call    _warnx"], ["mov     [esp+2Ch+mutex], uc; ptr", "call    _free", "mov     [esp+2Ch+mutex], esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "xor     eax, eax", "jmp     loc_1553A"], ["push    eax", "lea     eax, (aFifo - 2BB6Ch)[ebx]; \"fifo\"", "push    eax", "lea     eax, (alloc_err - 2BB6Ch)[ebx]; \"could not allocate cache \"", "push    eax", "lea     eax, (cache_enable_str - 2BB6Ch)[ebx]; \"svc_enablecache: %s %s\"", "push    eax; format", "call    _warnx", "pop     edx", "push    dword ptr [uc+4]; ptr", "call    _free", "jmp     short loc_155ED"]], "_svcauth_unix": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "mov     eax, [esp+4Ch+rqst]", "mov     edi, [esp+4Ch+msg]", "mov     [esp+4Ch+var_48], eax", "mov     esi, large gs:14h", "mov     [esp+4Ch+var_20], esi", "xor     esi, esi", "test    eax, eax", "jz      loc_1582D"], ["test    edi, edi", "jz      loc_1584E"], ["mov     eax, [esp+4Ch+var_48]", "mov     ebp, [eax+18h]", "lea     eax, [area+18h]", "mov     [area+4], eax", "lea     eax, [area+118h]", "mov     [area+14h], eax", "mov     eax, [edi+20h]", "push    1; xop", "mov     [esp+50h+auth_len], auth_len_0", "push    auth_len_0; size", "mov     auth_len_0, [edi+1Ch]", "push    eax; addr", "lea     esi, [esp+58h+xdrs]", "push    esi; xdrs", "call    _xdrmem_create", "pop     eax", "pop     edx", "mov     ecx, [esp+54h+auth_len]", "push    ecx", "push    esi", "mov     eax, [esp+5Ch+xdrs.x_ops]", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    buf_0, buf_0", "jz      loc_157D0"], ["mov     edx, [eax]", "mov     ecx, [eax+4]", "bswap   edx", "bswap   ecx", "mov     [area+0], edx", "cmp     str_len_0, 0FFh", "jbe     short loc_15700"], ["mov     eax, 1"], ["mov     edx, [esp+4Ch+xdrs.x_ops]", "mov     edx, [edx+1Ch]", "test    edx, edx", "jz      short loc_156E6"], ["mov     [esp+4Ch+auth_len], stat_0", "sub     esp, 0Ch", "push    esi", "call    edx", "add     esp, 10h", "mov     eax, [esp+4Ch+auth_len]"], ["mov     ebx, [esp+4Ch+var_20]", "xor     ebx, large gs:14h", "jnz     loc_15849"], ["add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     edx, [eax+8]", "push    eax", "push    str_len_0; n", "mov     eax, [area+4]", "mov     [esp+54h+str_len], str_len_0", "push    buf_0; src", "mov     [esp+58h+gid_len], buf_0", "push    eax; dest", "call    _memmove", "mov     ecx, [esp+5Ch+str_len]", "mov     eax, [area+4]", "mov     edx, [esp+5Ch+gid_len]", "mov     byte ptr [eax+ecx], 0", "add     ecx, 3", "and     ecx, 0FFFFFFFCh", "add     edx, ecx", "mov     [esp+5Ch+str_len], ecx", "mov     eax, [edx]", "bswap   eax", "mov     [area+8], eax", "mov     eax, [edx+4]", "bswap   eax", "mov     [area+0Ch], eax", "mov     eax, [edx+8]", "bswap   eax", "mov     [esp+5Ch+gid_len], eax", "add     esp, 10h", "cmp     gid_len_0, 10h", "ja      loc_156C7"], ["mov     [area+10h], gid_len_0", "test    gid_len_0, gid_len_0", "jz      short loc_15780"], ["mov     str_len_0, [area+14h]", "mov     area, [esp+4Ch+gid_len]", "lea     gid_len_0, [edx+0Ch]", "lea     gid_len_0, [edx+gid_len_0*4+0Ch]", "lea     esi, [esi+0]", "nop"], ["mov     edx, [buf_0]", "add     buf_0, 4", "bswap   edx", "mov     [ecx], edx", "add     ecx, 4", "cmp     buf_0, ebp", "jnz     short loc_15770"], ["mov     eax, [esp+4Ch+str_len]", "mov     ecx, [esp+4Ch+gid_len]", "lea     eax, [eax+ecx*4+14h]", "cmp     eax, [esp+4Ch+auth_len]", "ja      short loc_15800"], ["mov     ebx, [esp+4Ch+var_48]", "mov     eax, [edi+2Ch]", "test    eax, eax", "mov     edx, [ebx+1Ch]", "jz      short loc_157B8"], ["mov     ecx, [edi+24h]", "mov     [edx+50h], ecx", "mov     ecx, [edi+28h]", "mov     [edx+54h], ecx", "mov     [edx+58h], eax", "xor     eax, eax", "jmp     done"], ["mov     dword ptr [edx+50h], 0", "mov     dword ptr [edx+58h], 0", "jmp     done"], ["push    edx", "push    edx", "push    area; p", "push    esi; xdrs", "call    _xdr_authunix_parms", "add     esp, 10h", "test    eax, eax", "jnz     short loc_15791"], ["mov     [esp+4Ch+xdrs.x_op], 2", "push    eax", "push    eax", "push    area; p", "push    esi; xdrs", "call    _xdr_authunix_parms", "add     esp, 10h", "jmp     loc_156C7"], ["sub     esp, 0Ch", "lea     eax, (aBadAuthLenGidL - 2BB6Ch)[ebx]; \"bad auth_len gid %ld str %ld auth %u\\n\"", "mov     ecx, [esp+58h+auth_len]", "push    ecx", "mov     edi, [esp+5Ch+str_len]", "push    edi", "mov     ebp, [esp+60h+gid_len]", "push    ebp", "push    eax", "push    1", "call    ___printf_chk", "add     esp, 20h", "mov     eax, 1", "jmp     done"], ["lea     eax, (__PRETTY_FUNCTION___6549 - 2BB6Ch)[ebx]; \"_svcauth_unix\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_13 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc_auth_unix.\"...", "push    45h ; 'E'; line", "push    eax; file", "lea     eax, (aRqstNull - 2BB6Ch)[ebx]; \"rqst != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["call    __stack_chk_fail_local"], ["lea     eax, (__PRETTY_FUNCTION___6549 - 2BB6Ch)[ebx]; \"_svcauth_unix\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_13 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc_auth_unix.\"...", "push    46h ; 'F'; line", "push    eax; file", "lea     eax, (aCmsgNull+1 - 2BB6Ch)[ebx]; \"msg != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "svc_tli_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0BCh", "mov     eax, large gs:14h", "mov     [esp+0CCh+var_20], eax", "xor     eax, eax", "mov     esi, [esp+0CCh+fd]", "mov     edi, [esp+0CCh+nconf]", "mov     ebp, [esp+0CCh+bindaddr]", "cmp     esi, 0FFFFFFFFh", "jnz     loc_159C8"], ["test    edi, edi", "jz      loc_15B60"], ["sub     esp, 0Ch", "push    edi; nconf", "call    ___rpc_nconf2fd", "add     esp, 10h", "mov     esi, eax", "cmp     fd_0, 0FFFFFFFFh", "jz      loc_15B80"], ["push    edx", "push    edx", "lea     fd_0, [esp+0D4h+si_0]", "push    eax; sip", "push    edi; nconf", "call    ___rpc_nconf2sockinfo", "add     esp, 10h", "mov     [esp+0CCh+var_C0], 1"], ["test    ebp, ebp", "jz      loc_15AE8"], ["push    eax", "mov     eax, [esp+0D0h+si_0.si_alen]", "push    eax; len", "mov     eax, [ebp+8]", "push    eax; addr", "push    esi; fd", "call    _bind", "add     esp, 10h", "test    eax, eax", "js      loc_15B28"], ["push    ecx", "push    ecx", "mov     ebp, [ebp+0Ch]", "push    ebp; n", "push    esi; fd", "call    _listen", "add     esp, 10h"], ["mov     eax, [esp+0CCh+si_0.si_socktype]", "cmp     eax, 1", "jz      loc_15A0D"], ["cmp     eax, 2", "jz      loc_15A50"], ["sub     esp, 0Ch", "lea     eax, (aSvcTliCreateBa - 2BB6Ch)[ebx]; \"svc_tli_create: bad service type\"", "push    eax; format", "call    _warnx", "add     esp, 10h"], ["mov     eax, [esp+0CCh+var_C0]", "xor     ebp, ebp", "test    eax, eax", "jnz     loc_15B10"], ["mov     eax, [esp+0CCh+var_20]", "xor     eax, large gs:14h", "jnz     loc_15BB7"], ["add     esp, 0BCh", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    eax", "push    eax", "lea     eax, [esp+0D4h+si_0]", "push    eax; sip", "push    esi; fd", "call    ___rpc_fd2sockinfo", "add     esp, 10h", "test    eax, eax", "jz      loc_15B40"], ["sub     esp, 0Ch", "push    fd_0; fd", "call    ___rpc_sockisbound", "mov     [esp+0DCh+var_C0], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_15939"], ["mov     eax, [esp+0CCh+si_0.si_socktype]", "mov     [esp+0CCh+var_C0], 0", "cmp     eax, 1", "jnz     loc_15978"], ["mov     [esp+0CCh+slen], 80h", "lea     eax, [esp+0CCh+ss_0]", "push    edx", "lea     edx, [esp+0D0h+slen]", "push    edx; len", "push    eax; addr", "push    esi; fd", "call    _getpeername", "add     esp, 10h", "test    eax, eax", "jnz     loc_15AC8"], ["push    ebp", "mov     eax, [esp+0D0h+recvsz]", "push    eax; recvsize", "mov     eax, [esp+0D4h+sendsz]", "push    eax; sendsize", "push    esi; fd", "call    _svc_fd_create", "add     esp, 10h", "mov     ebp, eax", "jmp     short loc_15A6C"], ["push    eax", "mov     eax, [esp+0D0h+recvsz]", "push    eax; recvsize", "mov     eax, [esp+0D4h+sendsz]", "push    eax; sendsize", "push    esi; fd", "call    _svc_dg_create", "add     esp, 10h", "mov     ebp, eax"], ["test    ebp, ebp", "jz      freedata"], ["sub     esp, 0Ch", "mov     xprt, [esp+0D8h+si_0.si_socktype]", "push    eax; socktype", "call    ___rpc_socktype2seman", "add     esp, 10h", "mov     [xprt+68h], eax", "test    edi, edi", "jz      loc_159A1"], ["mov     eax, [xprt+34h]", "test    eax, eax", "jz      short loc_15AA2"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "mov     edx, [edi]", "push    edx; s", "call    _strdup", "mov     [xprt+34h], eax", "mov     esi, [edi+14h]", "pop     ecx", "push    esi; s", "call    _strdup", "add     esp, 10h", "mov     [xprt+30h], eax", "jmp     loc_159A1"], ["push    eax", "mov     edx, [esp+0D0h+recvsz]", "push    edx; recvsize", "mov     ecx, [esp+0D4h+sendsz]", "push    ecx; sendsize", "push    esi; fd", "call    _svc_vc_create", "add     esp, 10h", "mov     ebp, eax", "jmp     short loc_15A6C"], ["sub     esp, 0Ch", "push    esi; fd", "call    __binddynport", "add     esp, 10h", "inc     eax", "jz      loc_15BA0"], ["push    eax", "push    eax", "push    1000h; n", "push    esi; fd", "call    _listen", "add     esp, 10h", "jmp     loc_1596B"], ["sub     esp, 0Ch", "push    esi; fd", "call    _close", "add     esp, 10h", "jmp     loc_159A1"], ["sub     esp, 0Ch", "lea     eax, (aSvcTliCreateCo - 2BB6Ch)[ebx]; \"svc_tli_create: could not bind to reque\"...", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     freedata"], ["sub     esp, 0Ch", "lea     eax, (aSvcTliCreateCo_0 - 2BB6Ch)[ebx]; \"svc_tli_create: could not get transport\"...", "xor     ebp, ebp", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     loc_159A1"], ["sub     esp, 0Ch", "lea     eax, (aSvcTliCreateIn - 2BB6Ch)[ebx]; \"svc_tli_create: invalid netconfig\"", "xor     ebp, ebp", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     loc_159A1"], ["push    ecx", "lea     fd_0, (aSvcTliCreateCo_1 - 2BB6Ch)[ebx]; \"svc_tli_create: could not open connecti\"...", "push    ecx", "xor     ebp, ebp", "mov     fd_0, [edi]", "push    esi", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     loc_159A1"], ["sub     esp, 0Ch", "lea     eax, (aSvcTliCreateCo_2 - 2BB6Ch)[ebx]; \"svc_tli_create: could not bind to anony\"...", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     freedata"], ["call    __stack_chk_fail_local"]], "svc_tp_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     edi, [esp+1Ch+nconf]", "mov     ebp, [esp+1Ch+versnum]", "test    edi, edi", "jz      short loc_15C30"], ["sub     esp, 0Ch", "push    0; recvsz", "push    0; sendsz", "push    0; bindaddr", "push    edi; nconf", "push    0FFFFFFFFh; fd", "call    _svc_tli_create", "add     esp, 20h", "mov     esi, eax", "test    xprt, xprt", "jz      short loc_15C20"], ["push    ecx", "push    edi; nconf", "push    ebp; version", "mov     xprt, [esp+28h+prognum]", "push    eax; program", "call    _rpcb_unset", "mov     eax, [esp+2Ch+dispatch]", "mov     [esp+2Ch+var_2C], edi; nconf", "push    eax; dispatch", "push    ebp; vers", "mov     eax, [esp+34h+prognum]", "push    eax; prog", "push    xprt; xprt", "call    _svc_reg", "add     esp, 20h", "test    eax, eax", "jz      short loc_15C50"], ["add     esp, 0Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    eax", "xor     esi, esi", "push    ebp", "mov     eax, [esp+24h+prognum]", "push    eax", "lea     eax, (aSvcTpCreateInv - 2BB6Ch)[ebx]; \"svc_tp_create: invalid netconfig struct\"...", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     short loc_15C20"], ["mov     eax, [edi]", "push    eax", "lea     eax, (aSvcTpCreateCou - 2BB6Ch)[ebx]; \"svc_tp_create: Could not register prog \"...", "push    ebp", "mov     edx, [esp+24h+prognum]", "push    edx", "push    eax; format", "call    _warnx", "mov     eax, [xprt+8]", "mov     [esp+2Ch+var_2C], xprt", "xor     xprt, xprt", "call    dword ptr [eax+14h]", "add     esp, 10h", "jmp     short loc_15C20"]], "svc_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 28h", "mov     eax, [esp+38h+nettype]", "push    eax; nettype", "call    ___rpc_setconf", "mov     [esp+3Ch+handle], eax", "add     esp, 10h", "test    handle_0, handle_0", "mov     [esp+2Ch+num], 0", "jz      loc_15DF0"], ["lea     handle_0, (xprtlist_lock - 2BB6Ch)[ebx]", "mov     [esp+2Ch+mutex], eax", "lea     eax, (aSvcCreateCould - 2BB6Ch)[ebx]; \"svc_create: could not register prog %u \"...", "mov     [esp+2Ch+format], eax", "xchg    ax, ax"], ["sub     esp, 0Ch", "mov     edi, [esp+38h+handle]", "push    edi; vhandle", "call    ___rpc_getconf", "add     esp, 10h", "mov     edi, eax", "test    nconf, nconf", "jz      loc_15DD4"], ["sub     esp, 0Ch", "mov     nconf, [esp+38h+mutex]", "push    eax; mutex", "call    _pthread_mutex_lock", "mov     ebp, ds:(xprtlist_7553 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    l, l", "jz      short loc_15D70"], ["mov     esi, [nconf]", "jmp     short loc_15D07"], ["mov     l, [l+4]", "test    l, l", "jz      short loc_15D70"], ["push    ecx", "push    ecx", "mov     eax, [l+0]", "push    esi; s2", "mov     eax, [eax+34h]", "push    eax; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_15D00"], ["push    esi", "push    nconf; nconf", "mov     eax, [esp+34h+versnum]", "push    eax; version", "mov     eax, [esp+38h+prognum]", "push    eax; program", "call    _rpcb_unset", "mov     eax, [esp+3Ch+dispatch]", "mov     [esp+3Ch+var_3C], nconf; nconf", "push    eax; dispatch", "mov     edx, [l+0]", "mov     eax, [esp+40h+versnum]", "push    eax; vers", "mov     eax, [esp+44h+prognum]", "push    eax; prog", "push    edx; xprt", "call    _svc_reg", "add     esp, 20h", "test    eax, eax", "jz      short loc_15DB8"], ["mov     eax, [esp+2Ch+num]", "inc     eax", "mov     [esp+2Ch+num], eax"], ["sub     esp, 0Ch", "mov     ebp, [esp+38h+mutex]", "push    ebp; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     loc_15CC8"], ["push    nconf; nconf", "mov     eax, [esp+30h+versnum]", "push    eax; versnum", "mov     edx, [esp+34h+prognum]", "push    edx; prognum", "mov     ecx, [esp+38h+dispatch]", "push    ecx; dispatch", "call    _svc_tp_create", "add     esp, 10h", "mov     esi, eax", "test    xprt, xprt", "jz      short loc_15D59"], ["sub     esp, 0Ch", "push    8; size", "call    _malloc", "add     esp, 10h", "test    l, l", "jz      short loc_15E04"], ["mov     edx, ds:(xprtlist_7553 - 2BB6Ch)[ebx]", "mov     [l], xprt", "mov     [l+4], edx", "mov     ds:(xprtlist_7553 - 2BB6Ch)[ebx], l", "jmp     short loc_15D50"], ["mov     eax, [nconf]", "push    eax", "mov     eax, [esp+30h+versnum]", "push    eax", "mov     edx, [esp+34h+prognum]", "push    edx", "mov     ecx, [esp+38h+format]", "push    ecx; format", "call    _warnx", "add     esp, 10h", "jmp     short loc_15D59"], ["sub     esp, 0Ch", "mov     esi, [esp+38h+handle]", "push    esi; vhandle", "call    ___rpc_endconf", "add     esp, 10h"], ["mov     eax, [esp+2Ch+num]", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     handle_0, (aSvcCreateUnkno - 2BB6Ch)[ebx]; \"svc_create: unknown protocol\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     short loc_15DE4"], ["sub     esp, 0Ch", "lea     l, (aSvcCreateNoMem - 2BB6Ch)[ebx]; \"svc_create: no memory\"", "push    eax; format", "call    _warnx", "pop     eax", "push    [esp+38h+mutex]; mutex", "call    _pthread_mutex_unlock", "pop     eax", "push    [esp+38h+handle]; vhandle", "call    ___rpc_endconf", "add     esp, 10h", "mov     [esp+2Ch+num], 0", "jmp     short loc_15DE4"]], "svc_raw_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 28h", "lea     edi, (svcraw_lock - 2BB6Ch)[ebx]", "push    edi; mutex", "call    _pthread_mutex_lock", "mov     esi, ds:(svc_raw_private_0 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    srp, srp", "jz      loc_16130"], ["mov     ebp, [srp+68h]"], ["sub     esp, 0Ch", "mov     dword ptr [srp+4], 400h", "mov     word ptr [srp+8], 0", "mov     dword ptr [ebp+0], 0", "lea     ebp, (ops_lock - 2BB6Ch)[ebx]", "push    ebp; mutex", "call    _pthread_mutex_lock", "mov     edx, ds:(ops_6593 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    edx, edx", "jz      loc_16180"], ["lea     eax, (ops_6593 - 2BB6Ch)[ebx]", "sub     esp, 0Ch", "mov     [srp+0Ch], eax", "lea     eax, (ops2_6594 - 2BB6Ch)[ebx]", "mov     [srp+30h], eax", "push    ebp; mutex", "call    _pthread_mutex_unlock", "lea     eax, [srp+88h]", "mov     [srp+58h], eax", "push    1; xop", "mov     eax, [srp]", "push    2260h; size", "push    eax; addr", "lea     eax, [srp+70h]", "push    eax; xdrs", "call    _xdrmem_create", "add     esp, 14h", "add     srp, 4", "push    esi; xprt", "call    _xprt_register", "mov     [esp+3Ch+mutex], edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h"], ["add     esp, 1Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    eax", "push    eax", "push    218h; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     srp, eax", "test    srp, srp", "jz      loc_1621B"], ["push    ebp", "push    ebp", "push    0Ch; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     ebp, eax", "test    ext, ext", "jz      loc_16200"], ["mov     edx, ds:(__rpc_rawcombuf_ptr - 2BB6Ch)[ebx]", "mov     [srp+68h], ext", "mov     ext, [edx]", "test    eax, eax", "jz      short loc_161E0"], ["mov     [srp], eax", "mov     ds:(svc_raw_private_0 - 2BB6Ch)[ebx], srp", "jmp     loc_160A2"], ["lea     eax, (svc_raw_recv - 2BB6Ch)[ebx]", "mov     ds:(ops_6593 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_raw_stat - 2BB6Ch)[ebx]", "mov     ds:(dword_2C490 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_raw_getargs - 2BB6Ch)[ebx]", "mov     ds:(dword_2C494 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_raw_reply - 2BB6Ch)[ebx]", "mov     ds:(dword_2C498 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_raw_freeargs - 2BB6Ch)[ebx]", "mov     ds:(dword_2C49C - 2BB6Ch)[ebx], eax", "lea     eax, (svc_raw_destroy - 2BB6Ch)[ebx]", "mov     ds:(dword_2C4A0 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_raw_control - 2BB6Ch)[ebx]", "mov     ds:(ops2_6594 - 2BB6Ch)[ebx], eax", "jmp     loc_160D6"], ["mov     [esp+2Ch+var_20], edx", "push    ecx", "push    ecx", "push    1; size", "push    2260h; nmemb", "call    _calloc", "mov     edx, [esp+3Ch+var_20]", "add     esp, 10h", "mov     [edx], eax", "jmp     loc_16172"], ["sub     esp, 0Ch", "push    srp; ptr", "xor     srp, srp", "call    _free", "mov     [esp+3Ch+mutex], edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     loc_16124"], ["sub     esp, 0Ch", "push    edi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     loc_16124"]], "svc_run": [["push    ebp", "xor     eax, eax", "push    edi", "push    esi", "xor     esi, esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     edi, ds:(svc_pollfd_ptr - 2BB6Ch)[ebx]", "mov     ecx, ds:(svc_max_pollfd_ptr - 2BB6Ch)[ebx]", "mov     [esp+2Ch+var_28], ecx", "mov     [esp+2Ch+var_24], edi", "mov     [esp+2Ch+var_20], edi"], ["mov     edi, [esp+2Ch+var_28]", "mov     edi, [edi]", "test    max_pollfd, max_pollfd", "jnz     short loc_162B0"], ["mov     ecx, [esp+2Ch+var_20]", "mov     edx, [ecx]", "test    edx, edx", "jz      loc_16334"], ["test    last_max_pollfd, last_max_pollfd", "jz      loc_16348"], ["push    eax", "push    eax", "push    0; size", "push    my_pollfd; ptr", "call    _realloc", "add     esp, 10h", "test    new_pollfd, new_pollfd", "jnz     loc_16372"], ["sub     esp, 0Ch", "lea     new_pollfd, (aSvcRunOutOfMem - 2BB6Ch)[ebx]; \"svc_run: - out of memory\"", "push    eax; format", "call    _warn", "add     esp, 10h", "jmp     loc_16334"], ["mov     ebp, max_pollfd", "cmp     last_max_pollfd, max_pollfd", "jnz     loc_16350"], ["test    max_pollfd, max_pollfd", "jle     short loc_162EE"], ["mov     eax, [esp+2Ch+var_24]", "mov     edx, my_pollfd", "mov     [esp+2Ch+var_2C], my_pollfd", "mov     eax, [eax]", "lea     ecx, [eax+max_pollfd*8]", "lea     esi, [esi+0]"], ["mov     esi, [eax]", "add     eax, 8", "mov     [edx], esi", "mov     esi, [eax-4]", "mov     [edx+4], si", "mov     word ptr [edx+6], 0", "add     edx, 8", "cmp     eax, ecx", "jnz     short loc_162D0"], ["mov     esi, [esp+2Ch+var_2C]"], ["push    ecx", "push    0FFFFFFFFh; timeout", "push    ebp; nfds", "push    esi; fds", "call    _poll", "add     esp, 10h", "cmp     i, 0FFFFFFFFh", "jz      short loc_16318"], ["test    i, i", "jz      short loc_16310"], ["push    edx", "push    edx", "push    i; int", "push    esi; struct pollfd *", "call    _svc_getreq_poll", "add     esp, 10h"], ["mov     eax, max_pollfd", "jmp     loc_1625E"], ["call    ___errno_location", "cmp     dword ptr [eax], 4", "jz      short loc_16310"], ["sub     esp, 0Ch", "lea     eax, (aSvcRunPollFail - 2BB6Ch)[ebx]; \"svc_run: - poll failed\"", "push    eax; format", "call    _warn", "add     esp, 10h"], ["sub     esp, 0Ch", "push    my_pollfd; ptr", "call    _free", "add     esp, 2Ch", "pop     ebx", "pop     my_pollfd", "pop     max_pollfd", "pop     ebp", "retn"], ["xor     ebp, ebp", "jmp     short loc_162EE"], ["push    eax", "push    eax", "lea     eax, ds:0[max_pollfd*8]", "push    eax; size", "push    my_pollfd; ptr", "call    _realloc", "add     esp, 10h", "test    new_pollfd, new_pollfd", "jz      loc_16293"], ["mov     my_pollfd, new_pollfd", "jmp     loc_162BA"], ["mov     my_pollfd, new_pollfd", "xor     ebp, ebp", "jmp     loc_162EE"]], "universal": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     eax, [esp+2Ch+rqstp]", "mov     ecx, [eax+8]", "test    ecx, ecx", "jz      loc_16520"], ["mov     [esp+2Ch+xdrbuf], ecx", "sub     esp, 0Ch", "mov     ebp, [eax]", "mov     edi, [eax+4]", "lea     eax, (proglst_lock - 2BB6Ch)[ebx]", "mov     [esp+38h+mutex], eax", "push    eax; mutex", "call    _pthread_mutex_lock", "mov     esi, ds:(proglst_0 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    pl, pl", "jz      loc_164F0"], ["mov     ecx, [esp+2Ch+xdrbuf]", "jmp     short loc_16433"], ["mov     pl, [pl+28h]", "test    pl, pl", "jz      loc_164F0"], ["cmp     [pl+4], prog", "jnz     short loc_16428"], ["cmp     ecx, [pl+0Ch]", "jnz     short loc_16428"], ["cmp     [pl+8], vers", "jnz     short loc_16428"], ["mov     [esp+2Ch+xdrbuf], ecx", "push    eax", "push    eax", "mov     eax, [esp+34h+transp]", "mov     eax, [eax+34h]", "push    eax; s2", "mov     eax, [pl+14h]", "push    eax; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "mov     ecx, [esp+2Ch+xdrbuf]", "jnz     short loc_16428"], ["mov     edx, [pl+18h]", "mov     [esp+2Ch+xdrbuf], edx", "mov     dword ptr [xdrbuf_0], 0", "push    eax", "mov     eax, [esp+30h+transp]", "mov     eax, [eax+8]", "push    xdrbuf_0", "mov     xdrbuf_0, [pl+20h]", "push    edx", "mov     ecx, [esp+38h+transp]", "push    ecx", "call    dword ptr [eax+8]", "add     esp, 10h", "test    eax, eax", "jz      loc_16573"], ["sub     esp, 0Ch", "mov     eax, [esp+38h+xdrbuf]", "push    eax", "call    dword ptr [pl]", "add     esp, 10h", "mov     ecx, [pl+24h]", "test    outdata, outdata", "jz      loc_16555"], ["push    edx", "push    outdata; xdr_location", "push    ecx; xdr_results", "mov     ecx, [esp+38h+transp]", "push    ecx; xprt", "call    _svc_sendreply", "add     esp, 10h", "test    eax, eax", "jz      loc_16590"], ["push    edx", "mov     eax, [esp+30h+transp]", "mov     ecx, [esp+30h+xdrbuf]", "mov     eax, [eax+8]", "push    ecx", "mov     pl, [pl+20h]", "push    esi", "mov     vers, [esp+38h+transp]", "push    edi", "call    dword ptr [eax+10h]", "pop     prog", "mov     eax, [esp+38h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     short loc_16511"], ["sub     esp, 0Ch", "mov     eax, [esp+38h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "add     esp, 0Ch", "lea     eax, (aRpcRpcRegNever - 2BB6Ch)[ebx]; \"rpc: rpc_reg: never registered prog %u \"...", "push    vers", "push    prog", "push    eax; format", "call    _warnx", "add     esp, 10h"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    eax", "mov     eax, ds:(xdr_void_ptr - 2BB6Ch)[ebx]", "push    0; xdr_location", "push    eax; xdr_results", "mov     edx, [esp+38h+transp]", "push    edx; xprt", "call    _svc_sendreply", "add     esp, 10h", "test    eax, eax", "jnz     short loc_16511"], ["sub     esp, 0Ch", "lea     eax, (aSvcSendreplyFa - 2BB6Ch)[ebx]; \"svc_sendreply failed\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     ecx, ds:(xdr_void_ptr - 2BB6Ch)[ebx]", "jz      loc_164A9"], ["sub     esp, 0Ch", "mov     pl, [esp+38h+mutex]", "push    esi; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     short loc_16511"], ["sub     esp, 0Ch", "mov     eax, [esp+38h+transp]", "push    eax; xprt", "call    _svcerr_decode", "pop     eax", "mov     eax, [esp+38h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     short loc_16511"], ["push    eax", "lea     eax, (aRpcRpcRegTroub - 2BB6Ch)[ebx]; \"rpc: rpc_reg trouble replying to prog %\"...", "push    vers", "push    prog", "push    eax; format", "call    _warnx", "pop     eax", "mov     eax, [esp+38h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "add     esp, 10h", "jmp     loc_16511"]], "rpc_reg": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 6Ch", "mov     eax, [esp+7Ch+progname]", "mov     edx, [esp+7Ch+procnum]", "mov     [esp+7Ch+var_54], eax", "mov     eax, [esp+7Ch+inproc]", "mov     [esp+7Ch+var_50], eax", "mov     eax, [esp+7Ch+outproc]", "mov     [esp+7Ch+var_4C], eax", "mov     eax, [esp+7Ch+nettype]", "mov     [esp+7Ch+nettype_0], eax", "mov     eax, large gs:14h", "mov     [esp+7Ch+var_20], eax", "xor     eax, eax", "test    edx, edx", "jz      loc_16A30"], ["mov     eax, [esp+7Ch+nettype_0]", "test    eax, eax", "jz      loc_16A21"], ["sub     esp, 0Ch", "mov     eax, [esp+88h+nettype_0]", "push    eax; nettype", "call    ___rpc_setconf", "mov     [esp+8Ch+handle], eax", "add     esp, 10h", "test    handle_0, handle_0", "jz      loc_16AB4"], ["sub     esp, 0Ch", "lea     handle_0, (proglst_lock - 2BB6Ch)[ebx]", "mov     [esp+88h+mutex], eax", "push    eax; mutex", "call    _pthread_mutex_lock", "lea     eax, (universal - 2BB6Ch)[ebx]", "mov     [esp+8Ch+dispatch], eax", "lea     eax, (rpc_reg_msg - 2BB6Ch)[ebx]; \"rpc_reg: \"", "add     esp, 10h", "mov     [esp+7Ch+done], 0", "mov     [esp+7Ch+var_48], eax", "lea     esi, [esi+0]", "nop"], ["sub     esp, 0Ch", "mov     eax, [esp+88h+handle]", "push    eax; vhandle", "call    ___rpc_getconf", "mov     [esp+8Ch+nconf], eax", "add     esp, 10h", "test    nconf_0, nconf_0", "jz      loc_169E7"], ["mov     esi, ds:(proglst_0 - 2BB6Ch)[ebx]", "test    pl, pl", "jz      loc_167F8"], ["mov     nconf_0, [esp+7Ch+nconf]", "mov     edi, pl", "mov     [esp+7Ch+svcxprt], pl", "mov     nconf_0, [nconf_0]", "mov     ebp, eax", "jmp     short loc_166C3"], ["mov     pl, [pl+28h]", "test    pl, pl", "jz      loc_167F8"], ["mov     esi, [pl+14h]", "push    eax", "push    eax", "push    ebp; s2", "push    esi; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_166B8"], ["mov     [esp+7Ch+var_60], eax", "mov     edx, [pl+18h]", "mov     eax, [pl+10h]", "mov     ecx, [pl+1Ch]", "mov     [esp+7Ch+netid], esi", "mov     [esp+7Ch+xdrbuf], edx", "mov     esi, [esp+7Ch+svcxprt]", "mov     [esp+7Ch+recvsz], ecx", "mov     [esp+7Ch+svcxprt], eax", "test    svcxprt_0, svcxprt_0", "jz      loc_167F8"], ["mov     edi, [esp+7Ch+prognum]", "mov     ebp, [esp+7Ch+versnum]", "jmp     short loc_1671B"], ["mov     pl, [pl+28h]", "test    pl, pl", "jz      loc_16940"], ["cmp     [pl+4], edi", "jnz     short loc_16710"], ["cmp     [pl+8], ebp", "jnz     short loc_16710"], ["push    eax", "push    eax", "mov     eax, [esp+84h+netid]", "push    eax; s2", "mov     eax, [pl+14h]", "push    eax; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_16710"], ["mov     [esp+7Ch+nconf], 0"], ["sub     esp, 0Ch", "mov     edx, [esp+88h+nconf]", "push    edx; nconf", "mov     ecx, [esp+8Ch+dispatch]", "push    ecx; dispatch", "mov     esi, [esp+90h+versnum]", "push    esi; vers", "mov     edi, [esp+94h+prognum]", "push    edi; prog", "mov     ebp, [esp+98h+svcxprt]", "push    ebp; xprt", "call    _svc_reg", "add     esp, 20h", "test    eax, eax", "jz      loc_16888"], ["sub     esp, 0Ch", "push    2Ch ; ','; size", "call    _malloc", "add     esp, 10h", "test    pl, pl", "jz      loc_16991"], ["mov     edx, [esp+7Ch+var_54]", "mov     ecx, [esp+7Ch+versnum]", "mov     [pl], edx", "mov     edx, [esp+7Ch+prognum]", "mov     [pl+4], edx", "mov     edx, [esp+7Ch+procnum]", "mov     [pl+0Ch], edx", "mov     edx, [esp+7Ch+var_4C]", "mov     [pl+8], ecx", "mov     [pl+24h], edx", "mov     ecx, [esp+7Ch+var_50]", "mov     edx, [esp+7Ch+xdrbuf]", "mov     [pl+20h], ecx", "mov     [pl+18h], edx", "mov     ecx, [esp+7Ch+svcxprt]", "mov     edx, [esp+7Ch+netid]", "mov     [pl+10h], ecx", "mov     [pl+14h], edx", "mov     ecx, [esp+7Ch+recvsz]", "mov     edx, ds:(proglst_0 - 2BB6Ch)[ebx]", "mov     [pl+1Ch], ecx", "mov     [pl+28h], edx", "mov     ds:(proglst_0 - 2BB6Ch)[ebx], pl", "mov     [esp+7Ch+done], 1", "jmp     loc_16678"], ["sub     esp, 0Ch", "push    0; recvsz", "push    0; sendsz", "push    0; bindaddr", "mov     esi, [esp+94h+nconf]", "push    esi; nconf", "push    0FFFFFFFFh; fd", "call    _svc_tli_create", "mov     [esp+9Ch+svcxprt], eax", "mov     ecx, svcxprt_0", "add     esp, 20h", "test    svcxprt_0, svcxprt_0", "jz      loc_16678"], ["push    edx", "push    edx", "mov     ecx, [ecx]", "lea     svcxprt_0, [esp+84h+si_0]", "push    eax; sip", "push    ecx; fd", "call    ___rpc_fd2sockinfo", "add     esp, 10h", "test    eax, eax", "jz      loc_16963"], ["push    eax", "push    0; size", "mov     eax, [esp+84h+si_0.si_proto]", "push    eax; proto", "mov     eax, [esp+88h+si_0.si_af]", "push    eax; af_0", "call    ___rpc_get_t_size", "mov     [esp+8Ch+recvsz], eax", "add     esp, 10h", "test    recvsz_0, recvsz_0", "jnz     loc_168E9"], ["lea     recvsz_0, (__reg_err3 - 2BB6Ch)[ebx]; \"unsupported transport size\"", "push    edi", "push    eax", "lea     eax, (rpc_reg_err - 2BB6Ch)[ebx]; \"%s: %s\"", "mov     ebp, [esp+84h+var_48]", "push    ebp", "push    eax; format", "call    _warnx", "mov     ecx, [esp+8Ch+svcxprt]", "mov     eax, [ecx+8]", "mov     [esp+8Ch+ptr], ecx", "call    dword ptr [eax+14h]", "add     esp, 10h", "jmp     loc_16678"], ["sub     esp, 0Ch", "mov     edi, [esp+88h+netid]", "push    edi", "mov     eax, [esp+8Ch+versnum]", "push    eax", "mov     eax, [esp+90h+prognum]", "push    eax", "mov     eax, [esp+94h+var_48]", "push    eax", "lea     eax, (aSCouldnTRegist - 2BB6Ch)[ebx]; \"%s couldn't register prog %u vers %u fo\"...", "push    eax; format", "call    _warnx", "mov     eax, [esp+9Ch+var_60]", "add     esp, 20h", "test    eax, eax", "jz      loc_16678"], ["sub     esp, 0Ch", "mov     ecx, [esp+88h+svcxprt]", "mov     eax, [ecx+8]", "push    ecx", "call    dword ptr [eax+14h]", "pop     ebp", "mov     eax, [esp+88h+xdrbuf]", "push    eax; ptr", "call    _free", "mov     [esp+8Ch+ptr], edi; ptr", "call    _free", "add     esp, 10h", "jmp     loc_16678"], ["sub     esp, 0Ch", "mov     esi, [esp+88h+recvsz]", "push    esi; size", "call    _malloc", "mov     [esp+8Ch+xdrbuf], eax", "add     esp, 10h", "test    xdrbuf_0, xdrbuf_0", "jz      loc_16A79"], ["sub     esp, 0Ch", "mov     xdrbuf_0, [esp+88h+nconf]", "mov     ecx, [eax]", "push    ecx; s", "call    _strdup", "mov     [esp+8Ch+netid], eax", "add     esp, 10h", "test    netid_0, netid_0", "jz      loc_16A79"], ["mov     esi, ds:(proglst_0 - 2BB6Ch)[ebx]", "mov     [esp+7Ch+var_60], 1", "test    pl, pl", "jnz     loc_166FF"], ["lea     pl, [pl+0]"], ["push    eax", "mov     edx, [esp+80h+nconf]", "push    edx; nconf", "mov     ecx, [esp+84h+versnum]", "push    ecx; version", "mov     pl, [esp+88h+prognum]", "push    esi; program", "call    _rpcb_unset", "add     esp, 10h", "jmp     loc_16744"], ["push    eax", "lea     eax, (__reg_err2 - 2BB6Ch)[ebx]; \"can't get protocol info\"", "push    eax", "mov     eax, [esp+84h+var_48]", "push    eax", "lea     eax, (rpc_reg_err - 2BB6Ch)[ebx]; \"%s: %s\"", "push    eax; format", "call    _warnx", "mov     edx, [esp+8Ch+svcxprt]", "mov     eax, [edx+8]", "mov     [esp+8Ch+ptr], edx", "call    dword ptr [eax+14h]", "add     esp, 10h", "jmp     loc_16678"], ["mov     edx, [esp+7Ch+var_60]", "mov     ebp, [esp+7Ch+netid]", "mov     [esp+7Ch+nconf], edx", "lea     pl, (__no_mem_str_1 - 2BB6Ch)[ebx]; \"out of memory\"", "push    esi", "push    eax", "lea     eax, (rpc_reg_msg - 2BB6Ch)[ebx]; \"rpc_reg: \"", "push    eax", "lea     eax, (rpc_reg_err - 2BB6Ch)[ebx]; \"%s: %s\"", "push    eax; format", "call    _warnx", "mov     edx, [esp+8Ch+nconf]", "add     esp, 10h", "test    edx, edx", "jz      short loc_169E7"], ["sub     esp, 0Ch", "mov     edx, [esp+88h+svcxprt]", "mov     eax, [edx+8]", "push    edx", "call    dword ptr [eax+14h]", "pop     edx", "mov     ecx, [esp+88h+xdrbuf]", "push    ecx; ptr", "call    _free", "mov     [esp+8Ch+ptr], ebp; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "mov     eax, [esp+88h+handle]", "push    eax; vhandle", "call    ___rpc_endconf", "pop     eax", "mov     eax, [esp+88h+mutex]", "push    eax; mutex", "call    _pthread_mutex_unlock", "mov     eax, [esp+8Ch+done]", "add     esp, 10h", "test    eax, eax", "jz      short loc_16A58"], ["xor     eax, eax"], ["mov     ecx, [esp+7Ch+var_20]", "xor     ecx, large gs:14h", "jnz     short loc_16A4E"], ["add     esp, 6Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     eax, (aNetpath - 2BB6Ch)[ebx]; \"netpath\"", "mov     [esp+7Ch+nettype_0], eax", "jmp     loc_16625"], ["push    eax", "lea     eax, (rpc_reg_msg - 2BB6Ch)[ebx]; \"rpc_reg: \"", "push    0", "push    eax", "lea     eax, (aSCanTReassignP - 2BB6Ch)[ebx]; \"%s can't reassign procedure number %u\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "or      eax, 0FFFFFFFFh", "jmp     short loc_16A0C"], ["call    __stack_chk_fail_local"], ["push    edi", "lea     eax, (rpc_reg_msg - 2BB6Ch)[ebx]; \"rpc_reg: \"", "mov     ebp, [esp+80h+nettype_0]", "push    ebp", "push    eax", "lea     eax, (aSCantFindSuita - 2BB6Ch)[ebx]; \"%s cant find suitable transport for %s\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "or      eax, 0FFFFFFFFh", "jmp     short loc_16A0C"], ["push    eax", "lea     eax, (__no_mem_str_1 - 2BB6Ch)[ebx]; \"out of memory\"", "push    eax", "lea     eax, (rpc_reg_msg - 2BB6Ch)[ebx]; \"rpc_reg: \"", "push    eax", "lea     eax, (rpc_reg_err - 2BB6Ch)[ebx]; \"%s: %s\"", "push    eax; format", "call    _warnx", "mov     ecx, [esp+8Ch+svcxprt]", "mov     eax, [ecx+8]", "mov     [esp+8Ch+ptr], ecx", "call    dword ptr [eax+14h]", "pop     eax", "mov     edx, [esp+88h+xdrbuf]", "push    edx; ptr", "call    _free", "add     esp, 10h", "jmp     loc_169E7"], ["push    eax", "lea     eax, (__reg_err1 - 2BB6Ch)[ebx]; \"can't find appropriate transport\"", "push    eax", "lea     eax, (rpc_reg_msg - 2BB6Ch)[ebx]; \"rpc_reg: \"", "push    eax", "lea     eax, (rpc_reg_err - 2BB6Ch)[ebx]; \"%s: %s\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "or      eax, 0FFFFFFFFh", "jmp     loc_16A0C"]], "svc_vc_rendezvous_control": [["mov     eax, [esp+xprt]", "mov     eax, [eax+5Ch]", "test    cfp, cfp", "jz      short loc_16B19"], ["cmp     [esp+rq], 3", "jz      short loc_16B30"], ["cmp     [esp+rq], 4", "jz      short loc_16B20"], ["xor     cfp, cfp", "retn"], ["mov     edx, [esp+in]", "mov     edx, [edx]", "mov     [cfp+8], edx", "mov     cfp, 1", "retn"], ["mov     ecx, [esp+in]", "mov     cfp, [cfp+8]", "mov     [ecx], eax", "mov     eax, 1", "retn"]], "write_vc_0": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "mov     eax, large gs:14h", "mov     [esp+4Ch+var_20], eax", "xor     eax, eax", "mov     ebp, [esp+4Ch+xprt]", "mov     edi, [esp+4Ch+buf]", "test    xprt_0, xprt_0", "jz      loc_16C2E"], ["mov     eax, [xprt_0+5Ch]", "mov     [esp+4Ch+var_44], eax", "mov     cd_0, [cd_0+1BCh]", "test    eax, eax", "jnz     loc_16C18"], ["mov     esi, [esp+4Ch+cnt]", "lea     eax, [esp+4Ch+tv1]", "mov     [esp+4Ch+tv], eax", "test    esi, esi", "jle     short loc_16BB3"], ["lea     cnt_0, [cnt_0+0]", "nop"], ["push    eax", "push    cnt_0; n", "push    buf_0; buf", "mov     eax, [xprt_0+0]", "push    eax; fd", "call    _write", "add     esp, 10h", "test    i, i", "js      short loc_16BC0"], ["sub     cnt_0, i", "add     buf_0, i", "test    esi, esi", "jg      short loc_16B98"], ["mov     eax, [esp+4Ch+cnt]", "jmp     short loc_16C03"], ["call    ___errno_location", "cmp     dword ptr [eax], 0Bh", "jnz     short loc_16BF6"], ["mov     eax, [esp+4Ch+var_44]", "mov     eax, [eax+1BCh]", "test    eax, eax", "jz      short loc_16BF6"], ["push    eax", "push    eax", "push    0; tz", "mov     edx, [esp+58h+tv]", "push    edx; tv", "call    _gettimeofday", "mov     eax, [esp+5Ch+tv1.tv_sec]", "mov     ecx, [esp+5Ch+tv0.tv_sec]", "sub     eax, ecx", "add     esp, 10h", "dec     eax", "jle     short loc_16B98"], ["mov     eax, [esp+4Ch+var_44]", "mov     dword ptr [eax], 0", "or      eax, 0FFFFFFFFh"], ["mov     edx, [esp+4Ch+var_20]", "xor     edx, large gs:14h", "jnz     short loc_16C4D"], ["add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     xprt_0", "retn"], ["push    eax", "push    eax", "push    0; tz", "lea     eax, [esp+58h+tv0]", "push    eax; tv", "call    _gettimeofday", "add     esp, 10h", "jmp     loc_16B83"], ["lea     eax, (__PRETTY_FUNCTION___8198 - 2BB6Ch)[ebx]; \"write_vc\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_14 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc_vc.c\"", "push    235h; line", "push    eax; file", "lea     eax, (aXprtNull - 2BB6Ch)[ebx]; \"xprt != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["call    __stack_chk_fail_local"]], "read_vc_0": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, [esp+3Ch+buf]", "mov     esi, [esp+3Ch+xprt]", "mov     [esp+3Ch+var_30], eax", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "test    xprt_0, xprt_0", "jz      loc_16D90"], ["mov     ebp, [xprt_0+5Ch]", "mov     edi, [xprt_0]", "mov     ecx, [cfp+1BCh]", "test    ecx, ecx", "jnz     short loc_16D00"], ["lea     eax, [esp+3Ch+pollfd]", "mov     [esp+3Ch+fds], eax"], ["mov     [esp+3Ch+pollfd.fd], sock", "mov     dword ptr [esp+3Ch+pollfd.events], 1", "push    eax", "push    88B8h; timeout", "push    1; nfds", "mov     eax, [esp+48h+fds]", "push    eax; fds", "call    _poll", "add     esp, 10h", "cmp     eax, 0FFFFFFFFh", "jz      short loc_16D38"], ["test    eax, eax", "jnz     short loc_16D42"], ["mov     eax, [xprt_0+5Ch]", "or      edi, 0FFFFFFFFh", "mov     dword ptr [eax], 0"], ["mov     eax, [esp+3Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_16DAF"], ["add     esp, 2Ch", "mov     eax, edi", "pop     ebx", "pop     xprt_0", "pop     edi", "pop     ebp", "retn"], ["call    ___errno_location", "mov     [esp+3Ch+fds], eax", "mov     dword ptr [eax], 0", "push    eax", "mov     eax, [esp+40h+len]", "push    eax; nbytes", "mov     edx, [esp+44h+var_30]", "push    edx; buf", "push    sock; fd", "call    _read", "add     esp, 10h", "mov     sock, eax", "test    len_0, len_0", "jns     short loc_16D88"], ["mov     edx, [esp+3Ch+fds]", "xor     edi, edi", "cmp     dword ptr [edx], 0Bh", "jz      short loc_16CDF"], ["jmp     short fatal_err"], ["call    ___errno_location", "cmp     dword ptr [eax], 4", "jnz     short fatal_err"], ["test    byte ptr [esp+3Ch+pollfd.revents], 1", "jz      loc_16CA9"], ["push    edx", "mov     ecx, [esp+40h+len]", "push    ecx; nbytes", "mov     eax, [esp+44h+var_30]", "push    eax; buf", "push    sock; fd", "call    _read", "add     esp, 10h", "mov     sock, eax", "test    len_0, len_0", "jle     fatal_err"], ["push    eax", "add     cfp, 1C0h", "push    eax", "push    0; tz", "push    ebp; tv", "call    _gettimeofday", "add     esp, 10h", "jmp     loc_16CDF"], ["jz      loc_16CDF"], ["jmp     short loc_16D6B"], ["lea     eax, (__PRETTY_FUNCTION___8178 - 2BB6Ch)[ebx]; \"read_vc\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_14 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc_vc.c\"", "push    1F2h; line", "push    eax; file", "lea     eax, (aXprtNull - 2BB6Ch)[ebx]; \"xprt != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["call    __stack_chk_fail_local"]], "svc_vc_reply": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     esi, [esp+2Ch+xprt]", "mov     eax, [esp+2Ch+msg]", "test    esi, esi", "jz      loc_16EA7"], ["test    eax, eax", "jz      loc_16E88"], ["mov     edx, [esi+5Ch]", "mov     edi, [eax+8]", "test    edi, edi", "lea     ebp, [cd+8]", "mov     ecx, [cd+4]", "jz      short loc_16E30"], ["mov     dword ptr [cd+8], 0", "mov     [eax], ecx", "push    edi", "push    edi", "push    eax; rmsg", "push    xdrs; xdrs", "call    _xdr_replymsg"], ["add     esp, 10h", "test    eax, eax", "setnz   al", "and     eax, 0FFh", "mov     edi, eax"], ["push    eax", "push    eax", "push    1; sendnow", "push    xdrs; xdrs", "call    _xdrrec_endofrecord", "add     esp, 2Ch", "mov     eax, rstat", "pop     ebx", "pop     esi", "pop     rstat", "pop     xdrs", "retn"], ["mov     edi, [eax+18h]", "test    edi, edi", "jnz     short loc_16DFA"], ["mov     edi, [eax+20h]", "mov     [esp+2Ch+xdr_results], edi", "mov     xdr_results_0, [eax+1Ch]", "mov     [esp+2Ch+xdr_location], edi", "mov     xdr_location_0, ds:(xdr_void_ptr - 2BB6Ch)[ebx]", "mov     [eax+20h], edi", "mov     dword ptr [eax+1Ch], 0", "mov     dword ptr [cd+8], 0", "mov     [eax], ecx", "push    edx", "push    edx", "push    eax; rmsg", "push    xdrs; xdrs", "call    _xdr_replymsg", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jz      short loc_16E1B"], ["mov     eax, [esi+64h]", "mov     ecx, [esp+2Ch+xdr_location]", "add     eax, 4", "mov     edx, [eax]", "push    ecx", "mov     esi, [esp+30h+xdr_results]", "push    esi", "push    xdrs", "push    eax", "call    dword ptr [edx]", "jmp     short loc_16E0C"], ["lea     eax, (__PRETTY_FUNCTION___8237 - 2BB6Ch)[ebx]; \"svc_vc_reply\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_14 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc_vc.c\"", "push    2B9h; line", "push    eax; file", "lea     eax, (aCmsgNull+1 - 2BB6Ch)[ebx]; \"msg != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___8237 - 2BB6Ch)[ebx]; \"svc_vc_reply\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_14 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc_vc.c\"", "push    2B8h; line", "push    eax; file", "lea     eax, (aXprtNull - 2BB6Ch)[ebx]; \"xprt != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "makefd_xprt": [["push    ebp", "push    edi", "mov     edi, fd", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "mov     [esp+4Ch+cd], sendsize_0", "mov     [esp+4Ch+recvsize], recvsize_0", "mov     fd, large gs:14h", "mov     [esp+4Ch+var_20], fd", "xor     fd, fd", "cmp     fd, 0FFFFFFFFh", "jz      loc_170F7"], ["push    eax", "push    eax", "push    6Ch ; 'l'; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     esi, eax", "test    xprt, xprt", "jz      loc_170E0"], ["push    eax", "push    eax", "push    0Ch; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     ebp, eax", "test    ext, ext", "jz      loc_170BF"], ["push    eax", "push    eax", "push    1C8h; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "test    cd_0, cd_0", "jz      loc_17096"], ["mov     dword ptr [cd_0], 2", "push    edx", "push    edx", "lea     edx, (write_vc_0 - 2BB6Ch)[ebx]", "push    edx; writeit", "lea     edx, (read_vc_0 - 2BB6Ch)[ebx]", "push    edx; readit", "push    xprt; tcp_handle", "mov     ecx, [esp+60h+recvsize]", "push    ecx; recvsize", "mov     edx, [esp+64h+cd]", "push    edx; sendsize", "lea     edx, [cd_0+8]", "mov     [esp+68h+cd], cd_0", "push    edx; xdrs", "call    _xdrrec_create", "mov     eax, [esp+6Ch+cd]", "mov     [xprt+5Ch], eax", "add     esp, 14h", "add     eax, 20h ; ' '", "mov     [xprt+64h], ext", "mov     [xprt+54h], eax", "lea     ext, (ops_lock - 2BB6Ch)[ebx]", "push    ebp; mutex", "call    _pthread_mutex_lock", "mov     ecx, ds:(ops_8241 - 2BB6Ch)[ebx]", "add     esp, 10h", "test    ecx, ecx", "jz      loc_17038"], ["lea     eax, (ops_8241 - 2BB6Ch)[ebx]", "sub     esp, 0Ch", "mov     [xprt+8], eax", "lea     eax, (ops2_8242 - 2BB6Ch)[ebx]", "mov     [xprt+2Ch], eax", "push    ebp; mutex", "call    _pthread_mutex_unlock", "mov     word ptr [xprt+4], 0", "mov     [xprt], fd", "pop     ecx", "pop     ebp", "lea     ebp, [esp+54h+si_0]", "push    ebp; sip", "push    fd; fd", "call    ___rpc_fd2sockinfo", "add     esp, 10h", "test    eax, eax", "jnz     short loc_17008"], ["sub     esp, 0Ch", "push    xprt; xprt", "call    _xprt_register", "add     esp, 10h"], ["mov     eax, [esp+4Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_17091"], ["add     esp, 3Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     fd", "pop     ebp", "retn"], ["push    edx", "push    edx", "lea     eax, [esp+54h+netid]", "push    eax; netid", "push    ebp; sip", "call    ___rpc_sockinfo2netid", "add     esp, 10h", "test    eax, eax", "jz      short loc_16FDF"], ["sub     esp, 0Ch", "mov     eax, [esp+58h+netid]", "push    eax; s", "call    _strdup", "add     esp, 10h", "mov     [xprt+34h], eax", "jmp     short loc_16FDF"], ["lea     eax, (svc_vc_recv - 2BB6Ch)[ebx]", "mov     ds:(ops_8241 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_vc_stat - 2BB6Ch)[ebx]", "mov     ds:(dword_2C4B4 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_vc_getargs - 2BB6Ch)[ebx]", "mov     ds:(dword_2C4B8 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_vc_reply - 2BB6Ch)[ebx]", "mov     ds:(dword_2C4BC - 2BB6Ch)[ebx], eax", "lea     eax, (svc_vc_freeargs - 2BB6Ch)[ebx]", "mov     ds:(dword_2C4C0 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_vc_destroy - 2BB6Ch)[ebx]", "mov     ds:(dword_2C4C4 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_vc_control - 2BB6Ch)[ebx]", "mov     ds:(ops2_8242 - 2BB6Ch)[ebx], eax", "jmp     loc_16FA8"], ["call    __stack_chk_fail_local"], ["sub     esp, 0Ch", "lea     cd_0, (aSvcVcMakefdXpr - 2BB6Ch)[ebx]; \"svc_vc: makefd_xprt: out of memory\"", "push    eax; format", "call    _warnx", "mov     [esp+5Ch+ptr], ext; ptr", "call    _free", "mov     [esp+5Ch+ptr], xprt; ptr", "call    _free", "xor     esi, esi", "add     esp, 10h", "jmp     done"], ["sub     esp, 0Ch", "lea     ext, (aSvcVcMakefdXpr - 2BB6Ch)[ebx]; \"svc_vc: makefd_xprt: out of memory\"", "push    eax; format", "call    _warnx", "mov     [esp+5Ch+ptr], xprt; ptr", "call    _free", "xor     esi, esi", "add     esp, 10h", "jmp     done"], ["sub     esp, 0Ch", "lea     xprt, (aSvcVcMakefdXpr - 2BB6Ch)[ebx]; \"svc_vc: makefd_xprt: out of memory\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     done"], ["lea     eax, (__PRETTY_FUNCTION___8121 - 2BB6Ch)[ebx]; \"makefd_xprt\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_14 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc_vc.c\"", "push    112h; line", "push    eax; file", "lea     eax, (aFd1 - 2BB6Ch)[ebx]; \"fd != -1\"", "push    eax; assertion", "call    ___assert_fail"]], "svc_vc_destroy": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     esi, [esp+1Ch+xprt]", "test    esi, esi", "jz      loc_172EC"], ["sub     esp, 0Ch", "push    esi; xprt", "call    _xprt_unregister", "mov     eax, [esi]", "add     esp, 10h", "mov     edi, [esi+64h]", "mov     ebp, [esi+5Ch]", "cmp     eax, 0FFFFFFFFh", "jz      short loc_17233"], ["sub     esp, 0Ch", "push    eax; fd", "call    _close", "add     esp, 10h"], ["mov     edx, [esi+8]", "lea     eax, (rendezvous_request - 2BB6Ch)[ebx]", "cmp     [edx], eax", "jz      loc_172D8"], ["mov     eax, [ebp+0Ch]", "mov     eax, [eax+1Ch]", "test    eax, eax", "jz      short loc_1725A"], ["sub     esp, 0Ch", "lea     edx, [ebp+8]", "push    edx", "call    eax", "add     esp, 10h"], ["sub     esp, 0Ch", "push    ebp; ptr", "call    _free", "add     esp, 10h"], ["test    edi, edi", "jz      short loc_17276"], ["sub     esp, 0Ch", "push    edi; ptr", "call    _free", "add     esp, 10h"], ["mov     eax, [esi+4Ch]", "test    eax, eax", "jz      short loc_17289"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["mov     eax, [esi+40h]", "test    eax, eax", "jz      short loc_1729C"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["mov     eax, [esi+30h]", "test    eax, eax", "jz      short loc_172AF"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["mov     eax, [esi+34h]", "test    eax, eax", "jz      short loc_172C2"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "push    esi; ptr", "call    _free", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "mov     eax, [esi+5Ch]", "push    eax; ptr", "call    _free", "add     esp, 10h", "jmp     loc_17266"], ["lea     eax, (__PRETTY_FUNCTION___8143 - 2BB6Ch)[ebx]; \"svc_vc_destroy\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_14 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc_vc.c\"", "push    18Dh; line", "push    eax; file", "lea     eax, (aXprtNull - 2BB6Ch)[ebx]; \"xprt != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "svc_vc_recv": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     eax, [esp+1Ch+xprt]", "mov     esi, [esp+1Ch+msg]", "test    eax, eax", "jz      loc_17443"], ["test    esi, esi", "jz      loc_17424"], ["mov     edi, [eax+5Ch]", "mov     eax, [cd+1BCh]", "lea     ebp, [cd+8]", "test    eax, eax", "jnz     short loc_173E0"], ["mov     dword ptr [cd+8], 1"], ["sub     esp, 0Ch", "push    xdrs; xdrs", "call    _xdrrec_skiprecord", "add     esp, 10h", "push    eax", "push    eax", "push    esi; cmsg", "push    xdrs; xdrs", "call    _xdr_callmsg", "add     esp, 10h", "test    eax, eax", "jnz     short loc_17412"], ["mov     dword ptr [cd], 0"], ["add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     cd", "pop     xdrs", "retn"], ["push    ecx", "push    1; expectdata", "push    cd; statp", "push    xdrs; xdrs", "call    __xdrrec_getrec", "add     esp, 10h", "test    eax, eax", "jz      short loc_173D3"], ["mov     edx, [cd+1BCh]", "mov     dword ptr [cd+8], 1", "test    edx, edx", "jz      short loc_173B1"], ["push    eax", "push    eax", "push    esi; cmsg", "push    xdrs; xdrs", "call    _xdr_callmsg", "add     esp, 10h", "test    eax, eax", "jz      short loc_173CD"], ["mov     eax, [esi]", "mov     [cd+4], eax", "add     esp, 0Ch", "mov     eax, 1", "pop     ebx", "pop     esi", "pop     cd", "pop     xdrs", "retn"], ["lea     eax, (__PRETTY_FUNCTION___8213 - 2BB6Ch)[ebx]; \"svc_vc_recv\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_14 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc_vc.c\"", "push    270h; line", "push    eax; file", "lea     eax, (aCmsgNull+1 - 2BB6Ch)[ebx]; \"msg != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___8213 - 2BB6Ch)[ebx]; \"svc_vc_recv\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_14 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc_vc.c\"", "push    26Fh; line", "push    eax; file", "lea     eax, (aXprtNull - 2BB6Ch)[ebx]; \"xprt != NULL\"", "push    eax; assertion", "call    ___assert_fail"]], "__xprt_set_raddr": [["push    edi", "push    esi", "mov     esi, [esp+8+ss_0]", "mov     eax, [esp+8+xprt]", "mov     edx, [esi]", "cmp     dx, 2", "jz      short loc_174C0"], ["cmp     dx, 0Ah", "jnz     short loc_174E8"], ["lea     edi, [eax+10h]", "mov     edx, 1Ch", "test    al, 1", "jnz     loc_17518"], ["test    edi, 2", "jnz     loc_17530"], ["mov     ecx, edx", "shr     ecx, 2", "rep movsd", "test    dl, 2", "jnz     short loc_17500"], ["and     edx, 1", "jnz     short loc_174F8"], ["mov     dword ptr [xprt_0+0Ch], 1Ch", "pop     esi", "pop     edi", "retn"], ["mov     ecx, [ss_0_0]", "mov     [xprt_0+10h], ecx", "mov     ecx, [ss_0_0+4]", "mov     [xprt_0+14h], ecx", "mov     ecx, [ss_0_0+8]", "mov     [xprt_0+18h], ecx", "mov     ecx, [ss_0_0+0Ch]", "mov     dword ptr [xprt_0+0Ch], 10h", "mov     [xprt_0+1Ch], ecx", "pop     ss_0_0", "pop     edi", "retn"], ["mov     word ptr [xprt_0+10h], 0", "mov     dword ptr [xprt_0+0Ch], 10h", "pop     ss_0_0", "pop     edi", "retn"], ["mov     dl, [esi+ecx]", "mov     [edi+ecx], dl", "jmp     short loc_174B5"], ["mov     cx, [esi]", "and     edx, 1", "mov     [edi], cx", "mov     ecx, 2", "jz      short loc_174B5"], ["jmp     short loc_174F8"], ["mov     cl, [ss_0_0]", "lea     edi, [xprt_0+11h]", "mov     [xprt_0+10h], cl", "inc     ss_0_0", "mov     edx, 1Bh", "jmp     loc_17498"], ["mov     cx, [esi]", "add     edi, 2", "mov     [edi-2], cx", "add     esi, 2", "sub     edx, 2", "jmp     loc_174A4"]], "rendezvous_request": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0BCh", "mov     edx, large gs:14h", "mov     [esp+0CCh+var_20], edx", "xor     edx, edx", "mov     edi, [esp+0CCh+xprt]", "mov     eax, [esp+0CCh+msg]", "test    edi, edi", "jz      loc_17729"], ["test    eax, eax", "jz      loc_1770A"], ["mov     eax, [edi+5Ch]", "lea     esi, [esp+0CCh+len]", "mov     [esp+0CCh+r], eax", "lea     ebp, [esp+0CCh+addr]", "mov     [esp+0CCh+optval], esi", "jmp     short again"], ["call    ___errno_location", "cmp     dword ptr [eax], 4", "jnz     loc_1766D"], ["mov     [esp+0CCh+len], 80h", "push    eax", "push    esi; addr_len", "mov     eax, [edi]", "push    ebp; addr", "push    eax; fd", "call    _accept", "add     esp, 10h", "test    sock, sock", "js      short loc_175A8"], ["mov     esi, sock", "mov     sock, [esp+0CCh+r]", "mov     ecx, [eax+4]; recvsize", "mov     edx, [eax]; sendsize", "mov     eax, sock; fd", "call    makefd_xprt", "mov     edi, eax", "test    newxprt, newxprt", "jz      loc_1766D"], ["push    ecx", "mov     newxprt, [esp+0D0h+len]", "push    eax; len", "lea     eax, [newxprt+44h]", "push    ebp; ptr", "push    eax; nb", "call    __rpc_set_netbuf", "add     esp, 10h", "test    eax, eax", "jz      short loc_1766D"], ["push    eax", "push    eax", "push    ebp; ss_0", "push    newxprt; xprt", "call    __xprt_set_raddr", "pop     eax", "pop     edx", "lea     eax, [esp+0D4h+si_0]", "push    eax; sip", "push    sock; fd", "call    ___rpc_fd2sockinfo", "add     esp, 10h", "test    eax, eax", "jz      short loc_1762B"], ["cmp     [esp+0CCh+si_0.si_proto], 6", "jz      loc_176E6"], ["mov     edx, [esp+0CCh+r]", "mov     newxprt, [newxprt+5Ch]", "mov     eax, [edx+4]", "mov     [cd+1B4h], eax", "mov     eax, [edx]", "mov     [cd+1B0h], eax", "mov     eax, [edx+8]", "mov     [cd+1B8h], eax", "test    eax, eax", "jnz     short loc_1768E"], ["mov     dword ptr [cd+1BCh], 0"], ["push    eax", "add     cd, 1C0h", "push    eax", "push    0; tz", "push    edi; tv", "call    _gettimeofday", "add     esp, 10h"], ["mov     eax, [esp+0CCh+var_20]", "xor     eax, large gs:14h", "jnz     loc_17748"], ["add     esp, 0BCh", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    ebp", "push    0", "push    3; cmd", "push    sock; fd", "call    _fcntl", "add     esp, 10h", "cmp     flags, 0FFFFFFFFh", "jz      short loc_1766D"], ["or      ah, 8", "push    ecx", "push    eax", "push    4; cmd", "push    sock; fd", "call    _fcntl", "add     esp, 10h", "inc     eax", "jz      short loc_1766D"], ["mov     eax, [cd+1B8h]", "cmp     [cd+1B4h], eax", "jbe     short loc_176C8"], ["mov     [cd+1B4h], eax"], ["mov     dword ptr [cd+1BCh], 1", "push    edx", "push    edx", "push    eax; maxrec", "lea     eax, [cd+8]", "push    eax; xdrs", "call    __xdrrec_setnonblock", "add     esp, 10h", "jmp     loc_1765A"], ["mov     [esp+0CCh+len], 1", "sub     esp, 0Ch", "push    4; optlen", "mov     eax, [esp+0DCh+optval]", "push    eax; optval", "push    1; optname", "push    6; level", "push    sock; fd", "call    _setsockopt", "add     esp, 20h", "jmp     loc_1762B"], ["lea     eax, (__PRETTY_FUNCTION___8135 - 2BB6Ch)[ebx]; \"rendezvous_request\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_14 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc_vc.c\"", "push    14Ah; line", "push    eax; file", "lea     eax, (aCmsgNull+1 - 2BB6Ch)[ebx]; \"msg != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["lea     eax, (__PRETTY_FUNCTION___8135 - 2BB6Ch)[ebx]; \"rendezvous_request\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_14 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc_vc.c\"", "push    149h; line", "push    eax; file", "lea     eax, (aXprtNull - 2BB6Ch)[ebx]; \"xprt != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["call    __stack_chk_fail_local"]], "svc_vc_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0C4h", "mov     eax, large gs:14h", "mov     [esp+0D4h+var_20], eax", "xor     eax, eax", "push    0Ch; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "test    r, r", "jz      loc_179D4"], ["push    ebp", "mov     esi, r", "push    ebp", "lea     r, [esp+0D4h+si_0]", "push    eax; sip", "mov     eax, [esp+0D8h+fd]", "push    eax; fd", "call    ___rpc_fd2sockinfo", "add     esp, 10h", "test    eax, eax", "jz      loc_17918"], ["push    ebp", "mov     eax, [esp+0D0h+sendsize]", "push    eax; size", "mov     eax, [esp+0D4h+si_0.si_proto]", "push    eax; proto", "mov     eax, [esp+0D8h+si_0.si_af]", "push    eax; af_0", "call    ___rpc_get_t_size", "add     esp, 0Ch", "mov     [r], eax", "mov     eax, [esp+0D0h+recvsize]", "push    eax; size", "mov     eax, [esp+0D4h+si_0.si_proto]", "push    eax; proto", "mov     edx, [esp+0D8h+si_0.si_af]", "push    edx; af_0", "call    ___rpc_get_t_size", "mov     [r+4], eax", "lea     eax, (__svc_maxrec - 2BB6Ch)[ebx]", "mov     eax, [eax]", "mov     [r+8], eax", "pop     ecx", "pop     edi", "push    6Ch ; 'l'; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     ebp, eax", "test    eax, eax", "jz      loc_17A1B"], ["push    edi", "push    edi", "push    0Ch; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     edi, eax", "test    ext, ext", "jz      loc_179F2"], ["mov     [ebp+64h], ext", "mov     ext, ds:(_null_auth_ptr - 2BB6Ch)[ebx]", "sub     esp, 0Ch", "mov     dword ptr [ebp+30h], 0", "mov     ecx, [eax]", "mov     [ebp+5Ch], r", "mov     [ebp+50h], ecx", "mov     ecx, [eax+4]", "mov     [ebp+54h], ecx", "mov     eax, [eax+8]", "lea     ecx, (ops_lock - 2BB6Ch)[ebx]", "mov     dword ptr [ebp+60h], 0", "mov     [ebp+58h], eax", "push    ecx; mutex", "mov     [esp+0DCh+mutex], ecx", "call    _pthread_mutex_lock", "add     esp, 10h", "mov     ecx, ds:(ops_8248 - 2BB6Ch)[ebx]", "test    ecx, ecx", "mov     ecx, [esp+0CCh+mutex]", "jz      loc_17938"], ["sub     esp, 0Ch", "lea     eax, (ops_8248 - 2BB6Ch)[ebx]", "mov     [ebp+8], eax", "lea     eax, (ops2_8249 - 2BB6Ch)[ebx]", "mov     [ebp+2Ch], eax", "push    ecx; mutex", "call    _pthread_mutex_unlock", "mov     eax, [esp+0DCh+fd]", "lea     ecx, [esp+0DCh+sslocal]", "mov     [esp+0DCh+slen], 80h", "add     esp, 0Ch", "mov     [ebp+0], eax", "mov     word ptr [ebp+4], 0FFFFh", "lea     eax, [esp+0D0h+slen]", "push    eax; len", "push    ecx; addr", "mov     edx, [esp+0D8h+fd]", "mov     [esp+0D8h+mutex], ecx", "push    edx; fd", "call    _getsockname", "add     esp, 10h", "test    eax, eax", "mov     ecx, [esp+0CCh+mutex]", "js      loc_17988"], ["push    eax", "lea     eax, [ebp+38h]", "push    80h; len", "push    ecx; ptr", "push    eax; nb", "call    __rpc_set_netbuf", "add     esp, 10h", "test    eax, eax", "jz      loc_179C0"], ["sub     esp, 0Ch", "push    ebp; xprt", "call    _xprt_register", "add     esp, 10h"], ["mov     eax, [esp+0CCh+var_20]", "xor     eax, large gs:14h", "jnz     loc_179ED"], ["add     esp, 0BCh", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     eax, (aSvcVcCreateRpc - 2BB6Ch)[ebx]; \"svc_vc_create: __rpc_fd2sockinfo failed\""], ["push    eax; format", "xor     ebp, ebp", "call    _warnx", "mov     [esp+0DCh+ptr], r; ptr", "call    _free", "add     esp, 10h", "jmp     short loc_178F5"], ["lea     eax, (rendezvous_request - 2BB6Ch)[ebx]", "mov     ds:(ops_8248 - 2BB6Ch)[ebx], eax", "lea     eax, (rendezvous_stat - 2BB6Ch)[ebx]", "mov     ds:(dword_2C4D0 - 2BB6Ch)[ebx], eax", "mov     eax, ds:(abort_ptr - 2BB6Ch)[ebx]", "mov     ds:(dword_2C4D4 - 2BB6Ch)[ebx], eax", "mov     ds:(dword_2C4D8 - 2BB6Ch)[ebx], eax", "mov     ds:(dword_2C4DC - 2BB6Ch)[ebx], eax", "lea     eax, (svc_vc_destroy - 2BB6Ch)[ebx]", "mov     ds:(dword_2C4E0 - 2BB6Ch)[ebx], eax", "lea     eax, (svc_vc_rendezvous_control - 2BB6Ch)[ebx]", "mov     ds:(ops2_8249 - 2BB6Ch)[ebx], eax", "jmp     loc_1786E"], ["sub     esp, 0Ch", "lea     eax, (aSvcVcCreateCou - 2BB6Ch)[ebx]; \"svc_vc_create: could not retrieve local\"...", "push    eax; format", "call    _warnx", "add     esp, 10h"], ["sub     esp, 0Ch", "push    r; ptr", "call    _free", "mov     [esp+0DCh+ptr], ebp; ptr", "call    _free", "xor     ebp, ebp", "mov     [esp+0DCh+ptr], ext; ptr", "call    _free", "add     esp, 10h", "jmp     loc_178F5"], ["sub     esp, 0Ch", "lea     eax, (aSvcVcCreateNoM - 2BB6Ch)[ebx]; \"svc_vc_create: no mem for local addr\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     short loc_1799A"], ["sub     esp, 0Ch", "lea     r, (aSvcVcCreateOut - 2BB6Ch)[ebx]; \"svc_vc_create: out of memory\"", "xor     ebp, ebp", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     loc_178F5"], ["call    __stack_chk_fail_local"], ["sub     esp, 0Ch", "lea     ext, (aSvcVcCreateOut - 2BB6Ch)[ebx]; \"svc_vc_create: out of memory\"", "push    eax; format", "call    _warnx", "mov     [esp+0DCh+ptr], r; ptr", "call    _free", "mov     [esp+0DCh+ptr], ebp; ptr", "call    _free", "xor     ebp, ebp", "add     esp, 10h", "jmp     loc_178F5"], ["sub     esp, 0Ch", "lea     eax, (aSvcVcCreateOut - 2BB6Ch)[ebx]; \"svc_vc_create: out of memory\"", "jmp     loc_17921"]], "svc_fd_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 9Ch", "mov     eax, large gs:14h", "mov     [esp+0ACh+var_20], eax", "xor     eax, eax", "cmp     [esp+0ACh+fd], 0FFFFFFFFh", "jz      loc_17B89"], ["mov     ecx, [esp+0ACh+recvsize]; recvsize", "mov     edx, [esp+0ACh+sendsize]; sendsize", "mov     eax, [esp+0ACh+fd]; fd", "call    makefd_xprt", "mov     esi, eax", "test    ret, ret", "jz      loc_17B35"], ["mov     [esp+0ACh+slen], 80h", "lea     edi, [esp+0ACh+ss_0]", "push    eax", "lea     ebp, [esp+0B0h+slen]", "push    ebp; len", "push    edi; addr", "mov     eax, [esp+0B8h+fd]", "push    eax; fd", "call    _getsockname", "add     esp, 10h", "test    eax, eax", "js      short loc_17B10"], ["push    eax", "lea     eax, [ret+38h]", "push    80h; len", "push    edi; ptr", "push    eax; nb", "call    __rpc_set_netbuf", "add     esp, 10h", "test    eax, eax", "jz      loc_17B70"], ["mov     [esp+0ACh+slen], 80h", "push    ecx", "push    ebp; len", "push    edi; addr", "mov     ebp, [esp+0B8h+fd]", "push    ebp; fd", "call    _getpeername", "add     esp, 10h", "test    eax, eax", "js      short loc_17B58"], ["push    edx", "lea     eax, [ret+44h]", "push    80h; len", "push    edi; ptr", "push    eax; nb", "call    __rpc_set_netbuf", "add     esp, 10h", "test    eax, eax", "jz      short loc_17B70"], ["push    eax", "push    eax", "push    edi; ss_0", "push    ret; xprt", "call    __xprt_set_raddr", "add     esp, 10h", "jmp     short loc_17B37"], ["sub     esp, 0Ch", "lea     eax, (aSvcFdCreateCou - 2BB6Ch)[ebx]; \"svc_fd_create: could not retrieve local\"...", "push    eax; format", "call    _warnx", "add     esp, 10h"], ["mov     eax, [ret+40h]", "test    eax, eax", "jz      short loc_17B35"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["xor     ret, ret"], ["mov     eax, [esp+0ACh+var_20]", "xor     eax, large gs:14h", "jnz     short loc_17B84"], ["add     esp, 9Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     eax, (aSvcFdCreateCou_0 - 2BB6Ch)[ebx]; \"svc_fd_create: could not retrieve remot\"...", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     short freedata"], ["sub     esp, 0Ch", "lea     eax, (aSvcFdCreateNoM - 2BB6Ch)[ebx]; \"svc_fd_create: no mem for local addr\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     short freedata"], ["call    __stack_chk_fail_local"], ["lea     eax, (__PRETTY_FUNCTION___8109 - 2BB6Ch)[ebx]; \"svc_fd_create\"", "push    eax; function", "lea     eax, (aLibtirpc126Src_14 - 2BB6Ch)[ebx]; \"../../libtirpc-1.2.6/src/svc_vc.c\"", "push    0E0h; line", "push    eax; file", "lea     eax, (aFd1 - 2BB6Ch)[ebx]; \"fd != -1\"", "push    eax; assertion", "call    ___assert_fail"]], "__rpc_get_local_uid": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 14h", "mov     ecx, large gs:14h", "mov     [esp+1Ch+var_10], ecx", "xor     ecx, ecx", "mov     eax, [esp+1Ch+transp]", "mov     esi, [esp+1Ch+uid]", "mov     edx, [eax]", "mov     eax, [eax+4Ch]", "cmp     word ptr [sa], 1", "jnz     short loc_17C18"], ["push    eax", "lea     eax, [esp+20h+egid]", "push    eax; egid", "lea     eax, [esp+24h+euid]", "push    eax; euid", "push    sock; s", "call    getpeereid", "add     esp, 10h", "test    ret, ret", "jz      short loc_17C10"], ["mov     ecx, [esp+1Ch+var_10]", "xor     ecx, large gs:14h", "jnz     short loc_17C1D"], ["add     esp, 14h", "pop     ebx", "pop     esi", "retn"], ["mov     edx, [esp+1Ch+euid]", "mov     [esi], edx", "jmp     short loc_17BF8"], ["or      sa, 0FFFFFFFFh", "jmp     short loc_17BF8"], ["call    __stack_chk_fail_local"]], "uaddr_to_sockaddr": [["push    edi", "push    esi", "mov     esi, sin", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 20h", "mov     edi, large gs:14h", "mov     [esp+2Ch+var_10], edi", "xor     edi, edi", "lea     sin, [esp+2Ch+a+14h]", "lea     edi, [esp+2Ch+a]", "push    edx", "lea     edx, [esp+30h+a+10h]", "push    edx", "lea     edx, [esp+34h+a+0Ch]", "push    edx", "lea     edx, [esp+38h+a+8]", "push    edx", "lea     edx, [esp+3Ch+a+4]", "push    edx", "lea     edx, (aLuLuLuLuLuLu - 2BB6Ch)[ebx]; \"%lu.%lu.%lu.%lu.%lu.%lu\"", "push    edi", "push    edx", "push    uaddr", "call    ___isoc99_sscanf", "add     esp, 20h", "cmp     i, 5", "jle     short loc_17D80"], ["mov     edx, [sin+4]", "xor     i, i"], ["xor     ebx, ebx", "lea     ecx, ds:0[i*8]", "mov     bl, [edi+i*4]", "inc     i", "shl     ebx, cl", "or      edx, ebx", "cmp     i, 4", "jnz     short loc_17D38"], ["xor     i, i", "mov     [sin+4], edx", "mov     al, byte ptr [esp+2Ch+a+10h]", "mov     word ptr [sin], 2", "mov     ah, byte ptr [esp+2Ch+a+14h]", "mov     [sin+2], ax", "xor     p_bytes, p_bytes"], ["mov     sin, [esp+2Ch+var_10]", "xor     sin, large gs:14h", "jnz     short loc_17D87"], ["add     esp, 20h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["mov     i, 1", "jmp     short loc_17D66"], ["call    __stack_chk_fail_local"]], "__rpc_get_time_offset": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3FCh", "mov     eax, [esp+40Ch+td]", "mov     edx, [esp+40Ch+uaddr]", "mov     [esp+40Ch+var_3E8], eax", "mov     [esp+40Ch+var_3F0], edx", "mov     ebp, large gs:14h", "mov     [esp+40Ch+var_20], ebp", "xor     ebp, ebp", "mov     dword ptr [eax], 0", "mov     dword ptr [eax+4], 0", "mov     eax, [edx]", "mov     ecx, [esp+40Ch+srv]", "mov     edi, [esp+40Ch+thost]", "mov     esi, [esp+40Ch+netid]", "mov     [esp+40Ch+__d], 0FFFFFFFFh", "test    eax, eax", "jz      loc_18040"], ["push    edx", "push    edx", "lea     edi, [esp+414h+a4]", "push    edi", "lea     ecx, [esp+418h+a3]", "mov     [esp+418h+s], ecx", "push    ecx", "lea     ecx, [esp+41Ch+a2]", "mov     [esp+41Ch+s2], ecx", "push    ecx", "lea     ecx, (aDDDD - 2BB6Ch)[ebx]; \"%d.%d.%d.%d.\"", "lea     esi, [esp+420h+a1]", "mov     [esp+420h+useua], esi", "push    esi", "mov     [esp+424h+tcp_ep], ecx", "push    ecx", "push    useua_0", "call    ___isoc99_sscanf", "add     esp, 20h", "mov     ecx, [esp+40Ch+a4]", "push    ecx", "mov     esi, [esp+410h+a3]", "push    esi", "mov     ebp, [esp+414h+a2]", "push    ebp", "mov     eax, [esp+418h+a1]", "push    eax", "lea     eax, (aDDDD0111 - 2BB6Ch)[ebx]; \"%d.%d.%d.%d.0.111\"", "push    eax", "push    40h ; '@'", "push    1", "lea     ebp, [esp+428h+ipuaddr]", "push    ebp", "call    ___sprintf_chk", "lea     esi, [esp+42Ch+sin]", "mov     dword ptr [esp+42Ch+sin.sin_family], 0", "mov     [esp+42Ch+sin.sin_addr.s_addr], 0", "mov     dword ptr [esp+42Ch+sin.sin_zero], 0", "mov     dword ptr [esp+42Ch+sin.sin_zero+4], 0", "mov     edx, esi; sin", "add     esp, 20h", "mov     eax, useua_0; uaddr", "call    uaddr_to_sockaddr", "mov     [esp+40Ch+needfree], eax", "test    eax, eax", "jnz     loc_181DF"], ["push    eax", "push    eax", "push    0; recvsz", "push    0; sendsz", "lea     eax, [esp+41Ch+__d]", "push    eax; sockp", "push    3; version", "push    186A0h; prog", "push    esi; raddr", "call    _clnttcp_create", "add     esp, 20h", "mov     edx, eax", "test    clnt_0, clnt_0", "jz      loc_181DF"], ["mov     [esp+40Ch+type], 0"], ["mov     [esp+40Ch+tv.tv_usec], 0", "mov     [esp+40Ch+tv.tv_sec], 5", "mov     ecx, [esp+40Ch+tv.tv_usec]", "mov     clnt_0, [edx+4]", "push    ecx", "mov     ecx, [esp+410h+tv.tv_sec]", "push    ecx", "lea     ecx, [esp+414h+thetime]", "mov     [esp+414h+buf], ecx", "push    ecx", "mov     ecx, ds:(xdr_u_long_ptr - 2BB6Ch)[ebx]", "push    ecx", "mov     ecx, ds:(xdr_void_ptr - 2BB6Ch)[ebx]", "push    0", "push    ecx", "push    6", "push    clnt_0", "mov     [esp+42Ch+udp_ep], clnt_0", "call    dword ptr [eax]", "add     esp, 20h", "test    status, status", "mov     edx, [esp+40Ch+udp_ep]", "jz      loc_182E0"], ["sub     esp, 0Ch", "mov     status, [edx+4]", "push    edx", "call    dword ptr [eax+10h]", "pop     eax", "pop     edx", "push    edi", "mov     ecx, [esp+418h+s]", "push    ecx", "mov     edi, [esp+41Ch+s2]", "push    edi", "mov     eax, [esp+420h+useua]", "push    eax", "mov     eax, [esp+424h+tcp_ep]", "push    eax", "push    useua_0", "call    ___isoc99_sscanf", "add     esp, 20h", "mov     eax, [esp+40Ch+a4]", "push    eax", "mov     eax, [esp+410h+a3]", "push    eax", "mov     eax, [esp+414h+a2]", "push    eax", "lea     eax, (aDDDD037 - 2BB6Ch)[ebx]; \"%d.%d.%d.%d.0.37\"", "mov     edx, [esp+418h+a1]", "push    edx", "push    eax", "push    40h ; '@'", "push    1", "lea     edi, [esp+428h+ut]", "push    edi", "call    ___sprintf_chk", "add     esp, 20h", "mov     edx, esi; sin", "mov     eax, edi; uaddr", "call    uaddr_to_sockaddr", "mov     [esp+40Ch+udp_ep], eax", "test    eax, eax", "jz      loc_18210"], ["mov     eax, [esp+40Ch+__d]", "cmp     eax, 0FFFFFFFFh", "jz      loc_18820"], ["sub     esp, 0Ch", "push    eax; fd", "call    _close", "mov     [esp+41Ch+seconds], 0; seconds", "call    _alarm", "add     esp, 10h", "mov     [esp+40Ch+udp_ep], 0", "lea     esi, [esi+0]"], ["mov     eax, [esp+40Ch+needfree]", "test    eax, eax", "jz      loc_181E7"], ["lea     eax, [esp+40Ch+teps]; eps", "mov     edx, [esp+40Ch+tsrv.ep.ep_len]; num", "call    free_eps", "jmp     loc_181E7"], ["test    ecx, ecx", "jz      loc_183D0"], ["test    edi, edi", "jnz     loc_181DF"], ["test    ecx, ecx", "jz      loc_183D0"], ["mov     eax, [ecx+8]", "mov     [esp+40Ch+type], eax", "mov     eax, [ecx+4]", "mov     [esp+40Ch+useua], eax", "test    eax, eax", "jle     loc_181DF"], ["lea     eax, (aTcp - 2BB6Ch)[ebx]; \"tcp\"", "mov     [esp+40Ch+needfree], 0", "mov     [esp+40Ch+s], eax", "lea     eax, (aUdp - 2BB6Ch)[ebx]; \"udp\"", "mov     [esp+40Ch+s2], eax"], ["mov     eax, [esp+40Ch+type]", "mov     [esp+40Ch+tcp_ep], 0FFFFFFFFh", "mov     [esp+40Ch+udp_ep], 0FFFFFFFFh", "xor     esi, esi", "lea     edi, [eax+8]", "lea     i, [i+0]", "nop"], ["mov     ebp, [edi]", "push    eax", "push    eax", "mov     eax, [esp+414h+s2]", "push    eax; s2", "push    ebp; s1", "call    _strcasecmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_180C2"], ["mov     [esp+40Ch+udp_ep], i"], ["push    eax", "push    eax", "mov     eax, [esp+414h+s]", "push    eax; s2", "push    ebp; s1", "call    _strcasecmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_180DA"], ["mov     [esp+40Ch+tcp_ep], i"], ["inc     i", "cmp     i, [esp+40Ch+useua]", "jz      loc_18388"], ["add     edi, 0Ch", "cmp     [esp+40Ch+udp_ep], 0FFFFFFFFh", "jz      short loc_180A8"], ["cmp     [esp+40Ch+tcp_ep], 0FFFFFFFFh", "jz      short loc_180A8"], ["mov     eax, [esp+40Ch+tcp_ep]", "mov     edi, [esp+40Ch+type]", "mov     [esp+40Ch+type], 1", "lea     eax, [eax+eax*2]", "mov     edx, [edi+eax*4]"], ["mov     eax, [esp+40Ch+var_3F0]", "mov     eax, [eax]", "test    eax, eax", "jnz     loc_18884"], ["push    eax", "push    eax", "lea     edi, [esp+414h+a4]", "push    edi", "lea     eax, [esp+418h+a3]", "mov     [esp+418h+s], eax", "push    eax", "lea     eax, [esp+41Ch+a2]", "mov     [esp+41Ch+s2], eax", "push    eax", "lea     eax, [esp+420h+a1]", "mov     [esp+420h+useua], eax", "push    eax", "lea     eax, (aDDDD - 2BB6Ch)[ebx]; \"%d.%d.%d.%d.\"", "mov     [esp+424h+tcp_ep], eax", "push    eax", "push    useua_0", "call    ___isoc99_sscanf", "add     esp, 20h", "mov     eax, [esp+40Ch+a4]", "push    eax", "mov     eax, [esp+410h+a3]", "push    eax", "lea     eax, (aDDDD0111 - 2BB6Ch)[ebx]; \"%d.%d.%d.%d.0.111\"", "mov     edx, [esp+414h+a2]", "push    edx", "mov     ecx, [esp+418h+a1]", "push    ecx", "push    eax", "push    40h ; '@'", "push    1", "lea     ebp, [esp+428h+ipuaddr]", "push    ebp", "call    ___sprintf_chk", "lea     i, [esp+42Ch+sin]", "mov     dword ptr [esp+42Ch+sin.sin_family], 0", "mov     [esp+42Ch+sin.sin_addr.s_addr], 0", "mov     dword ptr [esp+42Ch+sin.sin_zero], 0", "mov     dword ptr [esp+42Ch+sin.sin_zero+4], 0", "mov     edx, esi; sin", "add     esp, 20h", "mov     eax, useua_0; uaddr", "call    uaddr_to_sockaddr", "mov     [esp+40Ch+udp_ep], eax", "test    eax, eax", "jz      loc_18792"], ["mov     eax, [esp+40Ch+needfree]", "test    eax, eax", "jz      short loc_181DF"], ["lea     eax, [esp+40Ch+teps]; eps", "mov     edx, [esp+40Ch+tsrv.ep.ep_len]; num", "call    free_eps"], ["mov     [esp+40Ch+udp_ep], 0"], ["mov     eax, [esp+40Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_18870"], ["mov     eax, [esp+40Ch+udp_ep]", "add     esp, 3FCh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    ecx", "push    0; protocol", "mov     edi, [esp+414h+type]", "push    edi; type", "push    2; domain", "call    _socket", "mov     [esp+41Ch+__d], eax", "add     esp, 10h", "cmp     eax, 0FFFFFFFFh", "jz      loc_18750"], ["cmp     edi, 2", "jz      loc_185B8"], ["push    edi", "lea     eax, (alarm_hndler - 2BB6Ch)[ebx]", "push    edi", "push    eax; handler", "push    0Eh; sig", "call    _signal", "mov     [esp+41Ch+seconds], 14h; seconds", "mov     edi, eax", "mov     ds:(saw_alarm - 2BB6Ch)[ebx], 0", "call    _alarm", "add     esp, 0Ch", "push    10h; len", "push    esi; addr", "mov     eax, [esp+418h+__d]", "push    eax; fd", "call    _connect", "add     esp, 10h", "inc     res", "mov     eax, [esp+40Ch+__d]", "jz      short loc_182A2"], ["mov     esi, ds:(saw_alarm - 2BB6Ch)[ebx]", "test    esi, esi", "jnz     short loc_182A2"], ["push    edx", "push    4; nbytes", "mov     ecx, [esp+414h+buf]", "push    ecx; buf", "push    eax; fd", "call    _read", "add     esp, 10h", "cmp     res, 4", "jz      loc_186AE"], ["mov     res, [esp+40Ch+__d]"], ["cmp     eax, 0FFFFFFFFh", "jz      short loc_182B3"], ["sub     esp, 0Ch", "push    eax; fd", "call    _close", "add     esp, 10h"], ["sub     esp, 0Ch", "push    0; seconds", "call    _alarm", "add     esp, 10h", "test    edi, edi", "jz      loc_18018"], ["push    edx", "push    edx", "push    edi; handler", "push    0Eh; sig", "call    _signal", "add     esp, 10h", "jmp     loc_18018"], ["mov     [esp+40Ch+udp_ep], edx", "push    eax", "push    eax", "push    0; tz", "lea     eax, [esp+418h+tv]", "push    eax; tv", "call    _gettimeofday", "mov     eax, [esp+41Ch+__d]", "add     esp, 10h", "cmp     eax, 0FFFFFFFFh", "mov     edx, [esp+40Ch+udp_ep]", "jz      short loc_18316"], ["mov     [esp+40Ch+udp_ep], edx", "sub     esp, 0Ch", "push    eax; fd", "call    _close", "add     esp, 10h", "mov     edx, [esp+40Ch+udp_ep]"], ["sub     esp, 0Ch", "mov     eax, [edx+4]", "push    edx", "call    dword ptr [eax+10h]", "mov     [esp+41Ch+seconds], 0; seconds", "call    _alarm", "add     esp, 10h"], ["mov     eax, [esp+40Ch+var_3F0]", "mov     eax, [eax]", "test    eax, eax", "jz      loc_18738"], ["mov     edx, [esp+40Ch+tv.tv_sec]", "xor     eax, eax", "cmp     edx, 7A120h", "mov     ecx, [esp+40Ch+thetime]", "setnle  al", "add     eax, edx", "mov     edx, eax", "mov     [esp+40Ch+tv.tv_sec], eax", "sub     edx, ecx", "cmp     eax, ecx", "jnb     short loc_18362"], ["mov     edx, ecx", "sub     edx, eax"], ["cmp     eax, ecx", "jbe     short loc_18368"], ["neg     delta"], ["mov     eax, [esp+40Ch+var_3E8]", "mov     [esp+40Ch+udp_ep], 1", "mov     [eax], edx", "mov     dword ptr [eax+4], 0", "jmp     loc_18018"], ["cmp     [esp+40Ch+tcp_ep], 0FFFFFFFFh", "jnz     loc_180F6"], ["mov     eax, [esp+40Ch+udp_ep]", "cmp     eax, 0FFFFFFFFh", "jz      short loc_183B8"], ["mov     edi, [esp+40Ch+type]", "lea     eax, [eax+eax*2]", "mov     [esp+40Ch+type], 2", "mov     edx, [edi+eax*4]", "jmp     loc_1810C"], ["mov     ebx, [esp+40Ch+needfree]", "test    ebx, ebx", "jz      loc_181DF"], ["jmp     loc_181CF"], ["mov     eax, edi", "or      eax, esi", "jz      loc_181DF"], ["test    esi, esi", "jz      loc_1883A"], ["lea     eax, [esi+4]", "lea     esi, [esp+40Ch+readfds]", "mov     [esp+40Ch+var_39C], esi", "lea     esi, [esp+40Ch+timeout]", "mov     [esp+40Ch+readfds.fds_bits], eax", "mov     [esp+40Ch+readfds.fds_bits+4], 0", "mov     [esp+40Ch+udp_ep], esi"], ["lea     edx, (aS0111 - 2BB6Ch)[ebx]; \"%s.0.111\"", "lea     esi, [esp+40Ch+teps]", "mov     [esp+40Ch+tcp_ep], edx", "lea     edx, (aInet - 2BB6Ch)[ebx]; \"inet\"", "xor     ecx, ecx", "mov     [esp+40Ch+needfree], edx", "lea     edx, (aTcp - 2BB6Ch)[ebx]; \"tcp\"", "mov     [esp+40Ch+s2], edi", "mov     [esp+40Ch+type], esi", "lea     ebp, [esp+40Ch+ipuaddr]", "mov     [esp+40Ch+s], edx", "mov     edi, ecx", "jmp     short loc_18454"], ["add     esi, 0Ch", "cmp     edi, 20h ; ' '", "jz      loc_187C8"], ["sub     esp, 0Ch", "mov     ecx, [eax]", "inc     edi", "push    ecx; in", "call    _inet_ntoa", "pop     edx", "pop     ecx", "push    eax", "mov     eax, [esp+418h+tcp_ep]", "push    eax", "push    100h", "push    1", "push    100h", "push    ebp", "call    ___snprintf_chk", "add     esp, 14h", "push    ebp; s", "call    _strdup", "mov     [esi], eax", "pop     eax", "mov     eax, [esp+418h+needfree]", "push    eax; s", "call    _strdup", "mov     [esi+4], eax", "pop     eax", "mov     eax, [esp+418h+s]", "push    eax; s", "call    _strdup", "mov     [esi+8], eax", "mov     eax, [esp+41Ch+udp_ep]", "add     esp, 10h", "mov     ecx, [eax+10h]", "mov     eax, [ecx+edi*4]", "test    eax, eax", "jnz     short loc_18448"], ["mov     esi, edi", "mov     [esp+40Ch+useua], edi", "mov     eax, [ecx]", "mov     edi, [esp+40Ch+s2]", "cmp     esi, 1Fh", "jg      loc_18875"], ["test    eax, eax", "jz      loc_18875"], ["mov     esi, [esp+40Ch+useua]", "lea     edx, (aUdp - 2BB6Ch)[ebx]; \"udp\"", "mov     [esp+40Ch+buf], edi", "mov     [esp+40Ch+s2], edx", "lea     ecx, [esi+esi*2]", "mov     esi, [esp+40Ch+type]", "lea     esi, [esi+ecx*4]", "mov     ecx, 4", "mov     edi, ecx", "jmp     short loc_184FD"], ["cmp     edx, 1Fh", "jg      short loc_1856E"], ["sub     esp, 0Ch", "mov     eax, [eax]", "add     esi, 0Ch", "push    eax; in", "call    _inet_ntoa", "pop     edx", "pop     ecx", "push    eax", "mov     eax, [esp+418h+tcp_ep]", "push    eax", "push    100h", "push    1", "push    100h", "push    ebp", "call    ___snprintf_chk", "add     esp, 14h", "push    ebp; s", "call    _strdup", "mov     [esi-0Ch], eax", "pop     eax", "mov     eax, [esp+418h+needfree]", "push    eax; s", "call    _strdup", "mov     [esi-8], eax", "pop     eax", "mov     eax, [esp+418h+s2]", "push    eax; s", "call    _strdup", "mov     [esi-4], eax", "mov     eax, [esp+41Ch+udp_ep]", "mov     edx, [esp+41Ch+useua]", "mov     eax, [eax+10h]", "inc     edx", "mov     [esp+41Ch+useua], edx", "mov     eax, [eax+edi]", "mov     edx, [esp+41Ch+useua]", "add     edi, 4", "add     esp, 10h", "test    eax, eax", "jnz     short loc_184F8"], ["mov     edi, [esp+40Ch+buf]"], ["mov     eax, [esp+40Ch+useua]", "mov     [esp+40Ch+tsrv.name], edi", "mov     [esp+40Ch+tsrv.ep.ep_len], eax", "mov     eax, [esp+40Ch+type]", "mov     [esp+40Ch+tsrv.ep.ep_val], eax", "mov     [esp+40Ch+tsrv.key_type], 0", "mov     [esp+40Ch+tsrv.pkey.n_bytes], 0", "mov     [esp+40Ch+tsrv.pkey.n_len], 0", "mov     [esp+40Ch+needfree], 1", "jmp     loc_1808A"], ["mov     [esp+40Ch+timeout.tv_sec], 14h", "mov     [esp+40Ch+timeout.tv_usec], 0", "push    edi", "push    edi", "push    10h; addr_len", "push    esi; addr", "push    0; flags", "push    4; n", "mov     edx, [esp+424h+buf]", "push    edx; buf", "push    eax; fd", "call    _sendto", "add     esp, 20h", "inc     eax", "jz      loc_18768"], ["lea     eax, [esp+40Ch+timeout]", "mov     [esp+40Ch+useua], useua_0", "lea     esi, [esp+40Ch+readfds]", "mov     useua_0, eax", "jmp     short loc_1860E"], ["call    ___errno_location", "cmp     dword ptr [eax], 4", "jnz     loc_18768"], ["mov     ecx, 20h ; ' '", "mov     edi, esi", "xor     eax, eax", "cld", "rep stosd", "sub     esp, 0Ch", "mov     edi, [esp+418h+__d]", "push    edi", "call    ___fdelt_chk", "mov     edx, eax", "mov     eax, [esp+41Ch+__d]", "mov     __d_0, eax", "sar     edi, 1Fh", "shr     edi, 1Bh", "lea     ecx, [eax+edi]", "mov     eax, 1", "and     ecx, 1Fh", "sub     ecx, edi", "shl     eax, cl", "mov     ecx, [esp+edx*4+41Ch+readfds.fds_bits]", "or      ecx, eax", "mov     [esp+edx*4+41Ch+readfds.fds_bits], ecx", "call    __rpc_dtablesize", "mov     [esp+41Ch+seconds], ebp; timeout", "push    0; exceptfds", "push    0; writefds", "push    esi; readfds", "push    eax; nfds", "call    _select", "add     esp, 20h", "test    res, res", "js      short loc_18600"], ["mov     ebp, [esp+40Ch+useua]", "mov     res, [esp+40Ch+__d]", "jz      loc_1876C"], ["mov     [esp+40Ch+len], 10h", "lea     edx, [esp+40Ch+from]", "push    ecx", "push    ecx", "lea     ecx, [esp+414h+len]", "push    ecx; addr_len", "push    edx; addr", "push    0; flags", "push    4; n", "mov     esi, [esp+424h+buf]", "push    esi; buf", "push    eax; fd", "call    _recvfrom", "add     esp, 20h", "inc     res", "jz      loc_18768"], ["xor     edi, edi"], ["call    ___errno_location", "sub     esp, 0Ch", "mov     esi, eax", "mov     edx, [eax]", "mov     [esp+418h+udp_ep], edx", "mov     ecx, [esp+418h+__d]", "push    ecx; fd", "call    _close", "mov     eax, [esp+41Ch+thetime]", "mov     edx, [esp+41Ch+udp_ep]", "bswap   eax", "mov     [esi], edx", "add     eax, 7C558180h", "mov     [esp+41Ch+__d], 0FFFFFFFFh", "mov     [esp+41Ch+thetime], eax", "pop     esi", "pop     eax", "push    0; tz", "lea     eax, [esp+418h+tv]", "push    eax; tv", "call    _gettimeofday", "mov     eax, [esp+41Ch+__d]", "add     esp, 10h", "cmp     eax, 0FFFFFFFFh", "jz      short loc_1870B"], ["sub     esp, 0Ch", "push    eax; fd", "call    _close", "add     esp, 10h"], ["sub     esp, 0Ch", "push    0; seconds", "call    _alarm", "add     esp, 10h", "test    oldsig, oldsig", "jz      loc_1832F"], ["push    eax", "push    eax", "push    oldsig; handler", "push    0Eh; sig", "call    _signal", "add     esp, 10h", "jmp     loc_1832F"], ["sub     esp, 0Ch", "push    ebp; s", "call    _strdup", "mov     edi, [esp+41Ch+var_3F0]", "add     esp, 10h", "mov     [edi], eax", "jmp     loc_1833D"], ["sub     esp, 0Ch", "push    0; seconds", "call    _alarm", "add     esp, 10h", "jmp     loc_18018"], ["mov     eax, [esp+40Ch+__d]"], ["cmp     eax, 0FFFFFFFFh", "jz      loc_18820"], ["sub     esp, 0Ch", "push    eax; fd", "call    _close", "mov     [esp+41Ch+seconds], 0; seconds", "call    _alarm", "add     esp, 10h", "jmp     loc_18018"], ["push    eax", "push    eax", "push    0; recvsz", "push    0; sendsz", "lea     eax, [esp+41Ch+__d]", "push    eax; sockp", "push    3; version", "push    186A0h; prog", "push    esi; raddr", "call    _clnttcp_create", "add     esp, 20h", "mov     edx, eax", "test    clnt_0, clnt_0", "jnz     loc_17F29"], ["mov     ebx, [esp+40Ch+needfree]", "test    ebx, ebx", "jnz     loc_18024"], ["jmp     loc_181DF"], ["mov     eax, [esp+40Ch+type]", "mov     [esp+40Ch+useua], edi", "mov     [esp+40Ch+tsrv.ep.ep_val], eax", "mov     edi, [esp+40Ch+s2]", "lea     eax, (aUdp - 2BB6Ch)[ebx]; \"udp\"", "mov     [esp+40Ch+tsrv.name], edi", "mov     [esp+40Ch+tsrv.ep.ep_len], 20h ; ' '", "mov     [esp+40Ch+tsrv.key_type], 0", "mov     [esp+40Ch+tsrv.pkey.n_bytes], 0", "mov     [esp+40Ch+tsrv.pkey.n_len], 0", "mov     [esp+40Ch+needfree], 1", "mov     [esp+40Ch+s2], eax", "jmp     loc_1808A"], ["sub     esp, 0Ch", "push    0; seconds", "call    _alarm", "add     esp, 10h", "mov     [esp+40Ch+udp_ep], 0", "jmp     loc_18018"], ["sub     esp, 0Ch", "push    edi; name", "call    _gethostbyname", "mov     [esp+41Ch+udp_ep], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_181DF"], ["mov     eax, [esp+40Ch+udp_ep]", "mov     eax, [eax+10h]", "mov     eax, [eax]", "test    eax, eax", "jnz     loc_1840A"], ["mov     [esp+40Ch+tsrv.ep.ep_len], 0", "jmp     loc_181CF"], ["call    __stack_chk_fail_local"], ["lea     eax, (aUdp - 2BB6Ch)[ebx]; \"udp\"", "mov     [esp+40Ch+s2], eax", "jmp     loc_18572"], ["mov     useua_0, eax", "jmp     loc_1811A"]], "xdr_int": [["push    ebx", "sub     esp, 18h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ecx, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+ip_0]", "mov     edx, [ecx]", "cmp     edx, 1", "jz      short loc_189F8"], ["cmp     edx, 2", "jz      short loc_189F0"], ["test    edx, edx", "jz      short loc_18A20"], ["mov     ebx, [esp+1Ch+var_10]", "xor     ebx, large gs:14h", "jnz     short loc_18A39"], ["add     esp, 18h", "pop     ebx", "retn"], ["mov     eax, 1", "jmp     short loc_189D8"], ["push    eax", "push    eax", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_189D8"], ["mov     eax, [esp+1Ch+l]", "mov     [ebx], eax", "mov     eax, 1", "jmp     short loc_189D8"], ["mov     eax, [ebx]", "mov     [esp+1Ch+l], eax", "push    edx", "push    edx", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     short loc_189D8"], ["call    __stack_chk_fail_local"]], "xdr_u_int": [["push    ebx", "sub     esp, 18h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ecx, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+up]", "mov     edx, [ecx]", "cmp     edx, 1", "jz      short loc_18A88"], ["cmp     edx, 2", "jz      short loc_18A80"], ["test    edx, edx", "jz      short loc_18AB0"], ["mov     ebx, [esp+1Ch+var_10]", "xor     ebx, large gs:14h", "jnz     short loc_18AC9"], ["add     esp, 18h", "pop     ebx", "retn"], ["mov     eax, 1", "jmp     short loc_18A68"], ["push    eax", "push    eax", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_18A68"], ["mov     eax, [esp+1Ch+l]", "mov     [ebx], eax", "mov     eax, 1", "jmp     short loc_18A68"], ["mov     eax, [ebx]", "mov     [esp+1Ch+l], eax", "push    edx", "push    edx", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     short loc_18A68"], ["call    __stack_chk_fail_local"]], "xdr_long": [["mov     edx, [esp+xdrs]", "mov     eax, [edx]", "cmp     eax, 1", "jz      short loc_18AF8"], ["cmp     eax, 2", "jz      short loc_18AF0"], ["xor     ecx, ecx", "test    eax, eax", "jz      short loc_18B00"], ["mov     eax, ecx", "retn"], ["mov     ecx, 1", "mov     eax, ecx", "retn"], ["mov     eax, [edx+4]", "jmp     dword ptr [eax]"], ["mov     eax, [xdrs_0+4]", "jmp     dword ptr [eax+4]"]], "xdr_u_long": [["mov     edx, [esp+xdrs]", "mov     eax, [edx]", "cmp     eax, 1", "jz      short loc_18B38"], ["cmp     eax, 2", "jz      short loc_18B30"], ["xor     ecx, ecx", "test    eax, eax", "jz      short loc_18B40"], ["mov     eax, ecx", "retn"], ["mov     ecx, 1", "mov     eax, ecx", "retn"], ["mov     eax, [edx+4]", "jmp     dword ptr [eax]"], ["mov     eax, [xdrs_0+4]", "jmp     dword ptr [eax+4]"]], "xdr_int32_t": [["push    ebx", "sub     esp, 18h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ecx, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+int32_p]", "mov     edx, [ecx]", "cmp     edx, 1", "jz      short loc_18B98"], ["cmp     edx, 2", "jz      short loc_18B90"], ["test    edx, edx", "jz      short loc_18BC0"], ["mov     ebx, [esp+1Ch+var_10]", "xor     ebx, large gs:14h", "jnz     short loc_18BD9"], ["add     esp, 18h", "pop     ebx", "retn"], ["mov     eax, 1", "jmp     short loc_18B78"], ["push    eax", "push    eax", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_18B78"], ["mov     eax, [esp+1Ch+l]", "mov     [ebx], eax", "mov     eax, 1", "jmp     short loc_18B78"], ["mov     eax, [ebx]", "mov     [esp+1Ch+l], eax", "push    edx", "push    edx", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     short loc_18B78"], ["call    __stack_chk_fail_local"]], "xdr_u_int32_t": [["push    ebx", "sub     esp, 18h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ecx, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+u_int32_p]", "mov     edx, [ecx]", "cmp     edx, 1", "jz      short loc_18C28"], ["cmp     edx, 2", "jz      short loc_18C20"], ["test    edx, edx", "jz      short loc_18C50"], ["mov     ebx, [esp+1Ch+var_10]", "xor     ebx, large gs:14h", "jnz     short loc_18C69"], ["add     esp, 18h", "pop     ebx", "retn"], ["mov     eax, 1", "jmp     short loc_18C08"], ["push    eax", "push    eax", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_18C08"], ["mov     eax, [esp+1Ch+l]", "mov     [ebx], eax", "mov     eax, 1", "jmp     short loc_18C08"], ["mov     eax, [ebx]", "mov     [esp+1Ch+l], eax", "push    edx", "push    edx", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     short loc_18C08"], ["call    __stack_chk_fail_local"]], "xdr_short": [["push    ebx; Alternative name is 'xdr_short'", "sub     esp, 18h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ecx, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+sp_0]", "mov     edx, [ecx]", "cmp     edx, 1", "jz      short loc_18CE8"], ["cmp     edx, 2", "jz      short loc_18CE0"], ["test    edx, edx", "jz      short loc_18D10"], ["mov     ebx, [esp+1Ch+var_10]", "xor     ebx, large gs:14h", "jnz     short loc_18D2A"], ["add     esp, 18h", "pop     ebx", "retn"], ["mov     eax, 1", "jmp     short loc_18CC8"], ["push    eax", "push    eax", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_18CC8"], ["mov     eax, [esp+1Ch+l]", "mov     [ebx], ax", "mov     eax, 1", "jmp     short loc_18CC8"], ["movsx   eax, word ptr [ebx]", "mov     [esp+1Ch+l], eax", "push    edx", "push    edx", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     short loc_18CC8"], ["call    __stack_chk_fail_local"]], "xdr_u_short": [["push    ebx", "sub     esp, 18h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ecx, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+usp]", "mov     edx, [ecx]", "cmp     edx, 1", "jz      short loc_18D78"], ["cmp     edx, 2", "jz      short loc_18D70"], ["test    edx, edx", "jz      short loc_18DA0"], ["mov     ebx, [esp+1Ch+var_10]", "xor     ebx, large gs:14h", "jnz     short loc_18DBC"], ["add     esp, 18h", "pop     ebx", "retn"], ["mov     eax, 1", "jmp     short loc_18D58"], ["push    eax", "push    eax", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_18D58"], ["mov     eax, [esp+1Ch+l]", "mov     [ebx], ax", "mov     eax, 1", "jmp     short loc_18D58"], ["xor     eax, eax", "mov     ax, [ebx]", "mov     [esp+1Ch+l], eax", "push    edx", "push    edx", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     short loc_18D58"], ["call    __stack_chk_fail_local"]], "xdr_u_int16_t": [["push    ebx", "sub     esp, 18h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ecx, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+u_int16_p]", "mov     edx, [ecx]", "cmp     edx, 1", "jz      short loc_18E28"], ["cmp     edx, 2", "jz      short loc_18E20"], ["test    edx, edx", "jz      short loc_18E50"], ["mov     ebx, [esp+1Ch+var_10]", "xor     ebx, large gs:14h", "jnz     short loc_18E6C"], ["add     esp, 18h", "pop     ebx", "retn"], ["mov     eax, 1", "jmp     short loc_18E08"], ["push    eax", "push    eax", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_18E08"], ["mov     eax, [esp+1Ch+l]", "mov     [ebx], ax", "mov     eax, 1", "jmp     short loc_18E08"], ["xor     eax, eax", "mov     ax, [ebx]", "mov     [esp+1Ch+l], eax", "push    edx", "push    edx", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     short loc_18E08"], ["call    __stack_chk_fail_local"]], "xdr_int8_t": [["push    ebx", "sub     esp, 18h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ecx, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+int8_p]", "mov     edx, [ecx]", "cmp     edx, 1", "jz      short loc_18EF8"], ["cmp     edx, 2", "jz      short loc_18EF0"], ["test    edx, edx", "jz      short loc_18F20"], ["mov     ebx, [esp+1Ch+var_10]", "xor     ebx, large gs:14h", "jnz     short loc_18F3A"], ["add     esp, 18h", "pop     ebx", "retn"], ["mov     eax, 1", "jmp     short loc_18ED8"], ["push    eax", "push    eax", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_18ED8"], ["mov     eax, [esp+1Ch+l]", "mov     [ebx], al", "mov     eax, 1", "jmp     short loc_18ED8"], ["movsx   eax, byte ptr [ebx]", "mov     [esp+1Ch+l], eax", "push    edx", "push    edx", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     short loc_18ED8"], ["call    __stack_chk_fail_local"]], "xdr_u_int8_t": [["push    ebx", "sub     esp, 18h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ecx, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+uint8_p]", "mov     edx, [ecx]", "cmp     edx, 1", "jz      short loc_18F88"], ["cmp     edx, 2", "jz      short loc_18F80"], ["test    edx, edx", "jz      short loc_18FB0"], ["mov     ebx, [esp+1Ch+var_10]", "xor     ebx, large gs:14h", "jnz     short loc_18FCB"], ["add     esp, 18h", "pop     ebx", "retn"], ["mov     eax, 1", "jmp     short loc_18F68"], ["push    eax", "push    eax", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_18F68"], ["mov     eax, [esp+1Ch+l]", "mov     [ebx], al", "mov     eax, 1", "jmp     short loc_18F68"], ["xor     eax, eax", "mov     al, [ebx]", "mov     [esp+1Ch+l], eax", "push    edx", "push    edx", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+l]", "push    edx", "push    ecx", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     short loc_18F68"], ["call    __stack_chk_fail_local"]], "xdr_bool": [["push    ebx", "sub     esp, 18h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ecx, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+bp_0]", "mov     edx, [ecx]", "cmp     edx, 1", "jz      short loc_19118"], ["cmp     edx, 2", "jz      short loc_19110"], ["test    edx, edx", "jz      short loc_19140"], ["mov     ebx, [esp+1Ch+var_10]", "xor     ebx, large gs:14h", "jnz     short loc_19160"], ["add     esp, 18h", "pop     ebx", "retn"], ["mov     eax, 1", "jmp     short loc_190F8"], ["push    eax", "push    eax", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+lb]", "push    edx", "push    ecx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_190F8"], ["xor     eax, eax", "mov     edx, [esp+1Ch+lb]", "test    edx, edx", "setnz   al", "mov     [ebx], eax", "mov     eax, 1", "jmp     short loc_190F8"], ["mov     edx, [ebx]", "xor     eax, eax", "test    edx, edx", "setnz   al", "mov     [esp+1Ch+lb], eax", "push    ebx", "push    ebx", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+lb]", "push    edx", "push    ecx", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     short loc_190F8"], ["call    __stack_chk_fail_local"]], "xdr_opaque": [["push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "mov     eax, [esp+0Ch+cnt]", "mov     ebx, [esp+0Ch+xdrs]", "mov     ecx, [esp+0Ch+cp]", "test    eax, eax", "jz      loc_19248"], ["mov     esi, eax", "and     esi, 3", "jz      short loc_191D2"], ["mov     edx, 4", "sub     edx, esi", "mov     esi, edx"], ["mov     edx, [ebx]", "cmp     edx, 1", "jz      short loc_19210"], ["test    edx, edx", "jnz     short loc_19258"], ["push    edx", "mov     edx, [ebx+4]", "push    eax", "push    ecx", "push    ebx", "call    dword ptr [edx+0Ch]", "add     esp, 10h", "test    eax, eax", "jz      short loc_19268"], ["test    esi, esi", "jz      short loc_19248"], ["mov     eax, [ebx+4]", "lea     edx, (xdr_zero - 2BB6Ch)[edi]", "mov     [esp+0Ch+cnt], esi", "mov     [esp+0Ch+cp], edx", "mov     [esp+0Ch+xdrs], ebx", "pop     ebx", "pop     esi", "mov     eax, [eax+0Ch]", "pop     edi", "jmp     eax"], ["push    edx", "mov     edx, [xdrs_0+4]", "push    cnt_0", "push    cp_0", "push    xdrs_0", "call    dword ptr [edx+8]", "add     esp, 10h", "test    eax, eax", "jz      short loc_19268"], ["test    esi, esi", "jz      short loc_19248"], ["mov     eax, [xdrs_0+4]", "lea     edx, (crud_6081 - 2BB6Ch)[edi]", "mov     [esp+0Ch+cnt], esi", "mov     [esp+0Ch+cp], edx", "mov     [esp+0Ch+xdrs], xdrs_0", "pop     ebx", "pop     esi", "mov     eax, [eax+8]", "pop     edi", "jmp     eax"], ["pop     ebx", "mov     eax, 1", "pop     esi", "pop     edi", "retn"], ["pop     xdrs_0", "xor     cnt_0, cnt_0", "pop     esi", "cmp     edx, 2", "pop     edi", "setz    al", "retn"], ["pop     ebx", "xor     eax, eax", "pop     esi", "pop     edi", "retn"]], "xdr_bytes": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 24h", "mov     eax, [esp+34h+cpp]", "mov     edi, [esp+34h+sizep]", "mov     esi, [esp+34h+xdrs]", "mov     ebp, [eax]", "push    edi; up", "push    esi; xdrs", "call    _xdr_u_int", "add     esp, 10h", "test    eax, eax", "jz      short loc_192B8"], ["mov     edi, [edi]", "mov     edx, [esi]", "cmp     nodesize, [esp+2Ch+maxsize]", "ja      short loc_192C0"], ["cmp     edx, 1", "jz      short loc_192F0"], ["cmp     edx, 2", "jz      short loc_192C7"], ["test    edx, edx", "jz      short loc_192F8"], ["xor     eax, eax"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     sp_0", "retn"], ["xor     eax, eax", "cmp     edx, 2", "jnz     short loc_192B8"], ["mov     eax, 1", "test    sp_0, sp_0", "jz      short loc_192B8"], ["mov     [esp+2Ch+var_20], eax", "sub     esp, 0Ch", "push    sp_0; ptr", "call    _free", "mov     eax, [esp+3Ch+cpp]", "add     esp, 10h", "mov     dword ptr [eax], 0", "mov     eax, [esp+2Ch+var_20]", "jmp     short loc_192B8"], ["test    nodesize, nodesize", "jz      short loc_19348"], ["test    sp_0, sp_0", "jz      short loc_19310"], ["push    edx", "push    nodesize; cnt", "push    sp_0; cp", "push    esi; xdrs", "call    _xdr_opaque", "add     esp, 10h", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     nodesize", "pop     sp_0", "retn"], ["push    ecx", "push    ecx", "push    nodesize; size", "push    1; nmemb", "call    _calloc", "mov     sp_0, eax", "mov     sp_0, [esp+3Ch+cpp]", "add     esp, 10h", "test    sp_0, sp_0", "mov     [eax], sp_0", "jnz     short loc_19352"], ["sub     esp, 0Ch", "lea     eax, (aXdrBytesOutOfM - 2BB6Ch)[ebx]; \"xdr_bytes: out of memory\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "xor     eax, eax", "jmp     loc_192B8"], ["mov     eax, 1", "jmp     loc_192B8"], ["push    eax", "push    nodesize; cnt", "push    sp_0; cp", "push    esi; xdrs", "call    _xdr_opaque", "add     esp, 10h", "cmp     dword ptr [esi], 1", "jnz     loc_192B8"], ["test    ret, ret", "jnz     loc_192B8"], ["jmp     loc_192D0"]], "xdr_union": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 24h", "mov     eax, [esp+34h+unp]", "mov     ebp, [esp+34h+dscmp]", "mov     [esp+34h+var_24], eax", "mov     eax, [esp+34h+dfault]", "mov     edi, [esp+34h+xdrs]", "mov     esi, [esp+34h+choices]", "mov     [esp+34h+var_20], eax", "push    ebp; ep", "push    edi; xdrs", "call    _xdr_enum", "add     esp, 10h", "test    eax, eax", "jz      short loc_19428"], ["mov     eax, [esi+4]", "mov     ecx, [ebp+0]", "test    eax, eax", "jnz     short loc_19402"], ["jmp     short loc_19420"], ["mov     eax, [choices_0+0Ch]", "add     choices_0, 8", "test    eax, eax", "jz      short loc_19420"], ["cmp     [choices_0], dscm", "jnz     short loc_193F8"], ["mov     edx, [esp+2Ch+var_24]", "mov     [esp+2Ch+xdrs], edi", "mov     [esp+2Ch+dscmp], edx", "add     esp, 1Ch", "pop     ebx", "pop     choices_0", "pop     edi", "pop     ebp", "jmp     eax"], ["mov     eax, [esp+2Ch+var_20]", "test    eax, eax", "jnz     short loc_19406"], ["add     esp, 1Ch", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "xdr_string": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     esi, [esp+3Ch+xdrs]", "mov     ebp, [esp+3Ch+cpp]", "mov     eax, [esi]", "mov     edi, [ebp+0]", "test    eax, eax", "jz      short loc_194E8"], ["cmp     eax, 2", "jnz     short loc_1948C"], ["test    sp_0, sp_0", "jz      loc_19538"], ["sub     esp, 0Ch", "push    sp_0; s", "call    _strlen", "add     esp, 10h", "mov     [esp+3Ch+size], eax"], ["push    eax", "push    eax", "lea     eax, [esp+44h+size]", "push    eax; up", "push    esi; xdrs", "call    _xdr_u_int", "add     esp, 10h", "test    eax, eax", "jz      short loc_194C8"], ["mov     edx, [esp+3Ch+size]", "cmp     edx, [esp+3Ch+maxsize]", "ja      short loc_194C8"], ["mov     ecx, edx", "inc     ecx", "jz      short loc_194C8"], ["mov     eax, [esi]", "cmp     eax, 1", "jz      loc_19540"], ["cmp     eax, 2", "jz      short loc_19518"], ["test    eax, eax", "jz      short loc_19500"], ["lea     esi, [esi+0]", "nop"], ["xor     eax, eax"], ["mov     ecx, [esp+3Ch+var_20]", "xor     ecx, large gs:14h", "jnz     loc_195CA"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     sp_0", "pop     ebp", "retn"], ["test    sp_0, sp_0", "jz      short loc_194C8"], ["sub     esp, 0Ch", "push    sp_0; s", "call    _strlen", "add     esp, 10h", "mov     [esp+3Ch+size], eax", "jmp     short loc_1948C"], ["push    eax", "push    edx; cnt"], ["push    sp_0; cp", "push    esi; xdrs", "call    _xdr_opaque", "add     esp, 10h", "cmp     dword ptr [esi], 1", "jnz     short loc_194CA"], ["test    ret_0, ret_0", "jnz     short loc_194CA"], ["jmp     short loc_194C8"], ["sub     esp, 0Ch", "push    sp_0; ptr", "call    _free", "mov     dword ptr [ebp+0], 0", "add     esp, 10h", "mov     eax, 1", "jmp     short loc_194CA"], ["mov     eax, 1", "jmp     short loc_194CA"], ["test    sp_0, sp_0", "jz      short loc_19550"], ["mov     byte ptr [sp_0+edx], 0", "push    eax", "mov     edx, [esp+40h+size]", "push    edx", "jmp     short loc_19502"], ["mov     [esp+3Ch+ret], edx", "push    eax", "push    eax", "push    nodesize; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     sp_0, eax", "mov     [ebp+0], sp_0", "test    sp_0, sp_0", "mov     edx, [esp+3Ch+ret]", "jnz     short loc_19585"], ["sub     esp, 0Ch", "lea     sp_0, (aXdrStringOutOf - 2BB6Ch)[ebx]; \"xdr_string: out of memory\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     loc_194C8"], ["mov     byte ptr [sp_0+edx], 0", "push    ecx", "mov     sp_0, [esp+40h+size]", "push    eax; cnt", "push    sp_0; cp", "push    esi; xdrs", "call    _xdr_opaque", "add     esp, 10h", "cmp     dword ptr [esi], 1", "jnz     loc_194CA"], ["test    ret_0, ret_0", "jnz     loc_194CA"], ["mov     [esp+3Ch+ret], ret_0", "sub     esp, 0Ch", "push    sp_0; ptr", "call    _free", "add     esp, 10h", "mov     dword ptr [ebp+0], 0", "mov     eax, [esp+3Ch+ret]", "jmp     loc_194CA"], ["call    __stack_chk_fail_local"]], "xdr_int64_t": [["push    esi", "push    ebx", "sub     esp, 14h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ebx, [esp+1Ch+xdrs]", "mov     esi, [esp+1Ch+llp]", "mov     edx, [ebx]", "cmp     edx, 1", "jz      short loc_19648"], ["cmp     edx, 2", "jz      short loc_19640"], ["test    edx, edx", "jz      short loc_19688"], ["mov     ecx, [esp+1Ch+var_10]", "xor     ecx, large gs:14h", "jnz     loc_196CF"], ["add     esp, 14h", "pop     ebx", "pop     esi", "retn"], ["mov     eax, 1", "jmp     short loc_19629"], ["push    edx", "push    edx", "mov     eax, [ebx+4]", "lea     edx, [esp+24h+ul]", "push    edx", "push    ebx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_196C8"], ["push    eax", "push    eax", "mov     eax, [ebx+4]", "lea     edx, [esp+24h+ul+4]", "push    edx", "push    ebx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_196C8"], ["mov     eax, [esp+1Ch+ul]", "mov     ecx, [esp+1Ch+ul+4]", "mov     [esi+4], eax", "mov     [esi], ecx", "mov     eax, 1", "jmp     short loc_19629"], ["mov     eax, [esi]", "mov     edx, [esi+4]", "mov     [esp+1Ch+ul], edx", "mov     [esp+1Ch+ul+4], eax", "push    esi", "push    esi", "mov     eax, [ebx+4]", "lea     edx, [esp+24h+ul]", "push    edx", "push    ebx", "call    dword ptr [eax+4]", "add     esp, 10h", "test    eax, eax", "jz      loc_19629"], ["push    ecx", "push    ecx", "mov     eax, [ebx+4]", "lea     edx, [esp+24h+ul+4]", "push    edx", "push    ebx", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     loc_19629"], ["xor     eax, eax", "jmp     loc_19629"], ["call    __stack_chk_fail_local"]], "xdr_u_int64_t": [["push    esi", "push    ebx", "sub     esp, 14h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ebx, [esp+1Ch+xdrs]", "mov     esi, [esp+1Ch+ullp]", "mov     edx, [ebx]", "cmp     edx, 1", "jz      short loc_19728"], ["cmp     edx, 2", "jz      short loc_19720"], ["test    edx, edx", "jz      short loc_19768"], ["mov     ecx, [esp+1Ch+var_10]", "xor     ecx, large gs:14h", "jnz     loc_197AF"], ["add     esp, 14h", "pop     ebx", "pop     esi", "retn"], ["mov     eax, 1", "jmp     short loc_19709"], ["push    edx", "push    edx", "mov     eax, [ebx+4]", "lea     edx, [esp+24h+ul]", "push    edx", "push    ebx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_197A8"], ["push    eax", "push    eax", "mov     eax, [ebx+4]", "lea     edx, [esp+24h+ul+4]", "push    edx", "push    ebx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_197A8"], ["mov     eax, [esp+1Ch+ul]", "mov     ecx, [esp+1Ch+ul+4]", "mov     [esi+4], eax", "mov     [esi], ecx", "mov     eax, 1", "jmp     short loc_19709"], ["mov     eax, [esi]", "mov     edx, [esi+4]", "mov     [esp+1Ch+ul], edx", "mov     [esp+1Ch+ul+4], eax", "push    esi", "push    esi", "mov     eax, [ebx+4]", "lea     edx, [esp+24h+ul]", "push    edx", "push    ebx", "call    dword ptr [eax+4]", "add     esp, 10h", "test    eax, eax", "jz      loc_19709"], ["push    ecx", "push    ecx", "mov     eax, [ebx+4]", "lea     edx, [esp+24h+ul+4]", "push    edx", "push    ebx", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     loc_19709"], ["xor     eax, eax", "jmp     loc_19709"], ["call    __stack_chk_fail_local"]], "xdrrec_setpos": [["push    ebp", "push    edi", "push    esi", "push    ebx", "push    eax", "mov     edx, [esp+14h+xdrs]", "mov     eax, [edx+0Ch]", "mov     edx, [edx]", "test    edx, edx", "jz      short loc_199C0"], ["dec     edx", "jnz     short loc_199B0"], ["mov     esi, [rstrm+2Ch]", "mov     ebx, [rstrm+28h]", "mov     edx, esi", "sub     edx, ebx", "cmp     edx, 3", "lea     ecx, [edx-4]", "jz      short loc_199B0"], ["mov     edi, [esp+14h+pos]", "mov     ebp, currpos", "sub     ebp, edi", "mov     edi, [rstrm+30h]", "xor     edx, edx", "mov     [esp+14h+var_14], edi", "cmp     edi, delta", "jle     short loc_199B2"], ["mov     edi, [esp+14h+pos]", "sub     edi, currpos", "mov     currpos, edi", "add     ecx, ebx", "cmp     ecx, esi", "ja      short loc_199B2"], ["cmp     [rstrm+24h], ecx", "ja      short loc_199B2"], ["mov     edi, [esp+14h+var_14]", "mov     [rstrm+28h], ecx", "sub     edi, delta", "mov     edx, 1", "mov     [rstrm+30h], edi", "jmp     short loc_199B2"], ["xor     edx, edx"], ["mov     rstrm, edx", "pop     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edx, [rstrm+0Ch]", "mov     ebp, [rstrm+8]", "mov     ecx, edx", "sub     ecx, ebp", "cmp     ecx, 3", "lea     ebx, [ecx-4]", "jz      short loc_199B0"], ["mov     ecx, [esp+14h+pos]", "sub     ecx, currpos", "add     ecx, edx", "xor     edx, edx", "cmp     [rstrm+14h], newpos", "jnb     short loc_199B2"], ["cmp     [rstrm+10h], newpos", "jbe     short loc_199B2"], ["mov     [rstrm+0Ch], newpos", "mov     edx, 1", "jmp     short loc_199B2"]], "xdrrec_inline": [["push    ebx", "mov     edx, [esp+4+xdrs]", "mov     eax, [edx+0Ch]", "mov     edx, [edx]", "test    edx, edx", "jz      short loc_19A30"], ["dec     edx", "jnz     short loc_19A28"], ["mov     ecx, [rstrm+30h]", "cmp     ecx, [esp+4+len]", "jb      short loc_19A28"], ["mov     edx, [rstrm+28h]", "mov     ebx, [esp+4+len]", "add     ebx, edx", "cmp     ebx, [rstrm+2Ch]", "ja      short loc_19A28"], ["sub     ecx, [esp+4+len]", "mov     [rstrm+28h], ebx", "mov     [rstrm+30h], ecx", "mov     rstrm, buf", "pop     ebx", "retn"], ["xor     edx, edx", "pop     ebx", "mov     rstrm, edx", "retn"], ["mov     edx, [rstrm+0Ch]", "mov     ecx, [esp+4+len]", "add     ecx, edx", "cmp     ecx, [rstrm+10h]", "ja      short loc_19A28"], ["mov     [rstrm+0Ch], ecx", "mov     rstrm, buf", "pop     ebx", "retn"]], "skip_input_bytes": [["test    cnt, cnt", "jle     short loc_19B20"], ["push    edi", "push    esi", "mov     esi, rstrm", "push    ebx", "mov     ebx, cnt"], ["mov     edx, [rstrm+2Ch]"], ["mov     eax, [rstrm+28h]", "mov     ecx, edx", "sub     ecx, eax", "jnz     short loc_19B00"], ["mov     eax, [rstrm+40h]", "test    eax, eax", "jnz     short loc_19AF9"], ["mov     eax, rstrm; rstrm", "call    fill_input_buf", "test    eax, eax", "jnz     short loc_19ADB"], ["xor     eax, eax"], ["pop     cnt", "pop     rstrm", "pop     edi", "retn"], ["mov     edi, cnt", "cmp     cnt, current", "jbe     short loc_19B08"], ["mov     edi, current"], ["add     eax, current", "sub     cnt, current", "mov     [rstrm+28h], eax", "test    cnt, cnt", "jg      short loc_19ADE"], ["mov     eax, 1", "jmp     short loc_19AFB"], ["mov     rstrm, 1", "retn"]], "get_input_bytes": [["push    ebp", "mov     ebp, len", "push    edi", "push    esi", "mov     esi, rstrm", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     rstrm, [rstrm+40h]", "test    eax, eax", "jz      short loc_19B8E"], ["mov     len, [rstrm+28h]", "mov     eax, [rstrm+2Ch]", "sub     eax, ecx", "cmp     eax, len", "jge     short loc_19BB8"], ["xor     eax, eax"], ["add     esp, 1Ch", "pop     ebx", "pop     rstrm", "pop     edi", "pop     ebp", "retn"], ["cmp     edi, ebp", "jbe     short loc_19B6E"], ["mov     edi, ebp"], ["push    ecx", "sub     ebp, edi", "push    edi; n", "push    eax; src", "push    edx; dest", "mov     [esp+3Ch+var_20], edx", "call    _memmove", "mov     eax, [rstrm+28h]", "mov     edx, [esp+3Ch+var_20]", "add     eax, edi", "add     edx, edi", "mov     [rstrm+28h], eax", "add     esp, 10h"], ["test    ebp, ebp", "jle     short loc_19BE0"], ["mov     eax, [rstrm+28h]", "mov     edi, [rstrm+2Ch]", "sub     edi, eax", "jnz     short loc_19B68"], ["mov     eax, [rstrm+40h]", "mov     [esp+2Ch+var_20], edx", "test    eax, eax", "jnz     short loc_19B59"], ["mov     eax, rstrm; rstrm", "call    fill_input_buf", "test    eax, eax", "jz      short loc_19B59"], ["mov     edx, [esp+2Ch+var_20]", "jmp     short loc_19B92"], ["push    eax", "push    len; n", "push    ecx; src", "push    addr; dest", "call    _memcpy", "mov     eax, [rstrm+28h]", "add     esp, 10h", "add     eax, len", "mov     [rstrm+28h], eax", "add     esp, 1Ch", "mov     eax, 1", "pop     ebx", "pop     rstrm", "pop     edi", "pop     len", "retn"], ["mov     eax, 1", "jmp     loc_19B5B"]], "xdrrec_putbytes": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     eax, [esp+1Ch+xdrs]", "mov     ebp, [esp+1Ch+len]", "mov     edi, [eax+0Ch]", "lea     esi, [esi+0]"], ["test    len_0, len_0", "jz      short loc_19CC8"], ["mov     eax, [rstrm+0Ch]", "mov     esi, [rstrm+10h]", "sub     esi, eax", "cmp     current, len_0", "jbe     short loc_19C82"], ["mov     current, len_0"], ["push    edx", "sub     len_0, current", "push    current; n", "mov     ecx, [esp+24h+addr]", "push    ecx; src", "push    eax; dest", "call    _memmove", "mov     edx, [esp+2Ch+addr]", "mov     eax, [rstrm+0Ch]", "add     eax, current", "add     edx, current", "mov     [esp+2Ch+addr], edx", "mov     [rstrm+0Ch], eax", "add     esp, 10h", "cmp     eax, [rstrm+10h]", "jnz     short loc_19C70"], ["xor     addr_0, addr_0; eor", "mov     dword ptr [rstrm+18h], 1", "mov     eax, rstrm; rstrm", "call    flush_out", "test    eax, eax", "jnz     short loc_19C70"], ["add     esp, 0Ch", "pop     ebx", "pop     current", "pop     rstrm", "pop     len_0", "retn"], ["add     esp, 0Ch", "mov     eax, 1", "pop     ebx", "pop     esi", "pop     rstrm", "pop     len_0", "retn"]], "set_input_fragment": [["push    ebx", "mov     ebx, rstrm", "sub     esp, 18h", "mov     ecx, 4; len", "mov     rstrm, large gs:14h", "mov     [esp+1Ch+var_10], rstrm", "xor     rstrm, rstrm", "mov     eax, rstrm; rstrm", "lea     edx, [esp+1Ch+header]; addr", "call    get_input_bytes", "test    eax, eax", "jz      short loc_19D88"], ["mov     eax, [esp+1Ch+header]", "bswap   eax", "mov     edx, eax", "shr     edx, 1Fh", "test    eax, eax", "mov     [rstrm+34h], edx", "jz      short loc_19D88"], ["and     eax, 7FFFFFFFh", "mov     [rstrm+30h], eax", "mov     eax, 1", "jmp     short loc_19D8A"], ["xor     eax, eax"], ["mov     ecx, [esp+1Ch+var_10]", "xor     ecx, large gs:14h", "jnz     short loc_19D9C"], ["add     esp, 18h", "pop     rstrm", "retn"], ["call    __stack_chk_fail_local"]], "xdrrec_getbytes": [["push    edi", "push    esi", "push    ebx", "mov     eax, [esp+0Ch+xdrs]", "mov     edi, [esp+0Ch+len]", "test    edi, edi", "mov     esi, [eax+0Ch]", "jz      short loc_19E13"], ["mov     ebx, [rstrm+30h]", "test    current, current", "jnz     short loc_19DE8"], ["mov     current, [rstrm+34h]", "test    ebx, ebx", "jnz     short loc_19DE2"], ["mov     ecx, [rstrm+40h]", "test    ecx, ecx", "jnz     short loc_19DE2"], ["mov     eax, rstrm; rstrm", "call    set_input_fragment", "test    eax, eax", "jnz     short loc_19DC2"], ["xor     eax, eax"], ["pop     ebx", "pop     rstrm", "pop     edi", "retn"], ["cmp     current, len_0", "ja      short loc_19E20"], ["mov     ecx, current; len", "mov     edx, [esp+0Ch+addr]; addr", "mov     eax, rstrm; rstrm", "call    get_input_bytes", "test    eax, eax", "jz      short loc_19DE2"], ["mov     eax, [esp+0Ch+addr]", "mov     edx, [rstrm+30h]", "add     eax, current", "sub     edx, current", "sub     len_0, current", "mov     [esp+0Ch+addr], eax", "mov     [rstrm+30h], edx", "jnz     short loc_19DC2"], ["mov     eax, 1", "jmp     short loc_19DE4"], ["mov     current, len_0", "jmp     short loc_19DEC"]], "xdrrec_getlong": [["push    esi", "push    ebx", "sub     esp, 14h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     esi, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+lp]", "mov     eax, [esi+0Ch]", "cmp     dword ptr [rstrm+30h], 3", "jbe     short loc_19E90"], ["mov     edx, [rstrm+28h]", "mov     ecx, [rstrm+2Ch]", "sub     ecx, edx", "cmp     ecx, 3", "jbe     short loc_19E90"], ["mov     ecx, [edx]", "add     edx, 4", "bswap   ecx", "mov     [ebx], ecx", "mov     [rstrm+28h], edx", "mov     ecx, [rstrm+30h]", "sub     ecx, 4", "mov     [rstrm+30h], ecx", "mov     rstrm, 1"], ["mov     ebx, [esp+1Ch+var_10]", "xor     ebx, large gs:14h", "jnz     short loc_19EB4"], ["add     esp, 14h", "pop     ebx", "pop     esi", "retn"], ["push    eax", "push    4; len", "lea     eax, [esp+24h+addr]", "push    eax; addr", "push    esi; xdrs", "call    xdrrec_getbytes", "add     esp, 10h", "test    eax, eax", "jz      short loc_19E79"], ["mov     eax, dword ptr [esp+1Ch+addr]", "bswap   eax", "mov     [ebx], eax", "mov     eax, 1", "jmp     short loc_19E79"], ["call    __stack_chk_fail_local"]], "xdrrec_create": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 24h", "push    60h ; '`'; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "test    rstrm, rstrm", "jz      loc_1A00D"], ["cmp     [esp+2Ch+sendsize], 63h ; 'c'", "mov     esi, rstrm", "mov     edi, 0FA0h", "ja      loc_19FD0"], ["mov     [rstrm+38h], edi", "push    ecx", "push    ecx", "push    edi; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     edx, eax", "mov     [rstrm+8], eax", "test    eax, eax", "jz      loc_19FF1"], ["cmp     [esp+2Ch+recvsize], 63h ; 'c'", "mov     ebp, 0FA0h", "ja      loc_19FE0"], ["mov     [esp+2Ch+var_20], edx", "mov     [rstrm+3Ch], ebp", "push    edx", "push    edx", "push    ebp; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     [rstrm+24h], eax", "test    eax, eax", "mov     edx, [esp+2Ch+var_20]", "jz      loc_1A021"], ["mov     ecx, [esp+2Ch+xdrs]", "lea     ebx, (xdrrec_ops.x_getlong - 2BB6Ch)[ebx]", "add     eax, ebp", "add     edi, edx", "mov     [ecx+4], ebx", "mov     ebx, [esp+2Ch+tcp_handle]", "mov     [rstrm], ebx", "mov     ebx, [esp+2Ch+readit]", "mov     [rstrm+1Ch], ebx", "mov     ebx, [esp+2Ch+writeit]", "mov     [rstrm+4], ebx", "mov     [rstrm+2Ch], eax", "lea     ebx, [edx+4]", "mov     [rstrm+28h], eax", "lea     eax, [rstrm+48h]", "mov     [ecx+0Ch], rstrm", "mov     [rstrm+14h], edx", "mov     [rstrm+0Ch], ebx", "mov     [rstrm+10h], edi", "mov     dword ptr [rstrm+18h], 0", "mov     [rstrm+20h], ebp", "mov     dword ptr [rstrm+30h], 0", "mov     dword ptr [rstrm+34h], 1", "mov     dword ptr [rstrm+44h], 0", "mov     dword ptr [rstrm+50h], 0", "mov     [rstrm+4Ch], eax", "mov     dword ptr [rstrm+40h], 0", "mov     dword ptr [rstrm+54h], 0", "mov     dword ptr [rstrm+58h], 0"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     rstrm, [esp+2Ch+sendsize]", "lea     edi, [eax+3]", "and     edi, 0FFFFFFFCh", "jmp     loc_19EF8"], ["mov     eax, [esp+2Ch+recvsize]", "lea     ecx, [eax+3]", "and     ecx, 0FFFFFFFCh", "mov     ebp, ecx", "jmp     loc_19F25"], ["sub     esp, 0Ch", "lea     eax, (aXdrrecCreateOu - 2BB6Ch)[ebx]; \"xdrrec_create: out of memory\"", "push    eax; format", "call    _warnx", "mov     [esp+3Ch+ptr], rstrm; ptr", "call    _free", "add     esp, 10h", "jmp     short loc_19FC3"], ["sub     esp, 0Ch", "lea     rstrm, (aXdrrecCreateOu - 2BB6Ch)[ebx]; \"xdrrec_create: out of memory\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "jmp     short loc_19FC3"], ["sub     esp, 0Ch", "lea     eax, (aXdrrecCreateOu - 2BB6Ch)[ebx]; \"xdrrec_create: out of memory\"", "push    eax; format", "call    _warnx", "pop     eax", "push    dword ptr [rstrm+8]; ptr", "call    _free", "mov     [esp+3Ch+ptr], rstrm; ptr", "call    _free", "add     esp, 10h", "jmp     loc_19FC3"]], "xdrrec_eof": [["push    ebx", "sub     esp, 8", "mov     eax, [esp+0Ch+xdrs]", "mov     ebx, [eax+0Ch]"], ["mov     edx, [rstrm+30h]; cnt", "test    edx, edx", "jle     short loc_1A090"], ["mov     eax, rstrm; rstrm", "call    skip_input_bytes", "test    eax, eax", "jz      short loc_1A0A2"], ["mov     eax, [rstrm+34h]", "mov     dword ptr [rstrm+30h], 0", "test    eax, eax", "jz      short loc_1A0B0"], ["mov     eax, [rstrm+2Ch]", "cmp     [rstrm+28h], eax", "setz    al", "add     esp, 8", "and     eax, 0FFh", "pop     rstrm", "retn"], ["mov     eax, [rstrm+34h]", "test    eax, eax", "jnz     short loc_1A07B"], ["mov     eax, rstrm; rstrm", "call    skip_input_bytes", "test    eax, eax", "jnz     short loc_1A06D"], ["add     esp, 8", "mov     eax, 1", "pop     rstrm", "retn"], ["mov     eax, [rstrm+40h]", "test    eax, eax", "jnz     short loc_1A0A2"], ["mov     eax, rstrm; rstrm", "call    set_input_fragment", "test    eax, eax", "jnz     short loc_1A05B"], ["jmp     short loc_1A0A2"]], "__xdrrec_getrec": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     eax, [esp+1Ch+xdrs]", "mov     esi, [eax+0Ch]", "mov     eax, [rstrm+44h]", "mov     edx, [rstrm+1Ch]", "mov     ecx, [rstrm]", "test    eax, eax", "jz      short loc_1A1A8"], ["mov     edi, [rstrm+54h]", "mov     eax, [rstrm+24h]"], ["mov     ebp, [rstrm+58h]", "sub     esp, 4", "sub     edi, ebp", "add     eax, ebp", "push    edi", "push    eax", "push    ecx", "call    edx", "add     esp, 10h", "mov     edi, eax", "test    n, n", "js      loc_1A268"], ["jz      loc_1A238"], ["mov     edx, [rstrm+58h]", "add     edi, edx", "cmp     edi, [rstrm+54h]", "mov     [rstrm+58h], edi", "jz      loc_1A280"], ["mov     eax, [esp+1Ch+statp]", "xor     edi, edi", "mov     dword ptr [eax], 1"], ["add     esp, 0Ch", "mov     eax, edi", "pop     ebx", "pop     rstrm", "pop     edi", "pop     ebp", "retn"], ["push    eax", "mov     eax, 4", "mov     edi, [rstrm+50h]", "mov     ebp, [rstrm+4Ch]", "sub     eax, edi", "push    eax", "push    ebp", "push    ecx", "call    edx", "add     esp, 10h", "mov     edi, eax", "test    n, n", "jz      short loc_1A238"], ["js      loc_1A268"], ["mov     ebp, [rstrm+4Ch]", "add     ebp, n", "mov     n, [rstrm+50h]", "add     n, eax", "mov     [rstrm+4Ch], ebp", "mov     [rstrm+50h], edi", "cmp     edi, 3", "jbe     short loc_1A18E"], ["mov     edx, [rstrm+48h]", "bswap   edx", "mov     edi, edx", "mov     [rstrm+48h], edx", "and     edi, 7FFFFFFFh", "jz      short loc_1A268"], ["mov     eax, [rstrm+5Ch]", "cmp     eax, fraglen", "jl      short loc_1A268"], ["mov     ecx, [rstrm+54h]", "add     fraglen, ecx", "cmp     eax, edi", "jl      short loc_1A268"], ["cmp     edi, [rstrm+3Ch]", "mov     [rstrm+54h], edi", "mov     eax, [rstrm+24h]", "ja      loc_1A2E8"], ["test    edx, edx", "jns     short loc_1A224"], ["and     edx, 7FFFFFFFh", "mov     dword ptr [rstrm+34h], 1", "mov     [rstrm+48h], edx"], ["mov     dword ptr [rstrm+44h], 1", "mov     edx, [rstrm+1Ch]", "mov     ecx, [rstrm]", "jmp     loc_1A15B"], ["call    ___errno_location", "cmp     dword ptr [eax], 0Bh", "jz      loc_1A2D0"], ["xor     eax, eax", "mov     ecx, [esp+1Ch+expectdata]", "test    ecx, ecx", "mov     ebx, [esp+1Ch+statp]", "setz    al", "add     eax, eax", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2BB6Ch)[ebx], eax", "add     esp, 0Ch", "mov     eax, n", "pop     ebx", "pop     rstrm", "pop     n", "pop     ebp", "retn"], ["mov     eax, [esp+1Ch+statp]", "xor     edi, edi", "mov     dword ptr [eax], 0", "add     esp, 0Ch", "mov     eax, edi", "pop     ebx", "pop     rstrm", "pop     edi", "pop     ebp", "retn"], ["lea     n, [rstrm+48h]", "mov     dword ptr [rstrm+44h], 0", "mov     [rstrm+4Ch], eax", "mov     eax, [rstrm+34h]", "mov     dword ptr [rstrm+50h], 0", "test    eax, eax", "jz      loc_1A18E"], ["mov     eax, [rstrm+24h]", "mov     [rstrm+30h], edi", "mov     [rstrm+28h], eax", "add     edi, eax", "mov     eax, [esp+1Ch+statp]", "mov     [rstrm+2Ch], edi", "mov     dword ptr [rstrm+58h], 0", "mov     dword ptr [rstrm+54h], 0", "mov     edi, 1", "mov     dword ptr [eax], 1", "jmp     loc_1A19A"], ["mov     eax, [esp+1Ch+statp]", "xor     n, n", "mov     dword ptr [eax], 2", "add     esp, 0Ch", "mov     eax, edi", "pop     ebx", "pop     rstrm", "pop     edi", "pop     ebp", "retn"], ["push    edx", "push    edx", "push    edi; size", "push    eax; ptr", "call    _realloc", "add     esp, 10h", "test    eax, eax", "jz      short loc_1A321"], ["mov     ecx, [rstrm+24h]", "mov     edx, eax", "sub     edx, ecx", "mov     ebp, [rstrm+28h]", "add     ebp, edx", "lea     edx, [eax+edi]", "mov     [rstrm+2Ch], edx", "mov     [rstrm+3Ch], edi", "mov     [rstrm+20h], edi", "mov     [rstrm+28h], ebp", "mov     [rstrm+24h], eax", "mov     edx, [rstrm+48h]", "mov     edi, [rstrm+54h]", "jmp     loc_1A210"], ["mov     edx, [rstrm+48h]", "mov     edi, [rstrm+54h]", "mov     eax, [rstrm+24h]", "jmp     loc_1A210"]], "xdrrec_skiprecord": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 14h", "mov     ecx, large gs:14h", "mov     [esp+1Ch+var_10], ecx", "xor     ecx, ecx", "mov     eax, [esp+1Ch+xdrs]", "mov     esi, [eax+0Ch]", "mov     ecx, [rstrm+40h]", "test    ecx, ecx", "jnz     short loc_1A3B8"], ["mov     edx, [rstrm+30h]; cnt", "test    edx, edx", "jle     short loc_1A3A0"], ["mov     eax, rstrm; rstrm", "call    skip_input_bytes", "test    eax, eax", "jz      short loc_1A3B2"], ["mov     ecx, [rstrm+34h]", "mov     dword ptr [rstrm+30h], 0", "test    ecx, ecx", "jz      short loc_1A3F0"], ["mov     dword ptr [rstrm+34h], 0", "mov     eax, 1", "nop"], ["mov     ecx, [esp+1Ch+var_10]", "xor     ecx, large gs:14h", "jnz     short loc_1A40D"], ["add     esp, 14h", "pop     ebx", "pop     rstrm", "retn"], ["mov     eax, [rstrm+34h]", "test    eax, eax", "jnz     short loc_1A37B"], ["mov     eax, rstrm; rstrm", "call    skip_input_bytes", "test    eax, eax", "jnz     short loc_1A36D"], ["xor     eax, eax", "jmp     short loc_1A388"], ["push    edx", "push    0; expectdata", "lea     edx, [esp+24h+xstat]", "push    edx; statp", "push    eax; xdrs", "call    __xdrrec_getrec", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1A3DC"], ["mov     eax, [rstrm+2Ch]", "cmp     [rstrm+28h], eax", "jnz     short loc_1A3B2"], ["cmp     [esp+1Ch+xstat], 1", "jnz     short loc_1A3B2"], ["mov     dword ptr [rstrm+30h], 0", "mov     eax, 1", "jmp     short loc_1A388"], ["mov     edx, [rstrm+40h]", "test    edx, edx", "jnz     short loc_1A3B2"], ["mov     eax, rstrm; rstrm", "call    set_input_fragment", "test    eax, eax", "jnz     loc_1A35B"], ["xor     eax, eax", "jmp     loc_1A388"], ["call    __stack_chk_fail_local"]], "xdr_array": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 24h", "mov     eax, [esp+34h+addrp]", "mov     ebp, [esp+34h+sizep]", "mov     [esp+34h+var_20], ebx", "mov     edi, [esp+34h+xdrs]", "mov     esi, [eax]", "push    ebp; up", "push    edi; xdrs", "call    _xdr_u_int", "add     esp, 10h", "test    eax, eax", "jz      short loc_1A4D7"], ["mov     ebp, [ebp+0]", "cmp     c_0, [esp+2Ch+maxsize]", "jbe     short loc_1A4E0"], ["xor     eax, eax", "cmp     dword ptr [edi], 2", "jnz     short loc_1A4D7"], ["test    target, target", "jz      loc_1A590"], ["mov     eax, 1", "test    c_0, c_0", "jz      loc_1A550"], ["mov     [esp+2Ch+c], c_0", "xor     ebx, ebx", "mov     c_0, esi", "mov     esi, [esp+2Ch+elproc]", "lea     esi, [esi+0]", "nop"], ["push    edx", "inc     i", "push    edx", "push    target", "push    edi", "call    esi", "mov     ecx, [esp+3Ch+elsize]", "add     esp, 10h", "add     target, ecx", "cmp     [esp+2Ch+c], i", "jbe     short loc_1A4D2"], ["test    stat, stat", "jnz     short loc_1A4B8"], ["cmp     dword ptr [edi], 2", "jz      short loc_1A550"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, c_0", "mul     [esp+2Ch+elsize]", "mov     ecx, eax", "jo      short loc_1A48B"], ["test    target, target", "jz      short loc_1A500"], ["test    c_0, c_0", "jnz     short loc_1A4A7"], ["mov     nodesize, 1", "jmp     short loc_1A4D2"], ["mov     nodesize, [edi]", "cmp     eax, 1", "jnz     short loc_1A580"], ["mov     eax, 1", "test    c_0, c_0", "jz      short loc_1A4D7"], ["push    ebx", "push    ebx", "push    nodesize; size", "push    1; nmemb", "mov     ebx, [esp+3Ch+var_20]", "call    _calloc", "mov     target, eax", "mov     target, [esp+3Ch+addrp]", "add     esp, 10h", "test    target, target", "mov     [eax], target", "jnz     loc_1A4A7"], ["sub     esp, 0Ch", "mov     ebx, [esp+38h+var_20]", "lea     eax, (aXdrArrayOutOfM - 2BB6Ch)[ebx]; \"xdr_array: out of memory\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "xor     eax, eax", "jmp     short loc_1A4D7"], ["mov     [esp+2Ch+c], eax", "sub     esp, 0Ch", "mov     eax, [esp+38h+addrp]", "mov     eax, [eax]", "push    eax; ptr", "mov     ebx, [esp+3Ch+var_20]", "call    _free", "mov     eax, [esp+3Ch+addrp]", "add     esp, 10h", "mov     dword ptr [eax], 0", "mov     eax, [esp+2Ch+c]", "jmp     loc_1A4D7"], ["cmp     eax, 2", "jz      short loc_1A590"], ["test    c_0, c_0", "jnz     loc_1A4A7"], ["lea     esi, [esi+0]"], ["mov     eax, 1", "jmp     loc_1A4D7"]], "xdr_vector": [["push    ebp", "push    edi", "push    esi", "push    ebx", "sub     esp, 0Ch", "mov     ecx, [esp+1Ch+nelem]", "mov     edi, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+basep]", "mov     ebp, [esp+1Ch+xdr_elem]", "test    ecx, ecx", "jz      short loc_1A5E8"], ["xor     esi, esi", "jmp     short loc_1A5CD"], ["mov     eax, [esp+1Ch+elemsize]", "inc     i", "add     elptr, eax", "cmp     [esp+1Ch+nelem], i", "jz      short loc_1A5E8"], ["push    edx", "push    edx", "push    elptr", "push    edi", "call    ebp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1A5C0"], ["add     esp, 0Ch", "pop     elptr", "pop     i", "pop     edi", "pop     ebp", "retn"], ["add     esp, 0Ch", "mov     eax, 1", "pop     elptr", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "xdr_float": [["push    ebx", "sub     esp, 18h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     ecx, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+fp]", "mov     edx, [ecx]", "cmp     edx, 1", "jz      short loc_1A648"], ["cmp     edx, 2", "jz      short loc_1A640"], ["test    edx, edx", "jz      short loc_1A670"], ["mov     ebx, [esp+1Ch+var_10]", "xor     ebx, large gs:14h", "jnz     short loc_1A689"], ["add     esp, 18h", "pop     ebx", "retn"], ["mov     eax, 1", "jmp     short loc_1A628"], ["push    eax", "push    eax", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+var_14]", "push    edx", "push    ecx", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_1A628"], ["mov     eax, [esp+1Ch+var_14]", "mov     [ebx], eax", "mov     eax, 1", "jmp     short loc_1A628"], ["mov     eax, [ebx]", "mov     [esp+1Ch+var_14], eax", "push    edx", "push    edx", "mov     eax, [ecx+4]", "lea     edx, [esp+24h+var_14]", "push    edx", "push    ecx", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     short loc_1A628"], ["call    __stack_chk_fail_local"]], "xdr_double": [["push    edi", "push    esi", "push    ebx", "sub     esp, 10h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     esi, [esp+1Ch+xdrs]", "mov     ebx, [esp+1Ch+dp]", "mov     edx, [esi]", "cmp     edx, 1", "jz      short loc_1A6D8"], ["cmp     edx, 2", "jz      short loc_1A6D0"], ["test    edx, edx", "jz      short loc_1A710"], ["mov     ecx, [esp+1Ch+var_10]", "xor     ecx, large gs:14h", "jnz     short loc_1A744"], ["add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["mov     eax, 1", "jmp     short loc_1A6BA"], ["push    edx", "push    edx", "mov     eax, [esi+4]", "lea     edi, [esp+24h+var_14]", "push    edi", "push    esi", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_1A6BA"], ["mov     eax, [esp+1Ch+var_14]", "mov     [i32p+4], eax", "push    eax", "push    eax", "mov     eax, [esi+4]", "push    edi", "push    esi", "call    dword ptr [eax]", "add     esp, 10h", "test    eax, eax", "jz      short loc_1A6BA"], ["mov     eax, [esp+1Ch+var_14]", "mov     [i32p], eax", "mov     eax, 1", "jmp     short loc_1A6BA"], ["mov     eax, [i32p+4]", "mov     [esp+1Ch+var_14], eax", "push    edi", "push    edi", "mov     eax, [esi+4]", "lea     edi, [esp+24h+var_14]", "push    edi", "push    esi", "call    dword ptr [eax+4]", "add     esp, 10h", "test    rv, rv", "jz      short loc_1A6BA"], ["mov     rv, [i32p]", "mov     [esp+1Ch+var_14], eax", "push    ecx", "push    ecx", "mov     eax, [esi+4]", "push    edi", "push    esi", "call    dword ptr [eax+4]", "add     esp, 10h", "jmp     loc_1A6BA"], ["call    __stack_chk_fail_local"]], "xdr_reference": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     edi, [esp+2Ch+pp]", "mov     esi, [esp+2Ch+xdrs]", "mov     ebp, [edi]", "test    loc, loc", "jz      short loc_1A9F8"], ["push    eax", "push    eax", "push    loc", "push    esi; XDR *", "call    [esp+3Ch+proc]", "add     esp, 10h", "cmp     dword ptr [esi], 2", "jz      short loc_1AA19"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     loc", "retn"], ["mov     edx, [esi]", "cmp     edx, 1", "jz      short loc_1AA40"], ["mov     eax, 1", "cmp     edx, 2", "jz      short loc_1A9F0"], ["push    eax", "push    eax", "push    loc", "push    esi; XDR *", "call    [esp+3Ch+proc]", "add     esp, 10h", "cmp     dword ptr [esi], 2", "jnz     short loc_1A9F0"], ["mov     [esp+2Ch+stat], stat_0", "sub     esp, 0Ch", "push    loc; ptr", "call    _free", "add     esp, 10h", "mov     dword ptr [edi], 0", "mov     eax, [esp+2Ch+stat]", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     loc", "retn"], ["push    edx", "push    edx", "mov     ecx, [esp+34h+size]", "push    ecx; size", "push    1; nmemb", "call    _calloc", "add     esp, 10h", "mov     loc, eax", "mov     [edi], loc", "test    loc, loc", "jnz     short loc_1A9E0"], ["sub     esp, 0Ch", "lea     loc, (aXdrReferenceOu - 2BB6Ch)[ebx]; \"xdr_reference: out of memory\"", "push    eax; format", "call    _warnx", "add     esp, 10h", "xor     eax, eax", "jmp     short loc_1A9F0"]], "xdr_pointer": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 24h", "mov     eax, large gs:14h", "mov     [esp+34h+var_20], eax", "xor     eax, eax", "xor     eax, eax", "mov     esi, [esp+34h+objpp]", "mov     ebp, [esp+34h+xdrs]", "mov     edi, [esp+34h+xdr_obj]", "mov     ecx, [esi]", "test    ecx, ecx", "setnz   al", "mov     [esp+34h+more_data], eax", "lea     eax, [esp+34h+more_data]", "push    eax; bp", "push    ebp; xdrs", "call    _xdr_bool", "add     esp, 10h", "test    eax, eax", "jz      short loc_1AACC"], ["mov     edx, [esp+2Ch+more_data]", "test    edx, edx", "jnz     short loc_1AAE8"], ["mov     dword ptr [esi], 0", "mov     eax, 1"], ["mov     edx, [esp+2Ch+var_20]", "xor     edx, large gs:14h", "jnz     short loc_1AAFA"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    edi; proc", "mov     eax, [esp+30h+obj_size]", "push    eax; size", "push    esi; xpp", "push    ebp; xdrs", "call    _xdr_reference", "add     esp, 10h", "jmp     short loc_1AACC"], ["call    __stack_chk_fail_local"]], "xdrstdio_getlong": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 14h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     eax, [esp+1Ch+xdrs]", "mov     esi, [esp+1Ch+lp]", "mov     eax, [eax+0Ch]", "push    eax; stream", "push    1; n", "push    4; size", "lea     eax, [esp+28h+mycopy]", "push    eax; ptr", "call    _fread", "mov     edx, eax", "add     esp, 10h", "dec     edx", "jnz     short loc_1AC60"], ["mov     eax, [esp+1Ch+mycopy]", "bswap   eax", "mov     [esi], eax", "mov     eax, 1"], ["mov     ecx, [esp+1Ch+var_10]", "xor     ecx, large gs:14h", "jnz     short loc_1AC64"], ["add     esp, 14h", "pop     ebx", "pop     esi", "retn"], ["xor     eax, eax", "jmp     short loc_1AC4B"], ["call    __stack_chk_fail_local"]], "x_inline": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edi, [esp+0Ch+len]", "mov     esi, [esp+0Ch+xdrs]", "test    edi, edi", "jz      short loc_1AE60"], ["mov     ecx, [esi]", "test    ecx, ecx", "jnz     short loc_1AE60"], ["cmp     [esi+10h], edi", "mov     eax, [esi+0Ch]", "ja      short loc_1AE4E"], ["test    eax, eax", "jz      short loc_1AE38"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["sub     esp, 0Ch", "push    edi; size", "call    _malloc", "add     esp, 10h", "mov     [esi+0Ch], eax", "test    eax, eax", "jz      short loc_1AE66"], ["mov     [esi+10h], edi"], ["mov     edx, [esi+14h]", "add     edx, edi", "mov     [esi+14h], edx"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["pop     ebx", "xor     eax, eax", "pop     xdrs_0", "pop     len_0", "retn"], ["mov     dword ptr [esi+10h], 0", "jmp     short loc_1AE56"]], "xdr_sizeof": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 44h", "mov     eax, large gs:14h", "mov     [esp+4Ch+var_10], eax", "xor     eax, eax", "lea     eax, (x_putlong - 2BB6Ch)[ebx]", "mov     [esp+4Ch+ops.x_putlong], eax", "lea     eax, (x_putbytes - 2BB6Ch)[ebx]", "mov     [esp+4Ch+ops.x_putbytes], eax", "lea     eax, (x_inline - 2BB6Ch)[ebx]", "mov     [esp+4Ch+ops.x_inline], eax", "lea     eax, (x_getpostn - 2BB6Ch)[ebx]", "mov     [esp+4Ch+ops.x_getpostn], eax", "lea     eax, (x_setpostn - 2BB6Ch)[ebx]", "mov     [esp+4Ch+ops.x_setpostn], eax", "lea     eax, (x_destroy - 2BB6Ch)[ebx]", "mov     [esp+4Ch+ops.x_destroy], eax", "lea     eax, (harmless - 2BB6Ch)[ebx]", "mov     [esp+4Ch+ops.x_getlong], eax", "mov     [esp+4Ch+ops.x_getbytes], eax", "lea     eax, [esp+4Ch+ops]", "mov     [esp+4Ch+x.x_op], 0", "mov     [esp+4Ch+x.x_ops], eax", "mov     [esp+4Ch+x.x_handy], 0", "mov     [esp+4Ch+x.x_private], 0", "mov     [esp+4Ch+x.x_base], 0", "push    eax", "push    eax", "mov     edx, [esp+54h+data]", "push    edx", "lea     eax, [esp+58h+x]", "push    eax; XDR *", "call    [esp+5Ch+func]", "mov     esi, eax", "mov     stat, [esp+5Ch+x.x_private]", "add     esp, 10h", "test    eax, eax", "jz      short loc_1AF26"], ["sub     esp, 0Ch", "push    eax; ptr", "call    _free", "add     esp, 10h"], ["xor     eax, eax", "dec     stat", "jnz     short loc_1AF2F"], ["mov     eax, [esp+4Ch+x.x_handy]"], ["mov     edx, [esp+4Ch+var_10]", "xor     edx, large gs:14h", "jnz     short loc_1AF42"], ["add     esp, 44h", "pop     ebx", "pop     esi", "retn"], ["call    __stack_chk_fail_local"]], "getkeyserv_handle": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1CCh", "lea     esi, (key_call_key - 2BB6Ch)[ebx]", "mov     [esp+1DCh+vers], vers_0", "mov     vers_0, large gs:14h", "mov     [esp+1DCh+var_20], vers_0", "xor     vers_0, vers_0", "mov     eax, [esi]", "cmp     eax, 0FFFFFFFFh", "jz      loc_1B1F8"], ["sub     esp, 0Ch", "push    eax; key", "call    _pthread_getspecific", "add     esp, 10h", "mov     ebp, eax", "test    kcp, kcp", "jz      loc_1B250"], ["mov     kcp, [kcp]", "test    eax, eax", "jz      short loc_1AFCC"], ["mov     esi, [kcp+4]", "call    _getpid", "cmp     esi, eax", "jz      loc_1B050"], ["mov     eax, [kcp+0]", "sub     esp, 0Ch", "mov     edx, [eax+4]", "push    eax", "call    dword ptr [edx+10h]", "mov     dword ptr [kcp+0], 0", "add     esp, 10h"], ["call    _setnetconfig", "mov     [esp+1DCh+localhandle], eax", "test    localhandle_0, localhandle_0", "jz      loc_1B290"], ["sub     esp, 0Ch", "lea     localhandle_0, [esp+1E8h+u]", "push    eax; name", "call    _uname", "add     esp, 10h", "inc     eax", "mov     [esp+1DCh+tpconf], 0", "jz      loc_1B27D"], ["lea     eax, (aLoopback - 2BB6Ch)[ebx]; \"loopback\"", "mov     [esp+1DCh+var_1CC], eax", "lea     eax, [esp+1DCh+u.nodename]", "mov     [esp+1DCh+hostname], eax", "xchg    ax, ax"], ["sub     esp, 0Ch", "mov     ecx, [esp+1E8h+localhandle]", "push    ecx; handlep", "call    _getnetconfig", "add     esp, 10h", "test    nconf, nconf", "jz      loc_1B1B8"], ["mov     esi, [nconf+0Ch]", "mov     ecx, 9", "mov     edi, [esp+1DCh+var_1CC]", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_1B010"], ["cmp     dword ptr [nconf+4], 3", "jz      loc_1B0F0"], ["mov     [esp+1DCh+tpconf], nconf", "jmp     short loc_1B010"], ["mov     eax, [kcp+0]", "test    eax, eax", "jz      loc_1AFCC"], ["mov     esi, [kcp+8]", "call    _geteuid", "cmp     esi, eax", "jz      loc_1B0E8"], ["call    _geteuid", "sub     esp, 0Ch", "mov     [kcp+8], eax", "mov     eax, [kcp+0]", "mov     eax, [eax]", "mov     edx, [eax+20h]", "push    eax", "call    dword ptr [edx+10h]", "mov     esi, [kcp+0]", "mov     [esp+1ECh+aup_gids], 0; aup_gids", "push    0; len", "push    0; gid", "mov     eax, [kcp+8]", "push    eax; uid", "lea     eax, (aContinuingIn10+1Ah - 2BB6Ch)[ebx]; \"\"", "push    eax; machname", "call    _authunix_create", "mov     edx, [kcp+0]", "mov     [esi], eax", "add     esp, 20h", "mov     eax, [edx]", "test    eax, eax", "jz      loc_1B228"], ["push    eax", "mov     eax, [edx+4]", "lea     ecx, [esp+1E0h+vers]", "push    ecx", "push    0Dh", "push    edx", "call    dword ptr [eax+14h]", "mov     eax, [kcp+0]", "add     esp, 10h"], ["mov     edi, [esp+1DCh+var_20]", "xor     edi, large gs:14h", "jnz     loc_1B2C7"], ["add     esp, 1CCh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edx, [kcp+0]", "jmp     short loc_1B0B2"], ["push    nconf; nconf", "mov     esi, [esp+1E0h+vers]", "push    esi; vers", "push    186BDh; prog", "mov     edi, [esp+1E8h+hostname]", "push    edi; hostname", "call    _clnt_tp_create", "add     esp, 10h", "mov     [kcp+0], eax", "test    eax, eax", "jz      loc_1B010"], ["lea     esi, [esi+0]", "nop"], ["sub     esp, 0Ch", "mov     eax, [esp+1E8h+localhandle]", "push    eax; handlep", "call    _endnetconfig", "mov     eax, [kcp+0]", "add     esp, 10h", "test    eax, eax", "jz      loc_1B290"], ["call    _geteuid", "mov     [kcp+8], eax", "call    _getpid", "sub     esp, 0Ch", "mov     [kcp+4], eax", "mov     esi, [kcp+0]", "push    0; aup_gids", "lea     eax, (aContinuingIn10+1Ah - 2BB6Ch)[ebx]; \"\"", "push    0; len", "push    0; gid", "mov     edi, [kcp+8]", "push    edi; uid", "push    eax; machname", "call    _authunix_create", "mov     edx, [kcp+0]", "mov     [esi], eax", "add     esp, 20h", "mov     eax, [edx]", "test    eax, eax", "jz      loc_1B228"], ["mov     [esp+1DCh+wait_time.tv_sec], 6", "mov     [esp+1DCh+wait_time.tv_usec], 0", "push    ecx", "mov     eax, [edx+4]", "lea     ecx, [esp+1E0h+wait_time]", "push    ecx", "push    4", "push    edx", "call    dword ptr [eax+14h]", "add     esp, 0Ch", "mov     eax, [kcp+0]", "lea     ecx, [esp+1E0h+fd]", "mov     edx, [eax+4]", "push    ecx", "push    6", "push    eax", "call    dword ptr [edx+14h]", "add     esp, 10h", "test    eax, eax", "jnz     loc_1B298"], ["mov     eax, [kcp+0]", "jmp     loc_1B0C7"], ["mov     edx, [kcp+0]", "test    edx, edx", "jnz     loc_1B118"], ["mov     nconf, [esp+1DCh+tpconf]", "test    eax, eax", "jz      loc_1B118"], ["mov     eax, [esp+1DCh+tpconf]", "push    eax; nconf", "mov     eax, [esp+1E0h+vers]", "push    eax; vers", "push    186BDh; prog", "lea     eax, [esp+1E8h+u.nodename]", "push    eax; hostname", "call    _clnt_tp_create", "add     esp, 10h", "mov     [kcp+0], eax", "jmp     loc_1B118"], ["sub     esp, 0Ch", "lea     edi, (tsd_lock - 2BB6Ch)[ebx]", "push    edi; mutex", "call    _pthread_mutex_lock", "add     esp, 10h", "cmp     dword ptr [esi], 0FFFFFFFFh", "jz      loc_1B2B0"], ["sub     esp, 0Ch", "push    edi; mutex", "call    _pthread_mutex_unlock", "mov     eax, [esi]", "add     esp, 10h", "jmp     loc_1AF89"], ["mov     [esp+1DCh+localhandle], eax", "sub     esp, 0Ch", "mov     ecx, [edx+4]", "push    edx", "call    dword ptr [ecx+10h]", "add     esp, 10h", "mov     dword ptr [kcp+0], 0", "mov     eax, [esp+1DCh+localhandle]", "jmp     loc_1B0C7"], ["sub     esp, 0Ch", "push    0Ch; size", "call    _malloc", "add     esp, 10h", "mov     kcp, eax", "test    kcp, kcp", "jz      short loc_1B290"], ["push    eax", "push    eax", "push    kcp; pointer", "mov     edx, [esi]", "push    edx; key", "call    _pthread_setspecific", "mov     dword ptr [kcp+0], 0", "add     esp, 10h", "jmp     loc_1AFCC"], ["sub     esp, 0Ch", "mov     kcp, [esp+1E8h+localhandle]", "push    ebp; handlep", "call    _endnetconfig", "add     esp, 10h", "lea     esi, [esi+0]"], ["xor     eax, eax", "jmp     loc_1B0C7"], ["push    eax", "push    1", "push    2; cmd", "mov     edx, [esp+1E8h+fd]", "push    edx; fd", "call    _fcntl", "add     esp, 10h", "jmp     loc_1B1AF"], ["push    ecx", "lea     eax, (key_call_destroy - 2BB6Ch)[ebx]", "push    ecx", "push    eax; destr_function", "push    esi; key", "call    _pthread_key_create", "add     esp, 10h", "jmp     loc_1B213"], ["call    __stack_chk_fail_local"]], "key_call": [["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "mov     esi, arg", "push    ebx", "mov     ebx, proc", "sub     esp, 1Ch", "cmp     proc, 6", "mov     edi, [esp+2Ch+rslt]", "jz      loc_1B388"], ["cmp     proc, 7", "jz      short loc_1B338"], ["cmp     proc, 4", "jnz     loc_1B3D0"], ["mov     proc, ss:(__key_gendes_LOCAL_ptr - 2BB6Ch)[ebp]", "mov     arg, [eax]", "test    ecx, ecx", "jnz     loc_1B3F8"], ["mov     eax, 1; vers", "mov     [esp+2Ch+xdr_arg], xdr_arg_0", "call    getkeyserv_handle", "mov     edx, [esp+2Ch+xdr_arg]", "test    clnt, clnt", "jnz     short loc_1B35A"], ["add     esp, 1Ch", "xor     clnt, clnt", "pop     proc", "pop     arg", "pop     edi", "pop     ebp", "retn"], ["mov     proc, ss:(__key_decryptsession_pk_LOCAL_ptr - 2BB6Ch)[ebp]", "mov     arg, [eax]", "test    ecx, ecx", "jnz     short loc_1B394"], ["mov     eax, 2; vers", "mov     [esp+2Ch+xdr_arg], xdr_arg_0", "call    getkeyserv_handle", "mov     edx, [esp+2Ch+xdr_arg]", "test    clnt, clnt", "jz      short loc_1B327"], ["mov     ecx, [clnt+4]", "push    0", "push    1Eh", "push    edi", "mov     edi, [esp+38h+xdr_rslt]", "push    edi", "push    arg", "push    edx", "push    proc", "push    clnt", "call    dword ptr [ecx]", "add     esp, 20h", "test    eax, eax", "setz    al", "and     res, 0FFh"], ["add     esp, 1Ch", "pop     ebx", "pop     arg", "pop     edi", "pop     ebp", "retn"], ["mov     proc, ss:(__key_encryptsession_pk_LOCAL_ptr - 2BB6Ch)[ebp]", "mov     arg, [eax]", "test    ecx, ecx", "jz      short loc_1B344"], ["mov     proc, ebp", "mov     [esp+2Ch+xdr_arg], ecx", "call    _geteuid", "push    edx", "push    edx", "push    arg", "push    eax", "mov     ecx, [esp+3Ch+xdr_arg]", "call    ecx", "add     esp, 10h", "mov     edx, [res]", "mov     [edi], edx", "mov     edx, [res+4]", "mov     [edi+4], edx", "mov     res, [res+8]", "mov     [edi+8], eax", "add     esp, 1Ch", "mov     eax, 1", "pop     ebx", "pop     arg", "pop     edi", "pop     ebp", "retn"], ["lea     proc, [proc-6]", "cmp     eax, 1", "jbe     loc_1B344"], ["cmp     proc, 9", "jz      loc_1B344"], ["mov     eax, proc", "and     eax, 0FFFFFFFDh", "cmp     eax, 8", "jz      loc_1B344"], ["jmp     loc_1B311"], ["mov     proc, ebp", "mov     [esp+2Ch+xdr_arg], ecx", "call    _geteuid", "push    ebp", "push    ebp", "push    0", "push    eax", "mov     ecx, [esp+3Ch+xdr_arg]", "call    ecx", "add     esp, 10h", "mov     edx, [res+4]", "mov     res, [res]", "mov     [edi], eax", "mov     [edi+4], edx", "mov     eax, 1", "jmp     loc_1B37A"]], "key_setsecret": [["push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 30h", "mov     eax, large gs:14h", "mov     [esp+34h+var_10], eax", "xor     eax, eax", "mov     edx, ds:(xdr_keybuf_ptr - 2BB6Ch)[ebx]; xdr_arg", "lea     eax, [esp+34h+status]", "push    eax; rslt", "mov     eax, ds:(xdr_keystatus_ptr - 2BB6Ch)[ebx]", "push    eax; xdr_rslt", "mov     eax, 1; proc", "mov     ecx, [esp+3Ch+secretkey]; arg", "call    key_call", "add     esp, 10h", "test    eax, eax", "jz      short loc_1B4D0"], ["mov     ecx, [esp+2Ch+status]", "test    ecx, ecx", "jnz     short loc_1B4D8"], ["xor     eax, eax"], ["mov     ecx, [esp+2Ch+var_10]", "xor     ecx, large gs:14h", "jnz     short loc_1B503"], ["add     esp, 28h", "pop     ebx", "retn"], ["or      eax, 0FFFFFFFFh", "jmp     short loc_1B4BC"], ["lea     edx, (libtirpc_debug_level - 2BB6Ch)[ebx]", "or      eax, 0FFFFFFFFh", "mov     edx, [edx]", "test    edx, edx", "jle     short loc_1B4BC"], ["mov     [esp+2Ch+var_20], eax", "sub     esp, 0Ch", "lea     edx, (aKeySetsecretSe - 2BB6Ch)[ebx]; \"key_setsecret: set status is nonzero\"", "push    edx; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "mov     eax, [esp+2Ch+var_20]", "jmp     short loc_1B4BC"], ["call    __stack_chk_fail_local"]], "key_secretkey_is_set": [["push    edi", "mov     ecx, 1Ah", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 74h", "mov     eax, large gs:14h", "mov     [esp+7Ch+var_10], eax", "xor     eax, eax", "lea     edx, [esp+7Ch+kres]", "mov     edi, edx", "rep stosd", "push    edi", "mov     eax, ds:(xdr_key_netstres_ptr - 2BB6Ch)[ebx]", "push    edi", "push    edx; rslt", "mov     edx, ds:(xdr_void_ptr - 2BB6Ch)[ebx]; xdr_arg", "push    eax; xdr_rslt", "mov     eax, 9; proc", "call    key_call", "add     esp, 10h", "test    eax, eax", "jz      short loc_1B564"], ["mov     edx, [esp+7Ch+kres.status]", "xor     eax, eax", "test    edx, edx", "jz      short loc_1B578"], ["mov     edi, [esp+7Ch+var_10]", "xor     edi, large gs:14h", "jnz     short loc_1B584"], ["add     esp, 74h", "pop     ebx", "pop     edi", "retn"], ["xor     eax, eax", "cmp     byte ptr [esp+7Ch+kres.key_netstres_u], 0", "setnz   al", "jmp     short loc_1B564"], ["call    __stack_chk_fail_local"]], "key_encryptsession_pk": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 44h", "mov     eax, large gs:14h", "mov     [esp+4Ch+var_10], eax", "xor     eax, eax", "mov     eax, [esp+4Ch+remotename]", "mov     esi, [esp+4Ch+deskey]", "mov     [esp+4Ch+arg.remotename], eax", "mov     eax, [esp+4Ch+remotekey]", "lea     ecx, [esp+4Ch+arg]; arg", "mov     edx, [eax+4]", "mov     eax, [eax]", "mov     [esp+4Ch+arg.remotekey.n_len], eax", "mov     [esp+4Ch+arg.remotekey.n_bytes], edx", "mov     eax, [esi]", "mov     edx, [esi+4]", "mov     dword ptr [esp+4Ch+arg.deskey], eax", "mov     dword ptr [esp+4Ch+arg.deskey+4], edx", "push    eax", "mov     edx, ds:(xdr_cryptkeyarg2_ptr - 2BB6Ch)[ebx]; xdr_arg", "push    eax", "lea     eax, [esp+54h+res]", "push    eax; rslt", "mov     eax, ds:(xdr_cryptkeyres_ptr - 2BB6Ch)[ebx]", "push    eax; xdr_rslt", "mov     eax, 6; proc", "call    key_call", "add     esp, 10h", "test    eax, eax", "jz      short loc_1B630"], ["mov     ecx, [esp+4Ch+res.status]", "test    ecx, ecx", "jnz     short loc_1B638"], ["mov     eax, dword ptr [esp+4Ch+res.cryptkeyres_u]", "mov     edx, dword ptr [esp+4Ch+res.cryptkeyres_u+4]", "mov     [esi], eax", "mov     [esi+4], edx", "xor     eax, eax"], ["mov     edx, [esp+4Ch+var_10]", "xor     edx, large gs:14h", "jnz     short loc_1B663"], ["add     esp, 44h", "pop     ebx", "pop     esi", "retn"], ["or      eax, 0FFFFFFFFh", "jmp     short loc_1B616"], ["lea     edx, (libtirpc_debug_level - 2BB6Ch)[ebx]", "or      eax, 0FFFFFFFFh", "mov     edx, [edx]", "test    edx, edx", "jle     short loc_1B616"], ["mov     [esp+4Ch+var_40], eax", "sub     esp, 0Ch", "lea     edx, (aKeyEncryptsess_2 - 2BB6Ch)[ebx]; \"key_encryptsession_pk: encrypt status i\"...", "push    edx; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "mov     eax, [esp+4Ch+var_40]", "jmp     short loc_1B616"], ["call    __stack_chk_fail_local"]], "key_decryptsession_pk": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 44h", "mov     eax, large gs:14h", "mov     [esp+4Ch+var_10], eax", "xor     eax, eax", "mov     eax, [esp+4Ch+remotename]", "mov     esi, [esp+4Ch+deskey]", "mov     [esp+4Ch+arg.remotename], eax", "mov     eax, [esp+4Ch+remotekey]", "lea     ecx, [esp+4Ch+arg]; arg", "mov     edx, [eax+4]", "mov     eax, [eax]", "mov     [esp+4Ch+arg.remotekey.n_len], eax", "mov     [esp+4Ch+arg.remotekey.n_bytes], edx", "mov     eax, [esi]", "mov     edx, [esi+4]", "mov     dword ptr [esp+4Ch+arg.deskey], eax", "mov     dword ptr [esp+4Ch+arg.deskey+4], edx", "push    eax", "mov     edx, ds:(xdr_cryptkeyarg2_ptr - 2BB6Ch)[ebx]; xdr_arg", "push    eax", "lea     eax, [esp+54h+res]", "push    eax; rslt", "mov     eax, ds:(xdr_cryptkeyres_ptr - 2BB6Ch)[ebx]", "push    eax; xdr_rslt", "mov     eax, 7; proc", "call    key_call", "add     esp, 10h", "test    eax, eax", "jz      short loc_1B710"], ["mov     ecx, [esp+4Ch+res.status]", "test    ecx, ecx", "jnz     short loc_1B718"], ["mov     eax, dword ptr [esp+4Ch+res.cryptkeyres_u]", "mov     edx, dword ptr [esp+4Ch+res.cryptkeyres_u+4]", "mov     [esi], eax", "mov     [esi+4], edx", "xor     eax, eax"], ["mov     edx, [esp+4Ch+var_10]", "xor     edx, large gs:14h", "jnz     short loc_1B743"], ["add     esp, 44h", "pop     ebx", "pop     esi", "retn"], ["or      eax, 0FFFFFFFFh", "jmp     short loc_1B6F6"], ["lea     edx, (libtirpc_debug_level - 2BB6Ch)[ebx]", "or      eax, 0FFFFFFFFh", "mov     edx, [edx]", "test    edx, edx", "jle     short loc_1B6F6"], ["mov     [esp+4Ch+var_40], eax", "sub     esp, 0Ch", "lea     edx, (aKeyDecryptsess_2 - 2BB6Ch)[ebx]; \"key_decryptsession_pk: decrypt status i\"...", "push    edx; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "mov     eax, [esp+4Ch+var_40]", "jmp     short loc_1B6F6"], ["call    __stack_chk_fail_local"]], "key_encryptsession": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 34h", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_10], eax", "xor     eax, eax", "mov     esi, [esp+3Ch+deskey]", "mov     eax, [esp+3Ch+remotename]", "mov     [esp+3Ch+arg.remotename], eax", "lea     ecx, [esp+3Ch+arg]; arg", "mov     eax, [esi]", "mov     edx, [esi+4]", "mov     dword ptr [esp+3Ch+arg.deskey], eax", "mov     dword ptr [esp+3Ch+arg.deskey+4], edx", "push    eax", "mov     edx, ds:(xdr_cryptkeyarg_ptr - 2BB6Ch)[ebx]; xdr_arg", "push    eax", "lea     eax, [esp+44h+res]", "push    eax; rslt", "mov     eax, ds:(xdr_cryptkeyres_ptr - 2BB6Ch)[ebx]", "push    eax; xdr_rslt", "mov     eax, 2; proc", "call    key_call", "add     esp, 10h", "test    eax, eax", "jz      short loc_1B7D8"], ["mov     ecx, [esp+3Ch+res.status]", "test    ecx, ecx", "jnz     short loc_1B7E0"], ["mov     eax, dword ptr [esp+3Ch+res.cryptkeyres_u]", "mov     edx, dword ptr [esp+3Ch+res.cryptkeyres_u+4]", "mov     [esi], eax", "mov     [esi+4], edx", "xor     eax, eax"], ["mov     edx, [esp+3Ch+var_10]", "xor     edx, large gs:14h", "jnz     short loc_1B80B"], ["add     esp, 34h", "pop     ebx", "pop     esi", "retn"], ["or      eax, 0FFFFFFFFh", "jmp     short loc_1B7C5"], ["lea     edx, (libtirpc_debug_level - 2BB6Ch)[ebx]", "or      eax, 0FFFFFFFFh", "mov     edx, [edx]", "test    edx, edx", "jle     short loc_1B7C5"], ["mov     [esp+3Ch+var_30], eax", "sub     esp, 0Ch", "lea     edx, (aKeyEncryptsess_3 - 2BB6Ch)[ebx]; \"key_encryptsession: encrypt status is n\"...", "push    edx; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "mov     eax, [esp+3Ch+var_30]", "jmp     short loc_1B7C5"], ["call    __stack_chk_fail_local"]], "key_decryptsession": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 34h", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_10], eax", "xor     eax, eax", "mov     esi, [esp+3Ch+deskey]", "mov     eax, [esp+3Ch+remotename]", "mov     [esp+3Ch+arg.remotename], eax", "lea     ecx, [esp+3Ch+arg]; arg", "mov     eax, [esi]", "mov     edx, [esi+4]", "mov     dword ptr [esp+3Ch+arg.deskey], eax", "mov     dword ptr [esp+3Ch+arg.deskey+4], edx", "push    eax", "mov     edx, ds:(xdr_cryptkeyarg_ptr - 2BB6Ch)[ebx]; xdr_arg", "push    eax", "lea     eax, [esp+44h+res]", "push    eax; rslt", "mov     eax, ds:(xdr_cryptkeyres_ptr - 2BB6Ch)[ebx]", "push    eax; xdr_rslt", "mov     eax, 3; proc", "call    key_call", "add     esp, 10h", "test    eax, eax", "jz      short loc_1B898"], ["mov     ecx, [esp+3Ch+res.status]", "test    ecx, ecx", "jnz     short loc_1B8A0"], ["mov     eax, dword ptr [esp+3Ch+res.cryptkeyres_u]", "mov     edx, dword ptr [esp+3Ch+res.cryptkeyres_u+4]", "mov     [esi], eax", "mov     [esi+4], edx", "xor     eax, eax"], ["mov     edx, [esp+3Ch+var_10]", "xor     edx, large gs:14h", "jnz     short loc_1B8CB"], ["add     esp, 34h", "pop     ebx", "pop     esi", "retn"], ["or      eax, 0FFFFFFFFh", "jmp     short loc_1B885"], ["lea     edx, (libtirpc_debug_level - 2BB6Ch)[ebx]", "or      eax, 0FFFFFFFFh", "mov     edx, [edx]", "test    edx, edx", "jle     short loc_1B885"], ["mov     [esp+3Ch+var_30], eax", "sub     esp, 0Ch", "lea     edx, (aKeyDecryptsess_3 - 2BB6Ch)[ebx]; \"key_decryptsession: decrypt status is n\"...", "push    edx; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "mov     eax, [esp+3Ch+var_30]", "jmp     short loc_1B885"], ["call    __stack_chk_fail_local"]], "key_setnet": [["push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 30h", "mov     eax, large gs:14h", "mov     [esp+34h+var_10], eax", "xor     eax, eax", "mov     edx, ds:(xdr_key_netstarg_ptr - 2BB6Ch)[ebx]; xdr_arg", "lea     eax, [esp+34h+status]", "push    eax; rslt", "mov     eax, ds:(xdr_keystatus_ptr - 2BB6Ch)[ebx]", "push    eax; xdr_rslt", "mov     eax, 8; proc", "mov     ecx, [esp+3Ch+arg]; arg", "call    key_call", "add     esp, 10h", "test    eax, eax", "jz      short loc_1B9A8"], ["mov     ecx, [esp+2Ch+status]", "mov     eax, 1", "test    ecx, ecx", "jnz     short loc_1B978"], ["mov     ecx, [esp+2Ch+var_10]", "xor     ecx, large gs:14h", "jnz     short loc_1B9AD"], ["add     esp, 28h", "pop     ebx", "retn"], ["lea     edx, (libtirpc_debug_level - 2BB6Ch)[ebx]", "or      eax, 0FFFFFFFFh", "mov     edx, [edx]", "test    edx, edx", "jle     short loc_1B95F"], ["mov     [esp+2Ch+var_20], eax", "sub     esp, 0Ch", "lea     edx, (aKeySetnetKeySe - 2BB6Ch)[ebx]; \"key_setnet: key_setnet status is nonzer\"...", "push    edx; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "mov     eax, [esp+2Ch+var_20]", "jmp     short loc_1B95F"], ["or      eax, 0FFFFFFFFh", "jmp     short loc_1B95F"], ["call    __stack_chk_fail_local"]], "key_get_conv": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+34h+var_10], eax", "xor     eax, eax", "mov     edx, ds:(xdr_keybuf_ptr - 2BB6Ch)[ebx]; xdr_arg", "lea     eax, [esp+34h+res]", "mov     esi, [esp+34h+deskey]", "push    eax; rslt", "mov     eax, ds:(xdr_cryptkeyres_ptr - 2BB6Ch)[ebx]", "push    eax; xdr_rslt", "mov     eax, 0Ah; proc", "mov     ecx, [esp+3Ch+pkey]; arg", "call    key_call", "add     esp, 10h", "test    eax, eax", "jz      short loc_1BA38"], ["mov     ecx, [esp+2Ch+res.status]", "test    ecx, ecx", "jnz     short loc_1BA40"], ["mov     eax, dword ptr [esp+2Ch+res.cryptkeyres_u]", "mov     edx, dword ptr [esp+2Ch+res.cryptkeyres_u+4]", "mov     [esi], eax", "mov     [esi+4], edx", "xor     eax, eax"], ["mov     ecx, [esp+2Ch+var_10]", "xor     ecx, large gs:14h", "jnz     short loc_1BA6B"], ["add     esp, 24h", "pop     ebx", "pop     esi", "retn"], ["or      eax, 0FFFFFFFFh", "jmp     short loc_1BA1E"], ["lea     edx, (libtirpc_debug_level - 2BB6Ch)[ebx]", "or      eax, 0FFFFFFFFh", "mov     edx, [edx]", "test    edx, edx", "jle     short loc_1BA1E"], ["mov     [esp+2Ch+var_20], eax", "sub     esp, 0Ch", "lea     edx, (aKeyGetConvGetC - 2BB6Ch)[ebx]; \"key_get_conv: get_conv status is nonzer\"...", "push    edx; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "mov     eax, [esp+2Ch+var_20]", "jmp     short loc_1BA1E"], ["call    __stack_chk_fail_local"]], "getpublicandprivatekey": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 454h", "mov     eax, [esp+464h+key]", "mov     [esp+464h+s2], eax", "mov     eax, [esp+464h+ret]", "mov     [esp+464h+dest], eax", "mov     eax, large gs:14h", "mov     [esp+464h+var_20], eax", "xor     eax, eax", "lea     eax, (aServerRejected_0+17h - 2BB6Ch)[ebx]; \"r\"", "push    eax; modes", "lea     eax, (aEtcPublickey - 2BB6Ch)[ebx]; \"/etc/publickey\"", "mov     [esp+468h+var_44C], eax", "push    eax; filename", "call    _fopen", "mov     [esp+46Ch+fd], eax", "add     esp, 10h", "test    fd_0, fd_0", "jz      loc_1BFBD"], ["lea     fd_0, [esp+45Ch+buf]", "lea     ecx, (aBadRecordInSS - 2BB6Ch)[ebx]; \"Bad record in %s -- %s\"", "mov     [esp+45Ch+s], eax", "lea     eax, (asc_1D890 - 2BB6Ch)[ebx]; \"\\t \"", "mov     [esp+45Ch+delim], eax", "lea     eax, (aBadRecordInSVa - 2BB6Ch)[ebx]; \"Bad record in %s val problem - %s\"", "mov     [esp+45Ch+var_434], eax", "mov     eax, ds:(stderr_ptr - 2BB6Ch)[ebx]", "mov     [esp+45Ch+var_430], eax", "mov     [esp+45Ch+var_440], eax", "lea     eax, (libtirpc_debug_level - 2BB6Ch)[ebx]", "lea     edi, (asc_1EC47 - 2BB6Ch)[ebx]; \" \\t#\\n\"", "mov     [esp+45Ch+var_448], eax", "lea     eax, (aBadRecordInSNi - 2BB6Ch)[ebx]; \"Bad record in %s '+' -- NIS not support\"...", "mov     [esp+45Ch+var_444], ecx", "mov     [esp+45Ch+fmt], eax", "lea     esi, [esi+0]"], ["push    ebp", "mov     eax, [esp+460h+fd]", "push    eax; stream", "push    400h; n", "mov     eax, [esp+468h+s]", "push    eax; s", "call    _fgets", "mov     [esp+46Ch+res], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_1BF90"], ["mov     al, [eax]", "cmp     al, 23h ; '#'", "jz      short loc_1BE70"], ["cmp     al, 2Bh ; '+'", "jz      short loc_1BF00"], ["push    eax", "push    eax", "mov     eax, [esp+464h+delim]", "push    eax; delim", "lea     esi, [esp+468h+res]", "push    esi; stringp", "call    _strsep", "add     esp, 10h", "mov     ebp, eax", "test    mkey, mkey", "jnz     short loc_1BEC5"], ["jmp     loc_1BF68"], ["cmp     byte ptr [mval], 0", "jnz     short loc_1BF28"], ["push    ecx", "push    ecx", "push    edi; delim", "push    esi; stringp", "call    _strsep", "add     esp, 10h", "test    mval, mval", "jnz     short loc_1BEC0"], ["sub     esp, 0Ch", "mov     mval, [esp+468h+s]", "push    eax", "mov     eax, [esp+46Ch+var_44C]", "push    eax", "mov     eax, [esp+470h+var_434]", "push    eax", "push    1", "mov     eax, [esp+478h+var_430]", "mov     edx, [eax]", "push    edx", "call    ___fprintf_chk", "add     esp, 20h", "jmp     loc_1BE70"], ["mov     eax, [esp+45Ch+var_448]", "mov     esi, [eax]", "test    esi, esi", "jle     loc_1BE70"], ["push    eax", "push    eax", "mov     edx, [esp+464h+var_44C]", "push    edx", "mov     ecx, [esp+468h+fmt]", "push    ecx; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "jmp     loc_1BE70"], ["mov     esi, mval", "push    eax", "push    eax", "mov     eax, [esp+464h+s2]", "push    eax; s2", "push    mkey; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "jnz     loc_1BE70"], ["push    eax", "push    eax", "push    mval; src", "mov     edx, [esp+468h+dest]", "push    edx; dest", "call    _strcpy", "pop     ecx", "mov     mval, [esp+468h+fd]", "push    esi; stream", "call    _fclose", "add     esp, 10h", "mov     eax, 1", "jmp     short loc_1BFA2"], ["sub     esp, 0Ch", "mov     esi, [esp+468h+s]", "push    esi", "mov     ebp, [esp+46Ch+var_44C]", "push    ebp", "mov     mkey, [esp+470h+var_444]", "push    eax", "push    1", "mov     eax, [esp+478h+var_440]", "mov     eax, [eax]", "push    eax", "call    ___fprintf_chk", "add     esp, 20h", "jmp     loc_1BE70"], ["sub     esp, 0Ch", "mov     edi, [esp+468h+fd]", "push    edi; stream", "call    _fclose", "add     esp, 10h", "xor     eax, eax"], ["mov     edx, [esp+45Ch+var_20]", "xor     edx, large gs:14h", "jnz     short loc_1BFC1"], ["add     esp, 44Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     fd_0, fd_0", "jmp     short loc_1BFA2"], ["call    __stack_chk_fail_local"]], "__getpublickey_real": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0ACh", "mov     ecx, large gs:14h", "mov     [esp+0BCh+var_20], ecx", "xor     ecx, ecx", "mov     ebp, [esp+0BCh+publickey]", "mov     eax, [esp+0BCh+netname]", "test    ebp, ebp", "jz      loc_1C088"], ["push    edx", "push    edx", "lea     esi, [esp+0C4h+ret]", "push    esi; ret", "push    eax; key", "call    _getpublicandprivatekey", "add     esp, 10h", "test    eax, eax", "jz      short loc_1C068"], ["push    eax", "push    eax", "push    3Ah ; ':'; c", "push    esi; s", "call    _strchr", "add     esp, 10h", "test    eax, eax", "jz      short loc_1C088"], ["mov     byte ptr [eax], 0", "mov     edi, ebp", "mov     eax, 30h ; '0'", "test    ebp, 1", "jnz     loc_1C0D8"], ["test    edi, 2", "jnz     short loc_1C0C0"], ["mov     ecx, eax", "xor     edx, edx", "shr     ecx, 2", "test    al, 2", "rep movsd", "jnz     short loc_1C0A8"], ["test    al, 1", "jnz     short loc_1C090"], ["mov     byte ptr [ebp+30h], 0", "mov     eax, 1"], ["mov     edx, [esp+0BCh+var_20]", "xor     edx, large gs:14h", "jnz     short loc_1C0EE"], ["add     esp, 0ACh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     eax, eax", "jmp     short loc_1C068"], ["mov     al, [esi+edx]", "mov     [edi+edx], al", "mov     byte ptr [ebp+30h], 0", "mov     eax, 1", "jmp     short loc_1C068"], ["mov     dx, [esi]", "test    al, 1", "mov     [edi], dx", "mov     edx, 2", "jz      short loc_1C05F"], ["jmp     short loc_1C090"], ["mov     dx, [esi]", "add     edi, 2", "mov     [edi-2], dx", "add     esi, 2", "sub     eax, 2", "jmp     loc_1C04E"], ["mov     al, [esi]", "lea     edi, [ebp+1]", "mov     [ebp+0], al", "lea     esi, [esp+0BCh+var_AF]", "mov     eax, 2Fh ; '/'", "jmp     loc_1C046"], ["call    __stack_chk_fail_local"]], "user2netname": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "mov     eax, large gs:14h", "mov     [esp+1Ch+var_10], eax", "xor     eax, eax", "mov     edi, [esp+1Ch+domain]", "mov     esi, [esp+1Ch+netname]", "test    edi, edi", "jz      short loc_1C1C8"], ["sub     esp, 0Ch", "push    domain_0; s", "call    _strlen", "add     eax, 10h", "add     esp, 10h", "cmp     eax, 0FFh", "jbe     short loc_1C198"], ["xor     eax, eax"], ["mov     edx, [esp+1Ch+var_10]", "xor     edx, large gs:14h", "jnz     short loc_1C1E2"], ["add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["push    eax", "lea     eax, (aUnix - 2BB6Ch)[ebx]; \"unix\"", "push    domain_0", "mov     edx, [esp+24h+uid]", "push    edx", "push    eax", "lea     eax, (aSLdS - 2BB6Ch)[ebx]; \"%s.%ld@%s\"", "push    eax", "push    0FFFFFFFFh", "push    1", "push    esi", "call    ___sprintf_chk", "add     esp, 20h", "mov     eax, 1", "jmp     short loc_1C181"], ["sub     esp, 0Ch", "lea     eax, [esp+28h+dfltdom]", "push    eax; domain", "call    __rpc_get_default_domain", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1C17F"], ["mov     edi, [esp+1Ch+dfltdom]", "jmp     short loc_1C169"], ["call    __stack_chk_fail_local"]], "host2netname": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 6Ch", "mov     eax, [esp+7Ch+netname]", "mov     edi, [esp+7Ch+domain]", "mov     [esp+7Ch+var_70], eax", "mov     esi, [esp+7Ch+host]", "mov     eax, large gs:14h", "mov     [esp+7Ch+var_20], eax", "xor     eax, eax", "test    edi, edi", "jz      short loc_1C2A0"], ["test    esi, esi", "jz      loc_1C2C0"], ["sub     esp, 0Ch", "push    domain_0; s", "call    _strlen", "mov     [esp+8Ch+s], host_0; s", "mov     ebp, eax", "call    _strlen", "add     esp, 10h", "lea     eax, [ebp+eax+6]", "cmp     eax, 0FFh", "jbe     short loc_1C270"], ["xor     eax, eax"], ["mov     edx, [esp+7Ch+var_20]", "xor     edx, large gs:14h", "jnz     short loc_1C2D6"], ["add     esp, 6Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    eax", "lea     eax, (aUnix - 2BB6Ch)[ebx]; \"unix\"", "push    domain_0", "push    host_0", "push    eax", "lea     eax, (aSSS - 2BB6Ch)[ebx]; \"%s.%s@%s\"", "push    eax", "push    0FFFFFFFFh", "push    1", "mov     edx, [esp+98h+var_70]", "push    edx", "call    ___sprintf_chk", "add     esp, 20h", "mov     eax, 1", "jmp     short loc_1C256"], ["sub     esp, 0Ch", "lea     eax, [esp+88h+dfltdom]", "push    eax; domain", "call    __rpc_get_default_domain", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1C254"], ["mov     edi, [esp+7Ch+dfltdom]", "test    esi, esi", "jnz     loc_1C233"], ["push    ecx", "push    ecx", "push    41h ; 'A'; len", "lea     esi, [esp+88h+hostname]", "push    esi; name", "call    _gethostname", "add     esp, 10h", "jmp     loc_1C233"], ["call    __stack_chk_fail_local"]], "getnetid": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 454h", "mov     [esp+464h+key], key_0", "mov     [esp+464h+ret], ret_0", "mov     key_0, large gs:14h", "mov     [esp+464h+var_20], key_0", "xor     key_0, key_0", "lea     eax, (aServerRejected_0+17h - 2BB6Ch)[ebx]; \"r\"", "push    eax; modes", "lea     eax, (aEtcNetid - 2BB6Ch)[ebx]; \"/etc/netid\"", "mov     [esp+468h+var_44C], eax", "push    eax; filename", "call    _fopen", "mov     [esp+46Ch+fd], eax", "add     esp, 10h", "test    fd_0, fd_0", "jz      loc_1C51D"], ["lea     fd_0, [esp+45Ch+buf]", "lea     ecx, (aBadRecordInSS - 2BB6Ch)[ebx]; \"Bad record in %s -- %s\"", "mov     [esp+45Ch+s], eax", "lea     eax, (asc_1D890 - 2BB6Ch)[ebx]; \"\\t \"", "mov     [esp+45Ch+delim], eax", "lea     eax, (aBadRecordInSVa - 2BB6Ch)[ebx]; \"Bad record in %s val problem - %s\"", "mov     [esp+45Ch+var_434], eax", "mov     eax, ds:(stderr_ptr - 2BB6Ch)[ebx]", "mov     [esp+45Ch+var_430], eax", "mov     [esp+45Ch+var_440], eax", "lea     eax, (libtirpc_debug_level - 2BB6Ch)[ebx]", "lea     edi, (asc_1EC47 - 2BB6Ch)[ebx]; \" \\t#\\n\"", "mov     [esp+45Ch+var_448], eax", "lea     eax, (aBadRecordInSNi - 2BB6Ch)[ebx]; \"Bad record in %s '+' -- NIS not support\"...", "mov     [esp+45Ch+var_444], ecx", "mov     [esp+45Ch+fmt], eax", "nop"], ["push    ebp", "mov     eax, [esp+460h+fd]", "push    eax; stream", "push    400h; n", "mov     eax, [esp+468h+s]", "push    eax; s", "call    _fgets", "mov     [esp+46Ch+res], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_1C4F0"], ["mov     al, [eax]", "cmp     al, 23h ; '#'", "jz      short loc_1C3D0"], ["cmp     al, 2Bh ; '+'", "jz      short loc_1C460"], ["push    eax", "push    eax", "mov     eax, [esp+464h+delim]", "push    eax; delim", "lea     esi, [esp+468h+res]", "push    esi; stringp", "call    _strsep", "add     esp, 10h", "mov     ebp, eax", "test    mkey, mkey", "jnz     short loc_1C425"], ["jmp     loc_1C4C8"], ["cmp     byte ptr [mval], 0", "jnz     short loc_1C488"], ["push    ecx", "push    ecx", "push    edi; delim", "push    esi; stringp", "call    _strsep", "add     esp, 10h", "test    mval, mval", "jnz     short loc_1C420"], ["sub     esp, 0Ch", "mov     mval, [esp+468h+s]", "push    eax", "mov     eax, [esp+46Ch+var_44C]", "push    eax", "mov     eax, [esp+470h+var_434]", "push    eax", "push    1", "mov     eax, [esp+478h+var_430]", "mov     edx, [eax]", "push    edx", "call    ___fprintf_chk", "add     esp, 20h", "jmp     loc_1C3D0"], ["mov     eax, [esp+45Ch+var_448]", "mov     esi, [eax]", "test    esi, esi", "jle     loc_1C3D0"], ["push    eax", "push    eax", "mov     edx, [esp+464h+var_44C]", "push    edx", "mov     ecx, [esp+468h+fmt]", "push    ecx; fmt", "call    libtirpc_log_dbg", "add     esp, 10h", "jmp     loc_1C3D0"], ["mov     esi, mval", "push    eax", "push    eax", "mov     eax, [esp+464h+key]", "push    eax; s2", "push    mkey; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "jnz     loc_1C3D0"], ["push    eax", "push    eax", "push    mval; src", "mov     edx, [esp+468h+ret]", "push    edx; dest", "call    _strcpy", "pop     ecx", "mov     mval, [esp+468h+fd]", "push    esi; stream", "call    _fclose", "add     esp, 10h", "mov     eax, 1", "jmp     short loc_1C502"], ["sub     esp, 0Ch", "mov     esi, [esp+468h+s]", "push    esi", "mov     ebp, [esp+46Ch+var_44C]", "push    ebp", "mov     mkey, [esp+470h+var_444]", "push    eax", "push    1", "mov     eax, [esp+478h+var_440]", "mov     eax, [eax]", "push    eax", "call    ___fprintf_chk", "add     esp, 20h", "jmp     loc_1C3D0"], ["sub     esp, 0Ch", "mov     edi, [esp+468h+fd]", "push    edi; stream", "call    _fclose", "add     esp, 10h", "xor     eax, eax"], ["mov     ecx, [esp+45Ch+var_20]", "xor     ecx, large gs:14h", "jnz     short loc_1C521"], ["add     esp, 44Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     fd_0, fd_0", "jmp     short loc_1C502"], ["call    __stack_chk_fail_local"]], "netname2user": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 43Ch", "mov     eax, [esp+44Ch+uidp]", "mov     esi, [esp+44Ch+netname]", "mov     [esp+44Ch+var_43C], eax", "mov     eax, [esp+44Ch+gidp]", "mov     [esp+44Ch+var_438], eax", "mov     eax, [esp+44Ch+gidlenp]", "mov     [esp+44Ch+var_434], eax", "mov     eax, [esp+44Ch+gidlist]", "mov     [esp+44Ch+var_444], eax", "lea     ebp, [esp+44Ch+val]", "mov     eax, large gs:14h", "mov     [esp+44Ch+var_20], eax", "xor     eax, eax", "mov     edx, ebp; ret", "mov     eax, esi; key", "call    getnetid", "mov     [esp+44Ch+s2], eax", "test    eax, eax", "jnz     loc_1C6A0"], ["push    eax", "push    eax", "push    2Eh ; '.'; c", "push    esi; s", "call    _strchr", "add     esp, 10h", "test    val1, val1", "jz      loc_1C668"], ["mov     ecx, val1", "sub     ecx, esi", "cmp     ecx, 5", "ja      loc_1C690"], ["cmp     ecx, ecx", "lea     edi, (aUnix - 2BB6Ch)[ebx]; \"unix\"", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     loc_1C668"], ["lea     edi, [val1+1]", "push    eax", "push    eax", "push    40h ; '@'; c", "push    val1; s", "call    _strchr", "add     esp, 10h", "mov     esi, eax", "test    val2, val2", "jz      short loc_1C668"], ["sub     val2, val1", "mov     [esp+44Ch+vallen], eax", "push    eax", "push    400h; n", "push    val1; src", "push    ebp; dest", "call    _strncpy", "mov     val1, [esp+45Ch+vallen]", "add     esp, 10h", "cmp     edi, 3FFh", "jg      loc_1C760"], ["mov     [esp+edi+44Ch+val], 0", "sub     esp, 0Ch", "lea     eax, [esp+458h+res]", "push    eax; domain", "call    __rpc_get_default_domain", "add     esp, 10h", "test    err, err", "jnz     short loc_1C668"], ["push    edi", "inc     val2", "push    edi", "mov     err, [esp+454h+res]", "push    eax; s2", "push    esi; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1C668"], ["push    esi", "lea     eax, [esp+450h+luid]", "push    eax", "lea     eax, (aLd - 2BB6Ch)[ebx]; \"%ld\"", "push    eax", "push    ebp", "call    ___isoc99_sscanf", "add     esp, 10h", "dec     eax", "jz      loc_1C770"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+44Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_1C849"], ["mov     eax, [esp+44Ch+s2]", "add     esp, 43Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ecx, 5", "jmp     loc_1C5C2"], ["mov     [esp+44Ch+res], ebp", "push    ecx", "push    ecx", "lea     eax, (asc_1ECCC - 2BB6Ch)[ebx]; \":\"", "push    eax; delim", "lea     edi, [esp+458h+res]", "push    edi; stringp", "call    _strsep", "add     esp, 10h", "test    p, p", "jz      loc_1C750"], ["push    ebp", "lea     ebp, (asc_1ECCE - 2BB6Ch)[ebx]; \"\\n,\"", "push    0Ah; base", "push    0; endptr", "push    p; nptr", "call    _strtol", "mov     ecx, [esp+45Ch+var_43C]", "mov     [ecx], eax", "pop     eax", "pop     edx", "push    ebp; delim", "push    edi; stringp", "call    _strsep", "add     esp, 10h", "test    p, p", "jz      short loc_1C750"], ["push    esi", "xor     esi, esi", "push    0Ah; base", "push    0; endptr", "push    p; nptr", "call    _strtol", "mov     edx, [esp+45Ch+var_438]", "add     esp, 10h", "mov     [edx], eax", "jmp     short loc_1C726"], ["push    edx", "push    0Ah; base", "push    0; endptr", "push    p; nptr", "call    _strtol", "mov     edx, [esp+45Ch+var_444]", "add     esp, 10h", "mov     [edx+gidlen*4], eax", "inc     gidlen", "cmp     gidlen, offset loc_10000", "jz      short loc_1C736"], ["push    ecx", "push    ecx", "push    ebp; delim", "push    edi; stringp", "call    _strsep", "add     esp, 10h", "test    p, p", "jnz     short loc_1C708"], ["mov     eax, [esp+44Ch+var_434]", "mov     [esp+44Ch+s2], 1", "mov     [eax], esi", "jmp     loc_1C668"], ["mov     [esp+44Ch+s2], 0", "jmp     loc_1C668"], ["mov     edi, 3FFh", "jmp     loc_1C616"], ["sub     esp, 0Ch", "mov     ecx, [esp+458h+luid]", "push    ecx; uid", "call    _getpwuid", "add     esp, 10h", "test    pwd, pwd", "jz      loc_1C668"], ["mov     ecx, [esp+44Ch+var_43C]", "mov     edx, [pwd+8]", "mov     edi, [pwd]", "xor     esi, esi", "mov     [ecx], edx", "mov     ecx, [esp+44Ch+var_438]", "mov     edx, [pwd+0Ch]", "mov     [ecx], edx", "call    _setgrent", "mov     [esp+44Ch+s2], edi"], ["call    _getgrent", "mov     [esp+44Ch+var_43C], eax", "test    eax, eax", "jz      loc_1C83F"], ["mov     edx, [eax+0Ch]", "mov     eax, [edx]", "lea     edi, [edx+4]", "test    eax, eax", "jz      short loc_1C7A7"], ["mov     ebp, edi", "mov     edi, [esp+44Ch+var_444]", "jmp     short loc_1C7DA"], ["mov     eax, [ebp+0]", "add     ebp, 4", "test    eax, eax", "jz      short loc_1C7A7"], ["push    ecx", "push    ecx", "mov     edx, [esp+454h+s2]", "push    edx; s2", "push    eax; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1C7D0"], ["cmp     esi, offset loc_10000", "jz      short loc_1C818"], ["mov     edx, [esp+44Ch+var_43C]", "test    esi, esi", "mov     ecx, [edx+8]", "jz      short loc_1C812"], ["lea     esi, [esi+0]"], ["cmp     [edi+eax*4], ecx", "jz      short loc_1C7D0"], ["inc     eax", "cmp     esi, eax", "jnz     short loc_1C808"], ["mov     [edi+esi*4], ecx", "inc     esi", "jmp     short loc_1C7D0"], ["lea     eax, (libtirpc_debug_level - 2BB6Ch)[ebx]", "mov     edi, [esp+44Ch+s2]", "mov     esi, offset loc_10000", "mov     edx, [eax]", "test    edx, edx", "jle     short loc_1C83F"], ["push    eax", "push    eax", "lea     eax, (aGetgroupsSIsIn - 2BB6Ch)[ebx]; \"_getgroups: %s is in too many groups\\n\"", "push    edi", "push    eax; fmt", "call    libtirpc_log_dbg", "add     esp, 10h"], ["call    _endgrent", "jmp     loc_1C736"], ["call    __stack_chk_fail_local"]], "netname2host": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 42Ch", "mov     eax, large gs:14h", "mov     [esp+43Ch+var_20], eax", "xor     eax, eax", "mov     esi, [esp+43Ch+netname]", "lea     edx, [esp+43Ch+valbuf]; ret", "mov     eax, esi; key", "mov     ebp, [esp+43Ch+hostname]", "call    getnetid", "test    eax, eax", "jz      short loc_1C89C"], ["cmp     [esp+43Ch+valbuf], 30h ; '0'", "jz      loc_1C978"], ["push    eax", "push    eax", "push    2Eh ; '.'; c", "push    esi; s", "call    _strchr", "add     esp, 10h", "test    val, val", "jz      loc_1C948"], ["mov     ecx, val", "sub     ecx, esi", "cmp     ecx, 5", "ja      loc_1C968"], ["cmp     ecx, ecx", "lea     edi, (aUnix - 2BB6Ch)[ebx]; \"unix\"", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_1C948"], ["push    edi", "lea     esi, [val+1]", "push    edi", "push    40h ; '@'; c", "push    val; s", "call    _strchr", "add     esp, 10h", "mov     edi, eax", "test    val2, val2", "jz      short loc_1C948"], ["mov     edx, val2", "sub     edx, val", "cmp     [esp+43Ch+hostlen], vallen_0", "jg      short loc_1C8FF"], ["mov     val2, [esp+43Ch+hostlen]", "lea     vallen_0, [eax-1]"], ["push    ecx", "push    vallen_0; n", "mov     [esp+444h+vallen], vallen_0", "push    val; src", "push    ebp; dest", "call    _strncpy", "mov     edx, [esp+44Ch+vallen]", "mov     byte ptr [ebp+edx+0], 0", "pop     val", "lea     eax, [esp+448h+domain]", "push    eax; domain", "call    __rpc_get_default_domain", "add     esp, 10h", "test    err, err", "jnz     short loc_1C948"], ["push    eax", "inc     val2", "push    eax", "mov     edx, [esp+444h+domain]", "push    edx; s2", "push    edi; s1", "call    _strcmp", "add     esp, 10h", "test    eax, eax", "setz    al", "and     eax, 0FFh", "jmp     short loc_1C94A"], ["xor     eax, eax"], ["mov     edi, [esp+43Ch+var_20]", "xor     edi, large gs:14h", "jnz     short loc_1C9A1"], ["add     esp, 42Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ecx, 5", "jmp     loc_1C8BE"], ["cmp     [esp+43Ch+valbuf+1], 3Ah ; ':'", "jnz     loc_1C89C"], ["push    eax", "mov     eax, [esp+440h+hostlen]", "push    eax; n", "lea     eax, [esp+444h+valbuf+2]", "push    eax; src", "push    ebp; dest", "call    _strncpy", "add     esp, 10h", "mov     eax, 1", "jmp     short loc_1C94A"], ["call    __stack_chk_fail_local"]], "__rpc_get_default_domain": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "sub     esp, 12Ch", "mov     eax, large gs:14h", "mov     [esp+13Ch+var_20], eax", "xor     eax, eax", "mov     eax, ds:(default_domain - 2BB6Ch)[edi]", "mov     edx, [esp+13Ch+domain]", "test    eax, eax", "jz      short loc_1CA08"], ["mov     [edx], eax", "xor     eax, eax"], ["mov     ebx, [esp+13Ch+var_20]", "xor     ebx, large gs:14h", "jnz     loc_1CAD7"], ["add     esp, 12Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     [esp+13Ch+var_130], edx", "push    eax", "push    eax", "mov     ebx, edi", "push    100h; len", "lea     esi, [esp+148h+name]", "push    esi; name", "call    _getdomainname", "mov     ebp, esi", "add     esp, 10h", "test    eax, eax", "mov     edx, [esp+13Ch+var_130]", "js      loc_1CAC9"], ["mov     ecx, [ebp+0]", "add     ebp, 4", "lea     eax, [ecx-1010101h]", "xor     ecx, 0FFFFFFFFh", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_1CA30"], ["test    eax, 8080h", "jz      short loc_1CAB8"], ["mov     bl, al", "add     bl, al", "sbb     ebp, 3", "sub     ebp, esi", "jz      short loc_1CAC9"], ["mov     [esp+13Ch+var_130], edx", "sub     esp, 0Ch", "inc     ebp", "mov     ebx, edi", "push    ebp; size", "call    _malloc", "add     esp, 10h", "mov     ds:(default_domain - 2BB6Ch)[edi], eax", "test    eax, eax", "mov     edx, [esp+13Ch+var_130]", "jz      short loc_1CAC9"], ["mov     edi, eax", "cmp     ebp, 4", "jb      short loc_1CA89"], ["mov     ecx, ebp", "shr     ecx, 2", "rep movsd"], ["xor     ecx, ecx", "test    ebp, 2", "jz      short loc_1CA9E"], ["mov     cx, [esi]", "mov     word ptr ds:(_GLOBAL_OFFSET_TABLE_ - 2BB6Ch)[edi], cx", "mov     ecx, 2"], ["and     ebp, 1", "jz      loc_1C9E5"], ["mov     bl, [esi+ecx]", "mov     byte ptr ds:(_GLOBAL_OFFSET_TABLE_ - 2BB6Ch)[edi+ecx], bl", "jmp     loc_1C9E5"], ["shr     eax, 10h", "add     ebp, 2", "mov     bl, al", "add     bl, al", "sbb     ebp, 3", "sub     ebp, esi", "jnz     short loc_1CA5A"], ["mov     dword ptr [edx], 0", "or      eax, 0FFFFFFFFh", "jmp     loc_1C9E9"], ["call    __stack_chk_fail_local"]], "rtime": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 50h", "mov     eax, [esp+60h+timep]", "mov     ebp, [esp+60h+timeout]", "mov     [esp+60h+var_50], eax", "mov     edi, [esp+60h+addrp]", "mov     eax, large gs:14h", "mov     [esp+60h+var_20], eax", "xor     eax, eax", "xor     eax, eax", "test    ebp, ebp", "setnz   al", "inc     eax", "mov     [esp+60h+type], eax", "push    0; protocol", "push    type_0; type", "push    2; domain", "call    _socket", "mov     [esp+6Ch+s], eax", "add     esp, 10h", "test    s_0, s_0", "js      loc_1CCC5"], ["mov     word ptr [edi], 2", "push    eax", "push    eax", "lea     eax, (aTcp - 2BB6Ch)[ebx]; \"tcp\"", "push    eax; proto", "lea     eax, (aTime - 2BB6Ch)[ebx]; \"time\"", "push    eax; name", "call    _getservbyname", "mov     [esp+6Ch+serv], eax", "call    ___errno_location", "mov     edx, [esp+6Ch+serv]", "add     esp, 10h", "mov     esi, eax", "test    edx, edx", "jz      loc_1CCB1"], ["mov     eax, [edx+8]", "cmp     [esp+5Ch+type], 2", "mov     [edi+2], ax", "jz      loc_1CC00"], ["push    eax", "push    10h; len", "push    edi; addr", "mov     eax, [esp+68h+s]", "push    eax; fd", "call    _connect", "add     esp, 10h", "test    eax, eax", "js      loc_1CCB1"], ["push    edx", "push    4; nbytes", "lea     eax, [esp+64h+thetime]", "push    eax; buf", "mov     ecx, [esp+68h+s]", "push    ecx; fd", "call    _read", "mov     ebp, [esi]", "mov     edi, eax", "pop     res"], ["mov     eax, [esp+68h+s]", "push    eax; fd", "call    _close", "add     esp, 10h", "mov     [esi], ebp", "test    res, res", "js      loc_1CCC5"], ["cmp     res, 4", "jnz     loc_1CCCD"], ["mov     eax, [esp+5Ch+thetime]", "mov     ecx, [esp+5Ch+var_50]", "bswap   eax", "add     eax, 7C558180h", "mov     dword ptr [ecx+4], 0", "mov     [ecx], eax", "xor     eax, eax"], ["mov     esi, [esp+5Ch+var_20]", "xor     esi, large gs:14h", "jnz     loc_1CD0A"], ["add     esp, 4Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    eax", "push    eax", "push    10h; addr_len", "push    edi; addr", "push    0; flags", "push    4; n", "lea     eax, [esp+74h+thetime]", "mov     [esp+74h+type], eax", "push    eax; buf", "mov     eax, [esp+78h+s]", "push    eax; fd", "call    _sendto", "add     esp, 20h", "test    res, res", "js      loc_1CCB1"], ["mov     res, [ebp+0]", "mov     ecx, [ebp+4]", "mov     edx, 10624DD3h", "mov     [esp+5Ch+fd.events], 1", "lea     eax, [eax+eax*4]", "lea     eax, [eax+eax*4]", "lea     edi, [eax+eax*4]", "mov     eax, ecx", "imul    edx", "sar     ecx, 1Fh", "mov     eax, [esp+5Ch+s]", "sar     edx, 6", "mov     [esp+5Ch+fd.fd], eax", "sub     edx, ecx", "lea     ebp, [edx+edi*8]", "lea     edi, [esp+5Ch+fd]", "jmp     short loc_1CC6B"], ["mov     edx, [esi]", "cmp     edx, 4", "jnz     loc_1CCE8"], ["push    eax", "push    milliseconds; timeout", "push    1; nfds", "push    edi; fds", "call    _poll", "add     esp, 10h", "test    res, res", "js      short loc_1CC60"], ["jz      short loc_1CCDB"], ["mov     [esp+5Ch+fromlen], 10h", "lea     res, [esp+5Ch+from]", "push    edx", "push    edx", "lea     edx, [esp+64h+fromlen]", "push    edx; addr_len", "push    eax; addr", "push    0; flags", "push    4; n", "mov     ecx, [esp+74h+type]", "push    ecx; buf", "mov     edi, [esp+78h+s]", "push    edi; fd", "call    _recvfrom", "mov     milliseconds, [esi]", "mov     edi, eax", "add     esp, 14h", "jmp     loc_1CBA9"], ["sub     esp, 0Ch", "mov     edi, [esi]", "mov     eax, [esp+68h+s]", "push    eax; fd", "call    _close", "mov     [esi], edi", "add     esp, 10h"], ["or      eax, 0FFFFFFFFh", "jmp     loc_1CBE3"], ["mov     dword ptr [esi], 5", "or      eax, 0FFFFFFFFh", "jmp     loc_1CBE3"], ["mov     dword ptr [esi], 6Eh ; 'n'", "mov     edx, 6Eh ; 'n'", "xchg    ax, ax"], ["mov     [esp+5Ch+type], edx", "sub     esp, 0Ch", "mov     milliseconds, [esp+68h+s]", "push    ebp; fd", "call    _close", "mov     edx, [esp+6Ch+type]", "or      eax, 0FFFFFFFFh", "mov     [esi], edx", "add     esp, 10h", "jmp     loc_1CBE3"], ["call    __stack_chk_fail_local"]], "num": 203}