{"arch": "metapc", "ndef_suffix": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "mov     eax, [esp+1Ch+arg_C]", "test    eax, eax", "jz      loc_5C4C2"], ["mov     esi, [eax]", "mov     edi, [esi+0Ch]", "mov     ecx, [esi+10h]", "mov     eax, [esi+4]", "mov     [esp+1Ch+var_18], edi", "mov     edi, [esi+8]", "mov     [esp+1Ch+var_10], ecx", "lea     ecx, [esp+1Ch+var_18]", "mov     edx, [eax+10h]", "mov     [esp+1Ch+var_14], edi", "push    ecx", "push    eax", "push    esi", "push    0Bh", "call    dword ptr [edx+10h]", "add     esp, 10h", "test    eax, eax", "jle     loc_5C4C2"], ["sub     esp, 4", "push    dword ptr [esi+4]", "lea     edi, (aCryptoAsn1BioN - 2A0000h)[ebx]; \"crypto/asn1/bio_ndef.c\"", "push    0", "push    dword ptr [esi]", "call    ASN1_item_ndef_i2d", "add     esp, 0Ch", "push    0BFh", "push    edi", "push    eax; size", "call    CRYPTO_malloc", "mov     [esp+2Ch+var_1C], eax", "add     esp, 10h", "test    eax, eax", "jz      short loc_5C4A8"], ["mov     ecx, [esp+1Ch+arg_4]", "mov     [esi+14h], eax", "sub     esp, 4", "mov     [ecx], eax", "push    dword ptr [esi+4]", "lea     eax, [esp+24h+var_1C]", "push    eax", "push    dword ptr [esi]", "call    ASN1_item_ndef_i2d", "mov     edx, [esi+10h]", "add     esp, 10h", "mov     edx, [edx]", "test    edx, edx", "jz      short loc_5C4C2"], ["mov     ecx, [esp+1Ch+arg_4]", "mov     [ecx], edx", "sub     edx, [esi+14h]", "sub     eax, edx", "mov     edx, [esp+1Ch+arg_8]", "mov     [edx], eax", "add     esp, 10h", "mov     eax, 1", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["sub     esp, 0Ch", "push    0C0h", "push    edi", "push    41h ; 'A'", "push    88h", "push    0Dh", "call    ERR_put_error", "add     esp, 20h"], ["add     esp, 10h", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "retn"]], "BIO_new_NDEF": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, [esp+3Ch+arg_8]", "mov     edi, [eax+10h]", "test    edi, edi", "jz      loc_5C6E0"], ["mov     eax, [edi+10h]", "test    eax, eax", "jz      loc_5C6E0"], ["sub     esp, 4", "lea     eax, (aCryptoAsn1BioN - 2A0000h)[ebx]; \"crypto/asn1/bio_ndef.c\"", "push    3Fh ; '?'; int", "mov     [esp+44h+var_34], eax", "push    eax; int", "push    18h; n", "call    CRYPTO_zalloc", "mov     esi, eax", "call    BIO_f_asn1", "mov     [esp+4Ch+var_4C], eax", "call    BIO_new", "add     esp, 10h", "mov     ebp, eax", "test    esi, esi", "jz      loc_5C6B8"], ["test    eax, eax", "jz      loc_5C6B8"], ["sub     esp, 8", "push    [esp+44h+arg_0]", "push    eax", "call    BIO_push", "add     esp, 10h", "test    eax, eax", "mov     [esp+3Ch+var_30], eax", "jz      loc_5C6B8"], ["sub     esp, 4", "lea     eax, (ndef_prefix_free - 2A0000h)[ebx]", "push    eax", "lea     eax, (ndef_prefix - 2A0000h)[ebx]", "push    eax", "push    ebp", "call    BIO_asn1_set_prefix", "add     esp, 0Ch", "lea     eax, (ndef_suffix_free - 2A0000h)[ebx]", "push    eax", "lea     eax, (ndef_suffix - 2A0000h)[ebx]", "push    eax", "push    ebp", "call    BIO_asn1_set_suffix", "mov     ecx, [esp+4Ch+var_30]", "lea     eax, [esp+4Ch+var_28]", "mov     [esp+4Ch+var_24], 0", "mov     [esp+4Ch+var_20], 0", "mov     [esp+4Ch+var_28], ecx", "push    eax", "push    [esp+50h+arg_8]", "lea     eax, [esp+54h+arg_4]", "push    eax", "push    0Ah", "call    dword ptr [edi+10h]", "add     esp, 20h", "test    eax, eax", "jle     short loc_5C6B8"], ["mov     eax, [esp+3Ch+arg_4]", "mov     ecx, [esp+3Ch+var_30]", "mov     [esi], eax", "mov     eax, [esp+3Ch+arg_8]", "mov     [esi+0Ch], ecx", "mov     [esi+4], eax", "mov     eax, [esp+3Ch+var_24]", "mov     [esi+8], eax", "mov     eax, [esp+3Ch+var_20]", "mov     [esi+10h], eax", "push    esi", "push    0", "push    99h", "push    ebp", "call    BIO_ctrl", "mov     eax, [esp+4Ch+var_24]", "add     esp, 10h", "add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    ebp; ptr", "call    BIO_free", "add     esp, 0Ch", "push    64h ; 'd'", "push    [esp+44h+var_34]", "push    esi; ptr", "call    CRYPTO_free", "add     esp, 10h", "xor     eax, eax", "add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     eax, (aCryptoAsn1BioN - 2A0000h)[ebx]; \"crypto/asn1/bio_ndef.c\"", "push    3Ch ; '<'", "push    eax", "push    0CAh", "push    0D0h", "push    0Dh", "call    ERR_put_error", "add     esp, 20h", "xor     eax, eax", "add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "BN_mod_sqrt": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 48h", "mov     esi, [esp+58h+arg_8]", "mov     edi, [esp+58h+ptr]", "push    esi", "call    BN_is_odd", "add     esp, 10h", "test    eax, eax", "jz      short loc_92CCD"], ["sub     esp, 8", "push    1", "push    esi", "call    BN_abs_is_word", "add     esp, 10h", "test    eax, eax", "jz      loc_92D90"], ["sub     esp, 8", "push    2", "push    esi", "call    BN_abs_is_word", "add     esp, 10h", "test    eax, eax", "jz      loc_92DC0"], ["test    edi, edi", "jz      short loc_92D60"], ["sub     esp, 8", "push    0", "push    [esp+58h+arg_4]", "call    BN_is_bit_set"], ["pop     edx", "pop     ecx", "push    eax", "mov     ebp, edi", "push    edi", "call    BN_set_word", "add     esp, 10h", "test    eax, eax", "jz      short loc_92D4B"], ["add     esp, 3Ch", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["call    BN_new", "mov     ebp, eax", "test    eax, eax", "jz      short loc_92D6F"], ["sub     esp, 0Ch", "push    [esp+58h+arg_4]", "call    BN_is_one"], ["pop     edx", "pop     ecx", "push    eax", "push    ebp", "call    BN_set_word", "add     esp, 10h", "test    eax, eax", "jnz     short loc_92D07"], ["sub     esp, 0Ch", "push    ebp; ptr", "call    BN_free", "add     esp, 10h"], ["add     esp, 3Ch", "xor     ebp, ebp", "pop     ebx", "mov     eax, ebp", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["call    BN_new", "mov     ebp, eax", "test    eax, eax", "jnz     loc_93564"], ["xor     ebp, ebp"], ["sub     esp, 0Ch", "push    [esp+58h+arg_C]", "call    BN_CTX_end", "add     esp, 10h", "mov     eax, ebp", "add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    [esp+58h+arg_4]", "call    BN_is_zero", "add     esp, 10h", "test    eax, eax", "jz      short loc_92DE8"], ["test    edi, edi", "jz      loc_92D18"], ["sub     esp, 0Ch", "push    [esp+58h+arg_4]", "call    BN_is_one", "jmp     loc_92CF5"], ["sub     esp, 0Ch", "lea     eax, (aCryptoBnBnSqrt - 2A0000h)[ebx]; \"crypto/bn/bn_sqrt.c\"", "xor     ebp, ebp", "push    2Ah ; '*'", "push    eax", "push    70h ; 'p'", "push    79h ; 'y'", "push    3", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_92D07"], ["sub     esp, 0Ch", "push    [esp+58h+arg_4]", "call    BN_is_one", "add     esp, 10h", "test    eax, eax", "jnz     short loc_92DA3"], ["sub     esp, 0Ch", "push    [esp+58h+arg_C]", "call    BN_CTX_start", "pop     ecx", "push    [esp+58h+arg_C]", "call    BN_CTX_get", "mov     [esp+5Ch+var_44], eax", "pop     ebp", "push    [esp+58h+arg_C]", "call    BN_CTX_get", "mov     [esp+5Ch+var_30], eax", "pop     eax", "push    [esp+58h+arg_C]", "call    BN_CTX_get", "mov     [esp+5Ch+var_40], eax", "pop     eax", "push    [esp+58h+arg_C]", "call    BN_CTX_get", "mov     [esp+5Ch+var_38], eax", "pop     eax", "push    [esp+58h+arg_C]", "call    BN_CTX_get", "mov     [esp+5Ch+var_3C], eax", "pop     eax", "push    [esp+58h+arg_C]", "call    BN_CTX_get", "mov     [esp+5Ch+var_34], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_92D6F"], ["test    edi, edi", "jz      loc_92F96"], ["push    [esp+4Ch+arg_C]", "push    esi", "push    [esp+54h+arg_4]", "push    [esp+58h+var_44]", "call    BN_nnmod", "add     esp, 10h", "test    eax, eax", "jz      loc_92D6F"], ["mov     ebp, edi"], ["mov     eax, 1", "mov     [esp+4Ch+ptr], edi", "mov     edi, eax", "jmp     short loc_92EA3"], ["add     edi, 1"], ["sub     esp, 8", "push    edi", "push    esi", "call    BN_is_bit_set", "add     esp, 10h", "test    eax, eax", "jz      short loc_92EA0"], ["mov     eax, edi", "mov     [esp+4Ch+var_2C], edi", "mov     edi, [esp+4Ch+ptr]", "cmp     eax, 1", "jz      loc_93138"], ["cmp     [esp+4Ch+var_2C], 2", "jz      loc_92FC8"], ["sub     esp, 8", "push    esi", "push    [esp+58h+var_40]", "call    BN_copy", "add     esp, 10h", "test    eax, eax", "jz      loc_92F7D"], ["mov     eax, [esp+4Ch+var_40]", "lea     edx, (BN_add - 2A0000h)[ebx]", "mov     [esp+4Ch+var_28], ebp", "lea     ecx, (BN_sub - 2A0000h)[ebx]", "mov     [esp+4Ch+ptr], edi", "mov     [esp+4Ch+arg_8], esi", "mov     edi, [esp+4Ch+var_34]", "mov     ebp, eax", "mov     esi, 2", "mov     dword ptr [eax+0Ch], 0", "mov     [esp+4Ch+var_24], edx", "mov     [esp+4Ch+var_20], ecx", "jmp     short loc_92F5B"], ["sub     esp, 4", "push    [esp+50h+arg_C]", "push    ebp", "push    edi", "call    BN_kronecker", "add     esp, 10h", "cmp     eax, 0FFFFFFFFh", "jl      short loc_92F75"], ["test    eax, eax", "jz      loc_93375"], ["cmp     eax, 1", "jnz     loc_9319C"], ["add     esi, 1", "cmp     esi, 52h ; 'R'", "jz      loc_9339F"], ["cmp     esi, 15h", "jg      loc_93485"], ["sub     esp, 8", "push    esi", "push    edi", "call    BN_set_word", "add     esp, 10h", "test    eax, eax", "jnz     short loc_92F28"], ["mov     ebp, [esp+4Ch+var_28]", "mov     edi, [esp+4Ch+ptr]"], ["cmp     edi, ebp", "jz      loc_92D6F"], ["sub     esp, 0Ch", "push    ebp; ptr", "call    BN_clear_free", "add     esp, 10h", "jmp     loc_92D6F"], ["call    BN_new", "mov     ebp, eax", "test    eax, eax", "jz      loc_92D6F"], ["push    [esp+4Ch+arg_C]", "push    esi", "push    [esp+54h+arg_4]", "push    [esp+58h+var_44]", "call    BN_nnmod", "add     esp, 10h", "test    eax, eax", "jnz     loc_92E8D"], ["jmp     short loc_92F85"], ["sub     esp, 4", "push    esi", "push    [esp+54h+var_44]", "push    [esp+58h+var_38]", "call    BN_mod_lshift1_quick", "add     esp, 10h", "test    eax, eax", "jz      short loc_92F7D"], ["push    eax", "push    3", "push    esi", "push    [esp+58h+var_40]", "call    BN_rshift", "add     esp, 10h", "test    eax, eax", "jz      short loc_92F7D"], ["mov     ecx, [esp+4Ch+var_40]", "sub     esp, 0Ch", "mov     dword ptr [ecx+0Ch], 0", "push    [esp+58h+arg_C]", "push    esi", "push    ecx", "push    [esp+64h+var_38]", "push    [esp+68h+var_30]", "call    BN_mod_exp", "add     esp, 20h", "test    eax, eax", "jz      loc_92F7D"], ["push    [esp+4Ch+arg_C]", "push    esi", "push    [esp+54h+var_30]", "push    [esp+58h+var_34]", "call    BN_mod_sqr", "add     esp, 10h", "test    eax, eax", "jz      loc_92F7D"], ["sub     esp, 0Ch", "push    [esp+58h+arg_C]", "push    esi", "push    [esp+60h+var_34]", "mov     eax, [esp+64h+var_38]", "push    eax", "mov     [esp+68h+var_38], eax", "push    eax", "call    BN_mod_mul", "add     esp, 20h", "test    eax, eax", "jz      loc_92F7D"], ["push    eax", "push    eax", "push    1", "push    [esp+58h+var_38]", "call    BN_sub_word", "add     esp, 10h", "test    eax, eax", "jz      loc_92F7D"], ["sub     esp, 0Ch", "push    [esp+58h+arg_C]", "push    esi", "push    [esp+60h+var_30]", "push    [esp+64h+var_44]", "push    [esp+68h+var_3C]", "call    BN_mod_mul", "add     esp, 20h", "test    eax, eax", "jz      loc_92F7D"], ["sub     esp, 0Ch", "push    [esp+58h+arg_C]", "push    esi", "push    [esp+60h+var_38]", "mov     eax, [esp+64h+var_3C]", "push    eax", "mov     [esp+68h+var_3C], eax", "push    eax", "call    BN_mod_mul", "add     esp, 20h", "test    eax, eax", "jz      loc_92F7D"], ["push    eax", "push    eax", "push    [esp+54h+var_3C]", "push    ebp", "call    BN_copy", "add     esp, 10h", "test    eax, eax", "jz      loc_92F7D"], ["push    [esp+4Ch+arg_C]", "push    esi", "push    ebp", "push    [esp+58h+var_3C]", "call    BN_mod_sqr", "add     esp, 10h", "test    eax, eax", "jz      loc_92F7D"], ["push    eax", "push    eax", "push    [esp+54h+var_44]", "push    [esp+58h+var_3C]", "call    BN_cmp", "add     esp, 10h", "test    eax, eax", "jz      loc_92D71"], ["sub     esp, 0Ch", "push    15Fh"], ["lea     eax, (aCryptoBnBnSqrt - 2A0000h)[ebx]; \"crypto/bn/bn_sqrt.c\"", "push    eax", "push    6Fh ; 'o'", "push    79h ; 'y'", "push    3", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_92F7D"], ["sub     esp, 4", "push    2", "push    esi", "push    [esp+58h+var_40]", "call    BN_rshift", "add     esp, 10h", "test    eax, eax", "jz      loc_92F7D"], ["mov     eax, [esp+4Ch+var_40]", "mov     dword ptr [eax+0Ch], 0", "push    edx", "push    edx", "push    1", "mov     [esp+58h+var_40], eax", "push    eax", "call    BN_add_word", "add     esp, 10h", "test    eax, eax", "jz      loc_92F7D"], ["sub     esp, 0Ch", "push    [esp+58h+arg_C]", "push    esi", "push    [esp+60h+var_40]", "push    [esp+64h+var_44]", "push    ebp", "call    BN_mod_exp", "add     esp, 20h", "test    eax, eax", "jz      loc_92F7D"], ["jmp     loc_930DC"], ["add     eax, 1", "mov     ebp, [esp+4Ch+var_28]", "mov     edi, [esp+4Ch+ptr]", "mov     esi, [esp+4Ch+arg_8]", "jnz     loc_933A7"], ["push    ecx", "push    [esp+50h+var_2C]", "mov     eax, [esp+54h+var_40]", "push    eax", "mov     [esp+58h+var_40], eax", "push    eax", "call    BN_rshift", "add     esp, 10h", "test    eax, eax", "jz      loc_92F7D"], ["sub     esp, 0Ch", "push    [esp+58h+arg_C]", "push    esi", "push    [esp+60h+var_40]", "mov     eax, [esp+64h+var_34]", "push    eax", "mov     [esp+68h+var_34], eax", "push    eax", "call    BN_mod_exp", "add     esp, 20h", "test    eax, eax", "jz      loc_92F7D"], ["sub     esp, 0Ch", "push    [esp+58h+var_34]", "call    BN_is_one", "add     esp, 10h", "test    eax, eax", "jnz     loc_933C9"], ["push    edx", "push    edx", "push    [esp+54h+var_40]", "push    [esp+58h+var_38]", "call    BN_rshift1", "add     esp, 10h", "test    eax, eax", "jz      loc_92F7D"], ["sub     esp, 0Ch", "push    [esp+58h+var_38]", "call    BN_is_zero", "add     esp, 10h", "test    eax, eax", "jz      loc_93517"], ["push    [esp+4Ch+arg_C]", "push    esi", "push    [esp+54h+var_44]", "push    [esp+58h+var_38]", "call    BN_nnmod", "add     esp, 10h", "test    eax, eax", "jz      loc_92F7D"], ["sub     esp, 0Ch", "push    [esp+58h+var_38]", "call    BN_is_zero", "add     esp, 10h", "test    eax, eax", "jnz     loc_93552"], ["push    eax", "push    eax", "push    1", "push    [esp+58h+var_3C]", "call    BN_set_word", "add     esp, 10h", "test    eax, eax", "jz      loc_92F7D"], ["push    [esp+4Ch+arg_C]", "push    esi", "push    [esp+54h+var_3C]", "push    [esp+58h+var_30]", "call    BN_mod_sqr", "add     esp, 10h", "test    eax, eax", "jz      loc_92F7D"], ["sub     esp, 0Ch", "push    [esp+58h+arg_C]", "push    esi", "push    [esp+60h+var_44]", "mov     edx, [esp+64h+var_30]", "push    edx", "push    edx", "call    BN_mod_mul", "add     esp, 20h", "test    eax, eax", "jz      loc_92F7D"], ["sub     esp, 0Ch", "push    [esp+58h+arg_C]", "push    esi", "push    [esp+60h+var_44]", "mov     eax, [esp+64h+var_3C]", "push    eax", "push    eax", "call    BN_mod_mul", "add     esp, 20h", "test    eax, eax", "jz      loc_92F7D"], ["mov     [esp+4Ch+var_40], ebp", "mov     [esp+4Ch+ptr], edi", "mov     edi, [esp+4Ch+var_38]"], ["sub     esp, 0Ch", "push    [esp+58h+var_30]", "call    BN_is_one", "add     esp, 10h", "test    eax, eax", "jnz     loc_9350A"], ["mov     ebp, 1", "jmp     short loc_93343"], ["sub     esp, 0Ch", "push    [esp+58h+arg_C]", "push    esi", "push    edi", "push    edi", "push    edi", "call    BN_mod_mul", "add     esp, 20h", "test    eax, eax", "jz      short loc_93368"], ["sub     esp, 0Ch", "push    edi", "call    BN_is_one", "add     esp, 10h", "test    eax, eax", "jnz     loc_933D3"], ["add     ebp, 1"], ["cmp     [esp+4Ch+var_2C], ebp", "jz      loc_934F5"], ["cmp     ebp, 1", "jnz     short loc_93315"], ["push    [esp+4Ch+arg_C]", "push    esi", "push    [esp+54h+var_30]", "push    edi", "call    BN_mod_sqr", "add     esp, 10h", "test    eax, eax", "jnz     short loc_9332C"], ["mov     ebp, [esp+4Ch+var_40]", "mov     edi, [esp+4Ch+ptr]", "jmp     loc_92F7D"], ["mov     ebp, [esp+4Ch+var_28]", "mov     edi, [esp+4Ch+ptr]", "sub     esp, 0Ch", "push    0C9h"], ["lea     eax, (aCryptoBnBnSqrt - 2A0000h)[ebx]; \"crypto/bn/bn_sqrt.c\"", "push    eax", "push    70h ; 'p'", "push    79h ; 'y'", "push    3", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_92F7D"], ["mov     ebp, [esp+4Ch+var_28]", "mov     edi, [esp+4Ch+ptr]"], ["sub     esp, 0Ch", "lea     eax, (aCryptoBnBnSqrt - 2A0000h)[ebx]; \"crypto/bn/bn_sqrt.c\"", "push    0D5h", "push    eax", "push    71h ; 'q'", "push    79h ; 'y'", "push    3", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_92F7D"], ["sub     esp, 0Ch", "push    0E4h", "jmp     short loc_93385"], ["push    eax", "push    eax", "push    [esp+54h+var_34]", "push    edi", "call    BN_copy", "add     esp, 10h", "test    eax, eax", "jz      short loc_93368"], ["mov     edx, [esp+4Ch+var_2C]", "mov     [esp+4Ch+var_38], ebp", "sub     edx, ebp", "mov     ebp, esi", "sub     edx, 1", "mov     esi, edx", "jmp     short loc_93413"], ["push    [esp+4Ch+arg_C]", "push    ebp", "push    edi", "push    edi", "call    BN_mod_sqr", "add     esp, 10h", "test    eax, eax", "jz      loc_93368"], ["sub     esi, 1"], ["test    esi, esi", "jg      short loc_933F9"], ["sub     esp, 0Ch", "mov     esi, ebp", "mov     ebp, [esp+58h+var_38]", "push    [esp+58h+arg_C]", "push    esi", "push    edi", "push    edi", "push    [esp+68h+var_34]", "call    BN_mod_mul", "add     esp, 20h", "test    eax, eax", "jz      loc_93368"], ["sub     esp, 0Ch", "push    [esp+58h+arg_C]", "push    esi", "push    edi", "mov     eax, [esp+64h+var_3C]", "push    eax", "push    eax", "call    BN_mod_mul", "add     esp, 20h", "test    eax, eax", "jz      loc_93368"], ["sub     esp, 0Ch", "push    [esp+58h+arg_C]", "push    esi", "push    [esp+60h+var_34]", "mov     eax, [esp+64h+var_30]", "push    eax", "push    eax", "call    BN_mod_mul", "add     esp, 20h", "test    eax, eax", "jz      loc_93368"], ["mov     [esp+4Ch+var_2C], ebp", "jmp     loc_932F7"], ["sub     esp, 0Ch", "push    [esp+58h+arg_8]", "call    BN_num_bits", "push    0", "push    0", "push    eax", "push    edi", "call    BN_priv_rand", "add     esp, 20h", "test    eax, eax", "jz      loc_92F75"], ["push    ecx", "push    ecx", "push    [esp+54h+arg_8]", "push    edi", "call    BN_ucmp", "add     esp, 10h", "test    eax, eax", "js      short loc_934DC"], ["mov     ecx, [esp+4Ch+arg_8]", "mov     eax, [esp+4Ch+var_24]", "cmp     dword ptr [ecx+0Ch], 0", "cmovz   eax, [esp+4Ch+var_20]", "push    edx", "push    ecx", "push    edi", "push    edi", "call    eax", "add     esp, 10h", "test    eax, eax", "jz      loc_92F75"], ["sub     esp, 0Ch", "push    edi", "call    BN_is_zero", "add     esp, 10h", "test    eax, eax", "jz      loc_92F28"], ["jmp     loc_92F64"], ["mov     ebp, [esp+4Ch+var_40]", "mov     edi, [esp+4Ch+ptr]", "sub     esp, 0Ch", "push    140h", "jmp     loc_93118"], ["mov     ebp, [esp+4Ch+var_40]", "mov     edi, [esp+4Ch+ptr]", "jmp     loc_930C5"], ["sub     esp, 0Ch", "push    [esp+58h+arg_C]", "push    esi", "push    [esp+60h+var_38]", "push    [esp+64h+var_44]", "push    [esp+68h+var_3C]", "call    BN_mod_exp", "add     esp, 20h", "test    eax, eax", "jz      loc_92F7D"], ["sub     esp, 0Ch", "push    [esp+58h+var_3C]", "call    BN_is_zero", "add     esp, 10h", "test    eax, eax", "jz      loc_9328A"], ["push    eax", "push    eax", "push    0", "push    ebp", "call    BN_set_word", "add     esp, 10h", "jmp     loc_92D71"], ["push    esi", "push    esi", "push    0", "push    [esp+58h+arg_4]", "call    BN_is_bit_set", "jmp     loc_92D2F"]], "CMS_decrypt": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 18h", "mov     edi, [esp+28h+arg_0]", "mov     ebp, [esp+28h+arg_4]", "push    edi", "call    CMS_get0_type", "mov     [esp+2Ch+ptr], eax", "call    OBJ_obj2nid", "add     esp, 10h", "cmp     eax, 17h", "jnz     loc_A21E8"], ["mov     esi, [esp+1Ch+arg_C]", "test    esi, esi", "jz      loc_A2228"], ["mov     eax, [edi+4]", "xor     edx, edx", "test    [esp+1Ch+arg_14], 20000h", "setnz   dl", "mov     eax, [eax+0Ch]", "mov     [eax+18h], edx", "mov     edx, [esp+1Ch+arg_8]", "test    edx, edx", "jz      loc_A21C0"], ["mov     dword ptr [eax+1Ch], 0", "test    ebp, ebp", "jz      short loc_A2156"], ["sub     esp, 4", "push    [esp+20h+arg_8]", "push    ebp", "push    edi", "call    CMS_decrypt_set1_pkey", "add     esp, 10h", "test    eax, eax", "jz      loc_A2218"], ["sub     esp, 8", "push    [esp+24h+arg_C]; ptr", "push    edi; int", "call    CMS_dataInit", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jz      loc_A2218"], ["mov     edx, eax", "mov     ecx, [esp+1Ch+arg_14]", "mov     eax, [esp+1Ch+arg_10]", "call    cms_copy_content", "mov     ebp, eax", "mov     eax, [esp+1Ch+arg_C]", "test    eax, eax", "jz      loc_A2268"], ["lea     esi, [esi+0]"], ["sub     esp, 0Ch", "mov     esi, edi", "push    edi", "call    BIO_pop", "mov     [esp+2Ch+ptr], esi; ptr", "mov     edi, eax", "call    BIO_free", "add     esp, 10h", "test    edi, edi", "jz      short loc_A21B2"], ["cmp     [esp+1Ch+arg_C], edi", "jnz     short loc_A2190"], ["add     esp, 0Ch", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     dword ptr [eax+1Ch], 1", "test    ebp, ebp", "jnz     loc_A213D"], ["mov     eax, [esp+1Ch+arg_C]", "or      eax, [esp+1Ch+arg_10]", "mov     ebp, 1", "jnz     loc_A2156"], ["jmp     short loc_A21B2"], ["sub     esp, 0Ch", "lea     eax, (aCryptoCmsCmsSm - 2A0000h)[ebx]; \"crypto/cms/cms_smime.c\"", "xor     ebp, ebp", "push    2E1h", "push    eax", "push    92h", "push    70h ; 'p'", "push    2Eh ; '.'", "call    ERR_put_error", "add     esp, 20h", "mov     eax, ebp", "add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     esp, 0Ch", "xor     ebp, ebp", "pop     ebx", "mov     eax, ebp", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    edi", "call    CMS_get0_content", "add     esp, 10h", "test    eax, eax", "jz      short loc_A2242"], ["mov     ecx, [eax]", "test    ecx, ecx", "jnz     loc_A2110"], ["sub     esp, 0Ch", "lea     eax, (aCryptoCmsCmsSm - 2A0000h)[ebx]; \"crypto/cms/cms_smime.c\"", "xor     ebp, ebp", "push    52h ; 'R'", "push    eax", "push    7Fh", "push    63h ; 'c'", "push    2Eh ; '.'", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_A21B2"], ["sub     esp, 0Ch", "push    edi", "call    BIO_free_all", "add     esp, 10h", "jmp     loc_A21B2"]], "DH_check": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 24h", "mov     edi, [esp+34h+arg_0]", "push    [esp+34h+arg_4]", "push    edi", "call    DH_check_params", "add     esp, 10h", "test    eax, eax", "jnz     short loc_B3E00"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["call    BN_CTX_new", "mov     esi, eax", "test    eax, eax", "jz      loc_B3F10"], ["sub     esp, 0Ch", "push    eax", "call    BN_CTX_start", "mov     [esp+3Ch+ptr], esi", "call    BN_CTX_get", "mov     [esp+3Ch+ptr], esi", "mov     [esp+3Ch+var_20], eax", "call    BN_CTX_get", "add     esp, 10h", "mov     ebp, eax", "test    eax, eax", "jz      loc_B3F10"], ["mov     edx, [edi+24h]", "test    edx, edx", "jz      loc_B3EE0"], ["call    BN_value_one", "sub     esp, 8", "push    eax", "push    dword ptr [edi+0Ch]", "call    BN_cmp", "add     esp, 10h", "test    eax, eax", "jg      loc_B3F40"], ["mov     eax, [esp+2Ch+arg_4]", "or      dword ptr [eax], 8"], ["push    0", "push    esi", "push    40h ; '@'", "push    dword ptr [edi+24h]", "call    BN_is_prime_ex", "add     esp, 10h", "test    eax, eax", "js      loc_B3F10"], ["jnz     short loc_B3E88"], ["mov     eax, [esp+2Ch+arg_4]", "or      dword ptr [eax], 10h"], ["sub     esp, 0Ch", "push    esi", "push    dword ptr [edi+24h]", "push    dword ptr [edi+8]", "push    ebp", "push    [esp+48h+var_20]", "call    BN_div", "add     esp, 20h", "test    eax, eax", "jz      short loc_B3F10"], ["sub     esp, 0Ch", "push    ebp", "call    BN_is_one", "add     esp, 10h", "test    eax, eax", "jnz     short loc_B3EBA"], ["mov     eax, [esp+2Ch+arg_4]", "or      dword ptr [eax], 20h"], ["mov     eax, [edi+28h]", "test    eax, eax", "jz      short loc_B3EE0"], ["sub     esp, 8", "push    [esp+34h+var_20]", "push    eax", "call    BN_cmp", "add     esp, 10h", "test    eax, eax", "jz      short loc_B3EE0"], ["mov     eax, [esp+2Ch+arg_4]", "or      dword ptr [eax], 40h", "lea     esi, [esi+0]"], ["push    0", "push    esi", "push    40h ; '@'", "push    dword ptr [edi+8]", "call    BN_is_prime_ex", "add     esp, 10h", "test    eax, eax", "js      short loc_B3F10"], ["jnz     loc_B3F98"], ["mov     eax, [esp+2Ch+arg_4]", "or      dword ptr [eax], 1", "mov     eax, 1", "jmp     short loc_B3F12"], ["xor     eax, eax"], ["mov     [esp+2Ch+var_20], eax", "sub     esp, 0Ch", "push    esi", "call    BN_CTX_end", "mov     [esp+3Ch+ptr], esi; ptr", "call    BN_CTX_free", "add     esp, 10h", "mov     eax, [esp+2Ch+var_20]", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 8", "push    dword ptr [edi+8]", "push    dword ptr [edi+0Ch]", "call    BN_cmp", "add     esp, 10h", "test    eax, eax", "jns     loc_B3E60"], ["sub     esp, 0Ch", "push    esi", "push    dword ptr [edi+8]", "push    dword ptr [edi+24h]", "push    dword ptr [edi+0Ch]", "push    [esp+48h+var_20]", "call    BN_mod_exp", "add     esp, 20h", "test    eax, eax", "jz      short loc_B3F10"], ["sub     esp, 0Ch", "push    [esp+38h+var_20]", "call    BN_is_one", "add     esp, 10h", "test    eax, eax", "jnz     loc_B3E67"], ["jmp     loc_B3E60"], ["mov     eax, [edi+24h]", "test    eax, eax", "jz      short loc_B3FA9"], ["mov     eax, 1", "jmp     loc_B3F12"], ["sub     esp, 8", "push    dword ptr [edi+8]", "mov     edi, [esp+38h+var_20]", "push    edi", "call    BN_rshift1", "add     esp, 10h", "test    eax, eax", "jz      loc_B3F10"], ["push    0", "push    esi", "push    40h ; '@'", "push    edi", "call    BN_is_prime_ex", "add     esp, 10h", "test    eax, eax", "js      loc_B3F10"], ["jnz     short loc_B3F9F"], ["mov     eax, [esp+2Ch+arg_4]", "or      dword ptr [eax], 2", "jmp     short loc_B3F9F"]], "EC_GROUP_new_from_ecparameters": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, [esp+3Ch+arg_0]", "mov     eax, [eax+4]", "test    eax, eax", "jz      loc_DAE40"], ["mov     ebp, [eax]", "test    ebp, ebp", "jz      loc_DAE40"], ["mov     edi, [eax+4]", "test    edi, edi", "jz      loc_DAE40"], ["mov     eax, [esp+3Ch+arg_0]", "mov     eax, [eax+8]", "test    eax, eax", "jz      loc_DADA0"], ["mov     edx, [eax]", "test    edx, edx", "jz      loc_DADA0"], ["mov     ecx, [edx+8]", "test    ecx, ecx", "jz      loc_DADA0"], ["mov     eax, [eax+4]", "test    eax, eax", "jz      loc_DADA0"], ["mov     esi, [eax+8]", "test    esi, esi", "jz      loc_DADA0"], ["sub     esp, 4", "push    0", "push    dword ptr [edx]", "push    ecx", "call    BN_bin2bn", "add     esp, 10h", "mov     esi, eax", "test    eax, eax", "jz      loc_DAE50"], ["mov     eax, [esp+3Ch+arg_0]", "sub     esp, 4", "mov     eax, [eax+8]", "mov     eax, [eax+4]", "push    0", "push    dword ptr [eax]", "push    dword ptr [eax+8]", "call    BN_bin2bn", "add     esp, 10h", "mov     ebp, eax", "test    eax, eax", "jz      loc_DAF50"], ["sub     esp, 0Ch", "mov     eax, [esp+48h+arg_0]", "mov     eax, [eax+4]", "push    dword ptr [eax]", "call    OBJ_obj2nid", "add     esp, 10h", "cmp     eax, 197h", "jz      loc_DAED0"], ["cmp     eax, 196h", "jnz     loc_DAF90"], ["mov     eax, [esp+3Ch+arg_0]", "mov     eax, [eax+4]", "mov     ecx, [eax+4]", "test    ecx, ecx", "jz      loc_DAFE0"], ["sub     esp, 8", "push    0", "push    ecx", "call    ASN1_INTEGER_to_BN", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jz      loc_DAE8D"], ["sub     esp, 0Ch", "push    eax", "call    BN_is_negative", "add     esp, 10h", "test    eax, eax", "jnz     loc_DAFA8"], ["sub     esp, 0Ch", "push    edi", "call    BN_is_zero", "add     esp, 10h", "test    eax, eax", "jnz     loc_DAFA8"], ["sub     esp, 0Ch", "push    edi", "call    BN_num_bits", "mov     [esp+4Ch+var_28], eax", "add     esp, 10h", "cmp     eax, 295h", "jg      loc_DB1A5"], ["push    0", "push    ebp", "push    esi", "push    edi", "call    EC_GROUP_new_curve_GFp", "add     esp, 10h", "mov     ecx, eax"], ["test    ecx, ecx", "jz      loc_DB217"], ["mov     eax, [esp+3Ch+arg_0]", "mov     eax, [eax+8]", "mov     eax, [eax+8]", "test    eax, eax", "jz      loc_DABA3"], ["sub     esp, 4", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    2F2h", "mov     [esp+44h+var_30], eax", "push    eax", "push    dword ptr [ecx+20h]; ptr", "mov     [esp+4Ch+ptr], ecx", "call    CRYPTO_free", "add     esp, 0Ch", "push    2F3h", "push    [esp+44h+var_30]", "mov     eax, [esp+48h+arg_0]", "mov     eax, [eax+8]", "mov     eax, [eax+8]", "push    dword ptr [eax]; size", "call    CRYPTO_malloc", "mov     ecx, [esp+4Ch+ptr]", "add     esp, 10h", "mov     edx, eax", "mov     [ecx+20h], eax", "test    eax, eax", "jz      loc_DB231"], ["mov     eax, [esp+3Ch+arg_0]", "mov     [esp+3Ch+var_30], ecx", "sub     esp, 4", "mov     eax, [eax+8]", "mov     eax, [eax+8]", "mov     ecx, [eax+8]", "push    dword ptr [eax]; n", "push    ecx; src", "push    edx; dest", "call    _memcpy", "mov     eax, [esp+4Ch+arg_0]", "mov     ecx, [esp+4Ch+var_30]", "add     esp, 10h", "mov     eax, [eax+8]", "mov     eax, [eax+8]", "mov     eax, [eax]", "mov     [ecx+24h], eax"], ["mov     eax, [esp+3Ch+arg_0]", "mov     edx, [eax+10h]", "test    edx, edx", "jz      loc_DB166"], ["mov     eax, [eax+0Ch]", "test    eax, eax", "jz      loc_DB166"], ["mov     edx, [eax+8]", "test    edx, edx", "jz      loc_DB166"], ["mov     eax, [eax]", "test    eax, eax", "jz      loc_DB166"], ["sub     esp, 0Ch", "push    ecx", "mov     [esp+4Ch+var_30], ecx", "call    EC_POINT_new", "add     esp, 10h", "mov     ecx, [esp+3Ch+var_30]", "test    eax, eax", "mov     [esp+3Ch+ptr], eax", "jz      loc_DB273"], ["sub     esp, 8", "mov     edx, [esp+44h+arg_0]", "mov     eax, [edx+0Ch]", "mov     eax, [eax+8]", "movzx   eax, byte ptr [eax]", "and     eax, 0FFFFFFFEh", "push    eax", "push    ecx", "mov     [esp+4Ch+var_30], ecx", "call    EC_GROUP_set_point_conversion_form", "mov     ecx, [esp+4Ch+arg_0]", "mov     eax, [ecx+0Ch]", "mov     [esp+4Ch+var_4C], 0", "push    dword ptr [eax]", "push    dword ptr [eax+8]", "push    [esp+54h+ptr]", "mov     ecx, [esp+58h+var_30]", "push    ecx", "mov     [esp+5Ch+var_30], ecx", "call    EC_POINT_oct2point", "add     esp, 20h", "mov     ecx, [esp+3Ch+var_30]", "test    eax, eax", "jz      loc_DB2CA"], ["mov     [esp+3Ch+var_30], ecx", "sub     esp, 8", "push    esi", "mov     eax, [esp+48h+arg_0]", "push    dword ptr [eax+10h]", "call    ASN1_INTEGER_to_BN", "add     esp, 10h", "mov     ecx, [esp+3Ch+var_30]", "test    eax, eax", "mov     esi, eax", "jz      loc_DB2E1"], ["mov     [esp+3Ch+var_30], ecx", "sub     esp, 0Ch", "push    eax", "call    BN_is_negative", "add     esp, 10h", "mov     ecx, [esp+3Ch+var_30]", "test    eax, eax", "jnz     loc_DB293"], ["mov     [esp+3Ch+var_30], ecx", "sub     esp, 0Ch", "push    esi", "call    BN_is_zero", "add     esp, 10h", "mov     ecx, [esp+3Ch+var_30]", "test    eax, eax", "jnz     loc_DB293"], ["sub     esp, 0Ch", "push    esi", "call    BN_num_bits", "mov     edx, [esp+4Ch+var_28]", "add     esp, 10h", "mov     ecx, [esp+3Ch+var_30]", "add     edx, 1", "cmp     eax, edx", "jg      loc_DB319"], ["mov     eax, [esp+3Ch+arg_0]", "mov     [esp+3Ch+var_30], ecx", "mov     eax, [eax+14h]", "test    eax, eax", "jz      loc_DB302"], ["push    edx", "push    edx", "push    ebp", "push    eax", "call    ASN1_INTEGER_to_BN", "add     esp, 10h", "mov     ecx, [esp+3Ch+var_30]", "test    eax, eax", "mov     ebp, eax", "jz      loc_DB333"], ["push    ebp", "push    esi", "push    [esp+44h+ptr]", "push    ecx", "mov     [esp+4Ch+var_30], ecx", "call    EC_GROUP_set_generator", "mov     ecx, [esp+4Ch+var_30]", "add     esp, 10h", "test    eax, eax", "mov     [esp+3Ch+var_28], ecx", "jz      loc_DB2F8"], ["call    BN_CTX_new", "mov     ecx, [esp+3Ch+var_28]", "test    eax, eax", "mov     [esp+3Ch+var_30], eax", "jz      loc_DB411"], ["sub     esp, 0Ch", "push    ecx", "mov     [esp+4Ch+var_28], ecx", "call    EC_GROUP_dup", "add     esp, 10h", "mov     ecx, [esp+3Ch+var_28]", "test    eax, eax", "mov     edx, eax", "jz      short loc_DAD66"], ["mov     [esp+3Ch+var_24], ecx", "push    eax", "push    0; n", "push    0; src", "push    edx; int", "mov     [esp+4Ch+var_28], edx", "call    EC_GROUP_set_seed", "add     esp, 10h", "mov     edx, [esp+3Ch+var_28]", "mov     ecx, [esp+3Ch+var_24]", "sub     eax, 1", "jz      loc_DB34D"], ["mov     [esp+3Ch+var_24], edx", "sub     esp, 0Ch", "mov     [esp+48h+var_28], ecx", "push    341h"], ["lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    eax", "push    10h", "push    107h", "push    10h", "call    ERR_put_error", "add     esp, 20h", "mov     ecx, [esp+3Ch+var_28]", "mov     edx, [esp+3Ch+var_24]", "jmp     short loc_DADDA"], ["sub     esp, 0Ch", "push    262h"], ["lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "xor     ebp, ebp", "xor     esi, esi", "xor     edi, edi", "push    eax", "push    73h ; 's'", "push    107h", "push    10h", "call    ERR_put_error", "add     esp, 20h", "xor     edx, edx", "xor     ecx, ecx", "mov     [esp+3Ch+var_30], 0", "mov     [esp+3Ch+ptr], 0"], ["mov     [esp+3Ch+var_24], edx", "sub     esp, 0Ch", "push    ecx; ptr", "call    EC_GROUP_free", "mov     edx, [esp+4Ch+var_24]", "add     esp, 10h", "mov     [esp+3Ch+var_28], 0"], ["sub     esp, 0Ch", "push    edx; ptr", "call    EC_GROUP_free", "mov     [esp+4Ch+var_4C], edi; ptr", "call    BN_free", "mov     [esp+4Ch+var_4C], esi; ptr", "call    BN_free", "mov     [esp+4Ch+var_4C], ebp; ptr", "call    BN_free", "pop     eax", "push    [esp+48h+ptr]; ptr", "call    EC_POINT_free", "pop     edx", "push    [esp+48h+var_30]; ptr", "call    BN_CTX_free", "mov     eax, [esp+4Ch+var_28]", "add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    255h", "jmp     loc_DADA8"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "xor     ebp, ebp", "xor     edi, edi", "push    267h", "push    eax", "push    3", "push    107h", "push    10h", "call    ERR_put_error", "add     esp, 20h", "xor     edx, edx", "xor     ecx, ecx", "mov     [esp+3Ch+var_30], 0", "mov     [esp+3Ch+ptr], 0", "jmp     loc_DADDA"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    2D5h", "push    eax", "push    0Dh", "xchg    ax, ax"], ["push    107h", "push    10h", "call    ERR_put_error", "add     esp, 20h"], ["mov     [esp+3Ch+var_30], 0", "xor     edx, edx", "xor     ecx, ecx", "mov     [esp+3Ch+ptr], 0", "jmp     loc_DADDA"], ["mov     eax, [esp+3Ch+arg_0]", "mov     eax, [eax+4]", "mov     edx, [eax+4]", "mov     eax, [edx]", "mov     [esp+3Ch+var_28], eax", "cmp     eax, 295h", "jg      loc_DAFC0"], ["mov     [esp+3Ch+var_30], edx", "call    BN_new", "mov     edx, [esp+3Ch+var_30]", "test    eax, eax", "mov     edi, eax", "jz      loc_DB150"], ["sub     esp, 0Ch", "push    dword ptr [edx+4]", "mov     [esp+4Ch+var_30], edx", "call    OBJ_obj2nid", "add     esp, 10h", "mov     edx, [esp+3Ch+var_30]", "cmp     eax, 2AAh", "jz      loc_DB021"], ["cmp     eax, 2ABh", "jz      loc_DB0B0"], ["cmp     eax, 2A9h", "jz      loc_DB1D7"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    2C4h", "push    eax", "push    73h ; 's'", "jmp     loc_DAEA0"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    26Ch", "push    eax", "push    3"], ["push    107h", "xor     edi, edi", "push    10h", "call    ERR_put_error", "add     esp, 20h", "xor     edx, edx", "xor     ecx, ecx", "mov     [esp+3Ch+var_30], 0", "mov     [esp+3Ch+ptr], 0", "jmp     loc_DADDA"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    2E7h", "push    eax", "push    67h ; 'g'", "jmp     short loc_DAF61"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    2DAh", "push    eax", "push    67h ; 'g'", "jmp     loc_DAEA0"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    280h", "push    eax", "push    8Fh", "jmp     short loc_DAF61"], ["mov     [esp+3Ch+var_28], ecx", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "sub     esp, 0Ch", "xor     edi, edi", "push    2D0h", "push    eax", "push    73h ; 's'", "push    107h", "push    10h", "call    ERR_put_error", "add     esp, 20h", "xor     edx, edx", "mov     ecx, [esp+3Ch+var_28]", "mov     [esp+3Ch+var_30], 0", "mov     [esp+3Ch+ptr], 0", "jmp     loc_DADDA"], ["mov     ecx, [edx+8]", "test    ecx, ecx", "jz      loc_DB206"], ["mov     [esp+3Ch+var_30], edx", "sub     esp, 0Ch", "push    ecx", "call    ASN1_INTEGER_get", "mov     edx, [esp+4Ch+var_30]", "add     esp, 10h", "mov     ecx, eax", "mov     eax, [edx]", "test    ecx, ecx", "jle     loc_DB1ED"], ["cmp     eax, ecx", "jle     loc_DB1ED"], ["mov     [esp+3Ch+var_30], ecx", "sub     esp, 8", "push    eax", "push    edi", "call    BN_set_bit", "add     esp, 10h", "test    eax, eax", "jz      loc_DAEAF"], ["sub     esp, 8", "mov     ecx, [esp+44h+var_30]", "push    ecx"], ["push    edi", "call    BN_set_bit", "add     esp, 10h", "test    eax, eax", "jz      loc_DAEAF"], ["push    eax", "push    eax", "push    0", "push    edi", "call    BN_set_bit", "add     esp, 10h", "test    eax, eax", "jz      loc_DAEAF"], ["push    0", "push    ebp", "push    esi", "push    edi", "call    EC_GROUP_new_curve_GF2m", "add     esp, 10h", "mov     ecx, eax", "jmp     loc_DAB06"], ["mov     ecx, [edx+8]", "test    ecx, ecx", "jz      loc_DB282"], ["mov     edx, [edx]", "mov     eax, [ecx+8]", "mov     [esp+3Ch+var_30], edx", "cmp     edx, eax", "jle     loc_DB1BE"], ["mov     edx, [ecx+4]", "cmp     eax, edx", "jle     loc_DB1BE"], ["mov     eax, [ecx]", "test    eax, eax", "jle     loc_DB1BE"], ["cmp     edx, eax", "jle     loc_DB1BE"], ["mov     [esp+3Ch+ptr], ecx", "sub     esp, 8", "push    [esp+44h+var_30]", "push    edi", "call    BN_set_bit", "add     esp, 10h", "test    eax, eax", "jz      loc_DAEAF"], ["push    eax", "push    eax", "mov     ecx, [esp+44h+ptr]", "push    dword ptr [ecx]", "mov     [esp+48h+var_30], ecx", "push    edi", "call    BN_set_bit", "add     esp, 10h", "test    eax, eax", "jz      loc_DAEAF"], ["push    eax", "push    eax", "mov     ecx, [esp+44h+var_30]", "push    dword ptr [ecx+4]", "mov     [esp+48h+var_30], ecx", "push    edi", "call    BN_set_bit", "add     esp, 10h", "test    eax, eax", "jz      loc_DAEAF"], ["push    eax", "push    eax", "mov     ecx, [esp+44h+var_30]", "push    dword ptr [ecx+8]", "jmp     loc_DB075"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    285h", "push    eax", "push    41h ; 'A'", "jmp     loc_DAEA0"], ["mov     [esp+3Ch+var_28], ecx", "sub     esp, 0Ch", "push    300h"], ["lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    eax", "push    73h ; 's'"], ["push    107h", "push    10h", "call    ERR_put_error", "add     esp, 20h", "xor     edx, edx", "mov     ecx, [esp+3Ch+var_28]", "mov     [esp+3Ch+var_30], 0", "mov     [esp+3Ch+ptr], 0", "jmp     loc_DADDA"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    2E0h", "push    eax", "push    8Fh", "jmp     loc_DAEA0"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    2AFh", "push    eax", "push    84h", "jmp     loc_DAEA0"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    2C0h", "push    eax", "push    7Eh ; '~'", "jmp     loc_DAEA0"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    297h", "push    eax", "push    89h", "jmp     loc_DAEA0"], ["mov     [esp+3Ch+var_28], ecx", "sub     esp, 0Ch", "push    290h", "jmp     loc_DB172"], ["mov     [esp+3Ch+var_28], ecx", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "sub     esp, 0Ch", "push    2ECh", "push    eax", "push    10h", "jmp     loc_DB17B"], ["mov     [esp+3Ch+var_24], eax", "sub     esp, 0Ch", "mov     [esp+48h+var_28], ecx", "push    2F4h", "push    [esp+4Ch+var_30]", "push    41h ; 'A'", "push    107h", "push    10h", "call    ERR_put_error", "add     esp, 20h", "mov     ecx, [esp+3Ch+var_28]", "mov     edx, [esp+3Ch+var_24]", "mov     [esp+3Ch+var_30], 0", "mov     [esp+3Ch+ptr], 0", "jmp     loc_DADDA"], ["mov     [esp+3Ch+var_30], 0", "xor     edx, edx", "jmp     loc_DADDA"], ["mov     [esp+3Ch+var_28], ecx", "sub     esp, 0Ch", "push    2A8h", "jmp     loc_DB172"], ["mov     [esp+3Ch+var_28], ecx", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "sub     esp, 0Ch", "push    318h", "push    eax", "push    7Ah ; 'z'"], ["push    107h", "push    10h", "call    ERR_put_error", "add     esp, 20h", "xor     edx, edx", "mov     [esp+3Ch+var_30], 0"], ["mov     ecx, [esp+3Ch+var_28]", "jmp     loc_DADDA"], ["mov     [esp+3Ch+var_28], ecx", "sub     esp, 0Ch", "push    30Eh"], ["lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    eax", "push    10h", "jmp     short loc_DB2A8"], ["mov     [esp+3Ch+var_28], ecx", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "sub     esp, 0Ch", "push    314h", "push    eax", "push    0Dh", "jmp     short loc_DB2A8"], ["sub     esp, 0Ch", "push    32Ah", "jmp     short loc_DB2D6"], ["sub     esp, 0Ch", "push    ebp; ptr", "xor     ebp, ebp", "call    BN_free", "add     esp, 10h", "mov     ecx, [esp+3Ch+var_30]", "jmp     loc_DACED"], ["mov     [esp+3Ch+var_28], ecx", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "sub     esp, 0Ch", "push    31Ch", "push    eax", "push    7Ah ; 'z'", "jmp     loc_DB2A8"], ["mov     [esp+3Ch+var_28], ecx", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "sub     esp, 0Ch", "push    325h", "push    eax", "push    0Dh", "jmp     loc_DB2A8"], ["push    0", "push    esi", "push    [esp+44h+ptr]", "push    edx", "mov     [esp+4Ch+var_28], edx", "call    EC_GROUP_set_generator", "add     esp, 10h", "mov     edx, [esp+3Ch+var_28]", "mov     ecx, [esp+3Ch+var_24]", "test    eax, eax", "jz      loc_DAD66"], ["mov     [esp+3Ch+var_28], ecx", "push    ecx", "push    ecx", "push    [esp+44h+var_30]", "push    edx", "mov     [esp+4Ch+var_24], edx", "call    ec_curve_nid_from_params", "add     esp, 10h", "mov     ecx, [esp+3Ch+var_28]", "mov     edx, [esp+3Ch+var_24]", "test    eax, eax", "jz      loc_DADF6"], ["mov     [esp+3Ch+var_20], edx", "sub     esp, 0Ch", "mov     [esp+48h+var_24], ecx", "push    eax", "call    EC_GROUP_new_by_curve_name", "mov     [esp+4Ch+var_28], eax", "mov     edx, [esp+4Ch+var_20]", "add     esp, 10h", "test    eax, eax", "mov     ecx, [esp+3Ch+var_24]", "mov     [esp+3Ch+var_24], edx", "jz      short loc_DB43C"], ["sub     esp, 0Ch", "push    ecx; ptr", "call    EC_GROUP_free", "pop     eax", "pop     edx", "push    0", "push    [esp+48h+var_28]", "call    EC_GROUP_set_asn1_flag", "mov     eax, [esp+4Ch+arg_0]", "add     esp, 10h", "mov     edx, [esp+3Ch+var_24]", "mov     eax, [eax+8]", "cmp     dword ptr [eax+8], 0", "jnz     loc_DADF6"], ["push    ecx", "push    0; n", "push    0; src", "push    [esp+48h+var_28]; int", "call    EC_GROUP_set_seed", "add     esp, 10h", "mov     edx, [esp+3Ch+var_24]", "sub     eax, 1", "jz      loc_DADF6"], ["jmp     loc_DB2C1"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcAsn1 - 2A0000h)[ebx]; \"crypto/ec/ec_asn1.c\"", "push    33Bh", "push    eax", "push    3", "push    107h", "push    10h", "call    ERR_put_error", "add     esp, 20h", "xor     edx, edx", "mov     ecx, [esp+3Ch+var_28]", "jmp     loc_DADDA"], ["mov     [esp+3Ch+var_28], ecx", "sub     esp, 0Ch", "push    35Ah", "jmp     loc_DAD76"]], "EC_GROUP_set_generator": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     eax, [esp+1Ch+arg_4]", "mov     esi, [esp+1Ch+arg_0]", "test    eax, eax", "jz      loc_DF8C8"], ["mov     eax, [esi+28h]", "test    eax, eax", "jz      short loc_DF829"], ["sub     esp, 0Ch", "push    eax", "call    BN_is_zero", "add     esp, 10h", "test    eax, eax", "jz      short loc_DF858"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcLibC - 2A0000h)[ebx]; \"crypto/ec/ec_lib.c\"", "push    155h", "push    eax", "push    67h ; 'g'"], ["push    6Fh ; 'o'", "xor     edi, edi", "push    10h", "call    ERR_put_error", "add     esp, 20h"], ["add     esp, 0Ch", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    dword ptr [esi+28h]", "call    BN_is_negative", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jnz     short loc_DF829"], ["mov     eax, [esp+1Ch+arg_8]", "test    eax, eax", "jz      short loc_DF89A"], ["sub     esp, 0Ch", "push    [esp+28h+arg_8]", "call    BN_is_zero", "add     esp, 10h", "test    eax, eax", "jnz     short loc_DF89A"], ["sub     esp, 0Ch", "push    [esp+28h+arg_8]", "call    BN_is_negative", "add     esp, 10h", "test    eax, eax", "jz      short loc_DF8E0"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcLibC - 2A0000h)[ebx]; \"crypto/ec/ec_lib.c\"", "push    160h", "push    eax", "push    7Ah ; 'z'", "push    6Fh ; 'o'", "push    10h", "call    ERR_put_error", "add     esp, 20h", "mov     eax, edi", "add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcLibC - 2A0000h)[ebx]; \"crypto/ec/ec_lib.c\"", "push    14Eh", "push    eax", "push    43h ; 'C'", "jmp     loc_DF83A"], ["sub     esp, 0Ch", "push    [esp+28h+arg_8]", "call    BN_num_bits", "mov     ebp, eax", "pop     eax", "push    dword ptr [esi+28h]", "call    BN_num_bits", "add     esp, 10h", "add     eax, 1", "cmp     ebp, eax", "jg      short loc_DF89A"], ["mov     eax, [esp+1Ch+arg_C]", "test    eax, eax", "jz      short loc_DF920"], ["sub     esp, 0Ch", "push    [esp+28h+arg_C]", "call    BN_is_negative", "add     esp, 10h", "test    eax, eax", "jnz     loc_DFB2D"], ["mov     eax, [esi+4]", "test    eax, eax", "jz      loc_DFB0F"], ["sub     esp, 8", "push    [esp+24h+arg_4]", "push    eax", "call    EC_POINT_copy", "add     esp, 10h", "test    eax, eax", "jz      loc_DFB08"], ["sub     esp, 8", "push    [esp+24h+arg_8]", "push    dword ptr [esi+8]", "call    BN_copy", "add     esp, 10h", "test    eax, eax", "jz      loc_DFB08"], ["mov     eax, [esp+1Ch+arg_C]", "test    eax, eax", "jz      short loc_DF97C"], ["sub     esp, 0Ch", "push    [esp+28h+arg_C]", "call    BN_is_zero", "add     esp, 10h", "test    eax, eax", "jz      loc_DFBB3"], ["sub     esp, 0Ch", "push    dword ptr [esi+8]", "call    BN_num_bits", "pop     ebp", "push    dword ptr [esi+28h]", "mov     edi, eax", "call    BN_num_bits", "add     esp, 10h", "lea     edx, [eax+1]", "mov     eax, edx", "shr     eax, 1Fh", "add     eax, edx", "sar     eax, 1", "add     eax, 3", "cmp     edi, eax", "jle     loc_DFB9E"], ["call    BN_CTX_new", "mov     edi, eax", "test    eax, eax", "jz      loc_DFAF1"], ["sub     esp, 0Ch", "push    eax", "call    BN_CTX_start", "mov     [esp+2Ch+ptr], edi", "call    BN_CTX_get", "add     esp, 10h", "mov     ebp, eax", "test    eax, eax", "jz      loc_DFADD"], ["mov     eax, [esi]", "cmp     dword ptr [eax+4], 197h", "jz      loc_DFAB2"], ["sub     esp, 8", "push    dword ptr [esi+28h]", "push    ebp", "call    BN_copy", "add     esp, 10h", "test    eax, eax", "jz      loc_DFADD"], ["sub     esp, 8", "push    dword ptr [esi+8]", "push    dword ptr [esi+0Ch]", "call    BN_rshift1", "add     esp, 10h", "test    eax, eax", "jz      loc_DFADD"], ["mov     eax, [esi+0Ch]", "sub     esp, 4", "push    ebp", "push    eax", "push    eax", "call    BN_add", "add     esp, 10h", "test    eax, eax", "jz      loc_DFADD"], ["call    BN_value_one", "mov     edx, eax", "mov     eax, [esi+0Ch]", "push    ecx", "push    edx", "push    eax", "push    eax", "call    BN_add", "add     esp, 10h", "test    eax, eax", "jz      loc_DFADD"], ["mov     eax, [esi+0Ch]", "sub     esp, 0Ch", "push    edi", "push    dword ptr [esi+8]", "push    eax", "push    0", "push    eax", "call    BN_div", "add     esp, 20h", "test    eax, eax", "jz      short loc_DFADD"], ["sub     esp, 0Ch", "push    edi", "call    BN_CTX_end", "mov     [esp+2Ch+ptr], edi; ptr", "call    BN_CTX_free", "add     esp, 10h"], ["sub     esp, 0Ch", "push    dword ptr [esi+8]", "call    BN_is_odd", "add     esp, 10h", "test    eax, eax", "jnz     loc_DFB46"], ["sub     esp, 0Ch", "push    dword ptr [esi+5Ch]; ptr", "mov     edi, 1", "call    BN_MONT_CTX_free", "mov     dword ptr [esi+5Ch], 0", "add     esp, 10h", "jmp     loc_DF848"], ["sub     esp, 8", "push    0", "push    ebp", "call    BN_set_word", "pop     eax", "push    dword ptr [esi+28h]", "call    BN_num_bits", "pop     edx", "pop     ecx", "sub     eax, 1", "push    eax", "push    ebp", "call    BN_set_bit", "add     esp, 10h", "test    eax, eax", "jnz     loc_DF9FF"], ["sub     esp, 0Ch", "push    edi", "call    BN_CTX_end", "mov     [esp+2Ch+ptr], edi; ptr", "call    BN_CTX_free", "add     esp, 10h"], ["sub     esp, 8", "push    0", "push    dword ptr [esi+0Ch]", "call    BN_set_word", "add     esp, 10h", "lea     esi, [esi+0]"], ["xor     edi, edi", "jmp     loc_DF848"], ["sub     esp, 0Ch", "push    esi", "call    EC_POINT_new", "add     esp, 10h", "mov     [esi+4], eax", "test    eax, eax", "jnz     loc_DF92B"], ["xor     edi, edi", "jmp     loc_DF848"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcLibC - 2A0000h)[ebx]; \"crypto/ec/ec_lib.c\"", "push    16Ah", "push    eax", "push    0A4h", "jmp     loc_DF83A"], ["call    BN_CTX_new", "sub     esp, 0Ch", "push    dword ptr [esi+5Ch]; ptr", "mov     ebp, eax", "call    BN_MONT_CTX_free", "mov     dword ptr [esi+5Ch], 0", "add     esp, 10h", "test    ebp, ebp", "jz      short loc_DFBD4"], ["call    BN_MONT_CTX_new", "mov     [esi+5Ch], eax", "test    eax, eax", "jz      short loc_DFBD4"], ["sub     esp, 4", "push    ebp", "push    dword ptr [esi+8]", "push    eax", "call    BN_MONT_CTX_set", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jz      short loc_DFBD8"], ["mov     edi, 1"], ["sub     esp, 0Ch", "push    ebp; ptr", "call    BN_CTX_free", "add     esp, 10h", "jmp     loc_DF848"], ["sub     esp, 8", "push    0", "push    dword ptr [esi+0Ch]", "call    BN_set_word", "add     esp, 10h", "jmp     loc_DFA7D"], ["sub     esp, 8", "push    [esp+24h+arg_C]", "push    dword ptr [esi+0Ch]", "call    BN_copy", "add     esp, 10h", "test    eax, eax", "jnz     loc_DFA7D"], ["xor     edi, edi", "jmp     loc_DF848"], ["xor     edi, edi", "jmp     short loc_DFB8D"], ["sub     esp, 0Ch", "push    dword ptr [esi+5Ch]; ptr", "call    BN_MONT_CTX_free", "mov     dword ptr [esi+5Ch], 0", "add     esp, 10h", "jmp     short loc_DFB8D"]], "ec_scalar_mul_ladder": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     edx, [esp+3Ch+arg_C]", "mov     esi, [esp+3Ch+arg_0]", "test    edx, edx", "jz      short loc_E0FD6"], ["sub     esp, 8", "push    [esp+44h+arg_C]", "push    esi", "call    EC_POINT_is_at_infinity", "add     esp, 10h", "test    eax, eax", "jnz     loc_E1580"], ["sub     esp, 0Ch", "push    dword ptr [esi+8]", "call    BN_is_zero", "add     esp, 10h", "test    eax, eax", "jnz     loc_E14F8"], ["sub     esp, 0Ch", "push    dword ptr [esi+0Ch]", "call    BN_is_zero", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jnz     loc_E1528"], ["sub     esp, 0Ch", "push    [esp+48h+arg_10]", "call    BN_CTX_start", "mov     [esp+4Ch+var_4C], esi", "call    EC_POINT_new", "add     esp, 10h", "mov     ebp, eax", "test    eax, eax", "jz      loc_E15A0"], ["sub     esp, 0Ch", "push    esi", "call    EC_POINT_new", "mov     [esp+4Ch+var_38], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_E15A0"], ["mov     eax, [esp+3Ch+arg_C]", "test    eax, eax", "jz      loc_E1540"], ["sub     esp, 8", "push    [esp+44h+arg_C]", "push    ebp", "call    EC_POINT_copy", "add     esp, 10h", "test    eax, eax", "jz      loc_E1690"], ["sub     esp, 8", "push    4", "push    dword ptr [ebp+8]", "call    BN_set_flags", "pop     eax", "pop     edx", "push    4", "push    dword ptr [ebp+0Ch]", "call    BN_set_flags", "pop     ecx", "pop     eax", "push    4", "push    dword ptr [ebp+10h]", "call    BN_set_flags", "pop     eax", "pop     edx", "push    4", "mov     eax, [esp+48h+arg_4]", "push    dword ptr [eax+8]", "call    BN_set_flags", "pop     ecx", "pop     eax", "push    4", "mov     eax, [esp+48h+arg_4]", "push    dword ptr [eax+0Ch]", "call    BN_set_flags", "pop     eax", "pop     edx", "push    4", "mov     eax, [esp+48h+arg_4]", "push    dword ptr [eax+10h]", "call    BN_set_flags", "pop     ecx", "pop     eax", "push    4", "mov     eax, [esp+48h+var_38]", "push    dword ptr [eax+8]", "call    BN_set_flags", "pop     eax", "pop     edx", "push    4", "mov     eax, [esp+48h+var_38]", "push    dword ptr [eax+0Ch]", "call    BN_set_flags", "pop     ecx", "pop     eax", "push    4", "mov     eax, [esp+48h+var_38]", "push    dword ptr [eax+10h]", "call    BN_set_flags", "pop     eax", "push    [esp+48h+arg_10]", "call    BN_CTX_get", "mov     [esp+4Ch+var_34], eax", "pop     eax", "push    [esp+48h+arg_10]", "call    BN_CTX_get", "mov     [esp+4Ch+var_2C], eax", "pop     eax", "push    [esp+48h+arg_10]", "call    BN_CTX_get", "mov     [esp+4Ch+var_30], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_E1668"], ["push    [esp+3Ch+arg_10]", "push    dword ptr [esi+0Ch]", "push    dword ptr [esi+8]", "push    [esp+48h+var_34]", "call    BN_mul", "add     esp, 10h", "test    eax, eax", "jz      loc_E15F8"], ["sub     esp, 0Ch", "push    [esp+48h+var_34]", "call    BN_num_bits", "mov     [esp+4Ch+ptr], eax", "pop     eax", "push    [esp+48h+var_34]", "call    bn_get_top", "add     eax, 2", "mov     [esp+4Ch+var_28], eax", "pop     edx", "pop     ecx", "push    eax", "push    [esp+48h+var_30]", "call    bn_wexpand", "add     esp, 10h", "test    eax, eax", "jz      loc_E1640"], ["sub     esp, 8", "push    [esp+44h+var_28]", "push    [esp+48h+var_2C]", "call    bn_wexpand", "add     esp, 10h", "test    eax, eax", "jz      loc_E1640"], ["sub     esp, 8", "push    [esp+44h+arg_8]", "push    [esp+48h+var_30]", "call    BN_copy", "add     esp, 10h", "test    eax, eax", "jz      loc_E16C0"], ["sub     esp, 8", "push    4", "push    [esp+48h+var_30]", "call    BN_set_flags", "pop     eax", "push    [esp+48h+var_30]", "call    BN_num_bits", "add     esp, 10h", "cmp     [esp+3Ch+ptr], eax", "jge     loc_E1620"], ["push    [esp+3Ch+arg_10]", "push    [esp+40h+var_34]", "mov     eax, [esp+44h+var_30]", "push    eax", "push    eax", "call    BN_nnmod", "add     esp, 10h", "test    eax, eax", "jz      loc_E16DA"], ["sub     esp, 4", "push    [esp+40h+var_34]", "push    [esp+44h+var_30]", "push    [esp+48h+var_2C]", "call    BN_add", "add     esp, 10h", "test    eax, eax", "jz      loc_E16B0"], ["sub     esp, 8", "push    4", "push    [esp+48h+var_2C]", "call    BN_set_flags", "add     esp, 0Ch", "push    [esp+40h+var_34]", "push    [esp+44h+var_2C]", "push    [esp+48h+var_30]", "call    BN_add", "add     esp, 10h", "test    eax, eax", "jz      loc_E16CD"], ["sub     esp, 8", "push    [esp+44h+ptr]", "push    [esp+48h+var_2C]", "call    BN_is_bit_set", "push    [esp+4Ch+var_28]", "push    [esp+50h+var_2C]", "push    [esp+54h+var_30]", "push    eax", "call    BN_consttime_swap", "add     esp, 14h", "push    dword ptr [esi+28h]", "call    bn_get_top", "mov     [esp+4Ch+var_34], eax", "pop     edx", "pop     ecx", "push    eax", "mov     eax, [esp+48h+var_38]", "push    dword ptr [eax+8]", "call    bn_wexpand", "add     esp, 10h", "test    eax, eax", "jz      loc_E16A0"], ["sub     esp, 8", "push    [esp+44h+var_34]", "mov     eax, [esp+48h+var_38]", "push    dword ptr [eax+0Ch]", "call    bn_wexpand", "add     esp, 10h", "test    eax, eax", "jz      loc_E16A0"], ["sub     esp, 8", "push    [esp+44h+var_34]", "mov     eax, [esp+48h+var_38]", "push    dword ptr [eax+10h]", "call    bn_wexpand", "add     esp, 10h", "test    eax, eax", "jz      loc_E16A0"], ["sub     esp, 8", "push    [esp+44h+var_34]", "mov     eax, [esp+48h+arg_4]", "push    dword ptr [eax+8]", "call    bn_wexpand", "add     esp, 10h", "test    eax, eax", "jz      loc_E16A0"], ["sub     esp, 8", "push    [esp+44h+var_34]", "mov     eax, [esp+48h+arg_4]", "push    dword ptr [eax+0Ch]", "call    bn_wexpand", "add     esp, 10h", "test    eax, eax", "jz      loc_E16A0"], ["sub     esp, 8", "push    [esp+44h+var_34]", "mov     eax, [esp+48h+arg_4]", "push    dword ptr [eax+10h]", "call    bn_wexpand", "add     esp, 10h", "test    eax, eax", "jz      loc_E16A0"], ["sub     esp, 8", "push    [esp+44h+var_34]", "push    dword ptr [ebp+8]", "call    bn_wexpand", "add     esp, 10h", "test    eax, eax", "jz      loc_E16A0"], ["sub     esp, 8", "push    [esp+44h+var_34]", "push    dword ptr [ebp+0Ch]", "call    bn_wexpand", "add     esp, 10h", "test    eax, eax", "jz      loc_E16A0"], ["sub     esp, 8", "push    [esp+44h+var_34]", "push    dword ptr [ebp+10h]", "call    bn_wexpand", "add     esp, 10h", "test    eax, eax", "jz      loc_E16A0"], ["cmp     dword ptr [ebp+14h], 0", "jnz     short loc_E1382"], ["push    eax", "push    [esp+40h+arg_10]", "push    ebp", "push    esi", "call    EC_POINT_make_affine", "add     esp, 10h", "test    eax, eax", "jz      loc_E17E8"], ["mov     eax, [esi]", "mov     eax, [eax+0D0h]", "test    eax, eax", "jz      loc_E1790"], ["sub     esp, 0Ch", "push    [esp+48h+arg_10]", "push    ebp", "push    [esp+50h+var_38]", "push    [esp+54h+arg_4]", "push    esi", "call    eax", "add     esp, 20h", "test    eax, eax", "jz      loc_E17C0"], ["mov     eax, [esp+3Ch+ptr]", "mov     [esp+3Ch+var_28], 1", "sub     eax, 1", "mov     [esp+3Ch+var_2C], eax", "js      loc_E16EB"], ["mov     [esp+3Ch+var_20], edi", "mov     edi, [esp+3Ch+var_38]", "mov     [esp+3Ch+ptr], ebp", "jmp     short loc_E1407"], ["sub     esp, 0Ch", "push    [esp+48h+arg_10]", "push    [esp+4Ch+ptr]", "push    edi", "push    [esp+54h+arg_4]", "push    esi", "call    eax", "add     esp, 20h", "test    eax, eax", "jz      loc_E14C4"], ["sub     [esp+3Ch+var_2C], 1", "mov     eax, [esp+3Ch+var_2C]", "cmp     eax, 0FFFFFFFFh", "jz      loc_E16E7"], ["mov     ebp, [esp+3Ch+var_28]", "sub     esp, 8", "push    [esp+44h+var_2C]", "push    [esp+48h+var_30]", "call    BN_is_bit_set", "mov     [esp+4Ch+var_28], eax", "xor     ebp, eax", "push    [esp+4Ch+var_34]", "push    dword ptr [edi+8]", "mov     eax, [esp+54h+arg_4]", "push    dword ptr [eax+8]", "push    ebp", "call    BN_consttime_swap", "add     esp, 20h", "push    [esp+3Ch+var_34]", "push    dword ptr [edi+0Ch]", "mov     eax, [esp+44h+arg_4]", "push    dword ptr [eax+0Ch]", "push    ebp", "call    BN_consttime_swap", "push    [esp+4Ch+var_34]", "push    dword ptr [edi+10h]", "mov     eax, [esp+54h+arg_4]", "push    dword ptr [eax+10h]", "push    ebp", "call    BN_consttime_swap", "mov     eax, [esp+5Ch+arg_4]", "mov     edx, [eax+14h]", "mov     eax, [edi+14h]", "xor     eax, edx", "and     ebp, eax", "mov     eax, [esp+5Ch+arg_4]", "add     esp, 20h", "xor     edx, ebp", "mov     [eax+14h], edx", "mov     eax, [esi]", "xor     [edi+14h], ebp", "mov     eax, [eax+0D4h]", "test    eax, eax", "jnz     loc_E13D7"], ["sub     esp, 0Ch", "push    [esp+48h+arg_10]", "push    edi", "push    [esp+50h+arg_4]", "push    edi", "push    esi", "call    EC_POINT_add", "add     esp, 20h", "test    eax, eax", "jz      short loc_E14C4"], ["push    [esp+3Ch+arg_10]", "push    [esp+40h+arg_4]", "push    [esp+44h+arg_4]", "push    esi", "call    EC_POINT_dbl", "add     esp, 10h", "test    eax, eax", "jnz     loc_E13F5"], ["mov     ebp, [esp+3Ch+ptr]", "mov     edi, [esp+3Ch+var_20]", "lea     eax, (aCryptoEcEcMult - 2A0000h)[ebx]; \"crypto/ec/ec_mult.c\"", "sub     esp, 0Ch", "push    15Fh", "push    eax", "push    0A2h", "push    11Ch", "push    10h", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_E15C8"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcMult - 2A0000h)[ebx]; \"crypto/ec/ec_mult.c\"", "push    9Ch", "push    eax", "push    72h ; 'r'"], ["push    11Ch", "xor     edi, edi", "push    10h", "call    ERR_put_error", "add     esp, 20h", "mov     eax, edi", "add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcMult - 2A0000h)[ebx]; \"crypto/ec/ec_mult.c\"", "push    0A0h", "push    eax", "push    0A4h", "jmp     short loc_E1509"], ["sub     esp, 8", "push    dword ptr [esi+4]", "push    ebp", "call    EC_POINT_copy", "add     esp, 10h", "test    eax, eax", "jnz     loc_E1061"], ["sub     esp, 0Ch", "push    0AEh"], ["lea     eax, (aCryptoEcEcMult - 2A0000h)[ebx]; \"crypto/ec/ec_mult.c\"", "push    eax", "push    10h", "push    11Ch", "push    10h", "call    ERR_put_error", "add     esp, 20h", "jmp     short loc_E15C8"], ["sub     esp, 8", "push    [esp+44h+arg_4]", "push    esi", "call    EC_POINT_set_to_infinity", "add     esp, 10h", "add     esp, 2Ch", "mov     edi, eax", "pop     ebx", "mov     eax, edi", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcMult - 2A0000h)[ebx]; \"crypto/ec/ec_mult.c\"", "push    0A8h", "push    eax", "push    41h ; 'A'", "push    11Ch", "push    10h", "call    ERR_put_error", "add     esp, 20h", "mov     [esp+3Ch+var_38], 0"], ["sub     esp, 0Ch", "push    ebp; ptr", "call    EC_POINT_free", "pop     eax", "push    [esp+48h+var_38]; ptr", "call    EC_POINT_clear_free", "pop     edx", "push    [esp+48h+arg_10]", "call    BN_CTX_end", "add     esp, 10h", "mov     eax, edi", "add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    0C5h"], ["lea     eax, (aCryptoEcEcMult - 2A0000h)[ebx]; \"crypto/ec/ec_mult.c\"", "push    eax", "push    3"], ["push    11Ch", "xor     edi, edi", "push    10h", "call    ERR_put_error", "add     esp, 20h", "jmp     short loc_E15C8"], ["sub     esp, 0Ch", "push    [esp+48h+var_30]", "call    BN_is_negative", "add     esp, 10h", "test    eax, eax", "jnz     loc_E11CC"], ["jmp     loc_E11EA"], ["sub     esp, 0Ch", "push    0D3h"], ["lea     eax, (aCryptoEcEcMult - 2A0000h)[ebx]; \"crypto/ec/ec_mult.c\"", "push    eax", "push    3", "push    11Ch", "push    10h", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_E15C8"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcMult - 2A0000h)[ebx]; \"crypto/ec/ec_mult.c\"", "push    0C0h", "push    eax", "push    41h ; 'A'", "push    11Ch", "push    10h", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_E15C8"], ["sub     esp, 0Ch", "push    0B3h", "jmp     loc_E155F"], ["sub     esp, 0Ch", "push    103h", "jmp     short loc_E1648"], ["sub     esp, 0Ch", "push    0EAh", "jmp     loc_E1600"], ["sub     esp, 0Ch", "push    0D8h", "jmp     loc_E1648"], ["sub     esp, 0Ch", "push    0EFh", "jmp     loc_E1600"], ["sub     esp, 0Ch", "push    0E4h", "jmp     loc_E1600"], ["mov     ebp, [esp+3Ch+ptr]"], ["push    [esp+3Ch+var_34]", "mov     edi, [esp+40h+var_38]", "push    dword ptr [edi+8]", "mov     eax, [esp+44h+arg_4]", "push    dword ptr [eax+8]", "push    [esp+48h+var_28]", "call    BN_consttime_swap", "push    [esp+4Ch+var_34]", "push    dword ptr [edi+0Ch]", "mov     eax, [esp+54h+arg_4]", "push    dword ptr [eax+0Ch]", "push    [esp+58h+var_28]", "call    BN_consttime_swap", "add     esp, 20h", "push    [esp+3Ch+var_34]", "push    dword ptr [edi+10h]", "mov     eax, [esp+44h+arg_4]", "push    dword ptr [eax+10h]", "push    [esp+48h+var_28]", "call    BN_consttime_swap", "mov     eax, [esp+4Ch+arg_4]", "mov     ecx, edi", "mov     edx, [eax+14h]", "mov     eax, [edi+14h]", "mov     edi, [esp+4Ch+arg_4]", "xor     eax, edx", "and     eax, [esp+4Ch+var_28]", "add     esp, 10h", "xor     edx, eax", "mov     [edi+14h], edx", "mov     edi, 1", "xor     [ecx+14h], eax", "mov     eax, [esi]", "mov     eax, [eax+0D8h]", "test    eax, eax", "jz      loc_E15C8"], ["sub     esp, 0Ch", "push    [esp+48h+arg_10]", "push    ebp", "push    ecx", "push    [esp+54h+arg_4]", "push    esi", "call    eax", "mov     edi, eax", "add     esp, 20h", "test    eax, eax", "jz      short loc_E17FE"], ["mov     edi, 1", "jmp     loc_E15C8"], ["push    ecx", "push    ecx", "push    ebp", "push    [esp+48h+var_38]", "call    EC_POINT_copy", "add     esp, 10h", "test    eax, eax", "jz      short loc_E17C0"], ["push    [esp+3Ch+arg_10]", "push    [esp+40h+var_38]", "push    [esp+44h+arg_4]", "push    esi", "call    EC_POINT_dbl", "add     esp, 10h", "test    eax, eax", "jnz     loc_E13B0"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcMult - 2A0000h)[ebx]; \"crypto/ec/ec_mult.c\"", "push    10Fh", "push    eax", "push    99h", "push    11Ch", "push    10h", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_E15C8"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcMult - 2A0000h)[ebx]; \"crypto/ec/ec_mult.c\"", "push    109h", "push    eax", "push    10h", "jmp     loc_E1609"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEcEcMult - 2A0000h)[ebx]; \"crypto/ec/ec_mult.c\"", "push    16Eh", "push    eax", "push    88h", "push    11Ch", "push    10h", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_E15C8"]], "chacha20_poly1305_ctrl": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     ebp, [esp+2Ch+arg_0]", "mov     esi, [esp+2Ch+arg_4]", "mov     edi, [ebp+60h]", "cmp     esi, 25h; switch 38 cases", "ja      short _L100_2; jumptable 0010137B default case, cases 1-7,10-15,19-21,24-36"], ["mov     eax, ds:(jpt_10137B - 2A0000h)[ebx+esi*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["mov     eax, 0FFFFFFFFh; jumptable 0010137B default case, cases 1-7,10-15,19-21,24-36"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["test    edi, edi; jumptable 0010137B case 8", "jz      short _L117; jumptable 0010137B case 23"], ["call    Poly1305_ctx_size", "lea     esi, (aCryptoEvpEChac - 2A0000h)[ebx]; \"crypto/evp/e_chacha20_poly1305.c\"", "push    211h; int", "add     eax, 0C4h", "push    esi; int", "push    eax; n", "push    edi; src", "call    CRYPTO_memdup", "mov     ecx, [esp+3Ch+src]", "add     esp, 10h", "mov     [ecx+60h], eax", "test    eax, eax", "jz      loc_101621"], ["add     esp, 1Ch; jumptable 0010137B case 23", "mov     eax, 1", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [edi+0BCh]; jumptable 0010137B case 37", "mov     ecx, [esp+2Ch+src]", "mov     [ecx], eax", "add     esp, 1Ch", "mov     eax, 1", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["test    edi, edi; jumptable 0010137B case 0", "jz      loc_101648"], ["mov     dword ptr [edi+0A0h], 0", "mov     eax, 1", "mov     dword ptr [edi+0A4h], 0", "mov     dword ptr [edi+0A8h], 0", "mov     dword ptr [edi+0ACh], 0", "mov     dword ptr [edi+0B0h], 0", "mov     dword ptr [edi+0B4h], 0", "mov     dword ptr [edi+0B8h], 0", "mov     dword ptr [edi+0BCh], 0Ch", "mov     dword ptr [edi+0C0h], 0FFFFFFFFh", "mov     dword ptr [edi+90h], 0", "mov     dword ptr [edi+94h], 0", "mov     dword ptr [edi+98h], 0", "mov     dword ptr [edi+9Ch], 0", "jmp     loc_101385"], ["mov     eax, [esp+2Ch+n]; jumptable 0010137B case 9", "sub     eax, 1", "cmp     eax, 0Bh", "ja      short loc_1014C7"], ["mov     eax, [esp+2Ch+n]", "mov     [edi+0BCh], eax", "mov     eax, 1", "jmp     loc_101385"], ["mov     eax, [esp+2Ch+n]; jumptable 0010137B case 16", "sub     eax, 1", "cmp     eax, 0Fh", "ja      short loc_1014C7"], ["mov     esi, [ebp+8]", "test    esi, esi", "jnz     loc_101600"], ["add     esp, 1Ch", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     [esp+2Ch+n], 0Ch; jumptable 0010137B case 18", "jnz     short loc_1014C7"], ["mov     eax, [esp+2Ch+src]", "mov     eax, [eax]", "mov     [edi+24h], eax", "mov     [edi+74h], eax", "mov     eax, [esp+2Ch+src]", "mov     eax, [eax+4]", "mov     [edi+28h], eax", "mov     [edi+78h], eax", "mov     eax, [esp+2Ch+src]", "mov     eax, [eax+8]", "mov     [edi+2Ch], eax", "mov     [edi+7Ch], eax", "mov     eax, 1", "jmp     loc_101385"], ["mov     eax, [esp+2Ch+n]; jumptable 0010137B case 17", "sub     eax, 1", "cmp     eax, 0Fh", "ja      short loc_1014C7"], ["mov     ebp, [esp+2Ch+src]", "test    ebp, ebp", "jz      _L117; jumptable 0010137B case 23"], ["sub     esp, 4", "lea     eax, [edi+80h]", "push    [esp+30h+n]; n", "push    [esp+34h+src]; src", "push    eax; dest", "call    _memcpy", "mov     eax, [esp+3Ch+n]", "add     esp, 10h", "mov     [edi+0B8h], eax", "mov     eax, 1", "jmp     loc_101385"], ["cmp     [esp+2Ch+n], 0Dh; jumptable 0010137B case 22", "jnz     loc_1014C7"], ["mov     ecx, [esp+2Ch+src]", "mov     edx, [ecx]", "mov     [edi+90h], edx", "mov     edx, [ecx+4]", "mov     [edi+94h], edx", "mov     edx, [ecx+8]", "mov     [edi+98h], edx", "movzx   edx, byte ptr [ecx+0Ch]", "mov     [edi+9Ch], dl", "movzx   eax, word ptr [ecx+0Bh]", "mov     ecx, [ebp+8]", "rol     ax, 8", "movzx   edx, ax", "test    ecx, ecx", "jnz     short loc_1015BF"], ["cmp     ax, 0Fh", "jbe     loc_1014C7"], ["sub     edx, 10h", "mov     eax, edx", "rol     ax, 8", "mov     [edi+9Bh], ax"], ["mov     eax, [edi+74h]", "mov     [edi+0C0h], edx", "mov     dword ptr [edi+0B4h], 0", "mov     [edi+24h], eax", "mov     eax, [edi+78h]", "xor     eax, [edi+90h]", "mov     [edi+28h], eax", "mov     eax, [edi+7Ch]", "xor     eax, [edi+94h]", "mov     [edi+2Ch], eax", "mov     eax, 10h", "jmp     loc_101385"], ["sub     esp, 4", "sub     edi, 0FFFFFF80h", "push    [esp+30h+n]; n", "push    edi; src", "push    [esp+38h+src]; dest", "call    _memcpy", "add     esp, 10h", "mov     eax, 1", "jmp     loc_101385"], ["sub     esp, 0Ch", "push    213h", "push    esi", "push    0ADh", "push    0B6h", "push    6", "call    ERR_put_error", "add     esp, 20h", "xor     eax, eax", "jmp     loc_101385"], ["call    Poly1305_ctx_size", "sub     esp, 4", "lea     edx, (aCryptoEvpEChac - 2A0000h)[ebx]; \"crypto/evp/e_chacha20_poly1305.c\"", "push    1FDh; int", "add     eax, 0C4h", "push    edx; int", "mov     [esp+38h+var_20], edx", "push    eax; n", "call    CRYPTO_zalloc", "add     esp, 10h", "mov     [ebp+60h], eax", "mov     edi, eax", "test    eax, eax", "jnz     loc_1013F8"], ["sub     esp, 0Ch", "push    1FFh", "mov     edx, [esp+3Ch+var_20]", "push    edx", "push    86h", "push    0B6h", "push    6", "call    ERR_put_error", "add     esp, 20h", "mov     eax, esi", "jmp     loc_101385"]], "evp_EncryptDecryptUpdate": [["push    ebp", "push    edi", "push    esi", "mov     esi, eax", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 34h", "mov     [esp+44h+var_2C], ecx", "mov     edi, [esp+44h+arg_4]", "mov     [esp+44h+var_30], edx", "push    2000h", "push    eax", "call    EVP_CIPHER_CTX_test_flags", "add     esp, 10h", "mov     ecx, edi", "test    eax, eax", "jz      short loc_107202"], ["mov     eax, edi", "lea     ecx, [edi+0Eh]", "add     eax, 7", "cmovns  ecx, eax", "sar     ecx, 3"], ["test    edi, edi", "js      short loc_107272"], ["mov     eax, [esi]", "mov     edx, [eax+4]", "jz      short loc_107250"], ["test    byte ptr [eax+12h], 10h", "jz      short loc_107290"], ["cmp     edx, 1", "jz      loc_107350"], ["push    edi", "push    [esp+40h+src]", "push    [esp+44h+var_30]", "push    esi", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "js      loc_107323"], ["mov     esi, [esp+3Ch+var_2C]", "mov     [esi], eax", "mov     eax, 1"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     [esp+3Ch+n], edx", "sub     esp, 0Ch", "mov     [esp+48h+var_28], ecx", "push    eax", "call    EVP_CIPHER_flags", "add     esp, 10h", "and     eax, 0F0007h", "cmp     eax, 7", "jz      loc_107330"], ["mov     eax, [esp+3Ch+var_2C]", "mov     dword ptr [eax], 0", "xor     eax, eax", "test    edi, edi", "setz    al", "add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     [esp+3Ch+var_28], edx", "sub     esp, 4", "push    ecx", "push    [esp+44h+src]", "mov     eax, [esp+48h+var_30]", "add     eax, [esi+0Ch]", "push    eax", "call    is_partially_overlapping", "add     esp, 10h", "mov     edx, [esp+3Ch+var_28]", "test    eax, eax", "jnz     short loc_107300"], ["mov     ecx, [esi+0Ch]", "mov     [esp+3Ch+var_28], ecx", "test    ecx, ecx", "jnz     loc_107378"], ["mov     eax, edi", "and     eax, [esi+68h]", "jnz     loc_107450"], ["mov     eax, [esi]", "push    edi", "push    [esp+40h+src]", "push    [esp+44h+var_30]", "push    esi", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jz      loc_1074C0"], ["mov     eax, [esp+3Ch+var_2C]", "mov     [eax], edi", "mov     eax, 1", "jmp     loc_10723F"], ["sub     esp, 0Ch", "push    150h"], ["lea     eax, (aCryptoEvpEvpEn - 2A0000h)[ebx]; \"crypto/evp/evp_enc.c\"", "push    eax", "push    0A2h", "push    0DBh", "push    6", "call    ERR_put_error", "add     esp, 20h"], ["add     esp, 2Ch", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esi]", "mov     ecx, [esp+3Ch+var_28]", "mov     edx, [esp+3Ch+n]", "test    byte ptr [eax+12h], 10h", "jnz     loc_107213"], ["jmp     loc_107290"], ["sub     esp, 4", "push    ecx", "push    [esp+44h+src]", "push    [esp+48h+var_30]", "call    is_partially_overlapping", "add     esp, 10h", "test    eax, eax", "jnz     loc_1074D0"], ["mov     eax, [esi]", "jmp     loc_10721C"], ["cmp     edx, 20h ; ' '", "jg      loc_107510"], ["mov     ebp, edx", "sub     ebp, [esp+3Ch+var_28]", "mov     [esp+3Ch+n], ebp", "cmp     ebp, edi", "jg      loc_107468"], ["mov     ebp, edx", "sub     edi, [esp+3Ch+n]", "neg     ebp", "and     ebp, edi", "mov     [esp+3Ch+var_20], ebp", "mov     ebp, 7FFFFFFFh", "sub     ebp, edx", "cmp     [esp+3Ch+var_20], ebp", "jg      loc_1074E0"], ["mov     eax, [esp+3Ch+var_28]", "mov     [esp+3Ch+var_20], edx", "sub     esp, 4", "mov     ebp, [esp+40h+n]", "lea     eax, [esi+eax+30h]", "push    ebp; n", "push    [esp+44h+src]; src", "push    eax; dest", "call    _memcpy", "mov     edx, [esp+4Ch+var_20]", "mov     eax, [esi]", "lea     ecx, [esi+30h]", "push    edx", "mov     [esp+50h+var_28], edx", "push    ecx", "push    [esp+54h+var_30]", "push    esi", "call    dword ptr [eax+18h]", "add     esp, 20h", "test    eax, eax", "jz      loc_107323"], ["mov     edx, [esp+3Ch+var_28]", "mov     eax, [esp+3Ch+var_2C]", "add     [esp+3Ch+src], ebp", "add     [esp+3Ch+var_30], edx", "mov     [eax], edx"], ["sub     edx, 1", "and     edx, edi", "sub     edi, edx", "test    edi, edi", "jle     short loc_107437"], ["mov     [esp+3Ch+var_28], edx", "mov     eax, [esi]", "push    edi", "push    [esp+40h+src]", "push    [esp+44h+var_30]", "push    esi", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jz      loc_107323"], ["mov     eax, [esp+3Ch+var_2C]", "mov     edx, [esp+3Ch+var_28]", "add     [eax], edi"], ["test    edx, edx", "jnz     short loc_107498"], ["mov     [esi+0Ch], edx", "mov     eax, 1", "jmp     loc_10723F"], ["cmp     edx, 20h ; ' '", "jg      loc_107510"], ["mov     eax, [esp+3Ch+var_2C]", "mov     dword ptr [eax], 0", "jmp     short loc_107404"], ["sub     esp, 4", "lea     eax, [esi+ecx+30h]", "push    edi; n", "push    [esp+44h+src]; src", "push    eax; dest", "call    _memcpy", "mov     eax, [esp+4Ch+var_2C]", "add     [esi+0Ch], edi", "add     esp, 10h", "mov     dword ptr [eax], 0", "mov     eax, 1", "jmp     loc_10723F"], ["add     edi, [esp+3Ch+src]", "sub     esp, 4", "lea     eax, [esi+30h]", "push    edx; n", "mov     [esp+44h+var_30], edx", "push    edi; src", "push    eax; dest", "call    _memcpy", "add     esp, 10h", "mov     edx, [esp+3Ch+var_30]", "jmp     short loc_10743B"], ["mov     ebx, [esp+3Ch+var_2C]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2A0000h)[ebx], 0", "jmp     loc_10723F"], ["sub     esp, 0Ch", "push    143h", "jmp     loc_107308"], ["mov     [esp+3Ch+var_30], eax", "lea     edx, (aCryptoEvpEvpEn - 2A0000h)[ebx]; \"crypto/evp/evp_enc.c\"", "sub     esp, 0Ch", "push    170h", "push    edx", "push    0B8h", "push    0DBh", "push    6", "call    ERR_put_error", "add     esp, 20h", "mov     eax, [esp+3Ch+var_30]", "jmp     loc_10723F"], ["push    eax", "lea     eax, (aCryptoEvpEvpEn - 2A0000h)[ebx]; \"crypto/evp/evp_enc.c\"", "push    15Eh", "push    eax", "lea     eax, (aAssertionFaile_8 - 2A0000h)[ebx]; \"assertion failed: bl <= (int)sizeof(ctx\"...", "push    eax", "call    OPENSSL_die"]], "EVP_DecryptUpdate": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, [esp+3Ch+arg_4]", "mov     esi, [esp+3Ch+arg_0]", "mov     ecx, [esp+3Ch+arg_10]", "mov     [esp+3Ch+dest], eax", "mov     eax, [esp+3Ch+arg_8]", "mov     edi, [esi+8]", "mov     [esp+3Ch+var_2C], eax", "mov     eax, [esp+3Ch+arg_C]", "mov     [esp+3Ch+src], eax", "test    edi, edi", "jnz     loc_107AF8"], ["mov     eax, [esi]", "mov     [esp+3Ch+var_24], ecx", "sub     esp, 8", "mov     eax, [eax+4]", "mov     [esp+44h+n], eax", "push    2000h", "push    esi", "call    EVP_CIPHER_CTX_test_flags", "mov     ecx, [esp+4Ch+var_24]", "add     esp, 10h", "mov     ebp, ecx", "test    eax, eax", "jz      short loc_107A83"], ["mov     eax, ecx", "lea     ebp, [ecx+0Eh]", "add     eax, 7", "cmovns  ebp, eax", "sar     ebp, 3"], ["test    ecx, ecx", "js      short loc_107AD8"], ["mov     eax, [esi]", "jz      loc_107C20"], ["test    byte ptr [eax+12h], 10h", "jz      loc_107B30"], ["cmp     [esp+3Ch+n], 1", "jz      loc_107C90"], ["push    ecx", "push    [esp+40h+src]", "push    [esp+44h+dest]", "push    esi", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "js      loc_107C50"], ["mov     edx, [esp+3Ch+var_2C]", "mov     edi, 1", "mov     [edx], eax", "add     esp, 2Ch", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esp+3Ch+var_2C]", "mov     dword ptr [eax], 0", "xor     eax, eax", "test    ecx, ecx", "setz    al", "mov     edi, eax"], ["add     esp, 2Ch", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEvpEvpEn - 2A0000h)[ebx]; \"crypto/evp/evp_enc.c\"", "push    1D8h", "push    eax", "push    94h"], ["push    0A6h", "xor     edi, edi", "push    6", "call    ERR_put_error", "add     esp, 20h", "mov     eax, edi", "add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["test    byte ptr [esi+5Dh], 1", "jnz     loc_107CC0"], ["cmp     [esp+3Ch+n], 20h ; ' '", "ja      loc_107D42"], ["mov     ebp, [esi+64h]", "test    ebp, ebp", "jz      short loc_107BC5"], ["mov     edx, [esp+3Ch+src]", "cmp     [esp+3Ch+dest], edx", "jz      loc_107C60"], ["mov     [esp+3Ch+var_24], ecx", "sub     esp, 4", "mov     ebp, [esp+40h+n]", "push    ebp", "push    [esp+44h+src]", "push    [esp+48h+dest]", "call    is_partially_overlapping", "add     esp, 10h", "test    eax, eax", "jnz     loc_107C60"], ["mov     ecx, [esp+3Ch+var_24]", "mov     edx, ebp", "mov     eax, 7FFFFFFFh", "neg     edx", "sub     eax, ebp", "and     edx, ecx", "cmp     edx, eax", "ja      loc_107CE8"], ["mov     [esp+3Ch+var_24], ecx", "sub     esp, 4", "lea     eax, [esi+6Ch]", "mov     ebp, [esp+40h+n]", "push    ebp; n", "push    eax; src", "mov     edi, [esp+48h+dest]", "push    edi; dest", "call    _memcpy", "mov     eax, edi", "add     eax, ebp", "mov     ebp, 1", "mov     [esp+4Ch+dest], eax", "mov     ecx, [esp+4Ch+var_24]", "add     esp, 10h"], ["sub     esp, 8", "mov     eax, esi", "push    ecx; size_t", "push    [esp+48h+src]; src", "mov     ecx, [esp+4Ch+var_2C]", "mov     edx, [esp+4Ch+dest]", "call    evp_EncryptDecryptUpdate", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jz      loc_107AEB"], ["cmp     [esp+3Ch+n], 1", "jbe     short loc_107BFB"], ["mov     eax, [esi+0Ch]", "test    eax, eax", "jz      loc_107D08"], ["mov     dword ptr [esi+64h], 0"], ["mov     edi, 1", "test    ebp, ebp", "jz      loc_107AEB"], ["mov     eax, [esp+3Ch+var_2C]", "mov     edx, [esp+3Ch+n]", "mov     edi, ebp", "add     [eax], edx", "jmp     loc_107AEB"], ["mov     [esp+3Ch+var_24], ecx", "sub     esp, 0Ch", "push    eax", "call    EVP_CIPHER_flags", "add     esp, 10h", "mov     ecx, [esp+3Ch+var_24]", "and     eax, 0F0007h", "cmp     eax, 7", "jnz     loc_107AD8"], ["mov     eax, [esi]", "jmp     loc_107A8F"], ["mov     eax, [esp+3Ch+var_2C]", "mov     dword ptr [eax], 0", "jmp     loc_107AEB"], ["sub     esp, 0Ch", "push    204h"], ["lea     eax, (aCryptoEvpEvpEn - 2A0000h)[ebx]; \"crypto/evp/evp_enc.c\"", "push    eax", "push    0A2h", "push    0A6h", "push    6", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_107AEB"], ["mov     [esp+3Ch+var_24], ecx", "sub     esp, 4", "push    ebp", "push    [esp+44h+src]", "push    [esp+48h+dest]", "call    is_partially_overlapping", "add     esp, 10h", "test    eax, eax", "jnz     loc_107D35"], ["mov     eax, [esi]", "mov     ecx, [esp+3Ch+var_24]", "jmp     loc_107AA4"], ["mov     eax, [esp+3Ch+src]", "mov     edx, [esp+3Ch+dest]", "mov     [esp+3Ch+arg_4], ecx; size_t", "mov     ecx, [esp+3Ch+var_2C]", "mov     [esp+3Ch+arg_0], eax; src", "add     esp, 2Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "jmp     evp_EncryptDecryptUpdate"], ["sub     esp, 0Ch", "lea     eax, (aCryptoEvpEvpEn - 2A0000h)[ebx]; \"crypto/evp/evp_enc.c\"", "push    211h", "push    eax", "push    0B8h", "jmp     loc_107B0C"], ["mov     edx, [esp+3Ch+var_2C]", "mov     edi, [esp+3Ch+n]", "add     esi, 6Ch ; 'l'", "sub     esp, 4", "mov     eax, [esp+40h+dest]", "sub     [edx], edi", "mov     dword ptr [esi-8], 1", "add     eax, [edx]", "push    edi; n", "push    eax; src", "push    esi; dest", "call    _memcpy", "add     esp, 10h", "jmp     loc_107C02"], ["sub     esp, 0Ch", "push    1EEh", "jmp     loc_107C68"], ["lea     eax, (aCryptoEvpEvpEn - 2A0000h)[ebx]; \"crypto/evp/evp_enc.c\"", "push    edx", "push    1FEh", "push    eax", "lea     eax, (aAssertionFaile_10 - 2A0000h)[ebx]; \"assertion failed: b <= sizeof(ctx->fina\"...", "push    eax", "call    OPENSSL_die"]], "OBJ_obj2txt": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "mov     ebp, [esp+4Ch+arg_0]", "mov     esi, [esp+4Ch+arg_8]", "test    ebp, ebp", "jz      short loc_12888D"], ["mov     edi, [esp+4Ch+arg_4]", "test    edi, edi", "jle     short loc_12888D"], ["mov     eax, [esp+4Ch+arg_0]", "mov     byte ptr [eax], 0"], ["test    esi, esi", "jz      loc_128AA0"], ["mov     eax, [esi+10h]", "test    eax, eax", "jz      loc_128AA0"], ["mov     ecx, [esp+4Ch+arg_C]", "test    ecx, ecx", "jz      loc_128A78"], ["mov     ecx, [esi+0Ch]", "xor     ebp, ebp", "mov     [esp+4Ch+var_4C], ecx", "test    ecx, ecx", "jle     loc_128C92"], ["mov     [esp+4Ch+var_40], 1", "mov     [esp+4Ch+var_44], 0"], ["sub     [esp+4Ch+var_4C], 1", "movzx   edx, byte ptr [eax]", "lea     edi, [eax+1]", "jnz     short loc_1288DC"], ["test    dl, dl", "js      short loc_128941"], ["xor     esi, esi", "xor     ecx, ecx"], ["mov     eax, edx", "and     eax, 7Fh", "test    ecx, ecx", "jnz     short loc_128968"], ["or      esi, eax", "test    dl, dl", "jns     loc_128CAB"], ["cmp     esi, 1FFFFFFh", "jbe     loc_128A58"], ["test    ebp, ebp", "jz      loc_128A60"], ["sub     esp, 8", "push    esi", "push    ebp", "call    BN_set_word", "add     esp, 10h", "test    eax, eax", "jz      short loc_128941"], ["sub     esp, 4", "push    7", "push    ebp", "push    ebp", "call    BN_lshift", "add     esp, 10h", "test    eax, eax", "jz      short loc_128941"], ["mov     ecx, 1"], ["add     edi, 1", "sub     [esp+4Ch+var_4C], 1", "movzx   edx, byte ptr [edi-1]", "jnz     short loc_1288E0"], ["test    dl, dl", "jns     short loc_1288E0"], ["sub     esp, 0Ch", "push    ebp; ptr", "call    BN_free", "add     esp, 10h", "mov     [esp+4Ch+var_44], 0FFFFFFFFh"], ["mov     eax, [esp+4Ch+var_44]", "add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     byte ptr [esp+4Ch+var_48], dl", "sub     esp, 8", "push    eax", "push    ebp", "call    BN_add_word", "add     esp, 10h", "movzx   edx, byte ptr [esp+4Ch+var_48]", "test    eax, eax", "jz      short loc_128941"], ["test    dl, dl", "js      short loc_128918"], ["mov     edx, [esp+4Ch+var_40]", "test    edx, edx", "jz      loc_128AB9"], ["cmp     esi, 4Fh ; 'O'", "ja      loc_128C48"], ["mov     eax, esi", "mov     edx, 0CCCCCCCDh", "mul     edx", "shr     edx, 5", "lea     eax, [edx+edx*4]", "shl     eax, 3", "sub     esi, eax", "mov     eax, [esp+4Ch+arg_0]", "test    eax, eax", "jz      loc_128BCC"], ["cmp     [esp+4Ch+arg_4], 1", "jle     loc_128BCC"], ["mov     eax, [esp+4Ch+arg_0]", "add     edx, 30h ; '0'", "sub     [esp+4Ch+arg_4], 1", "add     [esp+4Ch+var_44], 1", "add     eax, 1", "mov     [esp+4Ch+var_48], eax", "mov     eax, [esp+4Ch+arg_0]", "mov     [eax], dl", "mov     byte ptr [eax+1], 0", "mov     eax, [esp+4Ch+var_40]", "test    eax, eax", "jnz     loc_128CFD"], ["lea     eax, (aLu - 2A0000h)[ebx]; \".%lu\"", "push    esi", "push    eax", "push    1Ah", "lea     esi, [esp+58h+var_36]", "push    esi", "call    BIO_snprintf", "mov     [esp+5Ch+s], esi; s", "call    _strlen", "add     esp, 10h", "mov     edx, eax"], ["mov     [esp+4Ch+var_40], edx", "sub     esp, 4", "push    [esp+50h+arg_4]", "push    esi", "mov     esi, [esp+58h+var_48]", "push    esi", "call    OPENSSL_strlcpy", "add     esp, 10h", "mov     edx, [esp+4Ch+var_40]", "cmp     edx, [esp+4Ch+arg_4]", "jle     loc_128C7F"], ["add     esi, [esp+4Ch+arg_4]", "mov     [esp+4Ch+arg_4], 0", "mov     [esp+4Ch+arg_0], esi"], ["add     [esp+4Ch+var_44], edx", "jmp     loc_128B5E"], ["shl     esi, 7", "jmp     loc_128930"], ["call    BN_new", "mov     ebp, eax", "test    eax, eax", "jnz     loc_128907"], ["jmp     loc_128941"], ["sub     esp, 0Ch", "push    esi", "call    OBJ_obj2nid", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jnz     loc_128B78"], ["mov     eax, [esi+10h]", "jmp     loc_1288AC"], ["mov     [esp+4Ch+var_44], 0", "mov     eax, [esp+4Ch+var_44]", "add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     [esp+4Ch+var_44], 1"], ["sub     esp, 0Ch", "push    ebp", "call    BN_bn2dec", "add     esp, 10h", "mov     esi, eax", "test    eax, eax", "jz      loc_128941"], ["sub     esp, 0Ch", "push    eax; s", "call    _strlen", "add     esp, 10h", "mov     edx, eax", "mov     eax, [esp+4Ch+arg_0]", "test    eax, eax", "jz      short loc_128B3A"], ["cmp     [esp+4Ch+arg_4], 1", "jle     short loc_128B04"], ["mov     eax, [esp+4Ch+arg_0]", "mov     ecx, 2Eh ; '.'", "sub     [esp+4Ch+arg_4], 1", "mov     [eax], cx", "add     eax, 1", "mov     [esp+4Ch+arg_0], eax"], ["mov     [esp+4Ch+var_48], edx", "sub     esp, 4", "push    [esp+50h+arg_4]", "push    esi", "push    [esp+58h+arg_0]", "call    OPENSSL_strlcpy", "add     esp, 10h", "mov     edx, [esp+4Ch+var_48]", "cmp     [esp+4Ch+arg_4], edx", "jge     loc_128BBF"], ["mov     eax, [esp+4Ch+arg_4]", "add     [esp+4Ch+arg_0], eax", "mov     [esp+4Ch+arg_4], 0"], ["mov     eax, [esp+4Ch+var_44]", "sub     esp, 4", "lea     eax, [edx+eax+1]", "mov     [esp+50h+var_44], eax", "lea     eax, (aCryptoObjectsO_0 - 2A0000h)[ebx]; \"crypto/objects/obj_dat.c\"", "push    1F8h", "push    eax", "push    esi; ptr", "call    CRYPTO_free", "add     esp, 10h"], ["mov     ecx, [esp+4Ch+var_4C]", "mov     [esp+4Ch+var_40], 0", "test    ecx, ecx", "jle     loc_128C9A"], ["mov     eax, edi", "jmp     loc_1288CC"], ["sub     esp, 0Ch", "push    eax", "call    OBJ_nid2ln", "add     esp, 10h", "mov     ebp, eax", "test    eax, eax", "jz      loc_128C28"], ["mov     edx, [esp+4Ch+arg_0]", "test    edx, edx", "jz      short loc_128BAA"], ["sub     esp, 4", "push    [esp+50h+arg_4]", "push    ebp", "push    [esp+58h+arg_0]", "call    OPENSSL_strlcpy", "add     esp, 10h"], ["sub     esp, 0Ch", "push    ebp; s", "call    _strlen", "add     esp, 10h", "mov     [esp+4Ch+var_44], eax", "jmp     loc_128955"], ["add     [esp+4Ch+arg_0], edx", "sub     [esp+4Ch+arg_4], edx", "jmp     loc_128B3A"], ["mov     eax, [esp+4Ch+var_40]", "add     [esp+4Ch+var_44], 1", "test    eax, eax", "jnz     loc_128AB9"], ["lea     eax, (aLu - 2A0000h)[ebx]; \".%lu\"", "push    esi", "push    eax", "push    1Ah", "lea     esi, [esp+58h+var_36]", "push    esi", "call    BIO_snprintf", "mov     [esp+5Ch+s], esi; s", "call    _strlen", "add     esp, 10h", "mov     edx, eax", "mov     eax, [esp+4Ch+arg_0]", "test    eax, eax", "jz      loc_128A4C"], ["mov     eax, [esp+4Ch+arg_4]", "test    eax, eax", "jle     loc_128A4C"], ["mov     eax, [esp+4Ch+arg_0]", "mov     [esp+4Ch+var_48], eax", "jmp     loc_128A15"], ["sub     esp, 0Ch", "push    edi", "call    OBJ_nid2sn", "add     esp, 10h", "mov     ebp, eax", "test    eax, eax", "jz      loc_128A8E"], ["jmp     loc_128B8E"], ["sub     esp, 8", "push    50h ; 'P'", "push    ebp", "call    BN_sub_word", "add     esp, 10h", "test    eax, eax", "jz      loc_128941"], ["cmp     [esp+4Ch+arg_4], 1", "jle     loc_128AB4"], ["mov     eax, [esp+4Ch+arg_0]", "test    eax, eax", "jz      loc_128AB4"], ["mov     edx, 2", "jmp     loc_1289C6"], ["mov     eax, [esp+4Ch+var_48]", "sub     [esp+4Ch+arg_4], edx", "add     eax, edx", "mov     [esp+4Ch+arg_0], eax", "jmp     loc_128A4C"], ["mov     [esp+4Ch+var_44], 0"], ["sub     esp, 0Ch", "push    ebp; ptr", "call    BN_free", "add     esp, 10h", "jmp     loc_128955"], ["cmp     [esp+4Ch+var_40], 0", "jz      loc_128BDD"], ["cmp     esi, 4Fh ; 'O'", "ja      short loc_128CD0"], ["mov     [esp+4Ch+var_40], 0", "jmp     loc_12899B"], ["mov     eax, [esp+4Ch+arg_0]", "sub     esi, 50h ; 'P'", "test    eax, eax", "jz      short loc_128CF3"], ["cmp     [esp+4Ch+arg_4], 1", "mov     [esp+4Ch+var_40], 0", "mov     edx, 2", "jg      loc_1289C6"], ["add     [esp+4Ch+var_44], 1", "jmp     loc_128BDD"], ["sub     esp, 0Ch", "push    ebp", "call    BN_bn2dec", "add     esp, 10h", "mov     esi, eax", "test    eax, eax", "jz      loc_128941"], ["sub     esp, 0Ch", "push    esi; s", "call    _strlen", "add     esp, 10h", "mov     edx, eax", "mov     eax, [esp+4Ch+var_48]", "mov     [esp+4Ch+arg_0], eax", "jmp     loc_128AE5"]], "PEM_read_bio_ex": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 5Ch", "mov     eax, [esp+6Ch+arg_10]", "mov     dword ptr [eax], 0", "mov     eax, [esp+6Ch+arg_8]", "mov     dword ptr [eax], 0", "mov     eax, [esp+6Ch+arg_4]", "mov     dword ptr [eax], 0", "mov     eax, [esp+6Ch+arg_C]", "mov     dword ptr [eax], 0", "mov     eax, [esp+6Ch+arg_14]", "and     eax, 1", "mov     [esp+6Ch+var_54], eax", "mov     eax, [esp+6Ch+arg_14]", "and     eax, 6", "cmp     eax, 6", "jz      loc_131D70"], ["mov     edx, [esp+6Ch+var_54]", "test    edx, edx", "jnz     loc_131B50"], ["call    BIO_s_mem", "sub     esp, 0Ch", "push    eax", "mov     esi, eax", "call    BIO_new", "mov     [esp+7Ch+var_7C], esi", "mov     [esp+7Ch+ptr], eax", "mov     edi, eax", "call    BIO_new", "mov     [esp+7Ch+var_4C], eax", "add     esp, 10h", "test    edi, edi", "jz      loc_131CA0"], ["test    eax, eax", "jz      loc_131CA0"], ["sub     esp, 4", "lea     eax, (aCryptoPemPemLi - 2A0000h)[ebx]; \"crypto/pem/pem_lib.c\"", "push    0E5h", "mov     [esp+74h+var_58], eax", "push    eax", "push    100h; size", "call    CRYPTO_malloc", "add     esp, 10h", "mov     esi, eax"], ["lea     eax, (beginstr - 2A0000h)[ebx]; \"-----BEGIN \"", "mov     [esp+6Ch+s2], eax", "lea     eax, (tailstr - 2A0000h)[ebx]; \"-----\\n\"", "mov     [esp+6Ch+var_44], eax", "test    esi, esi", "jz      loc_131DE7"], ["lea     esi, [esi+0]"], ["sub     esp, 4", "push    0FFh", "push    esi", "push    [esp+78h+arg_0]", "call    BIO_gets", "add     esp, 10h", "mov     edx, eax", "test    eax, eax", "jle     loc_131BB0"], ["mov     ebp, [esp+6Ch+arg_14]", "mov     eax, esi", "and     ebp, 0FFFFFFFBh", "mov     ecx, ebp", "call    sanitize_line", "sub     esp, 4", "push    0Bh; n", "mov     edi, eax", "push    [esp+74h+s2]; s2", "push    esi; s1", "call    _strncmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1318F0"], ["cmp     edi, 5", "jle     short loc_1318F0"], ["sub     esp, 4", "lea     edx, [esi+edi-6]", "push    6; n", "push    [esp+74h+var_44]; s2", "push    edx; s1", "mov     [esp+7Ch+var_5C], edx", "call    _strncmp", "add     esp, 10h", "mov     edx, [esp+6Ch+var_5C]", "test    eax, eax", "jnz     short loc_1318F0"], ["mov     [esp+6Ch+var_30], eax", "mov     eax, [esp+6Ch+var_54]", "sub     edi, 10h", "mov     byte ptr [edx], 0", "test    eax, eax", "jz      loc_131E19"], ["sub     esp, 4", "push    0E4h; int", "push    [esp+74h+var_58]; int", "push    edi; size", "call    CRYPTO_secure_malloc", "mov     [esp+7Ch+dest], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_131EAB"], ["sub     esp, 4", "lea     eax, [esi+0Bh]", "push    edi; n", "push    eax; src", "push    [esp+78h+dest]; dest", "call    _memcpy", "push    0DDh; int", "mov     edi, [esp+80h+var_58]", "push    edi; int", "push    100h; int", "push    esi; ptr", "call    CRYPTO_secure_clear_free", "add     esp, 1Ch", "push    0E4h; int", "push    edi; int", "push    100h; size", "call    CRYPTO_secure_malloc", "add     esp, 10h", "mov     esi, eax"], ["test    esi, esi", "jz      loc_132151"], ["mov     eax, [esp+6Ch+ptr]", "xor     ecx, ecx", "mov     [esp+6Ch+var_48], ebp", "mov     [esp+6Ch+var_50], 0", "mov     ebp, ecx", "mov     [esp+6Ch+var_34], eax", "lea     eax, (endstr - 2A0000h)[ebx]; \"-----END \"", "mov     [esp+6Ch+var_3C], 0", "mov     [esp+6Ch+var_5C], eax", "jmp     loc_131A93"], ["sub     esp, 4", "push    edi; n", "push    3Ah ; ':'; c", "push    esi; s", "call    _memchr", "add     esp, 10h", "test    eax, eax", "jz      loc_131CF8"], ["mov     ecx, [esp+6Ch+var_48]", "mov     ebp, 1"], ["mov     edx, edi", "mov     eax, esi", "call    sanitize_line", "cmp     byte ptr [esi], 0Ah", "mov     edi, eax", "jz      loc_131B20"], ["sub     esp, 4", "push    9; n", "push    [esp+74h+var_5C]; s2", "push    esi; s1", "call    _strncmp", "add     esp, 10h", "test    eax, eax", "jz      loc_131EDA"], ["mov     eax, [esp+6Ch+var_3C]", "test    eax, eax", "jnz     loc_132144"], ["sub     esp, 8", "push    esi", "push    [esp+78h+var_34]", "call    BIO_puts", "add     esp, 10h", "test    eax, eax", "js      loc_131D3D"], ["cmp     ebp, 2", "jz      loc_131CE0"], ["mov     eax, [esp+6Ch+s2]", "mov     [esp+6Ch+var_50], eax"], ["sub     esp, 4", "push    0FFh", "push    esi", "push    [esp+78h+arg_0]", "call    BIO_gets", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jle     loc_131ECD"], ["mov     [esp+6Ch+s2], 0", "cmp     eax, 0FEh", "jnz     short loc_131AD1"], ["xor     eax, eax", "cmp     byte ptr [esi+0FDh], 0Ah", "setnz   al", "mov     [esp+6Ch+s2], eax"], ["test    ebp, ebp", "jz      loc_131A10"], ["sub     esp, 4", "push    9; n", "push    [esp+74h+var_5C]; s2", "push    esi; s1", "call    _strncmp", "add     esp, 10h", "mov     ecx, [esp+6Ch+var_48]", "test    eax, eax", "jz      loc_131A30"], ["cmp     ebp, 1", "jz      loc_131A30"], ["mov     ecx, [esp+6Ch+arg_14]", "mov     edx, edi", "mov     eax, esi", "mov     ebp, 2", "call    sanitize_line", "cmp     byte ptr [esi], 0Ah", "mov     edi, eax", "jnz     loc_131A44"], ["mov     eax, [esp+6Ch+var_50]", "test    eax, eax", "jnz     loc_131A8B"], ["cmp     ebp, 2", "jz      loc_131D20"], ["mov     eax, [esp+6Ch+var_4C]", "mov     ebp, 2", "mov     [esp+6Ch+var_34], eax", "jmp     loc_131A8B"], ["call    BIO_s_secmem", "sub     esp, 0Ch", "push    eax", "mov     esi, eax", "call    BIO_new", "mov     [esp+7Ch+var_7C], esi", "mov     [esp+7Ch+ptr], eax", "mov     edi, eax", "call    BIO_new", "mov     [esp+7Ch+var_4C], eax", "add     esp, 10h", "test    edi, edi", "jz      loc_131CA0"], ["test    eax, eax", "jz      loc_131CA0"], ["sub     esp, 4", "lea     eax, (aCryptoPemPemLi - 2A0000h)[ebx]; \"crypto/pem/pem_lib.c\"", "push    0E4h; int", "mov     [esp+74h+var_58], eax", "push    eax; int", "push    100h; size", "call    CRYPTO_secure_malloc", "add     esp, 10h", "mov     esi, eax", "jmp     loc_1318D1"], ["sub     esp, 0Ch", "push    2E9h", "mov     edi, [esp+7Ch+var_58]", "push    edi", "push    6Ch ; 'l'", "push    90h", "push    9", "call    ERR_put_error", "mov     eax, [esp+8Ch+var_54]", "add     esp, 20h", "test    eax, eax", "jz      short loc_131C50"], ["push    0DDh; int", "push    [esp+70h+var_58]; int", "push    100h; int", "push    esi; ptr", "xor     esi, esi", "call    CRYPTO_secure_clear_free", "add     esp, 10h", "mov     [esp+6Ch+dest], 0", "mov     [esp+6Ch+var_30], 0", "nop"], ["sub     esp, 0Ch", "push    esi; ptr", "call    EVP_ENCODE_CTX_free", "mov     ecx, [esp+7Ch+var_54]", "add     esp, 10h", "test    ecx, ecx", "jz      short loc_131C80"], ["push    0DDh; int", "push    [esp+70h+var_58]; int", "push    0; int", "push    [esp+78h+dest]; ptr", "call    CRYPTO_secure_clear_free", "add     esp, 10h"], ["sub     esp, 0Ch", "push    [esp+78h+ptr]; ptr", "call    BIO_free", "pop     eax", "push    [esp+78h+var_4C]; ptr", "call    BIO_free", "mov     eax, [esp+7Ch+var_30]", "add     esp, 6Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 4", "push    0DFh", "push    edi", "push    esi; ptr", "xor     esi, esi", "call    CRYPTO_free", "add     esp, 10h", "mov     [esp+6Ch+dest], 0"], ["sub     esp, 0Ch", "push    esi; ptr", "call    EVP_ENCODE_CTX_free", "add     esp, 10h", "mov     [esp+6Ch+var_30], 0"], ["sub     esp, 4", "push    0DFh", "push    [esp+74h+var_58]", "push    [esp+78h+dest]; ptr", "call    CRYPTO_free", "add     esp, 10h", "jmp     short loc_131C2B"], ["sub     esp, 0Ch", "lea     eax, (aCryptoPemPemLi - 2A0000h)[ebx]; \"crypto/pem/pem_lib.c\"", "xor     esi, esi", "push    39Ah", "mov     [esp+7Ch+var_58], eax", "push    eax", "push    41h ; 'A'", "push    91h", "push    9", "call    ERR_put_error", "add     esp, 20h", "mov     [esp+6Ch+dest], 0", "mov     [esp+6Ch+var_30], 0", "jmp     loc_131C00"], ["cmp     edi, 41h ; 'A'", "jg      short loc_131D3D"], ["setnz   al", "movzx   eax, al", "mov     [esp+6Ch+var_3C], eax", "jmp     loc_131A8B"], ["sub     esp, 4", "push    9; n", "push    [esp+74h+var_5C]; s2", "push    esi; s1", "call    _strncmp", "add     esp, 10h", "mov     ecx, [esp+6Ch+var_48]", "test    eax, eax", "cmovnz  ecx, [esp+6Ch+arg_14]", "jmp     loc_131A30"], ["sub     esp, 0Ch", "push    349h"], ["push    [esp+7Ch+var_58]", "push    66h ; 'f'", "push    8Fh", "push    9", "call    ERR_put_error", "add     esp, 20h"], ["mov     edx, [esp+6Ch+var_54]", "test    edx, edx", "jz      short loc_131DC0"], ["push    0DDh; int", "push    [esp+70h+var_58]; int", "push    100h; int", "push    esi; ptr", "call    CRYPTO_secure_clear_free", "add     esp, 10h"], ["sub     esp, 0Ch", "push    0; ptr", "call    EVP_ENCODE_CTX_free", "add     esp, 10h", "jmp     loc_131C14"], ["sub     esp, 0Ch", "lea     eax, (aCryptoPemPemLi - 2A0000h)[ebx]; \"crypto/pem/pem_lib.c\"", "xor     esi, esi", "push    392h", "mov     [esp+7Ch+var_58], eax", "push    eax", "push    7", "push    91h", "push    9", "call    ERR_put_error", "add     esp, 20h", "mov     [esp+6Ch+dest], 0", "mov     [esp+6Ch+var_4C], 0", "mov     [esp+6Ch+ptr], 0", "mov     [esp+6Ch+var_30], 0", "jmp     loc_131C00"], ["sub     esp, 4", "push    0DFh", "push    [esp+74h+var_58]", "push    esi; ptr", "call    CRYPTO_free", "add     esp, 10h"], ["sub     esp, 0Ch", "push    0; ptr", "call    EVP_ENCODE_CTX_free", "add     esp, 10h", "jmp     loc_131C80"], ["sub     esp, 0Ch", "push    2E1h", "push    [esp+7Ch+var_58]", "push    41h ; 'A'", "push    90h", "push    9", "call    ERR_put_error", "add     esp, 20h", "mov     [esp+6Ch+dest], 0", "mov     [esp+6Ch+var_30], 0", "jmp     loc_131C00"], ["sub     esp, 4", "push    0E5h", "push    [esp+74h+var_58]", "push    edi; size", "call    CRYPTO_malloc", "mov     [esp+7Ch+dest], eax", "add     esp, 10h", "test    eax, eax", "jz      short loc_131E77"], ["sub     esp, 4", "lea     eax, [esi+0Bh]", "push    edi; n", "push    eax; src", "push    [esp+78h+dest]; dest", "call    _memcpy", "add     esp, 0Ch", "push    0DFh", "mov     edi, [esp+74h+var_58]", "push    edi", "push    esi; ptr", "call    CRYPTO_free", "add     esp, 0Ch", "push    0E5h", "push    edi", "push    100h; size", "call    CRYPTO_malloc", "add     esp, 10h", "mov     esi, eax", "jmp     loc_1319D6"], ["sub     esp, 0Ch", "push    2F8h", "mov     edi, [esp+7Ch+var_58]", "push    edi", "push    41h ; 'A'", "push    90h", "push    9", "call    ERR_put_error", "add     esp, 1Ch", "push    0DFh", "push    edi", "push    esi; ptr", "xor     esi, esi", "call    CRYPTO_free", "add     esp, 10h", "jmp     loc_131C6C"], ["sub     esp, 0Ch", "push    2F8h", "push    [esp+7Ch+var_58]", "push    41h ; 'A'", "push    90h", "push    9", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_131BD6"], ["sub     esp, 0Ch", "push    32Ch", "jmp     loc_131D28"], ["mov     [esp+6Ch+s2], ebp", "sub     esp, 0Ch", "lea     edi, [esi+9]", "push    [esp+78h+dest]; s", "call    _strlen", "add     esp, 0Ch", "push    eax; n", "mov     ebp, eax", "push    [esp+74h+dest]; s2", "push    edi; s1", "call    _strncmp", "add     esp, 10h", "test    eax, eax", "jnz     loc_132173"], ["sub     esp, 4", "add     edi, ebp", "push    6; n", "push    [esp+74h+var_44]; s2", "push    edi; s1", "call    _strncmp", "add     esp, 10h", "test    eax, eax", "jnz     loc_132173"], ["mov     eax, [esp+6Ch+s2]", "test    eax, eax", "jnz     short loc_131F3C"], ["mov     eax, [esp+6Ch+var_4C]", "mov     [esp+6Ch+ptr], eax", "mov     eax, [esp+6Ch+var_34]", "mov     [esp+6Ch+var_4C], eax"], ["mov     ecx, [esp+6Ch+var_54]", "test    ecx, ecx", "jnz     loc_1320D6"], ["sub     esp, 4", "push    0DFh", "push    [esp+74h+var_58]", "push    esi; ptr", "call    CRYPTO_free", "lea     eax, [esp+7Ch+var_20]", "push    eax", "push    0", "push    73h ; 's'", "push    [esp+88h+var_4C]", "call    BIO_ctrl", "mov     eax, [esp+8Ch+var_20]", "mov     eax, [eax]", "mov     [esp+8Ch+var_30], eax", "mov     [esp+8Ch+size], eax", "add     esp, 20h", "test    eax, eax", "jz      loc_131DD5"], ["call    EVP_ENCODE_CTX_new", "mov     esi, eax", "test    eax, eax", "jz      loc_132180"], ["sub     esp, 0Ch", "push    eax", "call    EVP_DecodeInit", "mov     eax, [esp+7Ch+var_20]", "pop     edx", "mov     eax, [eax+4]", "push    [esp+78h+size]", "push    eax", "lea     edx, [esp+80h+size]", "push    edx", "push    eax", "push    esi", "call    EVP_DecodeUpdate", "add     esp, 20h", "test    eax, eax", "js      loc_13211A"], ["sub     esp, 4", "lea     eax, [esp+70h+var_24]", "push    eax", "mov     edx, [esp+74h+var_20]", "mov     eax, [esp+74h+size]", "add     eax, [edx+4]", "push    eax", "push    esi", "call    EVP_DecodeFinal", "add     esp, 10h", "test    eax, eax", "js      loc_13211A"], ["mov     edx, [esp+6Ch+var_20]", "mov     eax, [esp+6Ch+var_24]", "add     eax, [esp+6Ch+size]", "mov     [esp+6Ch+size], eax", "mov     [edx], eax", "push    0", "push    0", "push    3", "push    [esp+78h+ptr]", "call    BIO_ctrl", "mov     ebp, [esp+7Ch+var_54]", "add     esp, 10h", "mov     edi, eax", "lea     eax, [eax+1]", "test    ebp, ebp", "jz      loc_132190"], ["sub     esp, 4", "push    0E4h; int", "mov     ebp, [esp+74h+var_58]", "push    ebp; int", "push    eax; size", "call    CRYPTO_secure_malloc", "mov     ecx, [esp+7Ch+arg_8]", "add     esp, 0Ch", "mov     [ecx], eax", "push    0E4h; int", "push    ebp; int", "push    [esp+78h+size]; size", "call    CRYPTO_secure_malloc", "mov     edx, eax", "mov     eax, [esp+7Ch+arg_C]", "mov     [eax], edx", "mov     eax, [esp+7Ch+arg_8]", "add     esp, 10h", "mov     eax, [eax]", "test    eax, eax", "jz      loc_132213"], ["test    edx, edx", "jz      loc_132213"], ["sub     esp, 4", "push    edi", "push    eax", "push    [esp+78h+ptr]", "call    BIO_read", "mov     eax, [esp+7Ch+arg_8]", "add     esp, 0Ch", "mov     eax, [eax]", "mov     byte ptr [eax+edi], 0", "push    [esp+70h+size]", "mov     eax, [esp+74h+arg_C]", "push    dword ptr [eax]", "push    [esp+78h+var_4C]", "call    BIO_read", "mov     eax, [esp+7Ch+size]", "mov     ecx, [esp+7Ch+arg_10]", "mov     [ecx], eax", "mov     eax, [esp+7Ch+arg_4]", "mov     ecx, [esp+7Ch+dest]", "add     esp, 10h", "mov     [eax], ecx", "mov     [esp+6Ch+dest], 0", "mov     [esp+6Ch+var_30], 1", "jmp     loc_131C00"], ["push    0DDh; int", "push    [esp+70h+var_58]; int", "push    100h; int", "push    esi; ptr", "call    CRYPTO_secure_clear_free", "lea     eax, [esp+7Ch+var_20]", "push    eax", "push    0", "push    73h ; 's'", "push    [esp+88h+var_4C]", "call    BIO_ctrl", "mov     eax, [esp+8Ch+var_20]", "mov     eax, [eax]", "mov     [esp+8Ch+var_30], eax", "mov     [esp+8Ch+size], eax", "add     esp, 20h", "test    eax, eax", "jz      loc_131D5C"], ["jmp     loc_131F85"], ["sub     esp, 0Ch", "push    3B5h", "push    [esp+7Ch+var_58]", "push    64h ; 'd'"], ["push    91h", "push    9", "call    ERR_put_error", "add     esp, 20h", "mov     [esp+6Ch+var_30], 0", "jmp     loc_131C00"], ["sub     esp, 0Ch", "push    362h", "jmp     loc_131D28"], ["sub     esp, 0Ch", "push    324h", "push    [esp+7Ch+var_58]", "push    41h ; 'A'", "push    8Fh", "push    9", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_131C00"], ["sub     esp, 0Ch", "push    358h", "jmp     loc_131D28"], ["sub     esp, 0Ch", "push    3ACh", "push    [esp+7Ch+var_58]", "push    41h ; 'A'", "jmp     short loc_132128"], ["sub     esp, 4", "push    0E5h", "mov     ebp, [esp+74h+var_58]", "push    ebp", "push    eax; size", "call    CRYPTO_malloc", "mov     ecx, [esp+7Ch+arg_8]", "add     esp, 0Ch", "mov     [ecx], eax", "push    0E5h", "push    ebp", "push    [esp+78h+size]; size", "call    CRYPTO_malloc", "mov     edx, eax", "mov     eax, [esp+7Ch+arg_C]", "mov     [eax], edx", "mov     eax, [esp+7Ch+arg_8]", "add     esp, 10h", "mov     eax, [eax]", "test    eax, eax", "jz      short loc_1321E1"], ["test    edx, edx", "jnz     loc_132070"], ["sub     esp, 4", "push    0DFh", "mov     edi, [esp+74h+var_58]", "push    edi", "push    eax; ptr", "call    CRYPTO_free", "add     esp, 0Ch", "push    0DFh", "push    edi", "mov     eax, [esp+78h+arg_C]", "push    dword ptr [eax]; ptr", "call    CRYPTO_free", "add     esp, 10h", "jmp     loc_131C6C"], ["push    0DDh; int", "mov     edi, [esp+70h+var_58]", "push    edi; int", "push    0; int", "push    eax; ptr", "call    CRYPTO_secure_clear_free", "push    0DDh; int", "push    edi; int", "push    0; int", "mov     eax, [esp+88h+arg_C]", "push    dword ptr [eax]; ptr", "call    CRYPTO_secure_clear_free", "add     esp, 14h", "push    esi; ptr", "call    EVP_ENCODE_CTX_free", "add     esp, 10h", "mov     [esp+6Ch+var_30], 0", "jmp     loc_131C14"]], "pkcs7_decrypt_rinfo": [["push    ebp", "mov     ebp, eax", "push    edi", "push    esi", "mov     esi, ecx", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 34h", "mov     [esp+44h+var_3C], edx", "push    0", "push    [esp+48h+arg_0]", "call    EVP_PKEY_CTX_new", "add     esp, 10h", "test    eax, eax", "jz      loc_13B338"], ["sub     esp, 0Ch", "mov     edi, eax", "push    eax", "call    EVP_PKEY_decrypt_init", "add     esp, 10h", "test    eax, eax", "jle     loc_13B318"], ["sub     esp, 8", "push    esi", "push    0", "push    4", "push    200h", "push    0FFFFFFFFh", "push    edi", "call    EVP_PKEY_CTX_ctrl", "add     esp, 20h", "test    eax, eax", "jle     loc_13B380"], ["mov     eax, [esi+0Ch]", "sub     esp, 0Ch", "push    dword ptr [eax]", "push    dword ptr [eax+8]", "lea     eax, [esp+50h+size]", "mov     [esp+50h+var_30], eax", "push    eax", "push    0", "push    edi", "call    EVP_PKEY_decrypt", "add     esp, 20h", "test    eax, eax", "jle     loc_13B318"], ["sub     esp, 4", "lea     eax, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "push    0A6h", "mov     [esp+44h+var_34], eax", "push    eax", "push    [esp+48h+size]; size", "call    CRYPTO_malloc", "mov     [esp+4Ch+ptr], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_13B3C0"], ["mov     eax, [esi+0Ch]", "sub     esp, 0Ch", "push    dword ptr [eax]", "push    dword ptr [eax+8]", "push    [esp+50h+var_30]", "push    [esp+54h+ptr]", "push    edi", "call    EVP_PKEY_decrypt", "add     esp, 20h", "test    eax, eax", "jle     short loc_13B2D2"], ["mov     eax, [esp+3Ch+size]", "test    eax, eax", "jz      short loc_13B2D2"], ["cmp     eax, [esp+3Ch+arg_4]", "jz      loc_13B348"], ["mov     eax, [esp+3Ch+arg_4]", "test    eax, eax", "jz      short loc_13B348"], ["sub     esp, 0Ch", "push    0B2h", "mov     esi, [esp+4Ch+var_34]", "push    esi", "push    6", "push    85h", "push    21h ; '!'", "call    ERR_put_error", "add     esp, 14h", "push    edi; ptr", "call    EVP_PKEY_CTX_free", "add     esp, 0Ch", "push    0BFh", "push    esi", "push    [esp+48h+ptr]; ptr", "call    CRYPTO_free", "add     esp, 10h", "xor     eax, eax", "add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    edi; ptr", "call    EVP_PKEY_CTX_free", "add     esp, 10h", "mov     eax, 0FFFFFFFFh"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     esp, 2Ch", "mov     eax, 0FFFFFFFFh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    0B8h; int", "push    [esp+40h+var_34]; int", "mov     esi, [esp+44h+var_3C]", "push    dword ptr [esi]; int", "push    dword ptr [ebp+0]; ptr", "call    CRYPTO_clear_free", "mov     eax, [esp+4Ch+ptr]", "mov     [ebp+0], eax", "mov     eax, [esp+4Ch+size]", "mov     [esi], eax", "mov     [esp+4Ch+var_4C], edi; ptr", "call    EVP_PKEY_CTX_free", "add     esp, 10h", "mov     eax, 1", "jmp     short loc_13B329"], ["sub     esp, 0Ch", "lea     eax, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "push    9Eh", "push    eax", "push    98h"], ["push    85h", "push    21h ; '!'", "call    ERR_put_error", "add     esp, 14h", "push    edi; ptr", "call    EVP_PKEY_CTX_free", "add     esp, 10h", "mov     eax, 0FFFFFFFFh", "add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    0A9h", "push    [esp+4Ch+var_34]", "push    41h ; 'A'", "jmp     short loc_13B394"]], "PKCS7_dataDecode": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "mov     esi, [esp+4Ch+arg_0]", "mov     [esp+4Ch+var_28], 0", "mov     [esp+4Ch+ptr], 0", "mov     [esp+4Ch+var_20], 0", "test    esi, esi", "jz      loc_13C660"], ["mov     eax, [esi+14h]", "mov     [esp+4Ch+var_4C], eax", "test    eax, eax", "jz      loc_13C3C0"], ["sub     esp, 0Ch", "push    dword ptr [esi+10h]", "call    OBJ_obj2nid", "mov     dword ptr [esi+8], 0", "add     esp, 10h", "cmp     eax, 17h", "jz      loc_13C120"], ["cmp     eax, 18h", "jz      loc_13C008"], ["cmp     eax, 16h", "jz      loc_13BF80"], ["sub     esp, 0Ch", "lea     esi, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "push    1AEh", "push    esi", "push    70h ; 'p'"], ["push    70h ; 'p'", "xor     edi, edi", "xor     ebp, ebp", "push    21h ; '!'", "call    ERR_put_error", "add     esp, 20h", "mov     [esp+4Ch+var_48], 0", "mov     [esp+4Ch+arg_C], 0", "mov     [esp+4Ch+var_4C], 0"], ["push    249h; int", "push    esi; int", "push    [esp+54h+var_20]; int", "push    [esp+58h+ptr]; ptr", "call    CRYPTO_clear_free", "push    24Ah; int", "push    esi; int", "push    [esp+64h+var_48]; int", "push    [esp+68h+arg_C]; ptr", "call    CRYPTO_clear_free", "add     esp, 14h", "push    [esp+58h+var_4C]", "call    BIO_free_all", "mov     [esp+5Ch+var_5C], ebp", "call    BIO_free_all", "mov     [esp+5Ch+var_5C], edi", "call    BIO_free_all", "mov     [esp+5Ch+var_5C], 0", "call    BIO_free_all", "add     esp, 10h", "mov     [esp+4Ch+var_4C], 0"], ["mov     eax, [esp+4Ch+var_4C]", "add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esi+14h]", "sub     esp, 0Ch", "mov     edi, [eax+14h]", "push    dword ptr [edi+10h]", "call    OBJ_obj2nid", "add     esp, 10h", "cmp     eax, 15h", "jz      loc_13C258"], ["sub     esp, 0Ch", "push    dword ptr [edi+10h]", "call    OBJ_obj2nid", "add     esp, 10h", "sub     eax, 15h", "cmp     eax, 5", "jbe     short loc_13BFC3"], ["mov     eax, [edi+14h]", "test    eax, eax", "jz      short loc_13BFC3"], ["cmp     dword ptr [eax], 4", "jz      loc_13C5C4"], ["sub     esp, 0Ch", "push    dword ptr [esi+10h]", "call    OBJ_obj2nid", "add     esp, 10h", "cmp     eax, 16h", "jnz     loc_13C742"], ["push    0", "push    0", "push    2", "push    esi", "call    PKCS7_ctrl", "add     esp, 10h", "test    eax, eax", "jz      loc_13C742"], ["mov     [esp+4Ch+var_44], 0", "mov     eax, [esp+4Ch+arg_8]", "jmp     loc_13C28A"], ["mov     eax, [esi+14h]", "sub     esp, 0Ch", "mov     ecx, [eax+18h]", "mov     [esp+58h+var_40], ecx", "mov     ecx, [eax+4]", "mov     eax, [eax+14h]", "mov     [esp+58h+var_48], ecx", "mov     edi, [eax+8]", "mov     eax, [eax+4]", "mov     [esp+58h+var_44], edi", "mov     [esp+58h+var_3C], eax", "push    dword ptr [eax]", "call    OBJ_obj2nid", "mov     [esp+5Ch+var_5C], eax", "call    OBJ_nid2sn", "mov     [esp+5Ch+var_5C], eax", "call    EVP_get_cipherbyname", "mov     [esp+5Ch+var_38], eax", "mov     ecx, eax", "or      edi, [esp+5Ch+arg_8]", "add     esp, 10h", "mov     eax, edi", "test    ecx, ecx", "jz      loc_13C705"], ["test    eax, eax", "jz      loc_13C2B8"], ["mov     ebp, [esp+4Ch+var_48]", "mov     [esp+4Ch+var_4C], 0", "test    ebp, ebp", "jz      loc_13C2D0"], ["xor     esi, esi", "jmp     short loc_13C090"], ["sub     esp, 8", "push    ebp", "push    eax", "call    BIO_push", "add     esp, 10h"], ["add     esi, 1"], ["sub     esp, 0Ch", "push    [esp+58h+var_48]", "call    OPENSSL_sk_num", "add     esp, 10h", "cmp     esi, eax", "jge     loc_13C2D0"], ["sub     esp, 8", "push    esi", "push    [esp+58h+var_48]", "call    OPENSSL_sk_value", "mov     edi, eax", "call    BIO_f_md", "mov     [esp+5Ch+var_5C], eax", "call    BIO_new", "add     esp, 10h", "mov     ebp, eax", "test    eax, eax", "jz      loc_13C310"], ["sub     esp, 0Ch", "push    dword ptr [edi]", "call    OBJ_obj2nid", "mov     [esp+5Ch+var_5C], eax", "call    OBJ_nid2sn", "mov     [esp+5Ch+var_5C], eax", "call    EVP_get_digestbyname", "add     esp, 10h", "test    eax, eax", "jz      loc_13C348"], ["push    eax", "push    0", "push    6Fh ; 'o'", "push    ebp", "call    BIO_ctrl", "mov     eax, [esp+5Ch+var_4C]", "add     esp, 10h", "test    eax, eax", "jnz     loc_13C080"], ["mov     [esp+4Ch+var_4C], ebp", "jmp     loc_13C08D"], ["mov     eax, [esi+14h]", "sub     esp, 0Ch", "mov     edx, [eax+4]", "mov     eax, [eax+8]", "mov     [esp+58h+var_40], edx", "mov     edx, [eax+4]", "mov     eax, [eax+8]", "mov     [esp+58h+var_3C], edx", "mov     [esp+58h+var_44], eax", "push    dword ptr [edx]", "call    OBJ_obj2nid", "mov     [esp+5Ch+var_5C], eax", "call    OBJ_nid2sn", "mov     [esp+5Ch+var_5C], eax", "call    EVP_get_cipherbyname", "add     esp, 10h", "mov     ebp, eax", "test    eax, eax", "jz      loc_13C6CA"], ["mov     eax, [esp+4Ch+var_44]", "or      eax, [esp+4Ch+arg_8]", "jz      loc_13C2B8"], ["mov     [esp+4Ch+var_4C], 0"], ["call    BIO_f_cipher", "sub     esp, 0Ch", "push    eax", "call    BIO_new", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jz      loc_13C78E"], ["mov     esi, [esp+4Ch+arg_C]", "xor     eax, eax", "test    esi, esi", "jz      loc_13C5E0"], ["mov     [esp+4Ch+var_34], ebp", "mov     ebp, [esp+4Ch+var_40]", "mov     [esp+4Ch+var_38], edi", "mov     edi, eax", "jmp     short loc_13C20B"], ["sub     esp, 8", "push    edi", "push    ebp", "call    OPENSSL_sk_value", "mov     esi, eax", "pop     eax", "push    [esp+58h+arg_C]", "call    X509_get_issuer_name", "pop     edx", "pop     ecx", "push    eax", "mov     eax, [esi+4]", "push    dword ptr [eax]", "call    X509_NAME_cmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_13C208"], ["mov     eax, [esi+4]", "sub     esp, 0Ch", "mov     edx, [eax+4]", "mov     [esp+58h+var_48], edx", "push    [esp+58h+arg_C]", "call    X509_get_serialNumber", "pop     edx", "pop     ecx", "mov     edx, [esp+54h+var_48]", "push    edx", "push    eax", "call    ASN1_INTEGER_cmp", "add     esp, 10h", "test    eax, eax", "jz      loc_13C3E8"], ["add     edi, 1"], ["sub     esp, 0Ch", "push    ebp", "call    OPENSSL_sk_num", "add     esp, 10h", "cmp     edi, eax", "jl      short loc_13C1B0"], ["mov     edi, [esp+4Ch+var_38]", "lea     esi, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "sub     esp, 0Ch", "xor     ebp, ebp", "push    1EAh", "push    esi", "push    73h ; 's'", "push    70h ; 'p'", "push    21h ; '!'", "call    ERR_put_error", "add     esp, 20h", "mov     [esp+4Ch+var_48], 0", "mov     [esp+4Ch+arg_C], 0", "jmp     loc_13BF1C"], ["mov     eax, [edi+14h]", "mov     [esp+4Ch+var_44], eax"], ["sub     esp, 0Ch", "push    dword ptr [esi+10h]", "call    OBJ_obj2nid", "add     esp, 10h", "cmp     eax, 16h", "jz      loc_13C7C2"], ["mov     eax, [esp+4Ch+var_44]", "test    eax, eax", "jz      loc_13C742"], ["mov     eax, [esp+4Ch+var_44]", "or      eax, [esp+4Ch+arg_8]"], ["mov     edx, [esi+14h]", "mov     [esp+4Ch+var_40], 0", "mov     [esp+4Ch+var_3C], 0", "mov     ecx, [edx+4]", "mov     [esp+4Ch+var_38], 0", "mov     [esp+4Ch+var_48], ecx", "jmp     loc_13C05B"], ["sub     esp, 0Ch", "lea     esi, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "push    1B4h", "push    esi", "push    7Ah ; 'z'", "jmp     loc_13BEF5"], ["mov     edi, [esp+4Ch+var_38]", "test    edi, edi", "jnz     loc_13C7DE"], ["mov     [esp+4Ch+var_48], 0"], ["mov     eax, [esp+4Ch+arg_8]", "test    eax, eax", "jz      loc_13C380"], ["sub     esp, 8", "push    [esp+54h+arg_8]", "push    [esp+58h+var_4C]", "call    BIO_push", "add     esp, 10h", "mov     eax, [esp+4Ch+var_4C]", "add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     esi, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "xor     edi, edi", "push    1BDh", "push    esi", "push    20h ; ' '", "push    70h ; 'p'", "push    21h ; '!'", "call    ERR_put_error", "add     esp, 20h", "mov     [esp+4Ch+arg_C], 0", "mov     [esp+4Ch+var_48], 0", "jmp     loc_13BF1C"], ["sub     esp, 0Ch", "lea     esi, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "mov     edi, eax", "push    1C4h", "push    esi", "push    6Dh ; 'm'", "push    70h ; 'p'", "push    21h ; '!'", "call    ERR_put_error", "add     esp, 20h", "mov     [esp+4Ch+arg_C], 0", "mov     [esp+4Ch+var_48], 0", "jmp     loc_13BF1C"], ["mov     edx, [esp+4Ch+var_44]", "mov     eax, [edx]", "test    eax, eax", "jle     loc_13C58D"], ["sub     esp, 8", "push    eax; int", "push    dword ptr [edx+8]; s", "call    BIO_new_mem_buf", "mov     [esp+5Ch+arg_8], eax", "add     esp, 10h", "test    eax, eax", "jnz     loc_13C2F0"], ["mov     [esp+4Ch+arg_C], 0", "xor     edi, edi", "xor     ebp, ebp", "lea     esi, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "jmp     loc_13BF1C"], ["sub     esp, 0Ch", "lea     eax, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "push    17Dh", "push    eax", "push    7Ah ; 'z'", "push    70h ; 'p'", "push    21h ; '!'", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_13BF74"], ["mov     ebp, [esp+4Ch+var_34]", "mov     edi, [esp+4Ch+var_38]", "lea     edx, [esp+4Ch+var_20]", "lea     eax, [esp+4Ch+ptr]", "sub     esp, 8", "mov     ecx, esi", "push    0", "push    [esp+58h+arg_4]", "call    pkcs7_decrypt_rinfo", "add     esp, 10h", "test    eax, eax", "js      loc_13C570"], ["call    ERR_clear_error"], ["lea     eax, [esp+4Ch+var_28]", "mov     [esp+4Ch+var_28], 0", "push    eax", "push    0", "push    81h", "push    edi", "call    BIO_ctrl", "pop     ecx", "pop     esi", "push    0; int", "push    0; src", "push    0; int", "push    0; int", "push    ebp; int", "push    [esp+68h+var_28]; int", "call    EVP_CipherInit_ex", "add     esp, 20h", "test    eax, eax", "jle     loc_13C570"], ["sub     esp, 8", "mov     eax, [esp+54h+var_3C]", "push    dword ptr [eax+4]", "push    [esp+58h+var_28]", "call    EVP_CIPHER_asn1_to_param", "add     esp, 10h", "test    eax, eax", "js      loc_13C570"], ["sub     esp, 0Ch", "lea     esi, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "push    [esp+58h+var_28]", "call    EVP_CIPHER_CTX_key_length", "mov     [esp+5Ch+var_48], eax", "add     esp, 0Ch", "push    20Dh", "push    esi", "push    eax; size", "call    CRYPTO_malloc", "mov     [esp+5Ch+arg_C], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_13C5D0"], ["sub     esp, 8", "push    eax", "push    [esp+58h+var_28]", "call    EVP_CIPHER_CTX_rand_key", "add     esp, 10h", "test    eax, eax", "jle     loc_13C5D0"], ["mov     edx, [esp+4Ch+ptr]", "test    edx, edx", "jz      loc_13C6AD"], ["sub     esp, 0Ch", "push    [esp+58h+var_28]", "call    EVP_CIPHER_CTX_key_length", "mov     edx, eax", "mov     eax, [esp+5Ch+var_20]", "add     esp, 10h", "cmp     edx, eax", "jz      short loc_13C4F8"], ["sub     esp, 8", "push    eax", "push    [esp+58h+var_28]", "call    EVP_CIPHER_CTX_set_key_length", "add     esp, 10h", "test    eax, eax", "jz      loc_13C75B"], ["call    ERR_clear_error", "sub     esp, 8", "push    0; int", "push    0; src", "push    [esp+5Ch+ptr]; int", "push    0; int", "push    0; int", "push    [esp+68h+var_28]; int", "call    EVP_CipherInit_ex", "add     esp, 20h", "test    eax, eax", "jle     loc_13C5D0"], ["push    22Bh; int", "push    esi; int", "push    [esp+54h+var_20]; int", "push    [esp+58h+ptr]; ptr", "call    CRYPTO_clear_free", "mov     [esp+5Ch+ptr], 0", "push    22Dh; int", "push    esi; int", "push    [esp+64h+var_48]; int", "push    [esp+68h+arg_C]; ptr", "call    CRYPTO_clear_free", "mov     eax, [esp+6Ch+var_4C]", "add     esp, 20h", "test    eax, eax", "jz      loc_13C6A5"], ["sub     esp, 8", "push    edi", "push    eax", "call    BIO_push", "add     esp, 10h", "jmp     loc_13C2E4"], ["mov     [esp+4Ch+var_48], 0", "xor     ebp, ebp", "lea     esi, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "mov     [esp+4Ch+arg_C], 0", "jmp     loc_13BF1C"], ["call    BIO_s_mem", "sub     esp, 0Ch", "push    eax", "call    BIO_new", "mov     [esp+5Ch+arg_8], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_13C3A9"], ["push    0", "push    0", "push    82h", "push    [esp+58h+arg_8]", "call    BIO_ctrl", "add     esp, 10h", "jmp     loc_13C2F0"], ["mov     eax, [eax+4]", "mov     [esp+4Ch+var_44], eax", "jmp     loc_13C25F"], ["xor     ebp, ebp", "jmp     loc_13BF1C"], ["lea     eax, [esp+4Ch+var_20]", "mov     [esp+4Ch+var_38], ebp", "xor     esi, esi", "mov     [esp+4Ch+var_34], eax", "lea     eax, [esp+4Ch+ptr]", "mov     [esp+4Ch+var_30], edi", "mov     ebp, eax", "mov     edi, [esp+4Ch+var_40]", "jmp     short loc_13C63D"], ["sub     esp, 8", "push    esi", "push    edi", "call    OPENSSL_sk_value", "mov     [esp+5Ch+var_48], eax", "pop     eax", "push    [esp+58h+var_38]", "call    EVP_CIPHER_key_length", "pop     edx", "pop     ecx", "push    eax", "mov     eax, ebp", "push    [esp+58h+arg_4]", "mov     ecx, [esp+5Ch+var_48]", "mov     edx, [esp+5Ch+var_34]", "call    pkcs7_decrypt_rinfo", "add     esp, 10h", "test    eax, eax", "js      short loc_13C68C"], ["call    ERR_clear_error", "add     esi, 1"], ["sub     esp, 0Ch", "push    edi", "call    OPENSSL_sk_num", "add     esp, 10h", "cmp     esi, eax", "jl      short loc_13C600"], ["mov     ebp, [esp+4Ch+var_38]", "mov     edi, [esp+4Ch+var_30]", "jmp     loc_13C418"], ["sub     esp, 0Ch", "lea     eax, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "push    178h", "push    eax", "push    8Fh", "push    70h ; 'p'", "push    21h ; '!'", "call    ERR_put_error", "add     esp, 20h", "mov     [esp+4Ch+var_4C], 0", "jmp     loc_13BF74"], ["mov     [esp+4Ch+var_48], 0", "mov     edi, [esp+4Ch+var_30]", "xor     ebp, ebp", "lea     esi, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "jmp     loc_13BF1C"], ["mov     [esp+4Ch+var_4C], edi", "jmp     loc_13C2E4"], ["mov     eax, [esp+4Ch+arg_C]", "mov     [esp+4Ch+arg_C], 0", "mov     [esp+4Ch+ptr], eax", "mov     eax, [esp+4Ch+var_48]", "mov     [esp+4Ch+var_20], eax", "jmp     loc_13C4C7"], ["sub     esp, 0Ch", "lea     esi, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "xor     edi, edi", "push    1A8h", "push    esi", "push    6Fh ; 'o'", "push    70h ; 'p'", "push    21h ; '!'", "call    ERR_put_error", "add     esp, 20h", "mov     [esp+4Ch+arg_C], 0", "mov     [esp+4Ch+var_4C], 0", "mov     [esp+4Ch+var_48], 0", "jmp     loc_13BF1C"], ["sub     esp, 0Ch", "lea     esi, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "xor     edi, edi", "xor     ebp, ebp", "push    19Ch", "push    esi", "push    6Fh ; 'o'", "push    70h ; 'p'", "push    21h ; '!'", "call    ERR_put_error", "add     esp, 20h", "mov     [esp+4Ch+arg_C], 0", "mov     [esp+4Ch+var_4C], 0", "mov     [esp+4Ch+var_48], 0", "jmp     loc_13BF1C"], ["sub     esp, 0Ch", "lea     esi, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "push    18Eh", "push    esi", "push    9Bh", "jmp     loc_13BEF5"], ["push    220h; int", "push    esi; int", "push    [esp+54h+var_20]; int", "push    [esp+58h+ptr]; ptr", "call    CRYPTO_clear_free", "mov     eax, [esp+5Ch+arg_C]", "mov     [esp+5Ch+ptr], eax", "mov     eax, [esp+5Ch+var_48]", "mov     [esp+5Ch+var_20], eax", "add     esp, 10h", "mov     [esp+4Ch+arg_C], 0", "jmp     loc_13C4F8"], ["sub     esp, 0Ch", "lea     esi, (aCryptoPkcs7Pk7_0 - 2A0000h)[ebx]; \"crypto/pkcs7/pk7_doit.c\"", "xor     ebp, ebp", "push    1D4h", "push    esi", "push    20h ; ' '", "push    70h ; 'p'", "push    21h ; '!'", "call    ERR_put_error", "add     esp, 20h", "mov     [esp+4Ch+arg_C], 0", "mov     [esp+4Ch+var_48], 0", "jmp     loc_13BF1C"], ["push    0", "push    0", "push    2", "push    esi", "call    PKCS7_ctrl", "add     esp, 10h", "test    eax, eax", "jz      loc_13C276"], ["jmp     loc_13C282"], ["mov     ebp, [esp+4Ch+var_38]", "jmp     loc_13C177"]], "RAND_DRBG_generate": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     esi, [esp+2Ch+arg_0]", "mov     ebp, [esp+2Ch+arg_14]", "cmp     dword ptr [esi+5Ch], 1", "jnz     loc_1443E0"], ["mov     eax, [esp+2Ch+arg_8]", "cmp     [esi+24h], eax", "jb      loc_1444A0"], ["cmp     [esi+3Ch], ebp", "jb      loc_1443B0"], ["call    openssl_get_fork_id", "xor     edi, edi", "cmp     [esi+10h], eax", "jz      short loc_14433E"], ["mov     [esi+10h], eax", "mov     edi, 1"], ["mov     eax, [esi+44h]", "test    eax, eax", "jz      short loc_144350"], ["cmp     eax, [esi+40h]", "mov     eax, 1", "cmovbe  edi, eax"], ["mov     eax, [esi+4Ch]", "test    eax, eax", "jg      loc_144468"], ["mov     eax, [esi+50h]", "test    eax, eax", "jnz     loc_144420"], ["or      edi, [esp+2Ch+arg_C]", "jnz     loc_14443C"], ["sub     esp, 0Ch", "mov     eax, [esi+0F0h]", "push    ebp", "push    [esp+3Ch+arg_10]", "push    [esp+40h+arg_8]", "push    [esp+44h+arg_4]", "push    esi", "call    dword ptr [eax+8]", "add     esp, 20h", "test    eax, eax", "jz      loc_1444C0"], ["add     dword ptr [esi+40h], 1", "add     esp, 1Ch", "mov     eax, 1", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     eax, (aCryptoRandDrbg - 2A0000h)[ebx]; \"crypto/rand/drbg_lib.c\"", "push    25Ah", "push    eax", "push    66h ; 'f'"], ["push    6Bh ; 'k'", "push    24h ; '$'", "call    ERR_put_error", "add     esp, 20h", "xor     eax, eax", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["push    0", "push    0", "push    0", "push    esi", "call    rand_drbg_restart", "mov     eax, [esi+5Ch]", "add     esp, 10h", "cmp     eax, 2", "jz      loc_1444F8"], ["test    eax, eax", "jnz     loc_144314"], ["sub     esp, 0Ch", "lea     eax, (aCryptoRandDrbg - 2A0000h)[ebx]; \"crypto/rand/drbg_lib.c\"", "push    250h", "push    eax", "push    73h ; 's'", "jmp     short loc_1443C1"], ["mov     ecx, [esi+4]", "test    ecx, ecx", "jz      loc_144366"], ["mov     ecx, [esi+54h]", "mov     eax, [esi+4]", "mov     eax, [eax+54h]", "cmp     ecx, eax", "jz      loc_144366"], ["push    [esp+2Ch+arg_C]", "push    ebp", "push    [esp+34h+arg_10]", "push    esi", "call    RAND_DRBG_reseed", "add     esp, 10h", "test    eax, eax", "jz      loc_144510"], ["mov     [esp+2Ch+arg_10], 0", "xor     ebp, ebp", "jmp     loc_144370"], ["sub     esp, 0Ch", "push    0; timer", "call    _time", "mov     ecx, [esi+48h]", "add     esp, 10h", "cmp     ecx, eax", "jg      short loc_144487"], ["sub     eax, ecx", "cmp     eax, [esi+4Ch]", "jl      loc_14435B"], ["mov     edx, [esi+50h]", "test    edx, edx", "jz      short loc_14443C"], ["mov     eax, [esi+4]", "test    eax, eax", "jz      short loc_14443C"], ["mov     edi, 1", "jmp     short loc_14442B"], ["sub     esp, 0Ch", "lea     eax, (aCryptoRandDrbg - 2A0000h)[ebx]; \"crypto/rand/drbg_lib.c\"", "push    256h", "push    eax", "push    75h ; 'u'", "jmp     loc_1443C1"], ["mov     [esp+2Ch+var_20], eax", "lea     edx, (aCryptoRandDrbg - 2A0000h)[ebx]; \"crypto/rand/drbg_lib.c\"", "sub     esp, 0Ch", "mov     dword ptr [esi+5Ch], 2", "push    27Fh", "push    edx", "push    70h ; 'p'"], ["push    6Bh ; 'k'", "push    24h ; '$'", "call    ERR_put_error", "add     esp, 20h", "mov     eax, [esp+2Ch+var_20]", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     eax, (aCryptoRandDrbg - 2A0000h)[ebx]; \"crypto/rand/drbg_lib.c\"", "push    24Ch", "push    eax", "push    72h ; 'r'", "jmp     loc_1443C1"], ["mov     [esp+2Ch+var_20], eax", "lea     edx, (aCryptoRandDrbg - 2A0000h)[ebx]; \"crypto/rand/drbg_lib.c\"", "sub     esp, 0Ch", "push    276h", "push    edx", "push    76h ; 'v'", "jmp     short loc_1444DC"]], "rsa_ossl_private_decrypt": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     ebp, [esp+3Ch+arg_0]", "mov     edi, [esp+3Ch+arg_C]", "call    BN_CTX_new", "mov     esi, eax", "test    eax, eax", "jz      loc_15254B"], ["sub     esp, 0Ch", "push    eax", "call    BN_CTX_start", "mov     [esp+4Ch+var_4C], esi", "call    BN_CTX_get", "mov     [esp+4Ch+var_4C], esi", "mov     [esp+4Ch+var_38], eax", "call    BN_CTX_get", "mov     [esp+4Ch+var_3C], eax", "pop     eax", "push    dword ptr [edi+10h]", "call    BN_num_bits", "add     esp, 0Ch", "lea     edx, [eax+0Eh]", "add     eax, 7", "cmovs   eax, edx", "lea     edx, (aCryptoRsaRsaOs - 2A0000h)[ebx]; \"crypto/rsa/rsa_ossl.c\"", "mov     ecx, eax", "sar     ecx, 3", "mov     [esp+40h+size], ecx", "mov     [esp+40h+var_30], ecx", "push    185h", "mov     [esp+44h+var_2C], edx", "push    edx", "push    ecx; size", "call    CRYPTO_malloc", "mov     [esp+4Ch+src], eax", "mov     edx, [esp+4Ch+var_3C]", "add     esp, 10h", "test    edx, edx", "jz      loc_152585"], ["test    eax, eax", "jz      loc_152585"], ["cmp     [esp+3Ch+var_30], ebp", "jl      loc_152538"], ["sub     esp, 4", "push    [esp+40h+var_38]", "push    ebp", "push    [esp+48h+arg_4]", "call    BN_bin2bn", "add     esp, 10h", "test    eax, eax", "jz      loc_15241A"], ["sub     esp, 8", "push    dword ptr [edi+10h]", "push    [esp+48h+var_38]", "call    BN_ucmp", "add     esp, 10h", "test    eax, eax", "jns     loc_15256F"], ["mov     eax, [edi+40h]", "mov     [esp+3Ch+var_24], 0", "xor     ebp, ebp", "test    al, 80h", "jz      loc_152360"], ["test    al, 20h", "jz      loc_1522B0"], ["mov     eax, [edi+8]", "push    esi", "push    edi", "push    [esp+44h+var_38]", "push    [esp+48h+var_3C]", "call    dword ptr [eax+14h]", "add     esp, 10h", "test    eax, eax", "jz      loc_15241A"], ["test    ebp, ebp", "jz      short loc_1521C3"], ["push    esi", "push    ebp", "push    [esp+44h+var_24]", "push    [esp+48h+var_3C]", "call    BN_BLINDING_invert_ex", "add     esp, 10h", "test    eax, eax", "jz      loc_15241A"], ["sub     esp, 4", "push    [esp+40h+size]", "push    [esp+44h+src]", "push    [esp+48h+var_3C]", "call    BN_bn2binpad", "add     esp, 10h", "cmp     [esp+3Ch+arg_10], 3", "mov     edi, eax", "jz      loc_152488"], ["jg      loc_152280"], ["cmp     [esp+3Ch+arg_10], 1", "jz      loc_1524A8"], ["cmp     [esp+3Ch+arg_10], 2", "jnz     loc_152400"], ["sub     esp, 0Ch", "mov     eax, [esp+48h+size]", "push    eax; size", "push    edi; int", "push    [esp+50h+src]; int", "push    eax; int", "push    [esp+58h+dest]; int", "call    RSA_padding_check_SSLv23", "add     esp, 20h", "mov     edi, eax"], ["sub     esp, 0Ch", "push    1EBh", "push    [esp+4Ch+var_2C]", "push    72h ; 'r'", "push    65h ; 'e'", "push    4", "call    ERR_put_error", "mov     eax, edi", "add     esp, 14h", "shr     eax, 1Fh", "xor     eax, 1", "push    eax", "call    err_clear_last_constant_time", "add     esp, 10h"], ["sub     esp, 0Ch", "push    esi", "call    BN_CTX_end", "mov     [esp+4Ch+var_4C], esi; ptr", "call    BN_CTX_free", "push    1F1h; int", "push    [esp+50h+var_2C]; int", "push    [esp+54h+var_30]; int", "push    [esp+58h+src]; ptr", "call    CRYPTO_clear_free", "add     esp, 4Ch", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     [esp+3Ch+arg_10], 4", "jnz     loc_152400"], ["sub     esp, 4", "push    0; int", "push    0; int", "mov     eax, [esp+48h+size]", "push    eax; size", "push    edi; int", "push    [esp+50h+src]; int", "push    eax; int", "push    [esp+58h+dest]; int", "call    RSA_padding_check_PKCS1_OAEP", "add     esp, 20h", "mov     edi, eax", "jmp     loc_15221F"], ["cmp     dword ptr [edi+4], 1", "jz      loc_15218A"], ["mov     eax, [edi+1Ch]", "test    eax, eax", "jz      short loc_1522E8"], ["mov     eax, [edi+20h]", "test    eax, eax", "jz      short loc_1522E8"], ["mov     ecx, [edi+24h]", "test    ecx, ecx", "jz      short loc_1522E8"], ["mov     edx, [edi+28h]", "test    edx, edx", "jz      short loc_1522E8"], ["mov     eax, [edi+2Ch]", "test    eax, eax", "jnz     loc_15218A"], ["lea     esi, [esi+0]"], ["call    BN_new", "mov     edx, eax", "test    eax, eax", "jz      loc_1525CF"], ["mov     eax, [edi+18h]", "test    eax, eax", "jz      loc_152598"], ["sub     esp, 4", "push    4", "push    eax", "push    edx", "mov     [esp+4Ch+ptr], edx", "call    BN_with_flags", "add     esp, 10h", "test    byte ptr [edi+40h], 2", "mov     edx, [esp+3Ch+ptr]", "jnz     loc_152450"], ["sub     esp, 8", "mov     eax, [edi+8]", "push    dword ptr [edi+44h]", "push    esi", "push    dword ptr [edi+10h]", "push    edx", "mov     [esp+54h+ptr], edx", "push    [esp+54h+var_38]", "push    [esp+58h+var_3C]", "call    dword ptr [eax+18h]", "mov     edx, [esp+5Ch+ptr]", "add     esp, 20h", "test    eax, eax", "jz      loc_15246F"], ["sub     esp, 0Ch", "push    edx; ptr", "call    BN_free", "add     esp, 10h", "jmp     loc_1521A5"], ["sub     esp, 0Ch", "push    dword ptr [edi+5Ch]; rwlock", "call    CRYPTO_THREAD_write_lock", "mov     ebp, [edi+54h]", "add     esp, 10h", "test    ebp, ebp", "jz      loc_1524D0"], ["sub     esp, 0Ch", "push    ebp", "call    BN_BLINDING_is_current_thread", "add     esp, 10h", "test    eax, eax", "jnz     loc_152428"], ["mov     ebp, [edi+58h]", "test    ebp, ebp", "jz      loc_152510"], ["sub     esp, 0Ch", "push    dword ptr [edi+5Ch]; rwlock", "call    CRYPTO_THREAD_unlock", "add     esp, 10h"], ["sub     esp, 0Ch", "push    esi", "call    BN_CTX_get", "mov     [esp+4Ch+var_24], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_1525E2"], ["sub     esp, 0Ch", "push    ebp", "call    BN_BLINDING_lock", "push    esi; int", "push    ebp; ptr", "push    [esp+54h+var_24]; int", "push    [esp+58h+var_38]; int", "call    BN_BLINDING_convert_ex", "mov     [esp+5Ch+ptr], eax", "add     esp, 14h", "push    ebp", "call    BN_BLINDING_unlock", "mov     edx, [esp+4Ch+ptr]", "add     esp, 10h"], ["test    edx, edx", "jz      short loc_15241A"], ["mov     eax, [edi+40h]", "jmp     loc_152182"], ["sub     esp, 0Ch", "push    1E8h", "push    [esp+4Ch+var_2C]", "push    76h ; 'v'"], ["push    65h ; 'e'", "push    4", "call    ERR_put_error", "add     esp, 20h"], ["mov     edi, 0FFFFFFFFh", "jmp     loc_15224A"], ["sub     esp, 0Ch", "push    dword ptr [edi+5Ch]; rwlock", "call    CRYPTO_THREAD_unlock", "push    esi; int", "push    ebp; ptr", "push    0; int", "push    [esp+58h+var_38]; int", "call    BN_BLINDING_convert_ex", "add     esp, 20h", "mov     edx, eax", "mov     [esp+3Ch+var_24], 0", "jmp     short loc_1523EA"], ["lea     eax, [edi+44h]", "push    esi; int", "push    dword ptr [edi+10h]; int", "push    dword ptr [edi+5Ch]; rwlock", "push    eax; int", "call    BN_MONT_CTX_set_locked", "add     esp, 10h", "mov     edx, [esp+3Ch+ptr]", "test    eax, eax", "jnz     loc_152323"], ["sub     esp, 0Ch", "mov     edi, 0FFFFFFFFh", "push    edx; ptr", "call    BN_free", "add     esp, 10h", "jmp     loc_15224A"], ["sub     esp, 4", "push    eax; n", "push    [esp+44h+src]; src", "push    [esp+48h+dest]; dest", "call    _memcpy", "add     esp, 10h", "jmp     loc_15221F"], ["sub     esp, 0Ch", "mov     eax, [esp+48h+size]", "push    eax; size", "push    edi; int", "push    [esp+50h+src]; int", "push    eax; int", "push    [esp+58h+dest]; int", "call    RSA_padding_check_PKCS1_type_2", "add     esp, 20h", "mov     edi, eax", "jmp     loc_15221F"], ["sub     esp, 8", "push    esi; void *", "push    edi; int", "call    RSA_setup_blinding", "add     esp, 10h", "mov     [edi+54h], eax", "mov     ebp, eax", "test    eax, eax", "jnz     loc_152379"], ["sub     esp, 0Ch", "push    dword ptr [edi+5Ch]; rwlock", "call    CRYPTO_THREAD_unlock", "add     esp, 10h"], ["sub     esp, 0Ch", "push    1A2h", "push    [esp+4Ch+var_2C]", "push    44h ; 'D'", "jmp     loc_15240E"], ["sub     esp, 8", "push    esi; void *", "push    edi; int", "call    RSA_setup_blinding", "mov     [edi+58h], eax", "mov     ebp, eax", "pop     eax", "push    dword ptr [edi+5Ch]; rwlock", "call    CRYPTO_THREAD_unlock", "add     esp, 10h", "test    ebp, ebp", "jnz     loc_1523A6"], ["jmp     short loc_1524F8"], ["sub     esp, 0Ch", "push    190h", "push    [esp+4Ch+var_2C]", "push    6Ch ; 'l'", "jmp     loc_15240E"], ["lea     eax, (aCryptoRsaRsaOs - 2A0000h)[ebx]; \"crypto/rsa/rsa_ossl.c\"", "mov     [esp+3Ch+src], 0", "mov     edi, 0FFFFFFFFh", "mov     [esp+3Ch+var_30], 0", "mov     [esp+3Ch+var_2C], eax", "jmp     loc_15224A"], ["sub     esp, 0Ch", "push    19Ah", "push    [esp+4Ch+var_2C]", "push    84h", "jmp     loc_15240E"], ["sub     esp, 0Ch", "push    187h", "push    [esp+4Ch+var_2C]", "push    41h ; 'A'", "jmp     loc_15240E"], ["mov     [esp+3Ch+var_3C], edx", "sub     esp, 0Ch", "mov     edi, 0FFFFFFFFh", "push    1BFh", "push    [esp+4Ch+var_2C]", "push    0B3h", "push    65h ; 'e'", "push    4", "call    ERR_put_error", "mov     edx, [esp+5Ch+var_3C]", "add     esp, 14h", "push    edx; ptr", "call    BN_free", "add     esp, 10h", "jmp     loc_15224A"], ["sub     esp, 0Ch", "push    1BBh", "push    [esp+4Ch+var_2C]", "push    41h ; 'A'", "jmp     loc_15240E"], ["sub     esp, 0Ch", "push    1A9h", "push    [esp+4Ch+var_2C]", "push    41h ; 'A'", "jmp     loc_15240E"]], "ec_field_size": [["push    ebp", "mov     ebp, eax", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "call    BN_new", "mov     edi, eax", "call    BN_new", "mov     esi, eax", "call    BN_new", "test    edi, edi", "setz    cl", "test    esi, esi", "mov     [esp+2Ch+var_20], eax", "mov     edx, eax", "setz    al", "or      cl, al", "jnz     short loc_15EF08"], ["test    edx, edx", "jz      short loc_15EF08"], ["sub     esp, 0Ch", "push    0", "push    [esp+3Ch+var_20]", "push    esi", "push    edi", "push    ebp", "call    EC_GROUP_get_curve", "add     esp, 20h", "test    eax, eax", "jz      short loc_15EF08"], ["sub     esp, 0Ch", "push    edi", "call    BN_num_bits", "add     esp, 10h", "mov     ebp, eax", "lea     eax, [eax+0Eh]", "add     ebp, 7", "cmovs   ebp, eax", "sar     ebp, 3", "jmp     short loc_15EF0A"], ["xor     ebp, ebp"], ["sub     esp, 0Ch", "push    edi; ptr", "call    BN_free", "mov     [esp+3Ch+ptr], esi; ptr", "call    BN_free", "pop     eax", "push    [esp+38h+var_20]; ptr", "call    BN_free", "add     esp, 2Ch", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "sm2_verify": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     ebp, [esp+2Ch+s1]", "mov     edi, [esp+2Ch+n]", "mov     [esp+2Ch+var_28], 0", "mov     [esp+2Ch+s2], 0", "mov     [esp+2Ch+var_24], ebp", "call    ECDSA_SIG_new", "mov     [esp+2Ch+var_28], eax", "test    eax, eax", "jz      loc_16179A"], ["sub     esp, 4", "push    edi", "lea     eax, [esp+34h+var_24]", "push    eax", "lea     eax, [esp+38h+var_28]", "push    eax", "call    d2i_ECDSA_SIG", "add     esp, 10h", "mov     esi, eax", "test    eax, eax", "jz      loc_161776"], ["sub     esp, 8", "lea     eax, [esp+34h+s2]", "push    eax", "push    [esp+38h+var_28]", "call    i2d_ECDSA_SIG", "add     esp, 10h", "cmp     edi, eax", "jnz     short loc_161750"], ["sub     esp, 4", "push    edi; n", "push    [esp+34h+s2]; s2", "push    ebp; s1", "call    _memcmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_161750"], ["sub     esp, 4", "push    0", "push    [esp+34h+arg_4]", "push    [esp+38h+arg_0]", "call    BN_bin2bn", "add     esp, 10h", "mov     esi, eax", "test    eax, eax", "jz      loc_1617AF"], ["mov     ecx, eax", "mov     edx, [esp+2Ch+var_28]", "mov     eax, [esp+2Ch+arg_10]", "lea     ebp, (aCryptoSm2Sm2Si - 2A0000h)[ebx]; \"crypto/sm2/sm2_sign.c\"", "call    sm2_sig_verify", "mov     edi, eax"], ["sub     esp, 4", "push    1DBh", "push    ebp", "push    [esp+38h+s2]; ptr", "call    CRYPTO_free", "mov     [esp+3Ch+ptr], esi; ptr", "call    BN_free", "pop     eax", "push    [esp+38h+var_28]; ptr", "call    ECDSA_SIG_free", "add     esp, 2Ch", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     ebp, (aCryptoSm2Sm2Si - 2A0000h)[ebx]; \"crypto/sm2/sm2_sign.c\"", "mov     edi, 0FFFFFFFFh", "xor     esi, esi", "push    1CEh", "push    ebp", "push    68h ; 'h'", "push    6Ch ; 'l'", "push    35h ; '5'", "call    ERR_put_error", "add     esp, 20h", "jmp     short loc_161722"], ["sub     esp, 0Ch", "lea     ebp, (aCryptoSm2Sm2Si - 2A0000h)[ebx]; \"crypto/sm2/sm2_sign.c\"", "push    1C8h", "push    ebp", "push    68h ; 'h'"], ["push    6Ch ; 'l'", "mov     edi, 0FFFFFFFFh", "push    35h ; '5'", "call    ERR_put_error", "add     esp, 20h", "jmp     short loc_161722"], ["sub     esp, 0Ch", "lea     ebp, (aCryptoSm2Sm2Si - 2A0000h)[ebx]; \"crypto/sm2/sm2_sign.c\"", "mov     esi, eax", "push    1C4h", "push    ebp", "push    41h ; 'A'", "jmp     short loc_161787"], ["sub     esp, 0Ch", "lea     ebp, (aCryptoSm2Sm2Si - 2A0000h)[ebx]; \"crypto/sm2/sm2_sign.c\"", "push    1D4h", "push    ebp", "push    3", "jmp     short loc_161787"]], "X509_issuer_and_serial_hash": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "call    EVP_MD_CTX_new", "mov     esi, eax", "test    eax, eax", "jz      short loc_17C100"], ["sub     esp, 4", "push    0; size_t", "push    0; dest", "mov     eax, [esp+28h+arg_0]", "push    dword ptr [eax+1Ch]; int", "call    X509_NAME_oneline", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jz      short loc_17C100"], ["call    EVP_md5", "sub     esp, 4", "push    0", "push    eax", "push    esi", "call    EVP_DigestInit_ex", "add     esp, 10h", "test    eax, eax", "jz      short loc_17C100"], ["sub     esp, 0Ch", "push    edi; s", "call    _strlen", "add     esp, 0Ch", "push    eax", "push    edi", "push    esi", "call    EVP_DigestUpdate", "add     esp, 10h", "test    eax, eax", "jnz     short loc_17C118"], ["lea     esi, [esi+0]", "nop"], ["xor     edi, edi"], ["sub     esp, 0Ch", "push    esi; ptr", "call    EVP_MD_CTX_free", "add     esp, 20h", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["sub     esp, 4", "lea     eax, (aCryptoX509X509_0 - 2A0000h)[ebx]; \"crypto/x509/x509_cmp.c\"", "push    30h ; '0'", "push    eax", "push    edi; ptr", "call    CRYPTO_free", "mov     eax, [esp+2Ch+arg_0]", "add     esp, 0Ch", "push    dword ptr [eax+4]", "mov     eax, [esp+24h+arg_0]", "push    dword ptr [eax+0Ch]", "push    esi", "call    EVP_DigestUpdate", "add     esp, 10h", "test    eax, eax", "jz      short loc_17C100"], ["sub     esp, 4", "push    0", "lea     eax, [esp+24h+var_1C]", "push    eax", "push    esi", "call    EVP_DigestFinal_ex", "add     esp, 10h", "test    eax, eax", "jz      short loc_17C100"], ["mov     edi, [esp+1Ch+var_1C]", "jmp     short loc_17C102"]], "check_policy": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     esi, [esp+1Ch+arg_0]", "mov     ecx, [esi+78h]", "test    ecx, ecx", "jz      short loc_181AB0"], ["mov     edi, 1"], ["add     esp, 0Ch", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edx, [esi+84h]", "mov     eax, [esi+50h]", "test    edx, edx", "jz      short loc_181AD8"], ["sub     esp, 8", "push    0", "push    eax", "call    OPENSSL_sk_push", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jz      loc_181C30"], ["mov     eax, [esi+50h]"], ["mov     edx, [esi+10h]", "sub     esp, 0Ch", "push    dword ptr [edx+0Ch]", "push    dword ptr [edx+20h]", "push    eax", "lea     eax, [esi+58h]", "push    eax", "lea     eax, [esi+54h]", "push    eax", "call    X509_policy_check", "add     esp, 20h", "mov     edi, eax", "mov     eax, [esi+84h]", "test    eax, eax", "jnz     short loc_181B50"], ["test    edi, edi", "jz      loc_181BC8"], ["cmp     edi, 0FFFFFFFFh", "jz      short loc_181B60"], ["cmp     edi, 0FFFFFFFEh", "jz      loc_181C40"], ["cmp     edi, 1", "jnz     loc_181C00"], ["mov     eax, [esi+10h]", "test    byte ptr [eax+0Dh], 8", "jz      loc_181A9D"], ["sub     esp, 8", "mov     dword ptr [esi+64h], 0", "push    esi", "push    2", "call    dword ptr [esi+1Ch]", "add     esp, 10h", "test    eax, eax", "setnz   al", "movzx   eax, al", "mov     edi, eax", "jmp     loc_181AA2"], ["sub     esp, 0Ch", "push    dword ptr [esi+50h]", "call    OPENSSL_sk_pop", "add     esp, 10h", "jmp     short loc_181B01"], ["mov     ebp, 1", "jmp     short loc_181BAE"], ["sub     esp, 8", "push    ebp", "push    dword ptr [esi+50h]", "call    OPENSSL_sk_value", "add     esp, 10h", "test    byte ptr [eax+81h], 8", "jz      short loc_181BAB"], ["sub     esp, 8", "mov     [esi+5Ch], ebp", "mov     [esi+64h], eax", "mov     dword ptr [esi+60h], 2Ah ; '*'", "push    esi", "push    0", "call    dword ptr [esi+1Ch]", "mov     edi, eax", "add     esp, 10h", "test    eax, eax", "jz      loc_181AA2"], ["add     ebp, 1"], ["sub     esp, 0Ch", "push    dword ptr [esi+50h]", "call    OPENSSL_sk_num", "add     esp, 10h", "cmp     ebp, eax", "jl      short loc_181B70"], ["jmp     loc_181A9D"], ["sub     esp, 0Ch", "push    66Eh"], ["lea     eax, (aCryptoX509X509_7 - 2A0000h)[ebx]; \"crypto/x509/x509_vfy.c\"", "push    eax", "push    41h ; 'A'", "push    91h", "push    0Bh", "call    ERR_put_error", "add     esp, 20h", "mov     dword ptr [esi+60h], 11h", "mov     eax, edi", "add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "lea     eax, (aCryptoX509X509_7 - 2A0000h)[ebx]; \"crypto/x509/x509_vfy.c\"", "xor     edi, edi", "push    688h", "push    eax", "push    44h ; 'D'", "push    91h", "push    0Bh", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_181AA2"], ["sub     esp, 0Ch", "push    664h", "jmp     short loc_181BD0"], ["sub     esp, 8", "mov     dword ptr [esi+64h], 0", "mov     dword ptr [esi+60h], 2Bh ; '+'", "push    esi", "push    0", "call    dword ptr [esi+1Ch]", "mov     edi, eax", "add     esp, 10h", "jmp     loc_181AA2"]], "level_find_node": [["push    ebp", "push    edi", "push    esi", "xor     esi, esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     edi, [esp+2Ch+arg_0]", "mov     ebp, [esp+2Ch+arg_4]", "jmp     short loc_18DC63"], ["add     esi, 1"], ["sub     esp, 0Ch", "push    dword ptr [edi+4]", "call    OPENSSL_sk_num", "add     esp, 10h", "cmp     esi, eax", "jge     short loc_18DCB8"], ["sub     esp, 8", "push    esi", "push    dword ptr [edi+4]", "call    OPENSSL_sk_value", "add     esp, 10h", "mov     edx, eax", "cmp     [eax+4], ebp", "jnz     short loc_18DC60"], ["sub     esp, 8", "mov     eax, [eax]", "push    [esp+34h+arg_8]", "mov     [esp+38h+var_20], edx", "push    dword ptr [eax+4]", "call    OBJ_cmp", "add     esp, 10h", "mov     edx, [esp+2Ch+var_20]", "test    eax, eax", "jnz     short loc_18DC60"], ["add     esp, 1Ch", "mov     eax, edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     esp, 1Ch", "xor     edx, edx", "pop     ebx", "mov     eax, edx", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "level_add_node": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "mov     esi, [esp+20h+arg_8]", "push    42h ; 'B'; int", "lea     ebp, (aCryptoX509v3Pc_1 - 2A0000h)[ebx]; \"crypto/x509v3/pcy_node.c\"", "push    ebp; int", "push    0Ch; n", "call    CRYPTO_zalloc", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jz      loc_18DE50"], ["mov     eax, [esp+1Ch+arg_4]", "mov     ecx, [esp+1Ch+arg_0]", "mov     [edi+4], esi", "mov     [edi], eax", "test    ecx, ecx", "jz      short loc_18DD7D"], ["sub     esp, 0Ch", "push    dword ptr [eax+4]", "call    OBJ_obj2nid", "add     esp, 10h", "cmp     eax, 2EAh", "mov     eax, [esp+1Ch+arg_0]", "jz      short loc_18DDC0"], ["mov     eax, [eax+4]", "test    eax, eax", "jz      loc_18DE20"], ["sub     esp, 8", "push    edi", "push    eax", "call    OPENSSL_sk_push", "add     esp, 10h", "test    eax, eax", "jz      loc_18DE40"], ["mov     eax, [esp+1Ch+arg_C]", "test    eax, eax", "jz      short loc_18DDA4"], ["mov     eax, [esp+1Ch+arg_C]", "mov     eax, [eax+8]", "test    eax, eax", "jz      short loc_18DDD0"], ["sub     esp, 8", "push    [esp+24h+arg_4]", "push    eax", "call    OPENSSL_sk_push", "add     esp, 10h", "test    eax, eax", "jz      short loc_18DDF0"], ["test    esi, esi", "jz      short loc_18DDAC"], ["add     dword ptr [esi+8], 1"], ["add     esp, 0Ch", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edx, [eax+8]", "test    edx, edx", "jnz     short loc_18DE07"], ["mov     [eax+8], edi", "jmp     short loc_18DD7D"], ["call    OPENSSL_sk_new_null", "mov     edx, [esp+1Ch+arg_C]", "mov     [edx+8], eax", "test    eax, eax", "jnz     short loc_18DD90"], ["sub     esp, 0Ch", "push    61h ; 'a'", "jmp     short loc_18DDF5"], ["sub     esp, 0Ch", "push    65h ; 'e'"], ["push    ebp", "push    41h ; 'A'", "push    0A8h", "push    22h ; '\"'", "call    ERR_put_error", "add     esp, 20h"], ["sub     esp, 0Ch", "push    edi; ptr", "xor     edi, edi", "call    policy_node_free", "add     esp, 10h", "mov     eax, edi", "add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["call    policy_node_cmp_new", "mov     ecx, [esp+1Ch+arg_0]", "mov     [ecx+4], eax", "test    eax, eax", "jnz     loc_18DD68"], ["sub     esp, 0Ch", "push    53h ; 'S'", "jmp     short loc_18DDF5"], ["sub     esp, 0Ch", "push    57h ; 'W'", "jmp     short loc_18DDF5"], ["sub     esp, 0Ch", "push    44h ; 'D'", "push    ebp", "push    41h ; 'A'", "push    0A8h", "push    22h ; '\"'", "call    ERR_put_error", "add     esp, 20h", "jmp     loc_18DDAC"]], "GENERAL_NAME_cmp": [["push    edi", "push    esi", "push    ebx", "mov     edx, [esp+0Ch+arg_0]", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     ecx, [esp+0Ch+arg_4]", "test    edx, edx", "jz      loc_19B1B0"], ["test    ecx, ecx", "jz      loc_19B1B0"], ["mov     eax, [edx]", "cmp     eax, [ecx]", "jnz     loc_19B1B0"], ["cmp     eax, 8; switch 9 cases", "ja      GENERAL_NAME_cmp_cold"], ["mov     esi, ds:(jpt_19B0B2 - 2A0000h)[ebx+eax*4]", "add     esi, ebx", "jmp     esi; switch jump"], ["sub     esp, 8; jumptable 0019B0B2 cases 1,2,6", "push    dword ptr [ecx+4]", "push    dword ptr [edx+4]", "call    ASN1_STRING_cmp", "add     esp, 10h"], ["pop     ebx", "pop     esi", "pop     edi", "retn"], ["sub     esp, 8; jumptable 0019B0B2 case 3", "push    dword ptr [ecx+4]", "push    dword ptr [edx+4]", "call    ASN1_TYPE_cmp", "add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["sub     esp, 8; jumptable 0019B0B2 case 4", "push    dword ptr [ecx+4]", "push    dword ptr [edx+4]", "call    X509_NAME_cmp", "add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["mov     edi, [edx+4]; jumptable 0019B0B2 case 5", "mov     esi, [ecx+4]", "test    edi, edi", "jz      loc_19B1B0"], ["test    esi, esi", "jz      loc_19B1B0"], ["mov     eax, [edi]", "mov     edx, [esi]", "test    eax, eax", "jz      loc_19B1A8"], ["test    edx, edx", "jz      loc_19B1C0"], ["sub     esp, 8", "push    edx", "push    eax", "call    ASN1_STRING_cmp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_19B0C9"], ["mov     eax, [edi+4]", "test    eax, eax", "jz      short loc_19B1B0"], ["mov     edx, [esi+4]", "test    edx, edx", "jz      short loc_19B1B0"], ["sub     esp, 8", "push    edx", "push    eax", "call    ASN1_STRING_cmp", "add     esp, 10h", "jmp     loc_19B0C9"], ["sub     esp, 8; jumptable 0019B0B2 case 7", "push    dword ptr [ecx+4]", "push    dword ptr [edx+4]", "call    ASN1_OCTET_STRING_cmp", "add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["sub     esp, 8; jumptable 0019B0B2 case 8", "push    dword ptr [ecx+4]", "push    dword ptr [edx+4]", "call    OBJ_cmp", "add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["sub     esp, 8; jumptable 0019B0B2 case 0", "push    dword ptr [ecx+4]", "push    dword ptr [edx+4]", "call    OTHERNAME_cmp", "add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["test    edx, edx", "jz      short loc_19B13B"], ["lea     esi, [esi+0]"], ["mov     eax, 0FFFFFFFFh", "jmp     loc_19B0C9"], ["mov     eax, 1", "jmp     loc_19B0C9"]], "GENERAL_NAME_get0_value": [["call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "mov     ecx, [esp+4+arg_0]", "mov     ebx, [esp+4+arg_4]", "mov     edx, [ecx]", "test    ebx, ebx", "jz      short loc_19B21B"], ["mov     [ebx], edx"], ["cmp     edx, 8; switch 9 cases", "ja      GENERAL_NAME_get0_value_cold"], ["add     eax, ds:(jpt_19B22B - 2A0000h)[eax+edx*4]", "jmp     eax; switch jump"], ["mov     eax, [ecx+4]; jumptable 0019B22B cases 1,2,6"], ["mov     eax, [ecx+4]; jumptable 0019B22B case 3", "pop     ebx", "retn"], ["mov     eax, [ecx+4]; jumptable 0019B22B case 4", "pop     ebx", "retn"], ["mov     eax, [ecx+4]; jumptable 0019B22B case 5", "pop     ebx", "retn"], ["mov     eax, [ecx+4]; jumptable 0019B22B case 7", "pop     ebx", "retn"], ["mov     eax, [ecx+4]; jumptable 0019B22B case 8", "pop     ebx", "retn"], ["mov     eax, [ecx+4]; jumptable 0019B22B case 0", "pop     ebx", "retn"]]}