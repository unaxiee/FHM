{"arch": "metapc", "sip24_update": [["push    ebp", "push    edi", "push    esi", "mov     esi, p", "push    ebx", "mov     ebx, H", "sub     esp, 14h", "lea     H, [p+len]", "lea     p, [H+20h]", "lea     edi, [H+28h]", "mov     [esp+24h+pe], eax", "mov     [esp+24h+var_18], edx", "mov     pe_0, [H+28h]"], ["cmp     p, [esp+24h+pe]", "jnb     short loc_243E"], ["cmp     eax, edi", "jnb     short loc_2490"], ["lea     edx, [eax+1]", "inc     esi", "mov     [H+28h], edx", "mov     dl, [p-1]", "cmp     p, [esp+24h+pe]", "mov     [eax], dl", "mov     eax, [H+28h]", "jb      short loc_2425"], ["cmp     eax, edi", "jb      short loc_2480"], ["mov     edi, [H+20h]", "mov     eax, [H+18h]", "xor     eax, edi", "mov     p, [H+24h]", "mov     [H+18h], eax", "mov     eax, [H+1Ch]", "xor     eax, esi", "mov     edx, 2; rounds", "mov     [H+1Ch], eax", "mov     eax, H; H", "call    sip_round", "mov     eax, [H]", "mov     edx, [H+4]", "xor     eax, edi", "xor     edx, esi", "mov     [H], eax", "add     dword ptr [H+2Ch], 8", "adc     dword ptr [H+30h], 0", "lea     eax, [H+20h]", "mov     [H+4], edx", "mov     [H+28h], eax"], ["add     esp, 14h", "mov     eax, H", "pop     H", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ecx, [H+20h]", "mov     ebp, [H+24h]", "mov     eax, [H+18h]", "mov     edx, [H+1Ch]", "xor     eax, ecx", "xor     edx, ebp", "mov     [H+18h], eax", "mov     [H+1Ch], edx", "mov     eax, H; H", "mov     edx, 2; rounds", "mov     [esp+24h+var_1C], ecx", "call    sip_round", "mov     eax, [H]", "mov     ecx, [esp+24h+var_1C]", "xor     eax, ecx", "mov     edx, [esp+24h+var_18]", "mov     [H], eax", "mov     eax, [H+4]", "xor     eax, ebp", "mov     [H+28h], edx", "add     dword ptr [H+2Ch], 8", "adc     dword ptr [H+30h], 0", "mov     [H+4], eax", "mov     eax, edx", "jmp     loc_241F"]], "sip24_final": [["push    edi", "call    __x86_get_pc_thunk_dx", "add     edx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "xor     esi, esi", "push    ebx", "mov     ebx, H", "add     H, 20h ; ' '", "mov     ecx, [H+28h]", "mov     edi, [H+2Ch]", "sub     ecx, eax", "add     edi, left", "shl     edi, 18h", "cmp     cl, 7; switch 8 cases", "ja      short _L20; jumptable 00002517 default case, case 0"], ["mov     eax, left", "and     eax, 0FFh", "mov     left, ds:(jpt_2517 - 2DF78h)[edx+eax*4]", "add     edx, ecx", "jmp     edx; switch jump"], ["xor     eax, eax; jumptable 00002517 case 7", "mov     al, [H+26h]", "shl     eax, 10h", "or      edi, eax"], ["xor     eax, eax; jumptable 00002517 case 6", "mov     al, [H+25h]", "shl     eax, 8", "or      edi, eax"], ["xor     eax, eax; jumptable 00002517 case 5", "mov     al, [H+24h]", "or      edi, eax"], ["xor     eax, eax; jumptable 00002517 case 4", "xor     edx, edx", "mov     al, [H+23h]", "shld    edx, eax, 18h", "shl     eax, 18h", "or      edi, edx", "mov     esi, eax"], ["xor     eax, eax; jumptable 00002517 case 3", "xor     edx, edx", "mov     al, [H+22h]", "shld    edx, eax, 10h", "shl     eax, 10h", "or      edi, edx", "or      esi, eax"], ["xor     eax, eax; jumptable 00002517 case 2", "xor     edx, edx", "mov     al, [H+21h]", "shld    edx, eax, 8", "shl     eax, 8", "or      edi, edx", "or      esi, eax"], ["xor     eax, eax; jumptable 00002517 case 1", "mov     al, [H+20h]", "or      esi, eax"], ["mov     eax, [H+18h]; jumptable 00002517 default case, case 0", "mov     edx, [H+1Ch]", "xor     eax, esi", "xor     edx, edi", "mov     [H+18h], eax", "mov     [H+1Ch], edx", "mov     eax, H; H", "mov     edx, 2; rounds", "call    sip_round", "mov     ecx, [H]", "xor     ecx, esi", "mov     esi, [H+4]", "xor     esi, edi", "mov     edi, [H+10h]", "xor     edi, 0FFh", "mov     [H], ecx", "mov     [H+4], esi", "mov     [H+10h], edi", "mov     eax, H; H", "mov     edx, 4; rounds", "call    sip_round", "mov     edx, [H+8]", "mov     eax, [H]", "mov     ecx, [H+0Ch]", "xor     eax, edx", "mov     edx, [H+4]", "mov     esi, [H+10h]", "mov     edi, [H+14h]", "xor     edx, ecx", "xor     eax, esi", "xor     edx, edi", "mov     esi, [H+1Ch]", "mov     ecx, [H+18h]", "pop     H", "xor     edx, esi", "pop     esi", "xor     eax, ecx", "pop     edi", "retn"]], "freeBindings": [["test    bindings, bindings", "jz      short locret_2640"], ["push    esi", "mov     esi, parser", "push    ebx", "mov     ebx, bindings", "push    ecx", "jmp     short loc_2602"], ["mov     b, bindings"], ["mov     eax, [parser+68h]", "test    eax, eax", "jz      short loc_2619"], ["push    edx", "push    edx", "mov     edx, [b]", "mov     ecx, [edx]", "push    ecx", "mov     edx, [parser+4]", "push    edx", "call    eax", "add     esp, 10h"], ["mov     edx, [parser+174h]", "mov     eax, [b+4]", "mov     [b+4], edx", "mov     [parser+174h], b", "mov     edx, [b]", "mov     ecx, [b+8]", "test    bindings, bindings", "mov     [edx+4], ecx", "jnz     short loc_2600"], ["pop     bindings", "pop     b", "pop     parser", "retn"], ["retn"]], "normalizeLines": [["mov     dl, [s]", "test    dl, dl", "jnz     short loc_266E"], ["jmp     short locret_26AA"], ["mov     dl, [eax]", "test    dl, dl", "jz      short locret_26B8"], ["mov     ecx, s", "inc     s", "cmp     dl, 0Dh", "jnz     short loc_2668"], ["push    ebx", "mov     edx, s", "mov     al, [s]", "jmp     short loc_268C"], ["mov     [ecx-1], al", "mov     al, [edx+1]", "mov     edx, ebx"], ["test    al, al", "jz      short loc_26A5"], ["inc     ecx", "lea     ebx, [s+1]", "cmp     al, 0Dh", "jnz     short loc_2680"], ["mov     byte ptr [ecx-1], 0Ah", "mov     al, [edx+1]", "cmp     al, 0Ah", "jz      short loc_26B0"], ["mov     edx, s", "test    al, al", "jnz     short loc_268C"], ["mov     byte ptr [ecx], 0", "pop     ebx", "retn"], ["retn"], ["mov     al, [edx+2]", "add     edx, 2", "jmp     short loc_2688"], ["retn"]], "reportDefault": [["push    ebp", "push    edi", "push    esi", "push    ebx", "mov     ebx, parser", "sub     esp, 3Ch", "mov     [esp+4Ch+s], s_0", "mov     edi, [esp+4Ch+end]", "mov     parser, large gs:14h", "mov     [esp+4Ch+var_20], parser", "xor     parser, parser", "cmp     byte ptr [enc+44h], 0", "jnz     loc_2770"], ["cmp     [parser+90h], enc", "mov     ebp, enc", "jz      loc_2798"], ["mov     eax, [parser+128h]", "mov     [esp+4Ch+eventPP], eax", "add     eventPP_0, 4", "mov     [esp+4Ch+eventEndPP], eax"], ["lea     eventEndPP_0, [esp+4Ch+dataPtr]", "mov     [esp+4Ch+var_38], eax", "lea     eax, [esp+4Ch+s]", "mov     [esp+4Ch+var_34], eax", "xchg    ax, ax"], ["mov     eax, [parser+2Ch]", "sub     esp, 0Ch", "mov     esi, [parser+30h]", "mov     [esp+58h+dataPtr], eax", "push    esi", "mov     eax, [esp+5Ch+var_38]", "push    eax", "push    edi", "mov     eax, [esp+64h+var_34]", "push    eax", "push    enc", "call    dword ptr [enc+38h]", "mov     edx, [esp+6Ch+eventEndPP]", "mov     esi, eax", "mov     convert_res, [esp+6Ch+s]", "add     esp, 1Ch", "mov     [edx], eax", "mov     eax, [esp+50h+dataPtr]", "mov     ecx, [parser+2Ch]", "sub     eax, ecx", "push    eax", "mov     eax, [parser+4]", "push    ecx", "push    eax", "call    dword ptr [parser+50h]", "mov     edx, [esp+5Ch+eventPP]", "mov     eax, [esp+5Ch+s]", "add     esp, 10h", "cmp     convert_res, 1", "mov     [edx], eax", "ja      short loc_2718"], ["jmp     short loc_2783"], ["mov     eax, [esp+4Ch+s]", "push    edx", "sub     edi, eax", "mov     s_0, [parser+4]", "push    edi", "push    eax", "push    ecx", "call    dword ptr [parser+50h]", "add     esp, 10h"], ["mov     eax, [esp+4Ch+var_20]", "xor     eax, large gs:14h", "jnz     short loc_27B1"], ["add     esp, 3Ch", "pop     parser", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     eax, [parser+11Ch]", "mov     [esp+4Ch+eventPP], eax", "lea     eventPP_0, [parser+120h]", "mov     [esp+4Ch+eventEndPP], eax", "jmp     loc_2706"], ["call    __stack_chk_fail_local"]], "defineAttribute": [["push    ebp", "push    edi", "mov     edi, type", "push    esi", "mov     esi, attId", "push    ebx", "sub     esp, 1Ch", "mov     attId, [type+0Ch]", "mov     type, [esp+2Ch+value]", "mov     ebp, [esp+2Ch+isId]", "test    eax, eax", "jnz     short loc_2820"], ["mov     eax, ebp", "test    al, al", "jnz     short loc_2820"], ["mov     ebx, [type+10h]", "cmp     ebx, edx", "jz      short loc_2850"], ["mov     eax, [type+14h]"], ["lea     edx, [edx+edx*2]", "test    cl, cl", "lea     eax, [eax+edx*4]", "mov     edx, [esp+2Ch+value]", "mov     [att], attId", "mov     [att+8], edx", "mov     [att+4], cl", "jnz     short loc_2804"], ["mov     byte ptr [attId+8], 1"], ["mov     att, [type+0Ch]", "mov     ebx, 1", "inc     eax", "mov     [type+0Ch], eax"], ["add     esp, 1Ch", "mov     eax, ebx", "pop     ebx", "pop     attId", "pop     type", "pop     ebp", "retn"], ["test    edx, edx", "jle     short loc_2898"], ["mov     eax, [type+14h]", "xor     ebx, ebx", "jmp     short loc_2838"], ["inc     i", "add     eax, 0Ch", "cmp     i, edx", "jz      short loc_2898"], ["cmp     [eax], attId", "jnz     short loc_2830"], ["add     esp, 1Ch", "mov     i, 1", "mov     eax, ebx", "pop     ebx", "pop     attId", "pop     type", "pop     ebp", "retn"], ["test    edx, edx", "jz      short loc_28C0"], ["cmp     edx, 3FFFFFFFh", "jg      loc_28F0"], ["lea     ebx, [edx+edx]", "mov     [esp+2Ch+var_20], isCdata", "cmp     count, 15555555h", "ja      loc_28F0"], ["lea     eax, [count+edx*4]", "push    ecx", "push    ecx", "mov     ebp, [type+14h]", "shl     eax, 2", "push    eax", "push    ebp", "mov     eax, [esp+3Ch+parser]", "call    dword ptr [eax+10h]", "add     esp, 10h", "test    temp, temp", "jz      short loc_28F0"], ["mov     [type+10h], count", "mov     [type+14h], temp", "jmp     short loc_28E1"], ["mov     eax, ebp", "test    al, al", "jz      loc_27E0"], ["mov     eax, [type+8]", "test    eax, eax", "jnz     loc_27E0"], ["cmp     byte ptr [attId+9], 0", "jnz     loc_27E0"], ["mov     [type+8], attId", "jmp     loc_27E0"], ["mov     [esp+2Ch+var_20], isCdata", "sub     esp, 0Ch", "mov     dword ptr [type+10h], 8", "push    60h ; '`'", "mov     eax, [esp+3Ch+parser]", "call    dword ptr [eax+0Ch]", "add     esp, 10h", "mov     [type+14h], eax", "test    eax, eax", "jz      short loc_28F7"], ["mov     edx, [type+0Ch]", "mov     ecx, [esp+2Ch+var_20]", "jmp     loc_27EA"], ["xor     ebx, ebx", "jmp     loc_2810"], ["mov     dword ptr [type+10h], 0", "jmp     loc_2810"]], "normalizePublicId": [["push    ebp", "mov     dl, [s]", "push    edi", "test    dl, dl", "push    esi", "push    ebx", "jz      short loc_2980"], ["mov     esi, s", "mov     ebx, s", "mov     edi, 1", "jmp     short loc_2930"], ["mov     [ebx], dl", "inc     ebx"], ["mov     dl, [s+1]", "inc     s", "test    dl, dl", "jz      short loc_295B"], ["lea     ecx, [edx-0Ah]", "cmp     cl, 16h", "ja      short loc_2925"], ["mov     ebp, edi", "shl     ebp, cl", "mov     ecx, ebp", "and     ecx, 400009h", "jz      short loc_2925"], ["cmp     publicId, p", "jz      short loc_2928"], ["cmp     byte ptr [p-1], 20h ; ' '", "jz      short loc_2928"], ["inc     s", "mov     byte ptr [ebx], 20h ; ' '", "inc     ebx", "mov     dl, [s]", "test    dl, dl", "jnz     short loc_2930"], ["cmp     p, publicId", "jz      short loc_2980"], ["cmp     byte ptr [p-1], 20h ; ' '", "jz      short loc_2970"], ["mov     byte ptr [p], 0", "pop     p", "pop     s", "pop     edi", "pop     ebp", "retn"], ["mov     byte ptr [p-1], 0", "dec     p", "pop     p", "pop     s", "pop     edi", "pop     ebp", "retn"], ["mov     ebx, publicId", "mov     byte ptr [p], 0", "pop     p", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "hash": [["push    ebx", "sub     esp, 48h", "mov     ecx, [parser+1D8h]", "mov     ebx, large gs:14h", "mov     [esp+4Ch+var_10], ebx", "xor     ebx, ebx", "test    ecx, ecx", "jz      short loc_29BC"], ["lea     esi, [esi+0]", "nop"], ["mov     eax, ecx", "mov     ecx, [ecx+1D8h]", "test    ecx, ecx", "jnz     short loc_29B0"], ["mov     ecx, [eax+1ECh]", "add     eax, 1ECh", "mov     eax, ecx", "xor     ecx, 79746573h", "xor     eax, 6E646F6Dh", "mov     dword ptr [esp+4Ch+state.v3], ecx", "mov     dword ptr [esp+4Ch+state.v1], eax", "lea     eax, [esp+4Ch+state.buf]", "xor     ecx, ecx", "mov     dword ptr [esp+4Ch+state.v0], 70736575h", "cmp     byte ptr [s], 0", "mov     dword ptr [esp+4Ch+state.v0+4], 736F6D65h", "mov     dword ptr [esp+4Ch+state.v1+4], 646F7261h", "mov     dword ptr [esp+4Ch+state.v2], 6E657261h", "mov     dword ptr [esp+4Ch+state.v2+4], 6C796765h", "mov     dword ptr [esp+4Ch+state.v3+4], 74656462h", "mov     [esp+4Ch+state.p], eax", "mov     dword ptr [esp+4Ch+state.c], 0", "mov     dword ptr [esp+4Ch+state.c+4], 0", "jz      short loc_2A37"], ["lea     esi, [esi+0]", "nop"], ["inc     ecx; len", "cmp     byte ptr [s+ecx], 0", "jnz     short loc_2A30"], ["lea     ebx, [esp+4Ch+state]", "mov     eax, ebx; H", "call    sip24_update", "mov     eax, ebx; H", "call    sip24_final", "mov     ebx, [esp+4Ch+var_10]", "xor     ebx, large gs:14h", "jnz     short loc_2A5B"], ["add     esp, 48h", "pop     ebx", "retn"], ["call    __stack_chk_fail_local"]], "poolDestroy": [["push    esi", "mov     esi, pool", "push    ebx", "push    edx", "mov     ebx, [pool]", "test    p, p", "jz      short loc_2AC5"], ["lea     pool, [pool+0]", "nop"], ["sub     esp, 0Ch", "mov     edx, p", "mov     eax, [pool+14h]", "mov     p, [p]", "push    p", "call    dword ptr [eax+8]", "add     esp, 10h", "test    tem, tem", "jnz     short loc_2AB0"], ["mov     p, [pool+4]", "test    p, p", "jz      short loc_2AE5"], ["lea     pool, [pool+0]"], ["sub     esp, 0Ch", "mov     edx, p", "mov     eax, [pool+14h]", "mov     p, [p]", "push    p", "call    dword ptr [eax+8]", "add     esp, 10h", "test    tem, tem", "jnz     short loc_2AD0"], ["pop     eax", "pop     p", "pop     pool", "retn"]], "nextScaffoldPart": [["push    ebp", "push    edi", "push    esi", "mov     esi, parser", "push    ebx", "sub     esp, 0Ch", "mov     ebx, [parser+160h]", "mov     ebp, [dtd+0B8h]", "test    ebp, ebp", "jz      loc_2BF8"], ["mov     edx, [dtd+0B0h]", "mov     ecx, [dtd+0ACh]", "mov     eax, [dtd+0A4h]", "cmp     edx, ecx", "jb      short loc_2B6F"], ["test    eax, eax", "jz      loc_2C20"], ["cmp     ecx, 4924924h", "ja      loc_2C41"], ["lea     edx, ds:0[ecx*8]", "push    edi", "sub     edx, ecx", "push    edi", "shl     edx, 3", "push    edx", "push    eax", "call    dword ptr [parser+10h]", "add     esp, 10h", "test    temp, temp", "jz      loc_2C41"], ["mov     edx, [dtd+0ACh]", "add     edx, edx", "mov     [dtd+0ACh], edx"], ["mov     [dtd+0A4h], temp", "mov     edx, [dtd+0B0h]"], ["lea     ecx, [edx+1]", "mov     edi, [dtd+0B4h]", "mov     [dtd+0B0h], ecx", "lea     ecx, ds:0[edx*8]", "sub     ecx, edx", "mov     parser, edx", "test    edi, edi", "lea     ecx, [eax+ecx*4]", "jz      short loc_2BCB"], ["mov     dtd, [dtd+0B8h]", "mov     edi, [ebx+edi*4-4]", "lea     ebx, ds:0[edi*8]", "sub     ebx, edi", "lea     ebx, [eax+ebx*4]", "mov     edi, [parent+10h]", "test    edi, edi", "jz      short loc_2BBA"], ["lea     ebp, ds:0[edi*8]", "sub     ebp, edi", "mov     [eax+ebp*4+18h], next"], ["mov     eax, [parent+14h]", "test    eax, eax", "jnz     short loc_2BC4"], ["mov     [parent+0Ch], next"], ["inc     eax", "mov     [parent+10h], next", "mov     [parent+14h], eax"], ["mov     dword ptr [me+18h], 0", "mov     dword ptr [me+14h], 0", "mov     dword ptr [me+10h], 0", "mov     dword ptr [me+0Ch], 0"], ["add     esp, 0Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch", "mov     parser, [parser+1D0h]", "shl     eax, 2", "push    eax", "call    dword ptr [parser+0Ch]", "add     esp, 10h", "mov     [dtd+0B8h], eax", "test    eax, eax", "jz      short loc_2C41"], ["mov     dword ptr [eax], 0", "jmp     loc_2B0D"], ["sub     esp, 0Ch", "push    380h", "call    dword ptr [parser+0Ch]", "add     esp, 10h", "test    temp, temp", "jz      short loc_2C41"], ["mov     dword ptr [dtd+0ACh], 20h ; ' '", "jmp     loc_2B63"], ["or      parser, 0FFFFFFFFh", "jmp     short loc_2BE7"]], "handleUnknownEncoding": [["push    ebp", "push    edi", "push    esi", "mov     esi, parser", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 41Ch", "mov     ebp, [esi+7Ch]", "mov     parser, large gs:14h", "mov     [esp+42Ch+var_20], parser", "xor     parser, parser", "test    ebp, ebp", "jz      short loc_2CE4"], ["mov     edi, esp", "lea     ecx, [esp+42Ch+info.data]", "mov     eax, edi"], ["mov     dword ptr [eax], 0FFFFFFFFh", "add     eax, 4", "cmp     eax, ecx", "jnz     short loc_2C88"], ["mov     [esp+42Ch+info.convert], 0", "mov     [esp+42Ch+info.data], 0", "mov     [esp+42Ch+info.release], 0", "push    eax", "push    edi", "push    encodingName", "mov     eax, [parser+0F4h]", "push    eax", "call    ebp", "add     esp, 10h", "test    eax, eax", "jnz     short loc_2D08"], ["mov     eax, [esp+42Ch+info.release]", "test    eax, eax", "jz      short loc_2CE4"], ["sub     esp, 0Ch", "mov     edx, [esp+438h+info.data]", "push    edx", "call    eax", "add     esp, 10h"], ["mov     eax, 12h"], ["mov     ebx, [esp+42Ch+var_20]", "xor     ebx, large gs:14h", "jnz     loc_2DAF"], ["add     esp, 41Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ebp, [parser+0Ch]", "call    XmlSizeOfUnknownEncoding", "sub     esp, 0Ch", "push    eax", "call    ebp", "add     esp, 10h", "mov     [parser+0ECh], eax", "test    eax, eax", "jz      short loc_2D80"], ["cmp     byte ptr [parser+0E8h], 0", "jnz     short loc_2D78"], ["lea     edx, (XmlInitUnknownEncoding - 2DF78h)[ebx]"], ["mov     ecx, [esp+42Ch+info.data]", "push    ecx", "mov     ebx, [esp+430h+info.convert]", "push    ebx", "push    edi", "push    eax", "call    edx", "add     esp, 10h", "test    enc, enc", "jz      loc_2CC9"], ["mov     edx, [esp+42Ch+info.data]", "mov     [parser+90h], enc", "mov     [parser+0F0h], edx", "mov     edx, [esp+42Ch+info.release]", "mov     [parser+0F8h], edx", "xor     enc, enc", "jmp     loc_2CE9"], ["lea     edx, (XmlInitUnknownEncodingNS - 2DF78h)[ebx]", "jmp     short loc_2D32"], ["mov     eax, [esp+42Ch+info.release]", "test    eax, eax", "jz      short loc_2DA5"], ["sub     esp, 0Ch", "mov     parser, [esp+438h+info.data]", "push    esi", "call    eax", "add     esp, 10h", "mov     eax, 1", "jmp     loc_2CE9"], ["mov     eax, 1", "jmp     loc_2CE9"], ["call    __stack_chk_fail_local"]], "unsignedCharToPrintable": [["and     c, 0FFh", "call    __x86_get_pc_thunk_dx", "add     edx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     ecx, ds:(jpt_2DDC - 2DF78h)[edx+eax*4]; switch 256 cases", "add     ecx, edx", "jmp     ecx; switch jump"], ["lea     eax, (aXfe - 2DF78h)[edx]; jumptable 00002DDC case 254"], ["add     esp, 0Ch", "retn"], ["lea     eax, (aXfd - 2DF78h)[edx]; jumptable 00002DDC case 253", "jmp     short loc_2DE4"], ["lea     eax, (aXfc - 2DF78h)[edx]; jumptable 00002DDC case 252", "jmp     short loc_2DE4"], ["lea     eax, (aXfb - 2DF78h)[edx]; jumptable 00002DDC case 251", "jmp     short loc_2DE4"], ["lea     eax, (aXfa - 2DF78h)[edx]; jumptable 00002DDC case 250", "jmp     short loc_2DE4"], ["lea     eax, (aXf9 - 2DF78h)[edx]; jumptable 00002DDC case 249", "jmp     short loc_2DE4"], ["lea     eax, (aXf8 - 2DF78h)[edx]; jumptable 00002DDC case 248", "jmp     short loc_2DE4"], ["lea     eax, (aXf7 - 2DF78h)[edx]; jumptable 00002DDC case 247", "jmp     short loc_2DE4"], ["lea     eax, (aXf6 - 2DF78h)[edx]; jumptable 00002DDC case 246", "jmp     short loc_2DE4"], ["lea     eax, (aXf5 - 2DF78h)[edx]; jumptable 00002DDC case 245", "jmp     short loc_2DE4"], ["lea     eax, (aXf4 - 2DF78h)[edx]; jumptable 00002DDC case 244", "jmp     short loc_2DE4"], ["lea     eax, (aXf3 - 2DF78h)[edx]; jumptable 00002DDC case 243", "jmp     short loc_2DE4"], ["lea     eax, (aXf2 - 2DF78h)[edx]; jumptable 00002DDC case 242", "jmp     short loc_2DE4"], ["lea     eax, (aXf1 - 2DF78h)[edx]; jumptable 00002DDC case 241", "jmp     short loc_2DE4"], ["lea     eax, (aXf0 - 2DF78h)[edx]; jumptable 00002DDC case 240", "jmp     short loc_2DE4"], ["lea     eax, (aXef - 2DF78h)[edx]; jumptable 00002DDC case 239", "jmp     short loc_2DE4"], ["lea     eax, (aXee - 2DF78h)[edx]; jumptable 00002DDC case 238", "jmp     loc_2DE4"], ["lea     eax, (aXed - 2DF78h)[edx]; jumptable 00002DDC case 237", "jmp     loc_2DE4"], ["lea     eax, (aXec - 2DF78h)[edx]; jumptable 00002DDC case 236", "jmp     loc_2DE4"], ["lea     eax, (aXeb - 2DF78h)[edx]; jumptable 00002DDC case 235", "jmp     loc_2DE4"], ["lea     eax, (aXea - 2DF78h)[edx]; jumptable 00002DDC case 234", "jmp     loc_2DE4"], ["lea     eax, (aXe9 - 2DF78h)[edx]; jumptable 00002DDC case 233", "jmp     loc_2DE4"], ["lea     eax, (aXe8 - 2DF78h)[edx]; jumptable 00002DDC case 232", "jmp     loc_2DE4"], ["lea     eax, (aXe7 - 2DF78h)[edx]; jumptable 00002DDC case 231", "jmp     loc_2DE4"], ["lea     eax, (aXe6 - 2DF78h)[edx]; jumptable 00002DDC case 230", "jmp     loc_2DE4"], ["lea     eax, (aXe5 - 2DF78h)[edx]; jumptable 00002DDC case 229", "jmp     loc_2DE4"], ["lea     eax, (aXe4 - 2DF78h)[edx]; jumptable 00002DDC case 228", "jmp     loc_2DE4"], ["lea     eax, (aXe3 - 2DF78h)[edx]; jumptable 00002DDC case 227", "jmp     loc_2DE4"], ["lea     eax, (aXe2 - 2DF78h)[edx]; jumptable 00002DDC case 226", "jmp     loc_2DE4"], ["lea     eax, (aXe1 - 2DF78h)[edx]; jumptable 00002DDC case 225", "jmp     loc_2DE4"], ["lea     eax, (aXe0 - 2DF78h)[edx]; jumptable 00002DDC case 224", "jmp     loc_2DE4"], ["lea     eax, (aXdf - 2DF78h)[edx]; jumptable 00002DDC case 223", "jmp     loc_2DE4"], ["lea     eax, (aXde - 2DF78h)[edx]; jumptable 00002DDC case 222", "jmp     loc_2DE4"], ["lea     eax, (aXdd - 2DF78h)[edx]; jumptable 00002DDC case 221", "jmp     loc_2DE4"], ["lea     eax, (aXdc - 2DF78h)[edx]; jumptable 00002DDC case 220", "jmp     loc_2DE4"], ["lea     eax, (aXdb - 2DF78h)[edx]; jumptable 00002DDC case 219", "jmp     loc_2DE4"], ["lea     eax, (aXda - 2DF78h)[edx]; jumptable 00002DDC case 218", "jmp     loc_2DE4"], ["lea     eax, (aXd9 - 2DF78h)[edx]; jumptable 00002DDC case 217", "jmp     loc_2DE4"], ["lea     eax, (aXd8 - 2DF78h)[edx]; jumptable 00002DDC case 216", "jmp     loc_2DE4"], ["lea     eax, (aXd7 - 2DF78h)[edx]; jumptable 00002DDC case 215", "jmp     loc_2DE4"], ["lea     eax, (aXd6 - 2DF78h)[edx]; jumptable 00002DDC case 214", "jmp     loc_2DE4"], ["lea     eax, (aXd5 - 2DF78h)[edx]; jumptable 00002DDC case 213", "jmp     loc_2DE4"], ["lea     eax, (aXd4 - 2DF78h)[edx]; jumptable 00002DDC case 212", "jmp     loc_2DE4"], ["lea     eax, (aXd3 - 2DF78h)[edx]; jumptable 00002DDC case 211", "jmp     loc_2DE4"], ["lea     eax, (aXd2 - 2DF78h)[edx]; jumptable 00002DDC case 210", "jmp     loc_2DE4"], ["lea     eax, (aXd1 - 2DF78h)[edx]; jumptable 00002DDC case 209", "jmp     loc_2DE4"], ["lea     eax, (aXd0 - 2DF78h)[edx]; jumptable 00002DDC case 208", "jmp     loc_2DE4"], ["lea     eax, (aXcf - 2DF78h)[edx]; jumptable 00002DDC case 207", "jmp     loc_2DE4"], ["lea     eax, (aXce - 2DF78h)[edx]; jumptable 00002DDC case 206", "jmp     loc_2DE4"], ["lea     eax, (aXcd - 2DF78h)[edx]; jumptable 00002DDC case 205", "jmp     loc_2DE4"], ["lea     eax, (aXcc - 2DF78h)[edx]; jumptable 00002DDC case 204", "jmp     loc_2DE4"], ["lea     eax, (aXcb - 2DF78h)[edx]; jumptable 00002DDC case 203", "jmp     loc_2DE4"], ["lea     eax, (aXca - 2DF78h)[edx]; jumptable 00002DDC case 202", "jmp     loc_2DE4"], ["lea     eax, (aXc9 - 2DF78h)[edx]; jumptable 00002DDC case 201", "jmp     loc_2DE4"], ["lea     eax, (aXc8 - 2DF78h)[edx]; jumptable 00002DDC case 200", "jmp     loc_2DE4"], ["lea     eax, (aXc7 - 2DF78h)[edx]; jumptable 00002DDC case 199", "jmp     loc_2DE4"], ["lea     eax, (aXc6 - 2DF78h)[edx]; jumptable 00002DDC case 198", "jmp     loc_2DE4"], ["lea     eax, (aXc5 - 2DF78h)[edx]; jumptable 00002DDC case 197", "jmp     loc_2DE4"], ["lea     eax, (aXc4 - 2DF78h)[edx]; jumptable 00002DDC case 196", "jmp     loc_2DE4"], ["lea     eax, (aXc3 - 2DF78h)[edx]; jumptable 00002DDC case 195", "jmp     loc_2DE4"], ["lea     eax, (aXc2 - 2DF78h)[edx]; jumptable 00002DDC case 194", "jmp     loc_2DE4"], ["lea     eax, (aXc1 - 2DF78h)[edx]; jumptable 00002DDC case 193", "jmp     loc_2DE4"], ["lea     eax, (aXc0 - 2DF78h)[edx]; jumptable 00002DDC case 192", "jmp     loc_2DE4"], ["lea     eax, (aXbf - 2DF78h)[edx]; jumptable 00002DDC case 191", "jmp     loc_2DE4"], ["lea     eax, (aXbe - 2DF78h)[edx]; jumptable 00002DDC case 190", "jmp     loc_2DE4"], ["lea     eax, (aXbd - 2DF78h)[edx]; jumptable 00002DDC case 189", "jmp     loc_2DE4"], ["lea     eax, (aXbc - 2DF78h)[edx]; jumptable 00002DDC case 188", "jmp     loc_2DE4"], ["lea     eax, (aXbb - 2DF78h)[edx]; jumptable 00002DDC case 187", "jmp     loc_2DE4"], ["lea     eax, (aXba - 2DF78h)[edx]; jumptable 00002DDC case 186", "jmp     loc_2DE4"], ["lea     eax, (aXb9 - 2DF78h)[edx]; jumptable 00002DDC case 185", "jmp     loc_2DE4"], ["lea     eax, (aXb8 - 2DF78h)[edx]; jumptable 00002DDC case 184", "jmp     loc_2DE4"], ["lea     eax, (aXb7 - 2DF78h)[edx]; jumptable 00002DDC case 183", "jmp     loc_2DE4"], ["lea     eax, (aXb6 - 2DF78h)[edx]; jumptable 00002DDC case 182", "jmp     loc_2DE4"], ["lea     eax, (aXb5 - 2DF78h)[edx]; jumptable 00002DDC case 181", "jmp     loc_2DE4"], ["lea     eax, (aXb4 - 2DF78h)[edx]; jumptable 00002DDC case 180", "jmp     loc_2DE4"], ["lea     eax, (aXb3 - 2DF78h)[edx]; jumptable 00002DDC case 179", "jmp     loc_2DE4"], ["lea     eax, (aXb2 - 2DF78h)[edx]; jumptable 00002DDC case 178", "jmp     loc_2DE4"], ["lea     eax, (aXb1 - 2DF78h)[edx]; jumptable 00002DDC case 177", "jmp     loc_2DE4"], ["lea     eax, (aXb0 - 2DF78h)[edx]; jumptable 00002DDC case 176", "jmp     loc_2DE4"], ["lea     eax, (aXaf - 2DF78h)[edx]; jumptable 00002DDC case 175", "jmp     loc_2DE4"], ["lea     eax, (aXae - 2DF78h)[edx]; jumptable 00002DDC case 174", "jmp     loc_2DE4"], ["lea     eax, (aXad - 2DF78h)[edx]; jumptable 00002DDC case 173", "jmp     loc_2DE4"], ["lea     eax, (aXac - 2DF78h)[edx]; jumptable 00002DDC case 172", "jmp     loc_2DE4"], ["lea     eax, (aXab - 2DF78h)[edx]; jumptable 00002DDC case 171", "jmp     loc_2DE4"], ["lea     eax, (aXaa - 2DF78h)[edx]; jumptable 00002DDC case 170", "jmp     loc_2DE4"], ["lea     eax, (aXa9 - 2DF78h)[edx]; jumptable 00002DDC case 169", "jmp     loc_2DE4"], ["lea     eax, (aXa8 - 2DF78h)[edx]; jumptable 00002DDC case 168", "jmp     loc_2DE4"], ["lea     eax, (aXa7 - 2DF78h)[edx]; jumptable 00002DDC case 167", "jmp     loc_2DE4"], ["lea     eax, (aXa6 - 2DF78h)[edx]; jumptable 00002DDC case 166", "jmp     loc_2DE4"], ["lea     eax, (aXa5 - 2DF78h)[edx]; jumptable 00002DDC case 165", "jmp     loc_2DE4"], ["lea     eax, (aXa4 - 2DF78h)[edx]; jumptable 00002DDC case 164", "jmp     loc_2DE4"], ["lea     eax, (aXa3 - 2DF78h)[edx]; jumptable 00002DDC case 163", "jmp     loc_2DE4"], ["lea     eax, (aXa2 - 2DF78h)[edx]; jumptable 00002DDC case 162", "jmp     loc_2DE4"], ["lea     eax, (aXa1 - 2DF78h)[edx]; jumptable 00002DDC case 161", "jmp     loc_2DE4"], ["lea     eax, (aXa0 - 2DF78h)[edx]; jumptable 00002DDC case 160", "jmp     loc_2DE4"], ["lea     eax, (aX9f - 2DF78h)[edx]; jumptable 00002DDC case 159", "jmp     loc_2DE4"], ["lea     eax, (aX9e - 2DF78h)[edx]; jumptable 00002DDC case 158", "jmp     loc_2DE4"], ["lea     eax, (aX9d - 2DF78h)[edx]; jumptable 00002DDC case 157", "jmp     loc_2DE4"], ["lea     eax, (aX9c - 2DF78h)[edx]; jumptable 00002DDC case 156", "jmp     loc_2DE4"], ["lea     eax, (aX9b - 2DF78h)[edx]; jumptable 00002DDC case 155", "jmp     loc_2DE4"], ["lea     eax, (aX9a - 2DF78h)[edx]; jumptable 00002DDC case 154", "jmp     loc_2DE4"], ["lea     eax, (aX99 - 2DF78h)[edx]; jumptable 00002DDC case 153", "jmp     loc_2DE4"], ["lea     eax, (aX98 - 2DF78h)[edx]; jumptable 00002DDC case 152", "jmp     loc_2DE4"], ["lea     eax, (aX97 - 2DF78h)[edx]; jumptable 00002DDC case 151", "jmp     loc_2DE4"], ["lea     eax, (aX96 - 2DF78h)[edx]; jumptable 00002DDC case 150", "jmp     loc_2DE4"], ["lea     eax, (aX95 - 2DF78h)[edx]; jumptable 00002DDC case 149", "jmp     loc_2DE4"], ["lea     eax, (aX94 - 2DF78h)[edx]; jumptable 00002DDC case 148", "jmp     loc_2DE4"], ["lea     eax, (aX93 - 2DF78h)[edx]; jumptable 00002DDC case 147", "jmp     loc_2DE4"], ["lea     eax, (aX92 - 2DF78h)[edx]; jumptable 00002DDC case 146", "jmp     loc_2DE4"], ["lea     eax, (aX91 - 2DF78h)[edx]; jumptable 00002DDC case 145", "jmp     loc_2DE4"], ["lea     eax, (aX90 - 2DF78h)[edx]; jumptable 00002DDC case 144", "jmp     loc_2DE4"], ["lea     eax, (aX8f - 2DF78h)[edx]; jumptable 00002DDC case 143", "jmp     loc_2DE4"], ["lea     eax, (aX8e - 2DF78h)[edx]; jumptable 00002DDC case 142", "jmp     loc_2DE4"], ["lea     eax, (aX8d - 2DF78h)[edx]; jumptable 00002DDC case 141", "jmp     loc_2DE4"], ["lea     eax, (aX8c - 2DF78h)[edx]; jumptable 00002DDC case 140", "jmp     loc_2DE4"], ["lea     eax, (aX8b - 2DF78h)[edx]; jumptable 00002DDC case 139", "jmp     loc_2DE4"], ["lea     eax, (aX8a - 2DF78h)[edx]; jumptable 00002DDC case 138", "jmp     loc_2DE4"], ["lea     eax, (aX89 - 2DF78h)[edx]; jumptable 00002DDC case 137", "jmp     loc_2DE4"], ["lea     eax, (aX88 - 2DF78h)[edx]; jumptable 00002DDC case 136", "jmp     loc_2DE4"], ["lea     eax, (aX87 - 2DF78h)[edx]; jumptable 00002DDC case 135", "jmp     loc_2DE4"], ["lea     eax, (aX86 - 2DF78h)[edx]; jumptable 00002DDC case 134", "jmp     loc_2DE4"], ["lea     eax, (aX85 - 2DF78h)[edx]; jumptable 00002DDC case 133", "jmp     loc_2DE4"], ["lea     eax, (aX84 - 2DF78h)[edx]; jumptable 00002DDC case 132", "jmp     loc_2DE4"], ["lea     eax, (aX83 - 2DF78h)[edx]; jumptable 00002DDC case 131", "jmp     loc_2DE4"], ["lea     eax, (aX82 - 2DF78h)[edx]; jumptable 00002DDC case 130", "jmp     loc_2DE4"], ["lea     eax, (aX81 - 2DF78h)[edx]; jumptable 00002DDC case 129", "jmp     loc_2DE4"], ["lea     eax, (aX80 - 2DF78h)[edx]; jumptable 00002DDC case 128", "jmp     loc_2DE4"], ["lea     eax, (aX7f - 2DF78h)[edx]; jumptable 00002DDC case 127", "jmp     loc_2DE4"], ["lea     eax, (asc_1FB30+4 - 2DF78h)[edx]; jumptable 00002DDC case 126", "jmp     loc_2DE4"], ["lea     eax, (asc_1FB30+2 - 2DF78h)[edx]; jumptable 00002DDC case 125", "jmp     loc_2DE4"], ["lea     eax, (asc_1FB30 - 2DF78h)[edx]; jumptable 00002DDC case 124", "jmp     loc_2DE4"], ["lea     eax, (aVwz+6 - 2DF78h)[edx]; jumptable 00002DDC case 123", "jmp     loc_2DE4"], ["lea     eax, (aVwz+4 - 2DF78h)[edx]; jumptable 00002DDC case 122", "jmp     loc_2DE4"], ["lea     eax, (aOutOfMemory+0Ch - 2DF78h)[edx]; jumptable 00002DDC case 121", "jmp     loc_2DE4"], ["lea     eax, (aUnboundPrefix+0Dh - 2DF78h)[edx]; jumptable 00002DDC case 120", "jmp     loc_2DE4"], ["lea     eax, (aVwz+2 - 2DF78h)[edx]; jumptable 00002DDC case 119", "jmp     loc_2DE4"], ["lea     eax, (aVwz - 2DF78h)[edx]; jumptable 00002DDC case 118", "jmp     loc_2DE4"], ["lea     eax, (aPqsu+6 - 2DF78h)[edx]; jumptable 00002DDC case 117", "jmp     loc_2DE4"], ["lea     eax, (aT+1 - 2DF78h)[edx]; jumptable 00002DDC case 116", "jmp     loc_2DE4"], ["lea     eax, (aPqsu+4 - 2DF78h)[edx]; jumptable 00002DDC case 115", "jmp     loc_2DE4"], ["lea     eax, (aR+1 - 2DF78h)[edx]; jumptable 00002DDC case 114", "jmp     loc_2DE4"], ["lea     eax, (aPqsu+2 - 2DF78h)[edx]; jumptable 00002DDC case 113", "jmp     loc_2DE4"], ["lea     eax, (aPqsu - 2DF78h)[edx]; jumptable 00002DDC case 112", "jmp     loc_2DE4"], ["lea     eax, (aJklo+6 - 2DF78h)[edx]; jumptable 00002DDC case 111", "jmp     loc_2DE4"], ["lea     eax, (aN+1 - 2DF78h)[edx]; jumptable 00002DDC case 110", "jmp     loc_2DE4"], ["lea     eax, (aGetrandom_0+8 - 2DF78h)[edx]; jumptable 00002DDC case 109", "jmp     loc_2DE4"], ["lea     eax, (aJklo+4 - 2DF78h)[edx]; jumptable 00002DDC case 108", "jmp     loc_2DE4"], ["lea     eax, (aJklo+2 - 2DF78h)[edx]; jumptable 00002DDC case 107", "jmp     loc_2DE4"], ["lea     eax, (aJklo - 2DF78h)[edx]; jumptable 00002DDC case 106", "jmp     loc_2DE4"], ["lea     eax, (aCfhi+6 - 2DF78h)[edx]; jumptable 00002DDC case 105", "jmp     loc_2DE4"], ["lea     eax, (aCfhi+4 - 2DF78h)[edx]; jumptable 00002DDC case 104", "jmp     loc_2DE4"], ["lea     eax, (aMismatchedTag+0Dh - 2DF78h)[edx]; jumptable 00002DDC case 103", "jmp     loc_2DE4"], ["lea     eax, (aCfhi+2 - 2DF78h)[edx]; jumptable 00002DDC case 102", "jmp     loc_2DE4"], ["lea     eax, (aRecursiveEntit+19h - 2DF78h)[edx]; jumptable 00002DDC case 101", "jmp     loc_2DE4"], ["lea     eax, (aParserSuspende+0Fh - 2DF78h)[edx]; jumptable 00002DDC case 100", "jmp     loc_2DE4"], ["lea     eax, (aCfhi - 2DF78h)[edx]; jumptable 00002DDC case 99", "jmp     loc_2DE4"], ["lea     eax, (aAb+6 - 2DF78h)[edx]; jumptable 00002DDC case 98", "jmp     loc_2DE4"], ["lea     eax, (aAb+4 - 2DF78h)[edx]; jumptable 00002DDC case 97", "jmp     loc_2DE4"], ["lea     eax, (aAb+2 - 2DF78h)[edx]; jumptable 00002DDC case 96", "jmp     loc_2DE4"], ["lea     eax, (aAb - 2DF78h)[edx]; jumptable 00002DDC case 95", "jmp     loc_2DE4"], ["lea     eax, (asc_1FB06 - 2DF78h)[edx]; jumptable 00002DDC case 94", "jmp     loc_2DE4"], ["lea     eax, (asc_1FB04 - 2DF78h)[edx]; jumptable 00002DDC case 93", "jmp     loc_2DE4"], ["lea     eax, (asc_1FB01 - 2DF78h)[edx]; jumptable 00002DDC case 92", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAFF - 2DF78h)[edx]; jumptable 00002DDC case 91", "jmp     loc_2DE4"], ["lea     eax, (aZ - 2DF78h)[edx]; jumptable 00002DDC case 90", "jmp     loc_2DE4"], ["lea     eax, (aY - 2DF78h)[edx]; jumptable 00002DDC case 89", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAF9 - 2DF78h)[edx]; jumptable 00002DDC case 88", "jmp     loc_2DE4"], ["lea     eax, (aW - 2DF78h)[edx]; jumptable 00002DDC case 87", "jmp     loc_2DE4"], ["lea     eax, (aV - 2DF78h)[edx]; jumptable 00002DDC case 86", "jmp     loc_2DE4"], ["lea     eax, (aU - 2DF78h)[edx]; jumptable 00002DDC case 85", "jmp     loc_2DE4"], ["lea     eax, (aT_0 - 2DF78h)[edx]; jumptable 00002DDC case 84", "jmp     loc_2DE4"], ["lea     eax, (aXmlBlapActThre+11h - 2DF78h)[edx]; jumptable 00002DDC case 83", "jmp     loc_2DE4"], ["lea     eax, (aDir+2 - 2DF78h)[edx]; jumptable 00002DDC case 82", "jmp     loc_2DE4"], ["lea     eax, (aQ - 2DF78h)[edx]; jumptable 00002DDC case 81", "jmp     loc_2DE4"], ["lea     eax, (aXmlBlapMaxAmp+0Fh - 2DF78h)[edx]; jumptable 00002DDC case 80", "jmp     loc_2DE4"], ["lea     eax, (aO - 2DF78h)[edx]; jumptable 00002DDC case 79", "jmp     loc_2DE4"], ["lea     eax, (aN_0 - 2DF78h)[edx]; jumptable 00002DDC case 78", "jmp     loc_2DE4"], ["lea     eax, (aM - 2DF78h)[edx]; jumptable 00002DDC case 77", "jmp     loc_2DE4"], ["lea     eax, (aStatusNull+0Dh - 2DF78h)[edx]; jumptable 00002DDC case 76", "jmp     loc_2DE4"], ["lea     eax, (aK - 2DF78h)[edx]; jumptable 00002DDC case 75", "jmp     loc_2DE4"], ["lea     eax, (aJ - 2DF78h)[edx]; jumptable 00002DDC case 74", "jmp     loc_2DE4"], ["lea     eax, (aI - 2DF78h)[edx]; jumptable 00002DDC case 73", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAE1 - 2DF78h)[edx]; jumptable 00002DDC case 72", "jmp     loc_2DE4"], ["lea     eax, (aExpatAccountin_0+15h - 2DF78h)[edx]; jumptable 00002DDC case 71", "jmp     loc_2DE4"], ["lea     eax, (aX1f+3 - 2DF78h)[edx]; jumptable 00002DDC case 70", "jmp     loc_2DE4"], ["lea     eax, (aX1e+3 - 2DF78h)[edx]; jumptable 00002DDC case 69", "jmp     loc_2DE4"], ["lea     eax, (aX1d+3 - 2DF78h)[edx]; jumptable 00002DDC case 68", "jmp     loc_2DE4"], ["lea     eax, (aX1c+3 - 2DF78h)[edx]; jumptable 00002DDC case 67", "jmp     loc_2DE4"], ["lea     eax, (aX1b+3 - 2DF78h)[edx]; jumptable 00002DDC case 66", "jmp     loc_2DE4"], ["lea     eax, (aX1a+3 - 2DF78h)[edx]; jumptable 00002DDC case 65", "jmp     loc_2DE4"], ["lea     eax, (asc_1FADF - 2DF78h)[edx]; jumptable 00002DDC case 64", "jmp     loc_2DE4"], ["lea     eax, (asc_1FADD - 2DF78h)[edx]; jumptable 00002DDC case 63", "jmp     loc_2DE4"], ["lea     eax, (asc_1FADB - 2DF78h)[edx]; jumptable 00002DDC case 62", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAD9 - 2DF78h)[edx]; jumptable 00002DDC case 61", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAD7 - 2DF78h)[edx]; jumptable 00002DDC case 60", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAD5 - 2DF78h)[edx]; jumptable 00002DDC case 59", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAD3 - 2DF78h)[edx]; jumptable 00002DDC case 58", "jmp     loc_2DE4"], ["lea     eax, (aExpat229+0Ah - 2DF78h)[edx]; jumptable 00002DDC case 57", "jmp     loc_2DE4"], ["lea     eax, (aX18+3 - 2DF78h)[edx]; jumptable 00002DDC case 56", "jmp     loc_2DE4"], ["lea     eax, (aX17+3 - 2DF78h)[edx]; jumptable 00002DDC case 55", "jmp     loc_2DE4"], ["lea     eax, (aX16+3 - 2DF78h)[edx]; jumptable 00002DDC case 54", "jmp     loc_2DE4"], ["lea     eax, (aX15+3 - 2DF78h)[edx]; jumptable 00002DDC case 53", "jmp     loc_2DE4"], ["lea     eax, (aX14+3 - 2DF78h)[edx]; jumptable 00002DDC case 52", "jmp     loc_2DE4"], ["lea     eax, (aX13+3 - 2DF78h)[edx]; jumptable 00002DDC case 51", "jmp     loc_2DE4"], ["lea     eax, (aX12+3 - 2DF78h)[edx]; jumptable 00002DDC case 50", "jmp     loc_2DE4"], ["lea     eax, (aX11+3 - 2DF78h)[edx]; jumptable 00002DDC case 49", "jmp     loc_2DE4"], ["lea     eax, (aGettimeofdayRe+14h - 2DF78h)[edx]; jumptable 00002DDC case 48", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAD1 - 2DF78h)[edx]; jumptable 00002DDC case 47", "jmp     loc_2DE4"], ["lea     eax, (asc_1FACF - 2DF78h)[edx]; jumptable 00002DDC case 46", "jmp     loc_2DE4"], ["lea     eax, (asc_1FACD - 2DF78h)[edx]; jumptable 00002DDC case 45", "jmp     loc_2DE4"], ["lea     eax, (asc_1FACB - 2DF78h)[edx]; jumptable 00002DDC case 44", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAC9 - 2DF78h)[edx]; jumptable 00002DDC case 43", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAC7 - 2DF78h)[edx]; jumptable 00002DDC case 42", "jmp     loc_2DE4"], ["lea     eax, (aFallback4+0Ah - 2DF78h)[edx]; jumptable 00002DDC case 41", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAC5 - 2DF78h)[edx]; jumptable 00002DDC case 40", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAC3 - 2DF78h)[edx]; jumptable 00002DDC case 39", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAC1 - 2DF78h)[edx]; jumptable 00002DDC case 38", "jmp     loc_2DE4"], ["lea     eax, (asc_1FABF - 2DF78h)[edx]; jumptable 00002DDC case 37", "jmp     loc_2DE4"], ["lea     eax, (asc_1FABD - 2DF78h)[edx]; jumptable 00002DDC case 36", "jmp     loc_2DE4"], ["lea     eax, (asc_1FABB - 2DF78h)[edx]; jumptable 00002DDC case 35", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAB8 - 2DF78h)[edx]; jumptable 00002DDC case 34", "jmp     loc_2DE4"], ["lea     eax, (asc_1FAB6 - 2DF78h)[edx]; jumptable 00002DDC case 33", "jmp     loc_2DE4"], ["lea     eax, (aOpen_0+4 - 2DF78h)[edx]; jumptable 00002DDC case 32", "jmp     loc_2DE4"], ["lea     eax, (aX1f - 2DF78h)[edx]; jumptable 00002DDC case 31", "jmp     loc_2DE4"], ["lea     eax, (aX1e - 2DF78h)[edx]; jumptable 00002DDC case 30", "jmp     loc_2DE4"], ["lea     eax, (aX1d - 2DF78h)[edx]; jumptable 00002DDC case 29", "jmp     loc_2DE4"], ["lea     eax, (aX1c - 2DF78h)[edx]; jumptable 00002DDC case 28", "jmp     loc_2DE4"], ["lea     eax, (aX1b - 2DF78h)[edx]; jumptable 00002DDC case 27", "jmp     loc_2DE4"], ["lea     eax, (aX1a - 2DF78h)[edx]; jumptable 00002DDC case 26", "jmp     loc_2DE4"], ["lea     eax, (aX19 - 2DF78h)[edx]; jumptable 00002DDC case 25", "jmp     loc_2DE4"], ["lea     eax, (aX18 - 2DF78h)[edx]; jumptable 00002DDC case 24", "jmp     loc_2DE4"], ["lea     eax, (aX17 - 2DF78h)[edx]; jumptable 00002DDC case 23", "jmp     loc_2DE4"], ["lea     eax, (aX16 - 2DF78h)[edx]; jumptable 00002DDC case 22", "jmp     loc_2DE4"], ["lea     eax, (aX15 - 2DF78h)[edx]; jumptable 00002DDC case 21", "jmp     loc_2DE4"], ["lea     eax, (aX14 - 2DF78h)[edx]; jumptable 00002DDC case 20", "jmp     loc_2DE4"], ["lea     eax, (aX13 - 2DF78h)[edx]; jumptable 00002DDC case 19", "jmp     loc_2DE4"], ["lea     eax, (aX12 - 2DF78h)[edx]; jumptable 00002DDC case 18", "jmp     loc_2DE4"], ["lea     eax, (aX11 - 2DF78h)[edx]; jumptable 00002DDC case 17", "jmp     loc_2DE4"], ["lea     eax, (aX10 - 2DF78h)[edx]; jumptable 00002DDC case 16", "jmp     loc_2DE4"], ["lea     eax, (aXf - 2DF78h)[edx]; jumptable 00002DDC case 15", "jmp     loc_2DE4"], ["lea     eax, (aXe - 2DF78h)[edx]; jumptable 00002DDC case 14", "jmp     loc_2DE4"], ["lea     eax, (aR - 2DF78h)[edx]; jumptable 00002DDC case 13", "jmp     loc_2DE4"], ["lea     eax, (aXc - 2DF78h)[edx]; jumptable 00002DDC case 12", "jmp     loc_2DE4"], ["lea     eax, (aXb - 2DF78h)[edx]; jumptable 00002DDC case 11", "jmp     loc_2DE4"], ["lea     eax, (aN - 2DF78h)[edx]; jumptable 00002DDC case 10", "jmp     loc_2DE4"], ["lea     eax, (aT - 2DF78h)[edx]; jumptable 00002DDC case 9", "jmp     loc_2DE4"], ["lea     eax, (aX8 - 2DF78h)[edx]; jumptable 00002DDC case 8", "jmp     loc_2DE4"], ["lea     eax, (aX7 - 2DF78h)[edx]; jumptable 00002DDC case 7", "jmp     loc_2DE4"], ["lea     eax, (aX6 - 2DF78h)[edx]; jumptable 00002DDC case 6", "jmp     loc_2DE4"], ["lea     eax, (aX5 - 2DF78h)[edx]; jumptable 00002DDC case 5", "jmp     loc_2DE4"], ["lea     eax, (aX4 - 2DF78h)[edx]; jumptable 00002DDC case 4", "jmp     loc_2DE4"], ["lea     eax, (aX3 - 2DF78h)[edx]; jumptable 00002DDC case 3", "jmp     loc_2DE4"], ["lea     eax, (aX2 - 2DF78h)[edx]; jumptable 00002DDC case 2", "jmp     loc_2DE4"], ["lea     eax, (aX1 - 2DF78h)[edx]; jumptable 00002DDC case 1", "jmp     loc_2DE4"], ["lea     eax, (a0 - 2DF78h)[edx]; jumptable 00002DDC case 0", "jmp     loc_2DE4"], ["lea     eax, (aXff - 2DF78h)[edx]; jumptable 00002DDC case 255", "jmp     loc_2DE4"]], "addBinding": [["push    ebp", "mov     ebp, parser", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "sub     esp, 2Ch", "mov     [esp+3Ch+var_2C], edi", "mov     edi, [esp+3Ch+uri]", "mov     [esp+3Ch+prefix], prefix_0", "mov     [esp+3Ch+attId], attId_0", "mov     al, byte ptr ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi]", "mov     prefix_0, [prefix_0]", "test    al, al", "jnz     loc_3A00"], ["xor     esi, esi", "mov     eax, 1Ch", "test    edx, edx", "jnz     loc_39F1"], ["cmp     byte ptr [parser+1D4h], 1", "sbb     esi, 0FFFFFFFFh", "mov     edx, [parser+174h]", "test    edx, edx", "jz      loc_3AF8"], ["cmp     [b_0+18h], len", "jge     short loc_393E"], ["cmp     len, 7FFFFFE7h", "jg      loc_3B3D"], ["push    ecx", "lea     ebx, [len+18h]", "push    ecx", "push    ebx", "mov     eax, [b_0+10h]", "push    eax", "mov     [esp+4Ch+b], b_0", "call    dword ptr [parser+10h]", "add     esp, 10h", "test    temp, temp", "jz      loc_3B3D"], ["mov     edx, [esp+3Ch+b]", "mov     [edx+10h], temp", "mov     [edx+18h], ebx"], ["mov     eax, [edx+4]", "mov     [parser+174h], eax", "mov     eax, [edx+10h]"], ["mov     [esp+3Ch+b], b_0", "mov     [b_0+14h], len", "push    edx", "push    len; n", "push    edi; src", "push    eax; dest", "mov     ebx, [esp+4Ch+var_2C]", "call    _memcpy", "mov     al, [parser+1D4h]", "add     esp, 10h", "test    al, al", "mov     edx, [esp+3Ch+b]", "jz      short loc_3976"], ["mov     ecx, [edx+10h]", "mov     [ecx+len-1], al"], ["mov     ecx, [esp+3Ch+prefix]", "mov     eax, [esp+3Ch+attId]", "mov     [edx], ecx", "mov     [edx+0Ch], eax", "mov     eax, [ecx+4]", "mov     [edx+8], eax", "mov     eax, edx", "cmp     byte ptr ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], 0", "jnz     short loc_39A5"], ["mov     eax, [parser+160h]", "add     eax, 98h", "cmp     ecx, eax", "jz      loc_3B55"], ["mov     eax, edx"], ["mov     ecx, [esp+3Ch+prefix]", "mov     [ecx+4], eax", "mov     eax, [esp+3Ch+bindingsPtr]", "mov     eax, [eax]", "mov     [edx+4], eax", "mov     eax, [esp+3Ch+bindingsPtr]", "mov     [eax], edx", "mov     eax, [esp+3Ch+attId]", "test    eax, eax", "jz      loc_3B47"], ["mov     eax, [parser+64h]", "test    eax, eax", "jz      loc_3B47"], ["mov     len, [ecx+4]", "test    esi, esi", "jz      loc_3B4E"], ["push    edx", "mov     ebx, [parser+4]", "push    edi", "mov     edi, [esp+44h+prefix]", "mov     ecx, ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi]", "push    ecx", "push    ebx", "call    eax", "add     esp, 10h", "xor     eax, eax"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     parser", "retn"], ["mov     [esp+3Ch+mustBeXML], 0", "test    edx, edx", "jz      short loc_3A12"], ["cmp     byte ptr [edx], 78h ; 'x'", "jz      loc_3AD0"], ["mov     bl, [esp+3Ch+mustBeXML]", "mov     cl, [parser+0E8h]", "xor     ebx, 1", "xor     esi, esi", "mov     byte ptr [esp+3Ch+b], bl", "mov     dl, 1", "mov     bl, 1", "lea     esi, [esi+0]"], ["test    bl, bl", "jz      short loc_3A39"], ["cmp     len, 24h ; '$'", "jle     short loc_3A90"], ["xor     isXML, isXML"], ["test    byte ptr [esp+3Ch+b], dl", "jz      short loc_3A56"], ["xor     isXMLNS, isXMLNS", "cmp     len, 1Dh", "jg      short loc_3A56"], ["mov     edx, [esp+3Ch+var_2C]", "cmp     [len+edx-0E68Ch], al", "setz    dl"], ["test    cl, cl", "jz      short loc_3A62"], ["cmp     [parser+1D4h], al", "jz      short loc_3AC0"], ["inc     len", "mov     al, byte ptr ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi+len]", "test    al, al", "jnz     short loc_3A30"], ["cmp     len, 24h ; '$'", "setz    al", "and     isXML, eax", "mov     al, [esp+3Ch+mustBeXML]", "cmp     al, bl", "jz      short loc_3AA0"], ["cmp     al, 1", "sbb     eax, eax", "add     esp, 2Ch", "and     eax, 2", "pop     isXML", "add     eax, 26h ; '&'", "pop     len", "pop     edi", "pop     parser", "retn"], ["mov     ebx, [esp+3Ch+var_2C]", "cmp     [len+ebx-0E658h], al", "setz    bl", "jmp     short loc_3A3B"], ["cmp     len, 1Dh", "jnz     loc_38EF"], ["mov     eax, 28h ; '('", "test    dl, dl", "jz      loc_38EF"], ["jmp     loc_39F1"], ["add     esp, 2Ch", "mov     eax, 2", "pop     isXML", "pop     len", "pop     edi", "pop     parser", "retn"], ["cmp     byte ptr [edx+1], 6Dh ; 'm'", "jnz     loc_3A12"], ["cmp     byte ptr [edx+2], 6Ch ; 'l'", "jnz     loc_3A12"], ["mov     cl, [edx+3]", "cmp     cl, 6Eh ; 'n'", "jz      short loc_3B5C"], ["test    cl, cl", "setz    [esp+3Ch+mustBeXML]", "jmp     loc_3A12"], ["sub     esp, 0Ch", "push    1Ch", "call    dword ptr [parser+0Ch]", "add     esp, 10h", "test    b_0, b_0", "mov     [esp+3Ch+b], b_0", "jz      short loc_3B3D"], ["cmp     len, 7FFFFFE7h", "jg      short loc_3B3D"], ["sub     esp, 0Ch", "lea     ebx, [len+18h]", "push    ebx", "call    dword ptr [parser+0Ch]", "mov     edx, [esp+4Ch+b]", "add     esp, 10h", "test    eax, eax", "mov     [edx+10h], eax", "jz      short loc_3B33"], ["mov     [edx+18h], ebx", "jmp     loc_394A"], ["sub     esp, 0Ch", "push    edx", "call    dword ptr [parser+14h]", "add     esp, 10h"], ["mov     eax, 1", "jmp     loc_39F1"], ["xor     eax, eax", "jmp     loc_39F1"], ["xor     edi, edi", "jmp     loc_39DD"], ["xor     eax, eax", "jmp     loc_39A5"], ["cmp     byte ptr [edx+4], 73h ; 's'", "jnz     loc_3A12"], ["cmp     byte ptr [edx+5], 0", "jnz     loc_3A12"], ["mov     eax, 27h ; '''", "jmp     loc_39F1"]], "poolGrow": [["push    ebp", "push    edi", "push    esi", "mov     esi, pool", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     ecx, [pool+4]", "mov     ebp, [pool+10h]", "test    ecx, ecx", "jz      short loc_3BE8"], ["test    ebp, ebp", "jz      loc_3D00"], ["mov     pool, [pool+8]", "mov     edx, [pool]", "sub     eax, ebp", "cmp     eax, [ecx+4]", "jl      loc_3CB0"], ["test    edx, edx", "jz      short loc_3BC5"], ["lea     ecx, [edx+8]", "cmp     ebp, ecx", "jz      loc_3C60"], ["test    eax, eax", "js      short loc_3BDD"], ["cmp     eax, 3FFh", "jle     short loc_3BF8"], ["add     eax, eax", "mov     edi, eax", "js      short loc_3BDD"], ["add     eax, 8", "mov     ebp, edi", "jns     short loc_3C07"], ["xor     eax, eax"], ["add     esp, 0Ch", "pop     ebx", "pop     pool", "pop     edi", "pop     ebp", "retn"], ["mov     pool, [pool+8]", "mov     edx, [pool]", "sub     eax, ebp", "jmp     short loc_3BB6"], ["mov     ebp, 400h", "mov     eax, 408h", "mov     edi, 400h"], ["sub     esp, 0Ch", "mov     edx, [pool+14h]", "push    bytesToAllocate", "call    dword ptr [edx]", "add     esp, 10h", "test    tem, tem", "jz      short loc_3BDD"], ["mov     [tem+4], ebp", "lea     ebp, [tem+8]", "mov     edx, [pool]", "mov     [tem], edx", "mov     [pool], tem", "mov     edx, [pool+10h]", "mov     ecx, [pool+0Ch]", "mov     tem, edx", "cmp     ecx, edx", "jz      short loc_3C43"], ["sub     ecx, edx", "push    eax", "push    ecx; n", "push    edx; src", "push    ebp; dest", "call    _memcpy", "mov     edx, [pool+0Ch]", "mov     eax, [pool+10h]", "add     esp, 10h"], ["sub     edx, eax", "lea     eax, [ebp+edi+0]", "add     edx, ebp", "mov     [pool+10h], ebp", "mov     [pool+8], eax", "mov     [pool+0Ch], edx", "add     esp, 0Ch", "mov     al, 1", "pop     ebx", "pop     pool", "pop     edi", "pop     ebp", "retn"], ["lea     edi, [eax+eax]", "test    blockSize, blockSize", "jle     loc_3BDD"], ["mov     eax, blockSize", "add     eax, 8", "js      loc_3BDD"], ["push    ecx", "mov     ebx, [pool+0Ch]", "push    ecx", "mov     ecx, [pool+14h]", "push    bytesToAllocate", "push    edx", "call    dword ptr [ecx+4]", "add     esp, 10h", "test    temp, temp", "jz      loc_3BDD"], ["mov     [pool], temp", "mov     [temp+4], blockSize", "mov     edx, [pool]", "sub     ebx, ebp", "lea     temp, [edx+8]", "lea     edx, [edx+ebx+8]", "mov     [pool+10h], eax", "add     eax, blockSize", "mov     [pool+8], eax", "mov     [pool+0Ch], edx", "mov     al, 1", "jmp     loc_3BDF"], ["mov     edi, [ecx]", "mov     [ecx], edx", "mov     ecx, [pool+10h]", "mov     edx, [pool+8]", "mov     eax, [pool+4]", "sub     edx, ecx", "mov     [pool+4], tem", "push    edi", "push    edx; n", "mov     [pool], eax", "push    ecx; src", "add     eax, 8", "push    eax; dest", "call    _memcpy", "mov     ebp, [pool+10h]", "mov     ecx, [pool+0Ch]", "mov     edx, [pool]", "sub     ecx, ebp", "add     esp, 10h", "lea     eax, [edx+8]", "lea     ecx, [edx+ecx+8]", "mov     [pool+10h], eax", "mov     [pool+0Ch], ecx", "mov     ecx, [edx+4]", "add     eax, ecx", "mov     [pool+8], eax", "add     esp, 0Ch", "mov     al, 1", "pop     ebx", "pop     pool", "pop     edi", "pop     ebp", "retn"], ["mov     [pool], ecx", "mov     pool, [ecx]", "mov     [pool+4], eax", "mov     dword ptr [ecx], 0", "mov     edx, [pool]", "lea     eax, [edx+8]", "mov     [pool+10h], eax", "mov     edi, [edx+4]", "mov     [pool+0Ch], eax", "add     edi, eax", "mov     al, 1", "mov     [pool+8], edi", "add     esp, 0Ch", "pop     ebx", "pop     pool", "pop     edi", "pop     ebp", "retn"]], "poolCopyString": [["push    esi", "mov     esi, pool", "push    ebx", "mov     ebx, s", "push    ecx", "jmp     short loc_3D52"], ["lea     edx, [eax+1]", "inc     s", "mov     [pool+0Ch], edx", "mov     cl, [ebx-1]", "mov     [eax], cl", "cmp     byte ptr [s-1], 0", "jz      short loc_3D70"], ["mov     eax, [pool+0Ch]", "cmp     eax, [pool+8]", "jnz     short loc_3D40"], ["mov     eax, pool; pool", "call    poolGrow", "test    al, al", "jz      short loc_3D7D"], ["mov     eax, [pool+0Ch]", "jmp     short loc_3D40"], ["mov     edx, [pool+0Ch]", "mov     eax, [pool+10h]", "mov     [pool+10h], edx", "pop     edx", "pop     ebx", "pop     pool", "retn"], ["pop     edx", "xor     eax, eax", "pop     s", "pop     pool", "retn"]], "poolAppend": [["push    ebp", "push    edi", "push    esi", "mov     esi, enc", "push    ebx", "mov     ebx, pool", "sub     esp, 1Ch", "mov     [esp+2Ch+ptr], ptr_0", "mov     ptr_0, [pool+0Ch]", "test    ecx, ecx", "jz      short loc_3DE0"], ["lea     ebp, [pool+0Ch]", "lea     edi, [esp+2Ch+ptr]", "jmp     short loc_3DBB"], ["mov     convert_res, pool; pool", "call    poolGrow", "test    al, al", "jz      short loc_3DE9"], ["sub     esp, 0Ch", "mov     eax, [pool+8]", "push    eax", "push    ebp", "mov     edx, [esp+40h+end]", "push    edx", "push    edi", "push    enc", "call    dword ptr [enc+38h]", "add     esp, 20h", "cmp     convert_res, 1", "ja      short loc_3DB0"], ["mov     convert_res, [pool+10h]; pool", "add     esp, 1Ch", "pop     pool", "pop     enc", "pop     edi", "pop     ebp", "retn"], ["call    poolGrow", "test    al, al", "jnz     short loc_3DA6"], ["add     esp, 1Ch", "xor     eax, eax", "pop     pool", "pop     enc", "pop     edi", "pop     ebp", "retn"]], "poolStoreString": [["push    ebx", "mov     ebx, pool", "sub     esp, 14h", "push    [esp+18h+end]; end", "call    poolAppend", "add     esp, 10h", "test    eax, eax", "jz      short loc_3E40"], ["mov     eax, [pool+0Ch]", "cmp     eax, [pool+8]", "jz      short loc_3E30"], ["lea     edx, [eax+1]", "mov     [pool+0Ch], edx", "mov     byte ptr [eax], 0", "mov     eax, [pool+10h]", "add     esp, 8", "pop     pool", "retn"], ["mov     eax, pool; pool", "call    poolGrow", "test    al, al", "jz      short loc_3E40"], ["mov     eax, [pool+0Ch]", "jmp     short loc_3E1E"], ["add     esp, 8", "xor     eax, eax", "pop     pool", "retn"]], "reportProcessingInstruction": [["push    ebp", "push    edi", "push    esi", "mov     esi, enc", "push    ebx", "mov     ebx, parser", "sub     esp, 1Ch", "mov     parser, [parser+40h]", "test    eax, eax", "jz      loc_3F70"], ["mov     eax, [enc+40h]", "lea     start_0, [start_0+eax*2]", "mov     eax, esi", "mov     enc, start_0", "mov     [esp+2Ch+start], start_0", "call    dword ptr [esi+1Ch]", "mov     ecx, [esp+2Ch+start]; ptr", "sub     esp, 0Ch", "mov     edx, enc; enc", "lea     edi, [ecx+eax]", "lea     eax, [parser+19Ch]; pool", "mov     [esp+38h+start], eax", "push    tem; end", "call    poolStoreString", "add     esp, 10h", "mov     ebp, eax", "test    target, target", "jz      loc_3F60"], ["mov     target, [parser+1A8h]", "mov     edx, [esp+2Ch+end]", "mov     [parser+1ACh], eax", "mov     eax, [enc+40h]", "add     eax, eax", "sub     edx, eax", "mov     eax, enc", "mov     [esp+2Ch+var_20], edx", "mov     edx, tem", "call    dword ptr [enc+20h]", "sub     esp, 0Ch", "mov     tem, [esp+38h+var_20]", "mov     ecx, eax; ptr", "push    edi; end", "mov     edx, enc; enc", "mov     eax, [esp+3Ch+start]; pool", "call    poolStoreString", "add     esp, 10h", "mov     enc, eax", "test    data, data", "jz      loc_3F60"], ["call    normalizeLines", "mov     edx, [parser+4]", "push    eax", "push    data", "push    target", "push    edx", "call    dword ptr [parser+40h]", "mov     ecx, [parser+1A0h]", "add     esp, 10h", "mov     eax, [parser+19Ch]", "test    ecx, ecx", "jz      loc_3F90"], ["test    eax, eax", "jnz     short loc_3F12"], ["jmp     short loc_3F22"], ["mov     eax, edx"], ["mov     edx, [eax]; enc", "mov     [eax], ecx", "test    edx, edx", "mov     [parser+1A0h], eax", "mov     ecx, eax; s", "jnz     short loc_3F10"], ["mov     dword ptr [parser+19Ch], 0", "mov     dword ptr [parser+1ACh], 0", "mov     dword ptr [parser+1A8h], 0", "mov     dword ptr [parser+1A4h], 0", "mov     edi, 1"], ["add     esp, 1Ch", "mov     eax, edi", "pop     parser", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     esp, 1Ch", "xor     edi, edi", "mov     eax, edi", "pop     parser", "pop     esi", "pop     edi", "pop     target", "retn"], ["mov     eax, [parser+50h]", "mov     edi, 1", "test    eax, eax", "jz      short loc_3F4F"], ["sub     esp, 0Ch", "mov     eax, parser; parser", "mov     ebp, [esp+38h+end]", "push    ebp; end", "call    reportDefault", "add     esp, 10h", "jmp     short loc_3F4F"], ["mov     [parser+1A0h], eax", "jmp     short loc_3F22"]], "lookup": [["push    ebp", "push    edi", "push    esi", "mov     esi, table_0", "push    ebx", "sub     esp, 3Ch", "mov     edi, [table_0+8]", "mov     [esp+4Ch+parser], parser_0", "mov     [esp+4Ch+name], name_0", "test    edi, edi", "jnz     loc_40A8"], ["mov     ebx, [esp+4Ch+createSize]", "test    ebx, ebx", "jz      loc_4297"], ["sub     esp, 0Ch", "mov     parser_0, [table_0+10h]", "mov     byte ptr [table_0+4], 6", "mov     dword ptr [table_0+8], 40h ; '@'", "push    100h", "call    dword ptr [eax]", "add     esp, 10h", "mov     edi, eax", "mov     [table_0], eax", "test    eax, eax", "jz      loc_42A3"], ["mov     edx, 100h", "test    al, 1", "jnz     loc_42EC"], ["test    edi, 2", "jnz     loc_42FA"], ["mov     ecx, edx", "xor     eax, eax", "shr     ecx, 2", "rep stosd", "test    dl, 2", "jz      short loc_401E"], ["mov     word ptr [edi], 0", "add     edi, 2"], ["and     edx, 1", "jz      short loc_4026"], ["mov     byte ptr [edi], 0"], ["mov     edx, [esp+4Ch+name]; s", "mov     eax, [esp+4Ch+parser]; parser", "call    hash", "mov     ebx, [table_0+8]", "dec     ebx", "mov     edi, [table_0]", "and     ebx, eax", "shl     i, 2", "add     edi, ebx"], ["sub     esp, 0Ch", "mov     eax, [esi+10h]", "mov     edx, [esp+58h+createSize]", "push    edx", "call    dword ptr [eax]", "mov     [edi], eax", "add     esp, 10h", "mov     eax, [esi]", "mov     edi, [eax+ebx]", "test    edi, edi", "jz      loc_4297"], ["mov     edx, [esp+4Ch+createSize]", "cmp     edx, 4", "jnb     loc_42AF"], ["test    dl, 2", "jz      short loc_4079"], ["mov     word ptr [edi], 0", "add     edi, 2"], ["and     edx, 1", "jz      short loc_4081"], ["mov     byte ptr [edi], 0"], ["mov     eax, [esi]", "mov     edi, [esp+4Ch+name]", "mov     eax, [eax+ebx]", "mov     [eax], edi", "mov     eax, [esi+0Ch]", "inc     eax", "mov     [esi+0Ch], eax", "mov     eax, [esi]", "mov     edi, [eax+ebx]"], ["add     esp, 3Ch", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ebp, [esp+4Ch+name]", "mov     parser_0, [esp+4Ch+parser]; parser", "mov     table_0, ebp; s", "call    hash", "mov     edi, [table_0]", "mov     edx, eax", "mov     [esp+4Ch+h], eax", "mov     h_0, [table_0+8]", "mov     ebx, h_0", "mov     [esp+4Ch+var_38], eax", "dec     eax", "and     ebx, mask", "mov     [esp+4Ch+var_24], edi", "mov     edi, [edi+i*4]", "test    edi, edi", "jz      loc_415E"], ["shr     mask, 2", "mov     cl, [ebp+0]", "mov     [esp+4Ch+newPower], al", "mov     eax, [esp+4Ch+var_38]", "neg     eax", "and     eax, h_0", "mov     [esp+4Ch+table], table_0", "mov     byte ptr [esp+4Ch+newSize], cl", "xor     ebp, ebp", "mov     [esp+4Ch+var_28], eax", "mov     table_0, [esp+4Ch+var_24]", "xchg    ax, ax"], ["mov     eax, [edi]", "mov     dl, byte ptr [esp+4Ch+newSize]", "cmp     [eax], dl", "jnz     short loc_411D"], ["mov     ecx, [esp+4Ch+name]", "xchg    ax, ax"], ["test    dl, dl", "jz      short loc_4098"], ["inc     eax", "mov     dl, [ecx+1]", "inc     ecx", "cmp     dl, [eax]", "jz      short loc_4110"], ["mov     eax, step", "test    al, al", "jnz     short loc_413C"], ["mov     step, [esp+4Ch+table]", "xor     ecx, ecx", "mov     step, [esp+4Ch+var_28]", "mov     cl, [eax+4]", "mov     al, [esp+4Ch+newPower]", "dec     ecx", "shr     ebp, cl", "and     ebp, eax", "or      ebp, 1"], ["mov     eax, step", "and     eax, 0FFh", "cmp     eax, i", "jbe     loc_4290"], ["mov     ecx, [esp+4Ch+var_38]", "add     i, ecx", "sub     ebx, eax"], ["mov     edi, [esi+i*4]", "test    edi, edi", "jnz     short loc_4100"], ["mov     esi, [esp+4Ch+table]"], ["mov     edx, [esp+4Ch+createSize]", "test    edx, edx", "jz      loc_4297"], ["mov     al, [esi+4]", "mov     edx, [esi+0Ch]", "lea     ecx, [eax-1]", "shr     edx, cl", "test    edx, edx", "jz      loc_42D5"], ["lea     ecx, [eax+1]", "mov     [esp+4Ch+newPower], cl", "cmp     cl, 1Fh", "ja      loc_4297"], ["mov     ebp, 1", "shl     ebp, cl", "mov     edi, ebp", "mov     [esp+4Ch+newSize], ebp", "cmp     ebp, 3FFFFFFFh", "ja      loc_4297"], ["mov     edx, 4", "sub     esp, 0Ch", "mov     i, edx", "mov     eax, [esi+10h]", "shl     ebx, cl", "push    tsize", "call    dword ptr [eax]", "add     esp, 10h", "mov     ebp, eax", "test    newV, newV", "jz      loc_4297"], ["lea     newV, [newSize_0-1]", "mov     edx, tsize", "mov     [esp+4Ch+var_38], newMask", "mov     newSize_0, newV", "cmp     tsize, 4", "jnb     loc_43A6"], ["test    dl, 2", "jz      short loc_41E6"], ["mov     word ptr [edi], 0", "add     edi, 2"], ["and     edx, 1", "jz      short loc_41EE"], ["mov     byte ptr [edi], 0"], ["mov     eax, [esi+8]", "test    eax, eax", "jz      loc_430A"], ["mov     eax, [esp+4Ch+var_38]", "mov     edx, [esi]", "shr     eax, 2", "xor     edi, edi", "mov     byte ptr [esp+4Ch+table], al", "xor     eax, eax", "mov     al, [esp+4Ch+newPower]", "dec     eax", "mov     [esp+4Ch+var_28], eax", "jmp     short loc_4222"], ["inc     i", "cmp     [esi+8], i", "jbe     loc_430C"], ["lea     ebx, ds:0[i*4]", "mov     eax, [edx+ebx]", "test    eax, eax", "jz      short loc_4218"], ["mov     edx, [eax]; s", "mov     eax, [esp+4Ch+parser]; parser", "call    hash", "mov     edx, eax", "mov     newHash, [esp+4Ch+var_38]", "and     eax, newHash", "lea     ecx, [newV+j*4+0]", "cmp     dword ptr [ecx], 0", "jz      short loc_4285"], ["mov     ecx, [esp+4Ch+newSize]", "neg     ecx", "and     newHash, ecx", "mov     cl, byte ptr [esp+4Ch+var_28]", "shr     edx, cl", "mov     ecx, [esp+4Ch+table]", "and     edx, ecx", "or      edx, 1", "and     edx, 0FFh", "lea     esi, [esi+0]"], ["cmp     edx, eax", "jbe     short loc_42E8"], ["mov     ecx, [esp+4Ch+newSize]", "add     eax, ecx", "sub     eax, edx"], ["lea     ecx, [newV+j*4+0]", "cmp     dword ptr [ecx], 0", "jnz     short loc_4270"], ["mov     j, [esi]", "mov     eax, [eax+ebx]", "mov     [ecx], eax", "mov     edx, [esi]", "jmp     short loc_4218"], ["sub     i, eax", "jmp     loc_4153"], ["add     esp, 3Ch", "xor     edi, edi", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     dword ptr [table_0+8], 0", "jmp     loc_4098"], ["test    edi, 1", "jnz     loc_439C"], ["test    edi, 2", "jnz     loc_438C"], ["mov     ecx, edx", "xor     eax, eax", "shr     ecx, 2", "rep stosd", "jmp     loc_406C"], ["shl     i, 2", "mov     edi, [esp+4Ch+var_24]", "add     edi, ebx", "jmp     loc_4040"], ["sub     eax, edx", "jmp     short loc_427C"], ["mov     byte ptr [eax], 0", "inc     edi", "mov     edx, 0FFh", "jmp     loc_3FFC"], ["mov     word ptr [edi], 0", "sub     edx, 2", "add     edi, 2", "jmp     loc_4008"], ["mov     edx, [esi]"], ["sub     esp, 0Ch", "mov     eax, [esi+10h]", "push    edx", "call    dword ptr [eax+8]", "mov     ebx, [esp+5Ch+var_38]", "mov     eax, [esp+5Ch+h]", "and     eax, ebx", "mov     cl, [esp+5Ch+newPower]", "mov     edx, [esp+5Ch+newSize]", "mov     [esi], newV", "lea     ebx, ds:0[eax*4]", "mov     [esi+4], cl", "mov     [esi+8], edx", "add     esp, 10h", "lea     edi, [newV+ebx+0]", "cmp     dword ptr [edi], 0", "jz      loc_4040"], ["mov     ebx, edx", "mov     edi, [esp+4Ch+h]", "neg     edx", "dec     ecx", "and     edx, edi", "shr     edx, cl", "mov     ecx, [esp+4Ch+var_38]", "shr     ecx, 2", "and     edx, ecx", "mov     ecx, ebx", "or      edx, 1", "and     edx, 0FFh", "cmp     edx, eax", "jbe     short loc_4388"], ["add     eax, ecx", "sub     eax, edx"], ["lea     ebx, ds:0[i*4]", "lea     edi, [newV+ebx+0]", "cmp     dword ptr [edi], 0", "jz      loc_4040"], ["cmp     edx, eax", "ja      short loc_436C"], ["sub     eax, edx", "jmp     short loc_4370"], ["mov     word ptr [edi], 0", "sub     edx, 2", "add     edi, 2", "jmp     loc_42C7"], ["mov     byte ptr [edi], 0", "dec     edx", "inc     edi", "jmp     loc_42BB"], ["test    ebp, 1", "jnz     short loc_43D1"], ["test    edi, 2", "jnz     short loc_43C4"], ["mov     ecx, edx", "xor     newMask, newMask", "shr     ecx, 2", "rep stosd", "jmp     loc_41D9"], ["mov     word ptr [edi], 0", "sub     edx, 2", "add     edi, 2", "jmp     short loc_43B6"], ["mov     byte ptr [ebp+0], 0", "lea     newV, [ebp+1]", "dec     tsize", "jmp     short loc_43AE"]], "getAttributeId": [["push    ebp", "push    edi", "push    esi", "push    ebx", "sub     esp, 1Ch", "mov     ebx, [parser_0+160h]", "mov     [esp+2Ch+parser], parser_0", "lea     edi, [dtd+50h]", "mov     parser_0, [dtd+5Ch]", "cmp     eax, [dtd+58h]", "mov     [esp+2Ch+pool], edi", "jz      short loc_4458"], ["sub     esp, 0Ch", "lea     esi, [eax+1]", "mov     [dtd+5Ch], esi", "mov     byte ptr [eax], 0", "mov     eax, [esp+38h+end]", "push    eax; end", "lea     eax, [dtd+50h]; pool", "call    poolStoreString", "add     esp, 10h", "mov     esi, eax", "test    name, name", "jz      short loc_4478"], ["sub     esp, 0Ch", "lea     edi, [name+1]", "lea     edx, [dtd+28h]; table", "mov     ecx, name; name", "push    0Ch; createSize", "mov     eax, [esp+3Ch+parser]; parser", "call    lookup", "add     esp, 10h", "mov     ebp, eax", "test    id, id", "jz      short loc_4478"], ["cmp     [id], name", "jz      short loc_4488"], ["mov     id, [dtd+60h]", "mov     [dtd+5Ch], eax"], ["add     esp, 1Ch", "mov     eax, id", "pop     ebx", "pop     esi", "pop     edi", "pop     id", "retn"], ["mov     eax, edi; pool", "mov     [esp+2Ch+start], start_0", "mov     [esp+2Ch+enc], enc_0", "call    poolGrow", "mov     edx, [esp+2Ch+enc]", "test    al, al", "mov     ecx, [esp+2Ch+start]", "jz      short loc_4478"], ["mov     eax, [dtd+5Ch]", "jmp     short loc_43FF"], ["add     esp, 1Ch", "xor     ebp, ebp", "mov     eax, ebp", "pop     dtd", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     id, [dtd+5Ch]", "mov     ecx, [esp+2Ch+parser]", "mov     [dtd+60h], eax", "cmp     byte ptr [ecx+0E8h], 0", "jz      short loc_444A"], ["mov     dl, [esi+1]", "cmp     dl, 78h ; 'x'", "jz      loc_4540"], ["test    dl, dl", "jz      short loc_444A"], ["xor     ecx, ecx", "jmp     short loc_44B9"], ["inc     i", "mov     dl, [esi+i+1]", "test    dl, dl", "jz      short loc_444A"], ["cmp     dl, 3Ah ; ':'", "jnz     short loc_44B0"], ["test    i, i", "jz      short loc_44F8"], ["lea     esi, [name+i]", "jmp     short loc_44DB"], ["lea     edx, [eax+1]", "inc     edi", "mov     [dtd+5Ch], edx", "mov     cl, [edi-1]", "cmp     esi, edi", "mov     [eax], cl", "mov     eax, [dtd+5Ch]", "jz      short loc_44F8"], ["cmp     [dtd+58h], eax", "jnz     short loc_44C8"], ["mov     eax, [esp+2Ch+pool]; pool", "call    poolGrow", "test    al, al", "jz      short loc_4478"], ["mov     eax, [dtd+5Ch]", "jmp     short loc_44C8"], ["cmp     [dtd+58h], eax", "jz      loc_45A0"], ["sub     esp, 0Ch", "lea     edx, [eax+1]", "mov     [dtd+5Ch], edx", "mov     byte ptr [eax], 0", "mov     ecx, [dtd+60h]; name", "push    8; createSize", "mov     eax, [esp+3Ch+parser]; parser", "lea     edx, [dtd+3Ch]; table", "call    lookup", "add     esp, 10h", "mov     [id+4], eax", "test    eax, eax", "jz      loc_4478"], ["mov     edx, [dtd+60h]", "cmp     [eax], edx", "jz      loc_45C0"], ["mov     [dtd+5Ch], edx", "jmp     loc_444A"], ["cmp     byte ptr [esi+2], 6Dh ; 'm'", "jnz     loc_44AA"], ["cmp     byte ptr [esi+3], 6Ch ; 'l'", "jnz     loc_44AA"], ["cmp     byte ptr [esi+4], 6Eh ; 'n'", "jnz     loc_44AA"], ["cmp     byte ptr [esi+5], 73h ; 's'", "jnz     loc_44AA"], ["mov     cl, [esi+6]", "test    cl, cl", "jz      short loc_45CB"], ["cmp     cl, 3Ah ; ':'", "jnz     loc_44AA"], ["test    cl, cl", "jz      short loc_45CB"], ["sub     esp, 0Ch", "lea     ecx, [esi+7]; name", "lea     edx, [dtd+3Ch]; table", "push    8; createSize", "mov     eax, [esp+3Ch+parser]; parser", "call    lookup", "add     esp, 10h", "mov     [id+4], eax"], ["mov     byte ptr [id+9], 1", "jmp     loc_444A"], ["mov     eax, [esp+2Ch+pool]; pool", "call    poolGrow", "test    al, al", "jz      loc_4478"], ["mov     eax, [dtd+5Ch]", "jmp     loc_4501"], ["mov     eax, [dtd+5Ch]", "mov     [dtd+60h], eax", "jmp     loc_444A"], ["add     dtd, 98h", "mov     [id+4], ebx", "jmp     short loc_4596"]], "setContext": [["push    ebp", "push    edi", "push    esi", "push    ebx", "mov     ebx, parser", "sub     esp, 1Ch", "mov     parser, [parser+160h]", "mov     cl, [context]", "mov     [esp+2Ch+dtd], eax", "test    cl, cl", "jz      loc_47D0"], ["lea     dtd_0, [parser+170h]", "mov     edi, s", "mov     esi, s", "lea     ebp, [parser+19Ch]", "mov     [esp+2Ch+bindingsPtr], eax", "jmp     short loc_4643"], ["test    cl, cl", "jz      short loc_4654"], ["cmp     cl, 3Dh ; '='", "jz      short loc_46A0"], ["cmp     edx, eax", "jz      loc_47E0"], ["lea     eax, [edx+1]", "inc     s", "mov     [parser+1A8h], eax", "mov     al, [edi-1]", "mov     [edx], al"], ["cmp     byte ptr [context], 0", "jz      loc_47D0"], ["mov     cl, [s]"], ["mov     edx, [parser+1A8h]", "mov     eax, [parser+1A4h]", "cmp     cl, 0Ch", "jnz     short loc_4618"], ["cmp     edx, eax", "jz      loc_4758"], ["sub     esp, 0Ch", "lea     eax, [edx+1]", "mov     [parser+1A8h], eax", "mov     byte ptr [edx], 0", "push    0; createSize", "mov     ecx, [parser+1ACh]; name", "mov     edx, [esp+3Ch+dtd]; table", "mov     eax, parser; parser", "call    lookup", "add     esp, 10h", "test    e, e", "jz      short loc_4689"], ["mov     byte ptr [e+20h], 1"], ["cmp     byte ptr [s], 1", "mov     e, [parser+1ACh]", "sbb     s, 0FFFFFFFFh", "mov     [parser+1A8h], eax", "mov     esi, s", "jmp     short loc_4638"], ["cmp     [parser+1ACh], edx", "jz      loc_4853"], ["cmp     edx, eax", "jz      loc_47F8"], ["lea     eax, [edx+1]", "sub     esp, 0Ch", "mov     [parser+1A8h], eax", "mov     eax, [esp+38h+dtd]", "mov     byte ptr [edx], 0", "push    8; createSize", "lea     edx, [eax+3Ch]; table", "mov     ecx, [parser+1ACh]; name", "mov     eax, parser; parser", "call    lookup", "mov     [esp+3Ch+prefix], eax", "add     esp, 10h", "test    prefix_0, prefix_0", "jz      loc_4828"], ["mov     edx, [parser+1ACh]; s", "cmp     [prefix_0], edx", "jz      loc_4832"], ["mov     [parser+1A8h], edx", "mov     eax, [parser+1A4h]"], ["mov     cl, [s+1]", "lea     context, [s+1]", "cmp     cl, 0Ch", "jz      short loc_477E"], ["test    cl, cl", "jnz     short loc_473D"], ["jmp     short loc_477E"], ["lea     eax, [edx+1]", "inc     context", "mov     [parser+1A8h], eax", "mov     al, [esi-1]", "mov     [edx], al", "mov     al, [context]", "mov     edx, [parser+1A8h]", "cmp     al, 0Ch", "jz      short loc_4778"], ["test    al, al", "jz      short loc_4778"], ["mov     eax, [parser+1A4h]"], ["cmp     edx, eax", "jnz     short loc_4718"], ["mov     eax, ebp; pool", "call    poolGrow", "test    al, al", "jz      loc_4828"], ["mov     edx, [parser+1A8h]", "jmp     short loc_4718"], ["mov     eax, ebp; pool", "call    poolGrow", "test    al, al", "jz      loc_4828"], ["mov     edx, [parser+1A8h]", "jmp     loc_465C"], ["mov     eax, [parser+1A4h]"], ["cmp     edx, eax", "jz      loc_4810"], ["lea     eax, [edx+1]", "mov     [parser+1A8h], eax", "mov     byte ptr [edx], 0", "push    eax", "mov     ecx, [parser+1ACh]", "push    eax", "mov     eax, parser; parser", "mov     edx, [esp+34h+bindingsPtr]", "push    edx; bindingsPtr", "push    ecx; uri", "xor     ecx, ecx; attId", "mov     edx, [esp+3Ch+prefix]; prefix", "call    addBinding", "add     esp, 10h", "test    eax, eax", "jnz     short loc_4828"], ["mov     eax, [parser+1ACh]", "mov     [parser+1A8h], eax", "cmp     byte ptr [context], 0", "jz      short loc_47D0"], ["inc     context", "mov     s, context", "jmp     loc_4638"], ["add     esp, 1Ch", "mov     al, 1", "pop     parser", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, ebp; pool", "call    poolGrow", "test    al, al", "jz      short loc_4828"], ["mov     edx, [parser+1A8h]", "jmp     loc_4629"], ["mov     eax, ebp; pool", "call    poolGrow", "test    al, al", "jz      short loc_4828"], ["mov     edx, [parser+1A8h]", "jmp     loc_46B4"], ["mov     eax, ebp; pool", "call    poolGrow", "test    al, al", "jz      short loc_4828"], ["mov     edx, [parser+1A8h]", "jmp     loc_4786"], ["add     esp, 1Ch", "xor     eax, eax", "pop     parser", "pop     context", "pop     s", "pop     ebp", "retn"], ["mov     prefix_0, [esp+2Ch+dtd]", "add     eax, 50h ; 'P'; pool", "call    poolCopyString", "mov     ecx, [esp+2Ch+prefix]", "test    eax, eax", "mov     [ecx], eax", "jz      short loc_4828"], ["mov     edx, [parser+1ACh]", "jmp     loc_46F6"], ["mov     ecx, [esp+2Ch+dtd]", "add     ecx, 98h", "mov     [esp+2Ch+prefix], ecx", "jmp     loc_4702"]], "storeRawNames": [["push    ebp", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "mov     edi, edx", "push    esi", "push    ebx", "sub     esp, 1Ch", "test    edx, edx", "mov     [esp+2Ch+var_24], ecx", "mov     [esp+2Ch+var_20], eax", "jnz     short loc_48DB"], ["jmp     loc_4940"], ["mov     temp, [tag+10h]", "test    eax, eax", "jz      short loc_48A6"], ["sub     eax, edx", "add     eax, temp", "mov     [tag+10h], eax"], ["lea     eax, [temp+bufSize]", "mov     ecx, [esp+2Ch+nameLen]", "mov     [tag+28h], eax", "mov     eax, [tag+8]", "mov     [tag+24h], temp", "mov     [esp+2Ch+rawNameLen], eax", "add     temp, ecx", "mov     ecx, [tag+4]"], ["push    eax", "mov     edx, [esp+30h+rawNameLen]", "push    edx; n", "push    ecx; src", "push    rawNameBuf; dest", "mov     bufSize, [esp+3Ch+var_24]", "call    _memcpy", "mov     [tag+4], rawNameBuf", "mov     tag, [tag]", "add     esp, 10h", "test    tag, tag", "jz      short loc_4940"], ["mov     eax, [tag+18h]", "mov     edx, [tag+24h]", "mov     ecx, [tag+4]", "lea     ebx, [eax+1]", "lea     esi, [edx+eax+1]", "mov     [esp+2Ch+nameLen], ebx", "cmp     rawNameBuf, ecx", "jz      short loc_4940"], ["mov     ebp, 7FFFFFFFh", "mov     eax, [tag+8]", "sub     ebp, nameLen_0", "mov     [esp+2Ch+rawNameLen], eax", "cmp     rawNameLen_0, ebp", "ja      short loc_4950"], ["mov     nameLen_0, [esp+2Ch+nameLen]", "add     nameLen_0, rawNameLen_0", "mov     rawNameLen_0, [tag+28h]", "sub     eax, edx", "cmp     bufSize, eax", "jle     short loc_48BE"], ["push    esi", "push    esi", "push    bufSize", "push    edx", "mov     eax, [esp+3Ch+var_20]", "call    dword ptr [eax]", "add     esp, 10h", "mov     esi, eax", "test    temp, temp", "jz      short loc_4950"], ["mov     edx, [tag+24h]", "cmp     [tag+0Ch], edx", "jnz     loc_4898"], ["mov     [tag+0Ch], temp", "jmp     loc_4898"], ["add     esp, 1Ch", "mov     al, 1", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     esp, 1Ch", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     tag", "pop     ebp", "retn"]], "setElementTypePrefix": [["push    ebp", "push    edi", "push    esi", "push    ebx", "sub     esp, 1Ch", "mov     [esp+2Ch+parser], parser_0", "mov     al, [name]", "mov     [esp+2Ch+var_20], ecx", "test    al, al", "jz      loc_4A30"], ["mov     ebx, name", "mov     edi, name", "jmp     short loc_498C"], ["mov     al, [name+1]", "inc     name", "test    al, al", "jz      loc_4A30"], ["cmp     al, 3Ah ; ':'", "jnz     short loc_4980"], ["mov     eax, [esp+2Ch+parser]", "cmp     ebx, name", "mov     esi, [eax+160h]", "lea     ebp, [esi+50h]", "jnz     short loc_49B8"], ["jmp     short loc_49E0"], ["lea     edx, [eax+1]", "inc     s", "mov     [esi+5Ch], edx", "mov     cl, [ebx-1]", "cmp     ebx, name", "mov     [eax], cl", "jz      short loc_49E0"], ["mov     eax, [esi+5Ch]", "cmp     eax, [esi+58h]", "jnz     short loc_49A8"], ["mov     eax, ebp; pool", "call    poolGrow", "test    al, al", "jz      short loc_4A40"], ["mov     eax, [esi+5Ch]", "inc     s", "lea     edx, [eax+1]", "mov     [esi+5Ch], edx", "mov     cl, [ebx-1]", "cmp     ebx, name", "mov     [eax], cl", "jnz     short loc_49B8"], ["xchg    ax, ax"], ["mov     eax, [esi+5Ch]", "cmp     eax, [esi+58h]", "jz      short loc_4A50"], ["sub     esp, 0Ch", "lea     edx, [eax+1]", "mov     [esi+5Ch], edx", "mov     byte ptr [eax], 0", "mov     ecx, [esi+60h]; name", "push    8; createSize", "mov     eax, [esp+3Ch+parser]; parser", "lea     edx, [esi+3Ch]; table", "call    lookup", "add     esp, 10h", "test    prefix, prefix", "jz      short loc_4A40"], ["mov     edx, [esi+60h]", "cmp     [prefix], edx", "jz      short loc_4A61"], ["mov     [esi+5Ch], edx"], ["mov     ecx, [esp+2Ch+var_20]", "mov     [ecx], prefix", "add     esp, 1Ch", "mov     prefix, 1", "pop     s", "pop     esi", "pop     name", "pop     ebp", "retn"], ["add     esp, 1Ch", "mov     eax, 1", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     esp, 1Ch", "xor     eax, eax", "pop     s", "pop     esi", "pop     name", "pop     ebp", "retn"], ["lea     eax, [esi+50h]; pool", "call    poolGrow", "test    al, al", "jz      short loc_4A40"], ["mov     eax, [esi+5Ch]", "jmp     short loc_49E8"], ["mov     edx, [esi+5Ch]", "mov     [esi+60h], edx", "jmp     short loc_4A16"]], "getElementType": [["push    ebp", "push    edi", "push    esi", "mov     esi, parser", "push    ebx", "sub     esp, 18h", "mov     edi, [parser+160h]", "mov     ebx, [esp+28h+end]", "lea     parser, [dtd+50h]; pool", "push    ebx; end", "call    poolStoreString", "add     esp, 10h", "test    name, name", "jz      short loc_4ADE"], ["sub     esp, 0Ch", "mov     ecx, name; name", "mov     ebp, name", "lea     edx, [dtd+14h]; table", "mov     name, parser; parser", "push    18h; createSize", "call    lookup", "add     esp, 10h", "mov     ebx, eax", "test    ret, ret", "jz      short loc_4ADE"], ["cmp     [ret], name", "jz      short loc_4AC8"], ["mov     ret, [dtd+60h]", "mov     [dtd+5Ch], eax"], ["add     esp, 0Ch", "mov     eax, ret", "pop     ret", "pop     parser", "pop     dtd", "pop     name", "retn"], ["mov     ret, [dtd+5Ch]", "lea     ecx, [ret+4]", "mov     [dtd+60h], eax", "mov     eax, parser", "mov     edx, [ret]", "call    setElementTypePrefix", "test    eax, eax", "jnz     short loc_4AB9"], ["add     esp, 0Ch", "xor     ebx, ebx", "mov     eax, ebx", "pop     ebx", "pop     parser", "pop     dtd", "pop     ebp", "retn"]], "reportComment": [["push    edi", "push    esi", "push    ebx", "mov     ebx, parser", "mov     parser, [parser+44h]", "test    eax, eax", "jz      loc_4BA8"], ["sub     esp, 0Ch", "mov     eax, [enc+40h]", "lea     esi, [parser+19Ch]", "mov     edi, [esp+18h+end]", "lea     start, [start+eax*4]; ptr", "lea     eax, [eax+eax*2]", "sub     edi, eax", "mov     eax, esi; pool", "push    edi; end", "call    poolStoreString", "add     esp, 10h", "mov     esi, eax", "test    eax, eax", "jz      short loc_4BA0"], ["call    normalizeLines", "mov     edx, [parser+4]", "push    eax", "push    eax", "push    esi", "push    edx", "call    dword ptr [parser+44h]", "mov     ecx, [parser+1A0h]", "add     esp, 10h", "mov     eax, [parser+19Ch]", "test    ecx, ecx", "jz      loc_4BD0"], ["test    eax, eax", "jnz     short loc_4B5A"], ["jmp     short loc_4B6A"], ["mov     eax, edx"], ["mov     edx, [eax]; enc", "mov     [eax], ecx", "test    edx, edx", "mov     [parser+1A0h], eax", "mov     ecx, eax; s", "jnz     short loc_4B58"], ["mov     dword ptr [parser+19Ch], 0", "mov     dword ptr [parser+1ACh], 0", "mov     dword ptr [parser+1A8h], 0", "mov     dword ptr [parser+1A4h], 0", "mov     esi, 1"], ["pop     parser", "mov     eax, esi", "pop     esi", "pop     edi", "retn"], ["xor     esi, esi", "pop     parser", "mov     eax, esi", "pop     esi", "pop     edi", "retn"], ["mov     eax, [parser+50h]", "mov     esi, 1", "test    eax, eax", "jz      short loc_4B97"], ["sub     esp, 0Ch", "mov     eax, parser; parser", "mov     edi, [esp+18h+end]", "push    edi; end", "call    reportDefault", "add     esp, 10h", "mov     eax, esi", "pop     parser", "pop     esi", "pop     edi", "retn"], ["mov     [parser+1A0h], eax", "jmp     short loc_4B6A"]], "copyEntityTable": [["push    ebp", "mov     ebp, newPool", "push    edi", "push    esi", "push    ebx", "sub     esp, 2Ch", "mov     [esp+3Ch+oldParser], oldParser_0", "mov     ebx, [esp+3Ch+arg_0]", "mov     oldParser_0, [esp+3Ch+arg_4]", "mov     [esp+3Ch+newTable], newTable_0", "mov     [esp+3Ch+cachedNewBase], 0", "mov     [esp+3Ch+cachedOldBase], 0", "lea     eax, [iter_0+eax*4]", "mov     [esp+3Ch+newE], eax", "jmp     short loc_4C21"], ["mov     esi, [ebx]", "add     ebx, 4", "test    esi, esi", "jnz     short loc_4C38"], ["cmp     [esp+3Ch+newE], ebx", "jnz     short loc_4C18"], ["add     esp, 2Ch", "mov     eax, 1", "pop     ebx", "pop     esi", "pop     edi", "pop     newPool", "retn"], ["mov     edx, [oldE]; s", "mov     eax, newPool; pool", "call    poolCopyString", "mov     ecx, eax; name", "test    name, name", "jz      loc_4DA8"], ["sub     esp, 0Ch", "push    24h ; '$'; createSize", "mov     edx, [esp+4Ch+newTable]; table", "mov     name, [esp+4Ch+oldParser]; parser", "call    lookup", "mov     [esp+4Ch+var_34], eax", "add     esp, 10h", "test    newE_0, newE_0", "jz      loc_4DA8"], ["mov     edx, [oldE+10h]; s", "test    edx, edx", "jz      loc_4D18"], ["mov     newE_0, newPool; pool", "call    poolCopyString", "test    tem, tem", "jz      loc_4DA8"], ["mov     edx, [esp+3Ch+var_34]", "mov     [edx+10h], tem", "mov     edi, [oldE+14h]", "test    edi, edi", "jz      short loc_4CBE"], ["cmp     edi, [esp+3Ch+cachedOldBase]", "jz      loc_4D98"], ["mov     edx, cachedOldBase_0; s", "mov     tem, newPool; pool", "call    poolCopyString", "mov     [esp+3Ch+cachedNewBase], eax", "test    tem, tem", "jz      loc_4DA8"], ["mov     ecx, [esp+3Ch+var_34]", "mov     [esp+3Ch+cachedOldBase], cachedOldBase_0", "mov     [ecx+14h], tem"], ["mov     edx, [oldE+18h]; s", "test    edx, edx", "jz      short loc_4CDB"], ["mov     eax, newPool; pool", "call    poolCopyString", "test    tem, tem", "jz      loc_4DA8"], ["mov     edi, [esp+3Ch+var_34]", "mov     [edi+18h], tem"], ["mov     edx, [oldE+1Ch]; s", "test    edx, edx", "jz      short loc_4CF8"], ["mov     eax, newPool; pool", "call    poolCopyString", "test    tem, tem", "jz      loc_4DA8"], ["mov     edi, [esp+3Ch+var_34]", "mov     [edi+1Ch], tem"], ["mov     edx, [esp+3Ch+var_34]", "mov     al, [oldE+21h]", "mov     [edx+21h], al", "mov     al, [oldE+22h]", "mov     byte ptr [esp+3Ch+var_34], al", "mov     [edx+22h], al", "jmp     loc_4C21"], ["mov     newE_0, [newPool+0Ch]", "mov     edx, [oldE+8]", "mov     edi, [oldE+4]", "test    eax, eax", "jz      loc_4DB2"], ["test    edx, edx", "jle     short loc_4D77"], ["add     edx, edi", "mov     [esp+3Ch+arg_0], ebx", "mov     ebx, edx", "jmp     short loc_4D4B"], ["lea     ecx, [eax+1]", "inc     edi", "mov     [newPool+0Ch], ecx", "mov     cl, [edi-1]", "cmp     edi, ebx", "mov     [eax], cl", "jz      short loc_4D70"], ["mov     eax, [newPool+0Ch]"], ["cmp     [newPool+8], eax", "jnz     short loc_4D38"], ["mov     eax, newPool; pool", "call    poolGrow", "test    al, al", "jz      short loc_4DA8"], ["mov     eax, [newPool+0Ch]", "inc     edi", "lea     ecx, [eax+1]", "mov     [newPool+0Ch], ecx", "mov     cl, [edi-1]", "cmp     edi, ebx", "mov     [eax], cl", "jnz     short loc_4D48"], ["xchg    ax, ax"], ["mov     ebx, [esp+3Ch+arg_0]", "mov     eax, [newPool+0Ch]"], ["mov     edx, [newPool+10h]", "mov     [newPool+10h], eax", "test    tem, tem", "jz      short loc_4DA8"], ["mov     edi, [esp+3Ch+var_34]", "mov     [edi+4], tem", "mov     eax, [oldE+8]", "mov     [edi+8], eax", "jmp     loc_4CDB"], ["mov     tem, [esp+3Ch+cachedNewBase]", "mov     [edx+14h], eax", "jmp     loc_4CBE"], ["add     esp, 2Ch", "xor     eax, eax", "pop     ebx", "pop     oldE", "pop     edi", "pop     newPool", "retn"], ["mov     eax, newPool; pool", "mov     [esp+3Ch+var_20], edx", "call    poolGrow", "test    al, al", "jz      short loc_4DA8"], ["mov     eax, [newPool+0Ch]", "mov     edx, [esp+3Ch+var_20]", "jmp     loc_4D29"]], "copyString": [["push    ebp", "push    edi", "push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "mov     ebx, s_0", "sub     esp, 0Ch", "cmp     byte ptr [s_0], 0", "jz      short loc_4E28"], ["xor     s_0, s_0", "lea     esi, [esi+0]", "nop"], ["mov     ecx, charsRequired", "inc     charsRequired", "cmp     byte ptr [s_0+charsRequired], 0", "jnz     short loc_4DF0"], ["lea     edi, [ecx+2]"], ["sub     esp, 0Ch", "push    edi", "call    dword ptr [edx]", "add     esp, 10h", "mov     ebp, eax", "test    result, result", "jz      short loc_4E19"], ["push    eax", "push    edi; n", "push    s_0; src", "mov     s_0, esi", "push    result; dest", "call    _memcpy", "add     esp, 10h"], ["add     esp, 0Ch", "mov     eax, result", "pop     ebx", "pop     esi", "pop     edi", "pop     result", "retn"], ["mov     edi, 1", "jmp     short loc_4DFC"]], "initializeEncoding": [["push    ebx", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 8", "mov     ebx, parser", "cmp     byte ptr [parser+0E8h], 0", "mov     edx, [parser+0E4h]", "jnz     short loc_4E78"], ["lea     parser, (XmlInitEncoding - 2DF78h)[ecx]"], ["push    ecx", "push    s_0", "lea     s_0, [parser+90h]", "push    edx", "lea     edx, [parser+94h]", "push    edx", "call    eax", "add     esp, 10h", "test    eax, eax", "jz      short loc_4E80"], ["add     esp, 8", "xor     eax, eax", "pop     parser", "retn"], ["lea     parser, (XmlInitEncodingNS - 2DF78h)[ecx]", "jmp     short loc_4E56"], ["mov     edx, [parser+0E4h]", "add     esp, 8", "mov     eax, parser", "pop     parser", "jmp     handleUnknownEncoding"]], "accountingGetCurrentAmplification": [["push    ebp", "call    __x86_get_pc_thunk_dx", "add     edx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 1Ch", "mov     edi, [rootParser+1FCh]", "mov     ebx, [rootParser+1F4h]", "mov     ecx, [rootParser+1F0h]", "mov     esi, [rootParser+1F8h]", "mov     dword ptr [esp+2Ch+var_2C+4], edi", "mov     edi, ebx", "mov     dword ptr [esp+2Ch+var_2C], esi", "or      edi, ecx", "jz      short loc_4F20"], ["mov     edi, dword ptr [esp+2Ch+var_2C]", "mov     ebp, dword ptr [esp+2Ch+var_2C+4]", "add     edi, ecx", "adc     ebp, ebx", "mov     dword ptr [esp+2Ch+var_2C], edi", "mov     dword ptr [esp+2Ch+var_2C+4], ebp", "test    ebp, ebp", "fild    [esp+2Ch+var_2C]", "js      short loc_4F30"], ["fstp    dword ptr [esp+2Ch+var_2C]", "mov     dword ptr [esp+2Ch+var_24], ecx", "mov     dword ptr [esp+2Ch+var_24+4], ebx", "fild    [esp+2Ch+var_24]", "test    ebx, ebx", "js      short loc_4F28"], ["fstp    dword ptr [esp+2Ch+var_24]", "fld     dword ptr [esp+2Ch+var_2C]", "fdiv    dword ptr [esp+2Ch+var_24]"], ["mov     rootParser, [rootParser+1D8h]", "test    eax, eax", "jnz     short loc_4F38"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["fld1", "jmp     short loc_4F0E"], ["fadd    ds:(flt_20588 - 2DF78h)[edx]", "jmp     short loc_4F03"], ["fadd    ds:(flt_20588 - 2DF78h)[edx]", "jmp     short loc_4EF0"], ["fstp    st", "lea     eax, (__PRETTY_FUNCTION___10834 - 2DF78h)[edx]; \"accountingGetCurrentAmplification\"", "mov     ebx, edx", "push    eax; function", "lea     eax, (aGitExpatLibXml - 2DF78h)[edx]; \"../../git/expat/lib/xmlparse.c\"", "push    1D31h; line", "push    eax; file", "lea     eax, (aRootparserMPar - 2DF78h)[edx]; \"! rootParser->m_parentParser\"", "push    eax; assertion", "call    ___assert_fail"]], "accountingDiffTolerated": [["push    ebp", "mov     ebp, before", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "mov     before, [originParser+1D8h]", "mov     [esp+4Ch+after], after_0", "mov     edi, large gs:14h", "mov     [esp+4Ch+var_20], edi", "xor     edi, edi", "test    edx, edx", "jz      loc_5270"], ["lea     esi, [esi+0]", "nop"], ["mov     esi, edx", "mov     edx, [edx+1D8h]", "inc     edi", "test    edx, edx", "jnz     short loc_5018"], ["cmp     originParser, esi", "setz    al"], ["mov     after_0, [esp+4Ch+after]", "mov     edx, [esp+4Ch+account]", "sub     ecx, before", "test    edx, edx", "mov     [esp+4Ch+bytesMore], ecx", "jnz     short loc_50B0"], ["test    al, al", "jz      short loc_50B0"], ["lea     eax, [rootParser+1F0h]", "mov     edx, [rootParser+1F4h]", "mov     [esp+4Ch+additionTarget], eax", "mov     eax, [rootParser+1F0h]", "mov     [esp+4Ch+var_4C], eax", "mov     [esp+4Ch+var_48], edx"], ["mov     edx, [esp+4Ch+bytesMore]", "mov     bytesMore_0, edx", "mov     [esp+4Ch+var_44], edx", "sar     ecx, 1Fh", "mov     [esp+4Ch+var_40], ecx", "mov     ecx, [esp+4Ch+var_40]", "xor     ecx, 0FFFFFFFFh", "mov     eax, ecx", "mov     ecx, edx", "xor     ecx, 0FFFFFFFFh", "mov     edx, [esp+4Ch+var_48]", "cmp     ecx, [esp+4Ch+var_4C]", "mov     ecx, eax", "sbb     ecx, edx", "mov     eax, [esp+4Ch+var_4C]", "mov     byte ptr [esp+4Ch+var_4C], 0", "jnb     short loc_50D0"], ["mov     eax, [esp+4Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_529A"], ["mov     al, byte ptr [esp+4Ch+var_4C]", "add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     eax, [rootParser+1F8h]", "mov     edx, [rootParser+1FCh]", "mov     [esp+4Ch+additionTarget], eax", "mov     eax, [rootParser+1F8h]", "mov     [esp+4Ch+var_4C], eax", "mov     [esp+4Ch+var_48], edx", "jmp     short loc_505D"], ["add     eax, [esp+4Ch+var_44]", "mov     ecx, [esp+4Ch+additionTarget]", "adc     edx, [esp+4Ch+var_40]", "mov     [ecx], eax", "mov     [ecx+4], edx", "mov     eax, [rootParser+1F8h]", "mov     edx, [rootParser+1FCh]", "add     eax, [rootParser+1F0h]", "adc     edx, [rootParser+1F4h]", "mov     [esp+4Ch+var_4C], eax", "mov     eax, rootParser; rootParser", "mov     [esp+4Ch+var_48], edx", "call    accountingGetCurrentAmplification", "mov     eax, [esp+4Ch+var_4C]", "cmp     eax, [rootParser+208h]", "mov     edx, [esp+4Ch+var_48]", "mov     eax, edx", "mov     byte ptr [esp+4Ch+var_4C], 1", "sbb     eax, [rootParser+20Ch]", "jb      short loc_5138"], ["fld     dword ptr [rootParser+204h]", "fcompp", "fnstsw  ax", "test    ah, 5", "setz    byte ptr [esp+4Ch+var_4C]", "jmp     short loc_513A"], ["fstp    st"], ["cmp     dword ptr [rootParser+200h], 1", "jle     loc_5090"], ["mov     eax, rootParser; originParser", "lea     edx, (asc_1FDDF+2 - 2DF78h)[ebx]; epilog", "call    accountingReportStats", "mov     eax, [rootParser+1D8h]", "test    eax, eax", "jnz     loc_527B"], ["mov     eax, [esp+4Ch+account]", "test    eax, eax", "jz      loc_5260"], ["lea     eax, (aExp - 2DF78h)[ebx]; \"EXP\""], ["sub     esp, 0Ch", "lea     edx, (asc_1FDDF+2 - 2DF78h)[ebx]; \"\"", "push    edx", "push    0Ah", "mov     edx, [esp+60h+source_line]", "push    edx", "push    levelsAwayFromRootParser_0", "mov     levelsAwayFromRootParser_0, ds:(stderr_ptr - 2DF78h)[ebx]", "push    eax", "lea     eax, (a6dBytesSDXmlpa - 2DF78h)[ebx]; \" (+%6d bytes %s|%d, xmlparse.c:%d) %*s\"...", "mov     ecx, [esp+6Ch+bytesMore]", "push    ecx", "push    eax", "push    1", "mov     eax, [edi]", "push    eax", "call    ___fprintf_chk", "mov     [esp+7Ch+var_25], 5D2E2E5Bh", "mov     [esp+7Ch+var_21], 0", "add     esp, 30h", "cmp     dword ptr [rootParser+200h], 2", "jg      short loc_51C6"], ["cmp     [esp+4Ch+bytesMore], 18h", "lea     rootParser, [before+0Ah]", "jg      short loc_5208"], ["cmp     [esp+4Ch+after], before", "mov     esi, [esp+4Ch+after]", "jbe     short loc_51ED"], ["xor     eax, eax", "inc     ebp", "mov     al, [ebp-1]; c", "call    unsignedCharToPrintable", "push    edx", "push    edx", "mov     ecx, [edi]", "push    ecx; stream", "push    eax; s", "call    _fputs", "add     esp, 10h", "cmp     esi, ebp", "jnz     short loc_51D0"], ["mov     esi, [edi]", "lea     eax, (asc_1FDDF - 2DF78h)[ebx]; \"\\\"\\n\"", "push    esi; s", "push    2; n", "push    1; size", "push    eax; ptr", "call    _fwrite", "add     esp, 10h", "jmp     loc_5090"], ["xor     eax, eax", "inc     ebp", "mov     al, [ebp-1]; c", "call    unsignedCharToPrintable", "push    edx", "push    edx", "mov     ecx, [edi]", "push    ecx; stream", "push    eax; s", "call    _fputs", "add     esp, 10h", "cmp     ebp, esi", "jnz     short loc_5208"], ["push    esi", "lea     eax, [esp+50h+var_25]", "push    eax", "push    1", "mov     ebp, [edi]", "push    ebp", "call    ___fprintf_chk", "mov     ebp, [esp+5Ch+after]", "add     esp, 10h", "lea     esi, [ebp-0Ah]", "nop"], ["xor     eax, eax", "inc     esi", "mov     al, [esi-1]; c", "call    unsignedCharToPrintable", "push    edx", "push    edx", "mov     ecx, [edi]", "push    ecx; stream", "push    eax; s", "call    _fputs", "add     esp, 10h", "cmp     ebp, esi", "jnz     short loc_5240"], ["jmp     short loc_51ED"], ["lea     eax, (aDir - 2DF78h)[ebx]; \"DIR\"", "jmp     loc_5174"], ["mov     esi, originParser", "xor     edi, edi", "mov     al, 1", "jmp     loc_502A"], ["lea     eax, (__PRETTY_FUNCTION___10854 - 2DF78h)[ebx]; \"accountingReportDiff\"", "push    eax; function", "lea     eax, (aGitExpatLibXml - 2DF78h)[ebx]; \"../../git/expat/lib/xmlparse.c\"", "push    1D52h; line", "push    eax; file", "lea     eax, (aRootparserMPar - 2DF78h)[ebx]; \"! rootParser->m_parentParser\"", "push    eax; assertion", "call    ___assert_fail"], ["call    __stack_chk_fail_local"]], "processXmlDecl": [["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "mov     esi, isGeneralTextEntity", "push    ebx", "mov     ebx, parser", "sub     esp, 44h", "mov     isGeneralTextEntity, s_0", "mov     [esp+54h+s], s_0", "mov     edi, [esp+54h+next]", "mov     parser, large gs:14h", "mov     [esp+54h+var_20], parser", "xor     parser, parser", "mov     s_0, edi", "mov     [esp+54h+encodingName], 0", "mov     [esp+54h+newEncoding], 0", "mov     [esp+54h+version], 0", "mov     [esp+54h+standalone], 0FFFFFFFFh", "mov     eax, parser", "push    0; tok", "push    offset originParser; originParser", "call    accountingDiffTolerated", "add     esp, 10h", "test    al, al", "jz      loc_5610"], ["cmp     byte ptr [parser+0E8h], 0", "jnz     short loc_5370"], ["lea     eax, (XmlParseXmlDecl - 2DF78h)[ebp]"], ["push    edx", "mov     ebp, [parser+90h]", "push    edx", "lea     edx, [esp+54h+standalone]", "push    edx", "lea     edx, [esp+58h+newEncoding]", "push    edx", "lea     edx, [esp+5Ch+encodingName]", "push    edx", "lea     edx, [esp+60h+versionend]", "push    edx", "lea     edx, [esp+64h+version]", "push    edx", "lea     edx, [parser+11Ch]", "push    edx", "push    edi", "mov     ecx, [esp+70h+s]", "push    ecx", "push    ebp", "push    isGeneralTextEntity", "call    eax", "add     esp, 30h", "test    eax, eax", "jnz     short loc_5378"], ["lea     eax, [isGeneralTextEntity+1Eh]"], ["mov     edi, [esp+4Ch+var_20]", "xor     edi, large gs:14h", "jnz     loc_56A7"], ["add     esp, 3Ch", "pop     parser", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     eax, (XmlParseXmlDeclNS - 2DF78h)[ebp]", "jmp     short loc_5316"], ["test    isGeneralTextEntity, isGeneralTextEntity", "jnz     short loc_5387"], ["cmp     [esp+4Ch+standalone], 1", "jz      loc_54D8"], ["mov     eax, [parser+8Ch]", "test    eax, eax", "jz      loc_5518"], ["mov     isGeneralTextEntity, [esp+4Ch+encodingName]", "test    esi, esi", "jz      short loc_53DE"], ["mov     eax, [parser+90h]", "mov     edx, esi", "lea     edi, [parser+1B4h]", "call    dword ptr [eax+1Ch]", "sub     esp, 0Ch", "add     esi, eax", "mov     edx, [parser+90h]; enc", "push    esi; end", "mov     eax, edi; pool", "mov     ecx, [esp+5Ch+encodingName]; ptr", "call    poolStoreString", "add     esp, 10h", "mov     esi, eax", "test    storedEncName, storedEncName", "jz      loc_5508"], ["mov     storedEncName, [parser+1C0h]", "mov     [parser+1C4h], eax"], ["mov     ecx, [esp+4Ch+version]; ptr", "test    ecx, ecx", "jz      loc_54A0"], ["sub     esp, 0Ch", "mov     edx, [parser+90h]; enc", "lea     edi, [parser+1B4h]", "mov     eax, [esp+58h+versionend]", "mov     ebp, [edx+40h]", "sub     eax, ebp", "push    eax; end", "mov     eax, edi; pool", "call    poolStoreString", "add     esp, 10h", "mov     edi, eax", "test    storedversion, storedversion", "jz      loc_5508"], ["mov     storedversion, [esp+4Ch+standalone]", "mov     edx, [parser+4]", "push    eax", "push    storedEncName", "push    storedversion", "push    edx", "call    dword ptr [parser+8Ch]", "mov     ecx, [parser+0E4h]", "add     esp, 10h", "test    ecx, ecx", "jz      loc_5628"], ["mov     ecx, [parser+1B8h]", "mov     eax, [parser+1B4h]", "test    ecx, ecx", "jz      loc_5658"], ["test    eax, eax", "jnz     short loc_545A"], ["jmp     short loc_546A"], ["mov     eax, edx"], ["mov     edx, [eax]", "mov     [eax], ecx", "test    edx, edx", "mov     [parser+1B8h], eax", "mov     ecx, eax", "jnz     short loc_5458"], ["mov     dword ptr [parser+1B4h], 0", "mov     dword ptr [parser+1C4h], 0", "mov     dword ptr [parser+1C0h], 0", "mov     dword ptr [parser+1BCh], 0"], ["xor     eax, eax", "jmp     loc_5352"], ["mov     edi, [esp+4Ch+standalone]", "mov     ebp, [parser+4]", "push    edi", "push    storedEncName", "push    0", "push    ebp", "call    dword ptr [parser+8Ch]", "mov     edi, [parser+0E4h]", "add     esp, 10h", "test    edi, edi", "jz      loc_5628"], ["test    esi, esi", "jnz     loc_5439"], ["xor     eax, eax", "jmp     loc_5352"], ["mov     eax, [parser+160h]", "mov     byte ptr [eax+82h], 1", "cmp     dword ptr [parser+1E8h], 1", "jnz     loc_5387"], ["mov     dword ptr [parser+1E8h], 0", "jmp     loc_5387"], ["mov     eax, 1", "jmp     loc_5352"], ["mov     isGeneralTextEntity, [parser+50h]", "test    esi, esi", "jz      short loc_5537"], ["sub     esp, 0Ch", "mov     edx, [parser+90h]; enc", "mov     eax, parser; parser", "push    edi; end", "mov     ecx, [esp+5Ch+s]; s", "call    reportDefault", "add     esp, 10h"], ["mov     esi, [parser+0E4h]", "test    esi, esi", "jnz     loc_5492"], ["mov     eax, [esp+4Ch+newEncoding]", "xor     edi, edi", "test    eax, eax", "jnz     loc_5630"], ["mov     ebp, [esp+4Ch+encodingName]", "test    ebp, ebp", "jz      loc_5492"], ["mov     eax, [parser+90h]", "mov     edx, ebp", "call    dword ptr [eax+1Ch]", "sub     esp, 0Ch", "mov     ecx, eax", "mov     edx, [parser+90h]; enc", "add     ebp, ecx", "lea     eax, [parser+1B4h]; pool", "push    ebp; end", "mov     ecx, [esp+5Ch+encodingName]; ptr", "call    poolStoreString", "add     esp, 10h", "mov     esi, eax", "test    storedEncName, storedEncName", "jz      loc_5508"], ["mov     edx, storedEncName; encodingName", "mov     eax, parser; parser", "call    handleUnknownEncoding", "mov     storedEncName, [parser+1B8h]", "mov     edx, [parser+1B4h]", "test    esi, esi", "jz      loc_569C"], ["test    edx, edx", "jnz     short loc_55BA"], ["jmp     short loc_55CA"], ["mov     edx, ecx"], ["mov     ecx, [edx]", "mov     [edx], esi", "test    ecx, ecx", "mov     [parser+1B8h], edx", "mov     esi, edx", "jnz     short loc_55B8"], ["mov     dword ptr [parser+1B4h], 0", "mov     dword ptr [parser+1C4h], 0", "mov     dword ptr [parser+1C0h], 0", "mov     dword ptr [parser+1BCh], 0", "cmp     result, 12h", "jnz     loc_5352"], ["mov     edx, [esp+4Ch+encodingName]", "mov     [parser+11Ch], edx", "jmp     loc_5352"], ["mov     eax, parser; originParser", "lea     edx, (aAborting - 2DF78h)[ebp]; \" ABORTING\\n\"", "call    accountingReportStats", "mov     eax, 2Ah ; '*'", "jmp     loc_5352"], ["mov     eax, [esp+4Ch+newEncoding]", "test    eax, eax", "jz      short loc_5680"], ["mov     edx, [parser+90h]", "mov     ecx, [eax+40h]", "cmp     ecx, [edx+40h]", "jnz     short loc_5668"], ["cmp     edx, eax", "jz      short loc_5647"], ["cmp     ecx, 2", "jz      short loc_5668"], ["mov     [parser+90h], eax", "or      esi, edi", "jmp     loc_54C3"], ["mov     [parser+1B8h], eax", "jmp     loc_546A"], ["mov     eax, [esp+4Ch+encodingName]", "mov     [parser+11Ch], eax", "mov     eax, 13h", "jmp     loc_5352"], ["mov     ebp, [esp+4Ch+encodingName]", "test    ebp, ebp", "jz      short loc_5695"], ["test    storedEncName, storedEncName", "jnz     loc_5594"], ["jmp     loc_555F"], ["or      storedEncName, edi", "jmp     loc_54C3"], ["mov     [parser+1B8h], edx", "jmp     loc_55CA"], ["call    __stack_chk_fail_local"]], "epilogProcessor": [["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 2Ch", "mov     eax, [esp+3Ch+end]", "mov     esi, [esp+3Ch+parser]", "mov     [esp+3Ch+account], eax; account", "mov     eax, [esp+3Ch+nextPtr]", "mov     [esp+3Ch+var_30], eax", "mov     edi, [esp+3Ch+s]", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "lea     eax, (epilogProcessor - 2DF78h)[ebp]", "mov     [esi+114h], eax", "lea     eax, [esp+3Ch+next]", "mov     [esi+11Ch], edi", "mov     [esp+3Ch+var_34], eax"], ["mov     edx, [esp+3Ch+var_34]", "mov     [esp+3Ch+next], 0", "mov     eax, [esi+90h]", "push    edx", "mov     ecx, [esp+40h+account]", "push    ecx", "push    s_0", "push    eax", "call    dword ptr [eax]", "mov     ecx, [esp+4Ch+next]", "mov     ebx, eax", "add     esp, 10h", "cmp     tok, 0FFFFFFFCh", "jz      loc_58C8"], ["jl      short loc_5738"], ["lea     tok, [tok+2]", "cmp     eax, 2", "jbe     short loc_5759"], ["push    eax; after", "mov     edx, s_0", "push    eax; before", "mov     eax, esi", "push    0; tok", "push    (offset stru_155C.r_info+2); originParser", "call    accountingDiffTolerated", "add     esp, 10h", "test    al, al", "jz      loc_58E0"], ["mov     ecx, [esp+3Ch+next]"], ["add     tok, 0Fh; switch 31 cases", "mov     [esi+120h], ecx", "cmp     ebx, 1Eh", "ja      short _L1122; jumptable 00005770 default case, cases -14--3,1-10,12,14"], ["mov     eax, ss:(jpt_5770 - 2DF78h)[ebp+ebx*4]", "add     eax, ebp", "jmp     eax; switch jump"], ["mov     eax, 9; jumptable 00005770 default case, cases -14--3,1-10,12,14"], ["mov     edx, [esp+3Ch+var_20]", "xor     edx, large gs:14h", "jnz     loc_58F7"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["sub     esp, 0Ch; jumptable 00005770 case 13", "mov     edx, [esi+90h]; enc", "mov     eax, esi; parser", "push    ecx; end", "mov     ecx, s_0; start", "call    reportComment", "add     esp, 10h", "test    eax, eax", "jz      loc_5886"], ["mov     s_0, [esp+3Ch+next]"], ["mov     eax, [esi+1DCh]", "mov     [esi+11Ch], edi", "cmp     eax, 2", "jz      loc_58B8"], ["cmp     eax, 3", "jnz     loc_5700"], ["mov     eax, [esp+3Ch+var_30]", "mov     [eax], edi", "xor     eax, eax", "jmp     short loc_577D"], ["mov     edx, [esi+50h]; jumptable 00005770 case -15", "test    edx, edx", "jz      short loc_5816"], ["sub     esp, 0Ch", "mov     edx, [esi+90h]; enc", "mov     eax, esi; parser", "push    ecx; end", "mov     ecx, s_0; s", "call    reportDefault", "add     esp, 10h", "cmp     dword ptr [esi+1DCh], 2", "jz      loc_58B8"], ["mov     ecx, [esp+3Ch+next]"], ["mov     eax, [esp+3Ch+var_30]", "mov     [eax], ecx", "xor     eax, eax", "jmp     loc_577D"], ["cmp     byte ptr [esi+1E0h], 0; jumptable 00005770 case -2", "mov     eax, 6", "jnz     loc_577D"], ["jmp     short loc_57D8"], ["cmp     byte ptr [esi+1E0h], 0; jumptable 00005770 case -1", "mov     eax, 5", "jnz     loc_577D"], ["jmp     short loc_57D8"], ["mov     [esi+11Ch], ecx; jumptable 00005770 case 0", "mov     eax, 4", "jmp     loc_577D"], ["sub     esp, 0Ch; jumptable 00005770 case 11", "mov     edx, [esi+90h]; enc", "mov     eax, esi; parser", "push    ecx; end", "mov     ecx, s_0; start", "call    reportProcessingInstruction", "add     esp, 10h", "test    eax, eax", "jnz     loc_57B6"], ["mov     eax, 1", "jmp     loc_577D"], ["mov     eax, [esi+50h]; jumptable 00005770 case 15", "test    eax, eax", "jz      short loc_58D8"], ["sub     esp, 0Ch", "mov     edx, [esi+90h]; enc", "mov     eax, esi; parser", "push    ecx; end", "mov     ecx, s_0; s", "call    reportDefault", "mov     s_0, [esp+4Ch+next]", "add     esp, 10h", "jmp     loc_57BA"], ["mov     eax, 23h ; '#'", "jmp     loc_577D"], ["mov     [esi+120h], ecx", "jmp     loc_57D8"], ["mov     s_0, ecx", "jmp     loc_57BA"], ["mov     eax, esi; originParser", "lea     edx, (aAborting - 2DF78h)[ebp]; \" ABORTING\\n\"", "call    accountingReportStats", "mov     eax, 2Ah ; '*'", "jmp     loc_577D"], ["call    __stack_chk_fail_local"]], "doCdataSection": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "mov     esi, enc", "push    ebx", "mov     ebx, parser", "sub     esp, 4Ch", "mov     parser, [esp+5Ch+end]", "mov     [esp+5Ch+var_44], edi", "mov     [esp+5Ch+var_4C], eax", "mov     eax, [esp+5Ch+nextPtr]", "mov     [esp+5Ch+var_40], eax", "mov     eax, [esp+5Ch+haveMore]", "mov     [esp+5Ch+startPtr], startPtr_0", "mov     [esp+5Ch+var_38], eax", "mov     eax, large gs:14h", "mov     [esp+5Ch+var_20], eax", "xor     eax, eax", "mov     eax, [startPtr_0]", "cmp     [parser+90h], enc", "mov     [esp+5Ch+s], eax", "jz      loc_59F8"], ["mov     ebp, [parser+128h]", "lea     edi, [eventPP+4]", "mov     [esp+5Ch+eventEndPP], edi"], ["mov     [eventPP+0], eax", "mov     eax, [esp+5Ch+startPtr]", "mov     dword ptr [eax], 0", "lea     eax, [esp+5Ch+next]", "mov     [esp+5Ch+var_48], eax", "lea     eax, [esp+5Ch+dataPtr]", "mov     [esp+5Ch+var_3C], eax", "lea     eax, [esp+5Ch+s]", "mov     [esp+5Ch+var_34], eax"], ["mov     eax, [esp+5Ch+var_48]", "push    eax", "mov     eax, [esp+60h+var_4C]", "push    eax", "mov     eax, [esp+64h+s]", "push    eax", "push    enc", "call    dword ptr [enc+8]", "mov     ecx, [esp+6Ch+next]", "mov     edi, eax", "add     esp, 10h", "cmp     tok, 0FFFFFFFCh", "jz      loc_5B38"], ["jl      short loc_59B5"], ["lea     tok, [tok+2]", "cmp     eax, 2", "jbe     short loc_59DE"], ["push    eax; after", "push    eax; before", "mov     eax, [esp+64h+account]", "push    eax; tok", "mov     eax, parser", "push    (offset aXmlSetnotstand+8); originParser", "mov     edx, [esp+6Ch+s]", "call    accountingDiffTolerated", "add     esp, 10h", "test    al, al", "jz      loc_5B8C"], ["mov     ecx, [esp+5Ch+next]", "lea     eax, [tok+2]"], ["mov     edx, [esp+5Ch+eventEndPP]", "cmp     eax, 2Ah; switch 43 cases", "mov     [edx], ecx", "ja      short _L1143; jumptable 000059F6 default case, cases 3-7,10-41"], ["mov     edx, [esp+5Ch+var_44]", "mov     tok, ds:(jpt_59F6 - 2DF78h)[edx+eax*4]", "add     edi, edx", "jmp     edi; switch jump"], ["lea     enc, [parser+120h]", "lea     ebp, [parser+11Ch]", "mov     [parser+11Ch], eax", "mov     [esp+5Ch+eventEndPP], edx", "jmp     loc_5961"], ["mov     [ebp+0], ecx; jumptable 000059F6 default case, cases 3-7,10-41", "mov     eax, 17h"], ["mov     esi, [esp+5Ch+var_20]", "xor     esi, large gs:14h", "jnz     loc_5C3E"], ["add     esp, 4Ch", "pop     parser", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     byte ptr [esp+5Ch+var_38], 0; jumptable 000059F6 case 0", "mov     eax, 6", "jz      short loc_5A20"], ["mov     enc, [esp+5Ch+var_40]", "mov     eax, [esp+5Ch+s]", "mov     [esi], eax", "xor     eax, eax", "jmp     short loc_5A20"], ["mov     [ebp+0], ecx; jumptable 000059F6 case 2", "mov     eax, 4", "jmp     short loc_5A20"], ["mov     edi, [parser+3Ch]; jumptable 000059F6 case 8", "test    charDataHandler, charDataHandler", "jz      loc_5B68"], ["cmp     byte ptr [enc+44h], 0", "jz      loc_5BD0"], ["mov     eax, [esp+5Ch+s]", "push    edx", "sub     ecx, eax", "push    ecx", "mov     ecx, [parser+4]", "push    eax", "push    ecx", "call    charDataHandler", "add     esp, 10h"], ["mov     eax, [esp+5Ch+next]", "mov     [esp+5Ch+s], eax", "mov     [ebp+0], eax", "mov     eax, [parser+1DCh]", "cmp     eax, 2", "jz      loc_5B58"], ["cmp     eax, 3", "jnz     loc_5986"], ["mov     enc, [esp+5Ch+var_40]", "mov     eax, [esp+5Ch+next]", "mov     [esi], eax", "xor     eax, eax", "jmp     loc_5A20"], ["mov     eax, [parser+3Ch]; jumptable 000059F6 case 9", "test    eax, eax", "jz      loc_5B68"], ["mov     byte ptr [esp+5Ch+dataPtr], 0Ah", "push    edx", "push    1", "mov     edi, [parser+4]", "mov     ecx, [esp+64h+var_3C]", "push    ecx", "push    edi", "call    eax", "add     esp, 10h", "jmp     short loc_5A97"], ["mov     eax, [parser+4Ch]; jumptable 000059F6 case 42", "test    eax, eax", "jz      loc_5BA8"], ["sub     esp, 0Ch", "mov     edx, [parser+4]", "push    edx", "call    eax", "add     esp, 10h"], ["mov     enc, [esp+5Ch+startPtr]", "mov     eax, [esp+5Ch+next]", "mov     [esi], eax", "mov     esi, [esp+5Ch+var_40]", "mov     [esi], eax", "xor     eax, eax", "cmp     dword ptr [parser+1DCh], 2", "setnz   al", "dec     eax", "and     eax, 23h", "jmp     loc_5A20"], ["mov     tok, [esp+5Ch+eventEndPP]", "mov     [eax], ecx"], ["cmp     byte ptr [esp+5Ch+var_38], 0; jumptable 000059F6 case 1", "mov     eax, 14h", "jz      loc_5A20"], ["jmp     loc_5A4C"], ["mov     eax, 23h ; '#'", "jmp     loc_5A20"], ["mov     eax, [parser+50h]", "test    eax, eax", "jz      loc_5A97"], ["sub     esp, 0Ch", "mov     edx, enc; enc", "mov     eax, parser; parser", "push    ecx; end", "mov     ecx, [esp+6Ch+s]; s", "call    reportDefault", "add     esp, 10h", "jmp     loc_5A97"], ["mov     eax, [esp+5Ch+var_44]", "lea     edx, [eax-0E196h]; epilog", "mov     eax, parser; originParser", "call    accountingReportStats", "mov     eax, 2Ah ; '*'", "jmp     loc_5A20"], ["mov     ebp, [parser+50h]", "test    ebp, ebp", "jz      loc_5B0F"], ["sub     esp, 0Ch", "mov     edx, enc; enc", "mov     eax, parser; parser", "push    ecx; end", "mov     ecx, [esp+6Ch+s]; s", "call    reportDefault", "add     esp, 10h", "jmp     loc_5B0F"], ["mov     [esp+5Ch+var_30], ebp", "mov     ebp, enc", "mov     enc, charDataHandler", "jmp     short loc_5BEA"], ["mov     edx, [esp+5Ch+var_30]", "mov     eax, [esp+5Ch+s]", "mov     [edx], eax"], ["mov     eax, [parser+2Ch]", "sub     esp, 0Ch", "mov     edi, [parser+30h]", "mov     [esp+68h+dataPtr], eax", "push    edi", "mov     eax, [esp+6Ch+var_3C]", "push    eax", "mov     eax, [esp+70h+next]", "push    eax", "mov     eax, [esp+74h+var_34]", "push    eax", "push    enc", "call    dword ptr [enc+38h]", "mov     edx, [esp+7Ch+eventEndPP]", "mov     edi, eax", "mov     convert_res, [esp+7Ch+next]", "add     esp, 1Ch", "mov     [edx], eax", "mov     eax, [esp+60h+dataPtr]", "mov     ecx, [parser+2Ch]", "sub     eax, ecx", "push    eax", "mov     eax, [parser+4]", "push    ecx", "push    eax", "call    charDataHandler", "add     esp, 10h", "cmp     convert_res, 1", "ja      short loc_5BE0"], ["mov     charDataHandler, enc", "mov     enc, [esp+5Ch+var_30]", "jmp     loc_5A97"], ["call    __stack_chk_fail_local"]], "doIgnoreSection": [["push    ebp", "mov     ebp, startPtr", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "mov     esi, parser", "push    ebx", "sub     esp, 3Ch", "mov     [esp+4Ch+var_30], edi", "mov     startPtr, [esp+4Ch+nextPtr]", "mov     edi, enc", "mov     enc, [esp+4Ch+haveMore]", "mov     [esp+4Ch+var_34], ecx", "mov     [esp+4Ch+var_38], edx", "mov     edx, large gs:14h", "mov     [esp+4Ch+var_20], edx", "xor     edx, edx", "mov     parser, [esp+4Ch+end]", "cmp     [parser+90h], enc", "mov     edx, [startPtr+0]", "jz      loc_5DA8"], ["mov     ebx, [parser+128h]", "mov     [esp+4Ch+eventPP], ebx", "add     eventPP_0, 4", "mov     [esp+4Ch+eventEndPP], ebx"], ["mov     ecx, [esp+4Ch+eventPP]", "mov     [ecx], s_0", "lea     ecx, [esp+4Ch+next]", "push    ecx", "mov     dword ptr [startPtr+0], 0", "push    eax", "push    s_0", "mov     [esp+58h+s], s_0", "push    enc", "call    dword ptr [enc+0Ch]", "mov     ecx, [esp+5Ch+next]", "mov     ebx, eax", "add     esp, 10h", "cmp     tok, 0FFFFFFFCh", "mov     edx, [esp+4Ch+s]", "jz      loc_5E2D"], ["jl      short loc_5CE9"], ["lea     tok, [tok+2]", "cmp     eax, 2", "jbe     short loc_5D10"], ["push    eax; after", "push    eax; before", "mov     eax, parser", "push    0; tok", "push    (offset aXmlSetelementd+7); originParser", "mov     [esp+5Ch+s], edx", "call    accountingDiffTolerated", "add     esp, 10h", "test    al, al", "jz      loc_5DE8"], ["mov     ecx, [esp+4Ch+next]", "mov     edx, [esp+4Ch+s]"], ["mov     eax, [esp+4Ch+eventEndPP]", "test    tok, tok", "mov     [eax], ecx", "jz      loc_5E18"], ["jg      short loc_5D60"], ["cmp     tok, 0FFFFFFFEh", "jz      loc_5DC8"], ["inc     tok", "jnz     loc_5E08"], ["cmp     byte ptr [esp+4Ch+var_38], 0", "mov     eax, 2", "jnz     loc_5DD8"], ["mov     parser, [esp+4Ch+var_20]", "xor     parser, large gs:14h", "jnz     loc_5E28"], ["add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     startPtr", "retn"], ["cmp     tok, 2Ah ; '*'", "jnz     loc_5E08"], ["mov     eax, [parser+50h]", "test    eax, eax", "jz      short loc_5D82"], ["sub     esp, 0Ch", "mov     eax, parser; parser", "push    ecx; end", "mov     ecx, edx; s", "mov     edx, enc; enc", "call    reportDefault", "add     esp, 10h"], ["mov     enc, [esp+4Ch+var_34]", "mov     eax, [esp+4Ch+next]", "mov     [startPtr+0], eax", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], eax", "xor     eax, eax", "cmp     dword ptr [parser+1DCh], 2", "setnz   al", "dec     eax", "and     eax, 23h", "jmp     short loc_5D40"], ["lea     ecx, [parser+11Ch]", "lea     ebx, [parser+120h]", "mov     [esp+4Ch+eventPP], ecx", "mov     [parser+11Ch], s_0", "mov     [esp+4Ch+eventEndPP], ebx", "jmp     loc_5CAD"], ["cmp     byte ptr [esp+4Ch+var_38], 0", "mov     eax, 6", "jz      loc_5D40"], ["mov     eax, [esp+4Ch+var_34]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_5D40"], ["mov     eax, [esp+4Ch+var_30]", "lea     edx, [eax-0E196h]; epilog", "mov     eax, parser; originParser", "call    accountingReportStats", "mov     eax, 2Ah ; '*'", "jmp     loc_5D40"], ["mov     eax, [esp+4Ch+eventPP]", "mov     [eax], ecx", "mov     eax, 17h", "jmp     loc_5D40"], ["mov     eax, [esp+4Ch+eventPP]", "mov     [eax], ecx", "mov     eax, 4", "jmp     loc_5D40"], ["call    __stack_chk_fail_local"], ["mov     tok, [esp+4Ch+eventEndPP]", "mov     [eax], ecx", "jmp     loc_5D30"]], "entityTrackingReportStats": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     esi, [rootParser_0+1D8h]", "test    esi, esi", "jnz     short loc_5ED0"], ["mov     ebp, [rootParser_0+21Ch]", "test    ebp, ebp", "jle     short loc_5EBE"], ["cmp     byte ptr [entity+21h], 0", "mov     esi, [entity]", "mov     edi, [entity+8]", "jnz     short loc_5EC8"], ["lea     ebp, (asc_1FAC1 - 2DF78h)[ebx]; \"&\""], ["sub     esp, 8", "mov     entity, [rootParser_0+214h]", "push    [esp+24h+sourceLine]", "push    edi", "push    action_0", "lea     action_0, (asc_1FDDF+2 - 2DF78h)[ebx]; \"\"", "push    entityName_0", "push    ebp", "push    ecx", "lea     ecx, [edx+edx-2]", "push    ecx", "mov     ecx, [rootParser_0+218h]", "push    ecx", "push    edx", "mov     entityName_0, [rootParser_0+210h]", "push    esi", "push    rootParser_0", "lea     rootParser_0, (aExpatEntitiesP - 2DF78h)[ebx]; \"expat: Entities(%p): Count %9d, depth %\"...", "push    eax", "mov     eax, ds:(stderr_ptr - 2DF78h)[ebx]", "push    1", "mov     edi, [eax]", "push    edi", "call    ___fprintf_chk", "add     esp, 40h"], ["add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     ebp, (asc_1FABF - 2DF78h)[ebx]; \"%\"", "jmp     short loc_5E77"], ["lea     rootParser_0, (__PRETTY_FUNCTION___10895 - 2DF78h)[ebx]; \"entityTrackingReportStats\"", "push    eax; function", "lea     eax, (aGitExpatLibXml - 2DF78h)[ebx]; \"../../git/expat/lib/xmlparse.c\"", "push    1DACh; line", "push    eax; file", "lea     eax, (aRootparserMPar - 2DF78h)[ebx]; \"! rootParser->m_parentParser\"", "push    eax; assertion", "call    ___assert_fail"]], "appendAttributeValue": [["push    ebp", "mov     ebp, enc", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "sub     esp, 4Ch", "mov     esi, [esp+5Ch+end]", "mov     [esp+5Ch+parser], parser_0", "mov     [esp+5Ch+var_48], esi", "mov     [esp+5Ch+isCdata], cl", "mov     [esp+5Ch+var_44], edi", "add     parser_0, 1B4h", "mov     enc, large gs:14h", "mov     [esp+5Ch+var_20], enc", "xor     enc, enc", "lea     isCdata_0, [esp+5Ch+next]", "mov     edx, [eax-54h]", "mov     [esp+5Ch+var_38], eax", "lea     eax, (aClose_0 - 2DF78h)[edi]; \"CLOSE\"", "mov     ebx, [esp+5Ch+ptr]", "mov     esi, [esp+5Ch+pool]", "mov     [esp+5Ch+dtd], edx", "mov     [esp+5Ch+var_4C], ecx", "mov     [esp+5Ch+action], eax"], ["mov     eax, [esp+5Ch+var_4C]", "push    eax", "mov     eax, [esp+60h+var_48]", "push    eax", "push    ptr_0", "push    enc", "call    dword ptr [enc+10h]", "add     esp, 10h", "mov     edi, eax", "cmp     tok, 0FFFFFFFCh", "jz      short loc_6018"], ["jl      short loc_5FD2"], ["lea     tok, [tok+2]", "cmp     eax, 2", "jbe     short loc_5FFF"], ["cmp     [esp+5Ch+account], 2", "jz      short loc_5FFF"], ["push    ecx; after", "mov     edx, ptr_0", "push    ecx; before", "mov     eax, [esp+64h+account]", "push    eax; tok", "push    offset stru_1644.r_info; originParser", "mov     ecx, [esp+6Ch+next]", "mov     eax, [esp+6Ch+parser]", "call    accountingDiffTolerated", "add     esp, 10h", "test    al, al", "jz      loc_63B7"], ["add     tok, 3; switch 43 cases", "cmp     edi, 2Ah", "ja      short _L1218; jumptable 00006014 default case, cases -2,1-5,8,11-38"], ["mov     eax, [esp+5Ch+var_44]", "mov     edx, ds:(jpt_6014 - 2DF78h)[eax+edi*4]", "add     eax, edx", "jmp     eax; switch jump"], ["xor     edi, edi"], ["mov     eax, [esp+5Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_643C"], ["add     esp, 4Ch", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     enc", "retn"], ["mov     eax, [esp+5Ch+parser]; jumptable 00006014 default case, cases -2,1-5,8,11-38", "mov     edi, 17h", "cmp     [eax+90h], enc", "jnz     short loc_601A"], ["mov     [eax+11Ch], ptr_0", "jmp     short loc_601A"], ["mov     eax, [enc+40h]; jumptable 00006014 case -3", "add     ptr_0, eax", "mov     [esp+5Ch+next], ebx"], ["cmp     [esp+5Ch+isCdata], 0; jumptable 00006014 cases 7,39", "mov     eax, [esi+0Ch]", "jnz     short loc_6076"], ["cmp     [esi+10h], eax", "jz      short loc_6088"], ["cmp     byte ptr [eax-1], 20h ; ' '", "jz      short loc_6088"], ["cmp     [esi+8], eax", "jz      loc_6328"], ["lea     edx, [eax+1]", "mov     [esi+0Ch], edx", "mov     byte ptr [eax], 20h ; ' '"], ["mov     ebx, [esp+5Ch+next]", "jmp     loc_5FAF"], ["push    edi; jumptable 00006014 case 9", "mov     eax, [enc+40h]", "mov     edx, [esp+60h+next]", "sub     edx, eax", "add     eax, ptr_0", "push    edx", "push    eax", "push    enc", "call    dword ptr [enc+2Ch]", "mov     [esp+6Ch+ch_0], al", "add     esp, 10h", "test    al, al", "jz      loc_61E8"], ["lea     edx, [esp+5Ch+ch_0]", "push    ecx; after", "push    ecx; before", "push    1; tok", "push    (offset stru_168C.r_offset+1); originParser", "mov     ecx, [esp+6Ch+var_4C]", "mov     eax, [esp+6Ch+parser]", "call    accountingDiffTolerated", "mov     eax, [esi+0Ch]", "add     esp, 10h", "cmp     eax, [esi+8]", "jz      loc_6370"], ["lea     edx, [eax+1]", "mov     cl, [esp+5Ch+ch_0]", "mov     [esi+0Ch], edx", "mov     [eax], cl", "mov     ptr_0, [esp+5Ch+next]", "jmp     loc_5FAF"], ["sub     esp, 0Ch; jumptable 00006014 case 6", "mov     ecx, ptr_0; ptr", "mov     edx, enc; enc", "mov     eax, [esp+68h+next]", "push    eax; end", "mov     eax, esi; pool", "call    poolAppend", "add     esp, 10h", "test    eax, eax", "jnz     loc_6088"], ["mov     edi, 1", "jmp     loc_601A"], ["mov     eax, [esp+5Ch+parser]; jumptable 00006014 case 0", "mov     edi, 4", "cmp     [eax+90h], enc", "jnz     loc_601A"], ["mov     esi, [esp+5Ch+parser]", "mov     eax, [esp+5Ch+next]", "mov     [esi+11Ch], eax", "jmp     loc_601A"], ["mov     eax, [esp+5Ch+parser]; jumptable 00006014 case -1", "mov     edi, 4", "cmp     [eax+90h], enc", "jnz     loc_601A"], ["jmp     loc_6049"], ["mov     edx, ptr_0; jumptable 00006014 case 10", "mov     eax, enc", "call    dword ptr [enc+28h]", "test    n, n", "js      loc_63D4"], ["cmp     [esp+5Ch+isCdata], 0", "jnz     short loc_6199"], ["cmp     n, 20h ; ' '", "jnz     short loc_6199"], ["mov     edx, [esi+0Ch]", "cmp     edx, [esi+10h]", "jz      loc_6088"], ["cmp     byte ptr [edx-1], 20h ; ' '", "jz      loc_6088"], ["lea     edi, [esp+5Ch+buf]", "mov     ptr_0, [esp+5Ch+var_44]", "mov     edx, edi; buf", "call    XmlUtf8Encode", "test    eax, eax", "jle     loc_6088"], ["mov     ebx, edi", "lea     edi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi+eax]", "jmp     short loc_61CB"], ["mov     cl, [ebx]", "lea     edx, [eax+1]", "inc     ebx", "mov     [esi+0Ch], edx", "cmp     edi, ebx", "mov     [eax], cl", "jz      loc_6088"], ["mov     eax, [esi+0Ch]", "cmp     eax, [esi+8]", "jnz     short loc_61B8"], ["mov     eax, esi; pool", "call    poolGrow", "test    al, al", "jz      loc_6116"], ["mov     eax, [esi+0Ch]", "jmp     short loc_61B8"], ["sub     esp, 0Ch", "mov     eax, [enc+40h]", "mov     edx, [esp+68h+next]", "lea     ecx, [ptr_0+eax]; ptr", "sub     edx, eax", "push    edx; end", "mov     edx, enc; enc", "mov     eax, [esp+6Ch+var_38]; pool", "call    poolStoreString", "add     esp, 10h", "mov     ecx, eax; name", "test    name, name", "jz      loc_6116"], ["sub     esp, 0Ch", "push    0; createSize", "mov     edx, [esp+6Ch+dtd]; table", "mov     name, [esp+6Ch+parser]; parser", "call    lookup", "mov     ecx, [esp+6Ch+parser]", "mov     edi, eax", "mov     entity, [ecx+1C4h]", "mov     [ecx+1C0h], eax", "mov     eax, [esp+6Ch+dtd]", "add     eax, 50h ; 'P'", "add     esp, 10h", "cmp     esi, eax", "jz      loc_6388"], ["mov     eax, [esp+5Ch+dtd]", "cmp     byte ptr [eax+81h], 0", "jz      loc_6350"], ["cmp     byte ptr [eax+82h], 0", "jnz     loc_6350"], ["test    entity, entity", "jz      loc_6088"], ["cmp     byte ptr [entity+20h], 0", "jnz     loc_6422"], ["mov     eax, [entity+1Ch]", "test    eax, eax", "jnz     loc_6408"], ["mov     eax, [entity+4]", "test    eax, eax", "jz      loc_63EE"], ["mov     ecx, [entity+8]", "mov     edx, entity; entity", "add     eax, ecx", "mov     byte ptr [entity+20h], 1", "mov     ptr_0, eax", "mov     ecx, 16DEh; sourceLine", "mov     textEnd_0, [esp+5Ch+parser]; originParser", "call    entityTrackingOnOpen", "mov     eax, [esp+5Ch+parser]; parser", "xor     ecx, ecx", "mov     edx, [eax+0E0h]; enc", "mov     cl, [esp+5Ch+isCdata]; isCdata", "push    1; account", "push    esi; pool", "push    textEnd_0; end", "mov     textEnd_0, [entity+4]", "push    ebx; ptr", "mov     [esp+6Ch+parser], eax", "call    appendAttributeValue", "add     esp, 10h", "mov     ebx, eax", "mov     edx, [esp+5Ch+parser]", "lea     esi, [esi+0]"], ["mov     eax, edx; rootParser", "mov     edx, [edx+1D8h]", "test    edx, edx", "jnz     short loc_62D8"], ["sub     esp, 0Ch", "mov     edx, entity; entity", "push    16E5h; sourceLine", "mov     ecx, [esp+6Ch+action]; action", "mov     [esp+6Ch+var_30], eax", "call    entityTrackingReportStats", "mov     eax, [esp+6Ch+var_30]", "mov     edx, [eax+214h]", "add     esp, 10h", "dec     edx", "test    ebx, ebx", "mov     [eax+214h], edx", "mov     byte ptr [entity+20h], 0", "jz      loc_6088"], ["mov     entity, ebx", "jmp     loc_601A"], ["mov     eax, esi; pool", "call    poolGrow", "test    al, al", "jz      loc_6116"], ["mov     eax, [esi+0Ch]", "jmp     loc_607F"], ["mov     eax, [esp+5Ch+dtd]", "cmp     byte ptr [eax+81h], 0", "jnz     loc_6264"], ["test    entity, entity", "jz      loc_6441"], ["cmp     byte ptr [entity+22h], 0", "jnz     loc_626C"], ["mov     entity, 18h", "jmp     loc_601A"], ["mov     eax, esi; pool", "call    poolGrow", "test    al, al", "jz      loc_6116"], ["mov     eax, [esi+0Ch]", "jmp     loc_60E2"], ["mov     eax, [esp+5Ch+parser]", "mov     edx, [eax+10Ch]", "test    edx, edx", "jz      loc_6264"], ["mov     ecx, [esp+5Ch+dtd]", "cmp     byte ptr [ecx+82h], 0", "jz      short loc_633F"], ["mov     eax, [eax+128h]", "test    eax, eax", "jnz     loc_6264"], ["jmp     short loc_6350"], ["mov     eax, [esp+5Ch+var_44]", "mov     tok, 2Ah ; '*'", "lea     edx, [eax-0E196h]; epilog", "mov     eax, [esp+5Ch+parser]; originParser", "call    accountingReportStats", "jmp     loc_601A"], ["mov     n, [esp+5Ch+parser]", "mov     edi, 0Eh", "cmp     [eax+90h], enc", "jnz     loc_601A"], ["jmp     loc_6049"], ["mov     eax, [esp+5Ch+parser]", "mov     entity, 10h", "cmp     [eax+90h], enc", "jnz     loc_601A"], ["jmp     loc_6049"], ["mov     eax, [esp+5Ch+parser]", "mov     entity, 0Fh", "cmp     [eax+90h], enc", "jnz     loc_601A"], ["jmp     loc_6049"], ["mov     eax, [esp+5Ch+parser]", "mov     entity, 0Ch", "cmp     [eax+90h], enc", "jnz     loc_601A"], ["jmp     loc_6049"], ["call    __stack_chk_fail_local"], ["mov     entity, 0Bh", "jmp     loc_601A"]], "storeEntityValue": [["push    ebp", "mov     ebp, enc", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "sub     esp, 4Ch", "mov     [esp+5Ch+var_4C], edi", "mov     edi, parser", "mov     parser, [esp+5Ch+entityTextEnd]", "mov     [esp+5Ch+entityTextPtr], entityTextPtr_0", "mov     esi, [parser+160h]", "mov     [esp+5Ch+var_48], eax", "mov     eax, large gs:14h", "mov     [esp+5Ch+var_20], eax", "xor     eax, eax", "lea     eax, [dtd+68h]", "mov     [esp+5Ch+pool], eax", "mov     pool_0, [parser+110h]", "mov     dword ptr [parser+110h], 1", "mov     [esp+5Ch+oldInEntityValue], eax", "mov     oldInEntityValue_0, [dtd+68h]", "test    eax, eax", "jz      loc_6748"], ["lea     eax, [esp+5Ch+next]", "mov     [esp+5Ch+var_44], eax", "lea     eax, [esp+5Ch+buf]", "mov     [esp+5Ch+var_38], eax", "mov     eax, [esp+5Ch+var_4C]", "lea     eax, [eax-0E185h]", "mov     [esp+5Ch+action], eax"], ["mov     eax, [esp+5Ch+var_44]", "push    eax", "mov     eax, [esp+60h+var_48]", "push    eax", "mov     eax, [esp+64h+entityTextPtr]", "push    eax", "push    ebp", "call    dword ptr [ebp+14h]", "add     esp, 10h", "mov     ebx, eax", "cmp     tok, 0FFFFFFFCh", "jz      loc_6740"], ["jl      short loc_64F7"], ["lea     tok, [tok+2]", "cmp     eax, 2", "jbe     short loc_6524"], ["cmp     [esp+5Ch+account], 2", "jz      short loc_6524"], ["push    ecx; after", "push    ecx; before", "mov     eax, [esp+64h+account]", "push    eax; tok", "mov     eax, parser", "push    offset stru_171C; originParser", "mov     ecx, [esp+6Ch+next]", "mov     edx, [esp+6Ch+entityTextPtr]", "call    accountingDiffTolerated", "add     esp, 10h", "test    al, al", "jz      loc_68C2"], ["add     tok, 3; switch 32 cases", "cmp     ebx, 1Fh", "ja      short _L1307; jumptable 00006539 default case, cases -2,1-5,8,11-27"], ["mov     eax, [esp+5Ch+var_4C]", "mov     edx, ds:(jpt_6539 - 2DF78h)[eax+ebx*4]", "add     eax, edx", "jmp     eax; switch jump"], ["cmp     dword ptr ds:(read - 2DF78h)[parser], ebp; jumptable 00006539 default case, cases -2,1-5,8,11-27", "mov     ebx, 17h", "jz      loc_6691"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+5Ch+oldInEntityValue]", "mov     [parser+110h], eax"], ["mov     eax, [esp+5Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_6963"], ["add     esp, 4Ch", "mov     eax, ebx", "pop     ebx", "pop     esi", "pop     parser", "pop     ebp", "retn"], ["sub     esp, 0Ch; jumptable 00006539 cases 6,9", "mov     edx, ebp; enc", "mov     ecx, [esp+68h+next]", "push    ecx; end", "mov     ecx, [esp+6Ch+entityTextPtr]; ptr", "mov     eax, [esp+6Ch+pool]; pool", "call    poolAppend", "add     esp, 10h", "test    eax, eax", "jz      loc_68B8"], ["mov     eax, [esp+5Ch+next]", "mov     [esp+5Ch+entityTextPtr], eax", "jmp     loc_64CC"], ["mov     eax, [esp+5Ch+entityTextPtr]; jumptable 00006539 case -3", "mov     edx, [ebp+40h]", "add     eax, edx", "mov     [esp+5Ch+next], eax"], ["mov     eax, [dtd+74h]; jumptable 00006539 case 7", "cmp     [dtd+70h], eax", "jz      loc_6768"], ["lea     edx, [eax+1]", "mov     [dtd+74h], edx", "mov     byte ptr [eax], 0Ah", "jmp     short loc_65A2"], ["mov     edx, [esp+5Ch+entityTextPtr]; jumptable 00006539 case 10", "mov     eax, ebp", "call    dword ptr [ebp+28h]", "test    n, n", "js      loc_68DD"], ["mov     edx, [esp+5Ch+var_38]; buf", "mov     ebx, [esp+5Ch+var_4C]", "call    XmlUtf8Encode", "mov     ecx, [esp+5Ch+var_38]", "mov     ebx, ecx", "test    eax, eax", "lea     edx, [ecx+eax]", "jle     short loc_65A2"], ["mov     [esp+5Ch+entityTextPtr], ebp", "mov     ebp, edx", "jmp     short loc_6620"], ["lea     ecx, [eax+1]", "inc     ebx", "mov     [dtd+74h], ecx", "mov     dl, [ebx-1]", "cmp     ebx, ebp", "mov     [eax], dl", "jz      short loc_6650"], ["mov     eax, [dtd+74h]", "cmp     [dtd+70h], eax", "jnz     short loc_6610"], ["mov     eax, [esp+5Ch+pool]; pool", "call    poolGrow", "test    al, al", "jz      loc_68B8"], ["mov     eax, [dtd+74h]", "inc     ebx", "lea     ecx, [eax+1]", "mov     [dtd+74h], ecx", "mov     dl, [ebx-1]", "cmp     ebx, ebp", "mov     [eax], dl", "jnz     short loc_6620"], ["lea     dtd, [dtd+0]"], ["mov     ebp, [esp+5Ch+entityTextPtr]", "jmp     loc_65A2"], ["cmp     dword ptr ds:(read - 2DF78h)[parser], ebp; jumptable 00006539 case 0", "mov     ebx, 4", "jnz     endEntityValue"], ["mov     eax, [esp+5Ch+next]", "mov     [parser+11Ch], eax", "jmp     endEntityValue"], ["cmp     dword ptr ds:(read - 2DF78h)[parser], ebp; jumptable 00006539 case -1", "mov     ebx, 4", "jnz     endEntityValue"], ["mov     eax, [esp+5Ch+entityTextPtr]", "mov     [parser+11Ch], eax", "jmp     endEntityValue"], ["cmp     byte ptr [parser+1E4h], 0; jumptable 00006539 case 28", "jnz     short loc_66B5"], ["cmp     dword ptr ds:(read - 2DF78h)[parser], ebp", "jz      loc_68A0"], ["mov     eax, [esp+5Ch+entityTextPtr]", "sub     esp, 0Ch", "mov     edx, [ebp+40h]", "mov     ebx, [esp+68h+next]", "lea     ecx, [eax+edx]; ptr", "sub     ebx, edx", "lea     eax, [parser+19Ch]; pool", "mov     edx, ebp; enc", "push    ebx; end", "call    poolStoreString", "add     esp, 10h", "mov     ecx, eax; name", "test    name, name", "jz      loc_68B8"], ["sub     esp, 0Ch", "lea     edx, [dtd+84h]; table", "mov     name, parser; parser", "push    0; createSize", "call    lookup", "mov     ebx, eax", "mov     entity, [parser+1ACh]", "add     esp, 10h", "mov     [parser+1A8h], eax", "test    entity, entity", "jz      loc_68F3"], ["cmp     byte ptr [entity+20h], 0", "jnz     loc_6904"], ["mov     edx, [entity+10h]", "test    edx, edx", "jz      loc_6815"], ["mov     eax, [parser+70h]", "test    eax, eax", "jnz     short loc_6788"], ["mov     al, [dtd+82h]", "mov     [dtd+80h], al", "jmp     loc_65A2"], ["xor     ebx, ebx", "jmp     endEntityValue"], ["lea     eax, [dtd+68h]; pool", "call    poolGrow", "test    al, al", "jnz     loc_64AE"], ["mov     ebx, 1", "jmp     loc_6562"], ["mov     eax, [esp+5Ch+pool]; pool", "call    poolGrow", "test    al, al", "jz      loc_68B8"], ["mov     eax, [dtd+74h]", "jmp     loc_65C9"], ["mov     byte ptr [dtd+83h], 0", "mov     ecx, 1747h; sourceLine", "mov     edx, entity; entity", "mov     eax, parser; originParser", "mov     byte ptr [entity+20h], 1", "call    entityTrackingOnOpen", "sub     esp, 0Ch", "mov     eax, [entity+18h]", "push    eax", "mov     eax, [entity+10h]", "push    eax", "mov     eax, [entity+14h]", "push    eax", "push    0", "mov     eax, [parser+74h]", "push    eax", "call    dword ptr [parser+70h]", "add     esp, 20h", "test    eax, eax", "jz      loc_691A"], ["mov     edx, parser", "xchg    ax, ax"], ["mov     eax, edx; rootParser", "mov     edx, [edx+1D8h]", "test    edx, edx", "jnz     short loc_67C8"], ["sub     esp, 0Ch", "mov     edx, entity; entity", "push    1750h; sourceLine", "mov     ecx, [esp+6Ch+action]; action", "mov     [esp+6Ch+entityTextPtr], eax", "call    entityTrackingReportStats", "mov     eax, [esp+6Ch+entityTextPtr]", "mov     edx, [eax+214h]", "add     esp, 10h", "dec     edx", "mov     [eax+214h], edx", "mov     byte ptr [entity+20h], 0", "cmp     byte ptr [dtd+83h], 0", "jnz     loc_65A2"], ["jmp     loc_672A"], ["mov     eax, parser; originParser", "mov     ecx, 1758h; sourceLine", "mov     edx, entity; entity", "mov     byte ptr [entity+20h], 1", "call    entityTrackingOnOpen", "mov     ecx, [entity+4]; entityTextPtr", "mov     edx, dword ptr ds:(close - 2DF78h)[parser]; enc", "push    eax", "push    eax", "push    1; account", "mov     eax, [entity+8]", "add     eax, ecx", "push    eax; entityTextEnd", "mov     eax, parser; parser", "call    storeEntityValue", "mov     edx, parser", "mov     [esp+6Ch+entityTextPtr], eax", "add     esp, 10h", "lea     dtd, [dtd+0]"], ["mov     eax, edx; rootParser", "mov     edx, [edx+1D8h]", "test    edx, edx", "jnz     short loc_6850"], ["sub     esp, 0Ch", "mov     edx, entity; entity", "push    175Dh; sourceLine", "mov     ecx, [esp+6Ch+action]; action", "mov     [esp+6Ch+var_30], eax", "call    entityTrackingReportStats", "mov     eax, [esp+6Ch+var_30]", "mov     edx, [eax+214h]", "mov     ecx, [esp+6Ch+entityTextPtr]", "dec     edx", "add     esp, 10h", "mov     [eax+214h], edx", "test    ecx, ecx", "mov     byte ptr [entity+20h], 0", "jz      loc_65A2"], ["mov     entity, [esp+5Ch+entityTextPtr]", "jmp     endEntityValue"], ["mov     eax, [esp+5Ch+entityTextPtr]", "mov     ebx, 0Ah", "mov     [parser+11Ch], eax", "jmp     endEntityValue"], ["mov     ebx, 1", "jmp     endEntityValue"], ["mov     eax, [esp+5Ch+var_4C]", "mov     tok, 2Ah ; '*'", "lea     edx, [eax-0E196h]; epilog", "mov     eax, parser; originParser", "call    accountingReportStats", "jmp     endEntityValue"], ["cmp     dword ptr ds:(read - 2DF78h)[parser], ebp", "mov     ebx, 0Eh", "jnz     endEntityValue"], ["jmp     loc_6691"], ["mov     al, [dtd+82h]", "mov     [dtd+80h], al", "jmp     endEntityValue"], ["cmp     dword ptr ds:(read - 2DF78h)[parser], ebp", "mov     entity, 0Ch", "jnz     endEntityValue"], ["jmp     loc_6691"], ["mov     edx, entity; entity", "mov     eax, parser"], ["mov     ebx, eax", "mov     eax, [eax+1D8h]", "test    eax, eax", "jnz     short loc_691E"], ["sub     esp, 0Ch", "mov     dtd, entity", "push    174Bh; sourceLine", "mov     eax, [esp+6Ch+var_4C]", "lea     ecx, [eax-0E185h]; action", "mov     eax, ebx; rootParser", "call    entityTrackingReportStats", "mov     ecx, [ebx+214h]", "dec     ecx", "add     esp, 10h", "mov     [ebx+214h], ecx", "mov     byte ptr [entity+20h], 0", "mov     ebx, 15h", "jmp     endEntityValue"], ["call    __stack_chk_fail_local"]], "entityValueProcessor": [["push    ebp", "push    edi", "push    esi", "push    ebx", "sub     esp, 2Ch", "mov     eax, [esp+3Ch+s]", "mov     ebp, [esp+3Ch+parser]", "mov     edx, [esp+3Ch+nextPtr]", "mov     [esp+3Ch+entityTextPtr], eax", "mov     [esp+3Ch+var_30], edx", "mov     ebx, [esp+3Ch+end]", "mov     ecx, large gs:14h", "mov     [esp+3Ch+var_20], ecx", "xor     ecx, ecx", "mov     edi, [ebp+90h]", "mov     [esp+3Ch+next], start", "lea     esi, [esp+3Ch+next]", "jmp     short loc_69B4"], ["mov     tok, [esp+3Ch+next]"], ["push    esi", "push    ebx", "push    start", "push    enc", "call    dword ptr [enc]", "add     esp, 10h", "test    tok, tok", "jg      short loc_69B0"], ["cmp     byte ptr [ebp+1E0h], 0", "jnz     short loc_69CE"], ["test    tok, tok", "jnz     short loc_69F8"], ["lea     ecx, [tok+2]", "cmp     ecx, 2", "ja      short loc_6A08"], ["mov     edx, 4", "sub     edx, tok", "mov     tok, edx"], ["mov     ecx, [esp+3Ch+var_20]", "xor     ecx, large gs:14h", "jnz     short loc_6A1F"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     enc", "pop     ebp", "retn"], ["mov     tok, [esp+3Ch+var_30]", "mov     ecx, [esp+3Ch+entityTextPtr]", "mov     [eax], ecx", "xor     eax, eax", "jmp     short loc_69DF"], ["push    eax", "mov     edx, enc; enc", "push    eax", "mov     eax, ebp; parser", "push    0; account", "push    ebx; entityTextEnd", "mov     ecx, [esp+4Ch+entityTextPtr]; entityTextPtr", "call    storeEntityValue", "add     esp, 10h", "jmp     short loc_69DF"], ["call    __stack_chk_fail_local"]], "entityValueInitProcessor": [["push    ebp", "call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 2Ch", "mov     [esp+3Ch+var_34], eax", "mov     ecx, [esp+3Ch+nextPtr]", "mov     eax, [esp+3Ch+s]", "mov     ebx, [esp+3Ch+parser]", "mov     [esp+3Ch+entityTextPtr], eax", "mov     [esp+3Ch+var_38], ecx", "mov     ecx, large gs:14h", "mov     [esp+3Ch+var_20], ecx", "xor     ecx, ecx", "mov     esi, [esp+3Ch+end]", "mov     [esp+3Ch+next], start", "mov     [ebx+11Ch], start", "mov     ebp, start", "lea     edi, [esp+3Ch+next]", "jmp     short loc_6A91"], ["cmp     tok, 1Dh", "jz      loc_6B90"], ["mov     [ebx+11Ch], start", "mov     ebp, start"], ["mov     eax, [ebx+90h]", "push    edi", "push    esi", "push    start", "push    eax", "call    ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax]", "mov     edx, [esp+4Ch+next]", "add     esp, 10h", "mov     [ebx+120h], edx", "test    tok, tok", "jle     short loc_6B00"], ["cmp     tok, 0Ch", "jz      loc_6B48"], ["cmp     tok, 0Eh", "jnz     short loc_6A80"], ["cmp     edx, esi", "jnz     short loc_6A80"], ["cmp     byte ptr [ebx+1E0h], 0", "jnz     short loc_6A89"], ["mov     tok, edx", "push    edx; after", "push    edx; before", "mov     ecx, eax", "push    0; tok", "mov     eax, ebx", "push    (offset originParser.m_initEncoding.initEnc.utf8Convert+3); originParser", "mov     edx, [esp+4Ch+entityTextPtr]", "call    accountingDiffTolerated", "add     esp, 10h", "test    al, al", "jz      loc_6BC2"], ["mov     ecx, [esp+3Ch+var_38]", "mov     eax, [esp+3Ch+next]", "mov     [ecx], eax", "xor     eax, eax", "jmp     short loc_6B2F"], ["cmp     byte ptr [ebx+1E0h], 0", "mov     edx, tok", "jnz     short loc_6B20"], ["test    tok, tok", "jz      short loc_6B20"], ["mov     tok, [esp+3Ch+var_38]", "mov     ecx, [esp+3Ch+entityTextPtr]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax], ecx", "xor     eax, eax", "jmp     short loc_6B2F"], ["lea     tok, [edx+2]", "cmp     eax, 2", "ja      short loc_6BA4"], ["mov     eax, 4", "sub     eax, tok"], ["mov     ecx, [esp+3Ch+var_20]", "xor     ecx, large gs:14h", "jnz     loc_6BDD"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     start", "retn"], ["sub     esp, 0Ch", "mov     ecx, start; s", "mov     tok, ebx; parser", "push    edx; next", "xor     edx, edx; isGeneralTextEntity", "call    processXmlDecl", "add     esp, 10h", "test    result, result", "jnz     short loc_6B2F"], ["cmp     dword ptr [ebx+1DCh], 2", "jz      short loc_6B9D"], ["mov     edi, [esp+3Ch+var_34]", "mov     ecx, [esp+3Ch+var_38]", "mov     result, [esp+3Ch+next]", "lea     edx, [edi-27608h]", "mov     [ecx], eax", "mov     [ebx+114h], edx", "push    ecx; nextPtr", "push    esi; end", "push    eax; s", "push    ebx; parser", "call    entityValueProcessor", "add     esp, 10h", "jmp     short loc_6B2F"], ["mov     ecx, [esp+3Ch+var_38]", "mov     tok, 2", "mov     [ecx], edx", "jmp     short loc_6B2F"], ["mov     result, 23h ; '#'", "jmp     short loc_6B2F"], ["mov     tok, [ebx+90h]; enc", "push    ecx", "push    ecx", "mov     eax, ebx; parser", "push    0; account", "push    esi; entityTextEnd", "mov     ecx, [esp+4Ch+entityTextPtr]; entityTextPtr", "call    storeEntityValue", "add     esp, 10h", "jmp     loc_6B2F"], ["mov     eax, [esp+3Ch+var_34]", "lea     edx, (aAborting - 2DF78h)[eax]; \" ABORTING\\n\"", "mov     eax, ebx; originParser", "call    accountingReportStats", "mov     eax, 2Ah ; '*'", "jmp     loc_6B2F"], ["call    __stack_chk_fail_local"]], "storeAttributeValue": [["push    edi", "push    esi", "mov     esi, isCdata", "push    ebx", "and     isCdata, 0FFh; isCdata", "mov     ebx, [esp+0Ch+account]", "mov     edi, [esp+0Ch+pool]", "push    ebx; account", "push    edi; pool", "mov     ebx, [esp+14h+end]", "push    ebx; end", "mov     ebx, [esp+18h+ptr]", "push    ebx; ptr", "call    appendAttributeValue", "add     esp, 10h", "mov     ebx, eax", "test    result, result", "jnz     short loc_6C34"], ["mov     ecx, esi", "mov     result, [edi+0Ch]", "test    cl, cl", "jz      short loc_6C40"], ["cmp     [edi+8], eax", "jz      short loc_6C58"], ["lea     edx, [eax+1]", "mov     [edi+0Ch], edx", "mov     byte ptr [eax], 0"], ["mov     eax, ebx", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["cmp     [edi+10h], eax", "jz      short loc_6C26"], ["cmp     byte ptr [eax-1], 20h ; ' '", "jnz     short loc_6C26"], ["dec     eax", "mov     [edi+0Ch], eax", "jmp     short loc_6C26"], ["mov     eax, edi; pool", "call    poolGrow", "test    al, al", "jz      short loc_6C68"], ["mov     eax, [edi+0Ch]", "jmp     short loc_6C2B"], ["mov     result, 1", "jmp     short loc_6C34"]], "storeAtts": [["push    ebp", "push    edi", "mov     edi, parser", "push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "mov     ebx, attStr", "sub     esp, 0A8h", "mov     [esp+0B8h+var_78], esi", "mov     esi, enc", "mov     enc, [esp+0B8h+bindingsPtr]", "mov     parser, [esp+0B8h+tagNamePtr]", "mov     [esp+0B8h+var_84], edx", "mov     edx, [parser+160h]", "mov     [esp+0B8h+var_80], eax", "mov     attStr, large gs:14h", "mov     [esp+0B8h+var_20], attStr", "xor     attStr, attStr", "lea     ebp, [edx+14h]", "mov     [esp+0B8h+dtd], edx", "push    0; createSize", "mov     ecx, [eax]; name", "mov     dtd_0, ebp; table", "mov     eax, parser; parser", "call    lookup", "mov     [esp+0BCh+elementType], eax", "add     esp, 10h", "test    elementType_0, elementType_0", "jz      loc_6FE8"], ["mov     eax, [esp+0ACh+elementType]", "mov     ebp, [eax+0Ch]", "mov     eax, [parser+184h]", "mov     [esp+0ACh+binding], ebp", "push    eax", "mov     eax, [parser+178h]", "push    eax", "push    attStr", "push    enc", "call    dword ptr [enc+24h]", "mov     ecx, eax", "mov     [esp+0BCh+n], eax", "mov     n_0, 7FFFFFFFh", "add     esp, 10h", "sub     eax, nDefaultAtts_0", "cmp     eax, n_0", "jl      loc_6ED0"], ["mov     eax, nDefaultAtts_0", "mov     nDefaultAtts_0, [parser+178h]", "add     nDefaultAtts_0, n_0", "cmp     eax, ebp", "jg      loc_6EF8"], ["mov     eax, [parser+184h]", "mov     [esp+0ACh+temp], eax"], ["mov     eax, [esp+0ACh+n]", "test    eax, eax", "jle     loc_704B"], ["lea     eax, [parser+19Ch]", "mov     attStr, [esp+0ACh+temp]", "mov     [esp+0ACh+nPrefixes], 0", "mov     [esp+0ACh+oldNsAttsPower], 0", "mov     [esp+0ACh+localPart], 0", "mov     [esp+0ACh+nsAttsSize], eax", "jmp     loc_6E08"], ["cmp     byte ptr [attId+8], 0", "mov     eax, 1", "jnz     loc_6FA0"], ["mov     edx, [esp+0ACh+account]", "push    edx; account", "mov     edx, [esp+0B0h+nsAttsSize]", "push    edx; pool", "mov     edx, [ecx+8]", "push    edx; end", "mov     edx, enc; enc", "mov     ecx, [ecx+4]", "push    ecx; ptr", "mov     ecx, eax; isCdata", "mov     eax, parser; parser", "call    storeAttributeValue", "add     esp, 10h", "test    result, result", "jnz     loc_6ED5"], ["mov     ecx, [esp+0ACh+temp]", "mov     result, [parser+1ACh]", "mov     [ecx+ebp+4], eax", "mov     eax, [parser+1A8h]", "mov     [parser+1ACh], eax", "mov     edx, [attId+4]; prefix", "test    edx, edx", "jz      loc_6EB5"], ["cmp     byte ptr [attId+9], 0", "jnz     loc_6F70"], ["mov     edx, [esp+0ACh+localPart]", "mov     ecx, [esp+0ACh+nPrefixes]", "mov     eax, [attId]", "add     edx, 2", "inc     ecx", "mov     [esp+0ACh+localPart], edx", "mov     [esp+0ACh+nPrefixes], ecx", "mov     byte ptr [eax-1], 2"], ["mov     eax, [esp+0ACh+oldNsAttsPower]", "inc     eax", "mov     [esp+0ACh+oldNsAttsPower], eax", "mov     eax, [esp+0ACh+oldNsAttsPower]", "cmp     [esp+0ACh+n], i_0", "jz      loc_7060"], ["mov     attId, [parser+184h]"], ["mov     eax, [esp+0ACh+oldNsAttsPower]", "shl     eax, 4", "add     ebx, eax", "mov     [esp+0ACh+c], eax", "mov     eax, enc", "mov     ebp, [currAtt]", "mov     edx, ebp", "call    dword ptr [enc+1Ch]", "sub     esp, 0Ch", "add     ebp, eax", "mov     edx, enc; enc", "push    ebp; end", "mov     eax, parser; parser", "mov     ecx, [currAtt]; start", "call    getAttributeId", "add     esp, 10h", "mov     currAtt, eax", "test    attId, attId", "jz      loc_6ED0"], ["mov     attId, [attId]", "cmp     byte ptr [eax-1], 0", "jnz     loc_7130"], ["mov     byte ptr [eax-1], 1", "mov     eax, [esp+0ACh+localPart]", "mov     ecx, [esp+0ACh+temp]", "lea     ebp, ds:0[eax*4]", "mov     eax, [attId]", "mov     [ecx+ebp], eax", "mov     ecx, [esp+0ACh+c]", "mov     eax, [parser+184h]", "add     ecx, eax", "cmp     byte ptr [ecx+0Ch], 0", "jz      loc_6D68"], ["sub     esp, 0Ch", "mov     edx, [ecx+8]", "mov     eax, [ecx+4]", "push    edx; end", "mov     ecx, eax; ptr", "mov     edx, enc; enc", "mov     eax, [esp+0BCh+nsAttsSize]; pool", "call    poolStoreString", "mov     ecx, [esp+0BCh+temp]", "lea     edx, [ecx+ebp+4]", "add     esp, 10h", "test    eax, eax", "mov     [edx], eax", "jz      short loc_6ED0"], ["mov     eax, [parser+1A8h]", "mov     [parser+1ACh], eax", "mov     edx, [attId+4]", "test    edx, edx", "jnz     loc_6DC7"], ["mov     eax, [esp+0ACh+localPart]", "add     eax, 2", "mov     [esp+0ACh+localPart], eax", "jmp     loc_6DEB"], ["mov     [parser+178h], oldAttsSize", "lea     esi, [esi+0]", "nop"], ["mov     eax, 1"], ["mov     esi, [esp+0ACh+var_20]", "xor     esi, large gs:14h", "jnz     loc_78DC"], ["add     esp, 9Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     n_0, [esp+0ACh+binding]", "cmp     ecx, 7FFFFFEFh", "jg      short loc_6ED0"], ["mov     edx, 7FFFFFEFh", "sub     edx, ecx", "cmp     edx, [esp+0ACh+n]", "jl      short loc_6ED0"], ["add     eax, 10h", "mov     [parser+178h], eax", "cmp     eax, 0FFFFFFFh", "ja      short loc_6EC5"], ["shl     eax, 4", "push    edx", "push    edx", "push    eax", "mov     ecx, [parser+184h]", "push    ecx", "call    dword ptr [parser+10h]", "mov     [esp+0BCh+temp], eax", "add     esp, 10h", "test    temp_0, temp_0", "jz      short loc_6EC5"], ["mov     temp_0, [esp+0ACh+temp]", "mov     edx, [esp+0ACh+n]", "mov     [parser+184h], temp_0", "cmp     oldAttsSize, edx", "jge     loc_6D30"], ["push    temp_0", "push    edx", "push    attStr", "push    enc", "call    dword ptr [enc+24h]", "mov     eax, [parser+184h]", "mov     [esp+0BCh+temp], eax", "add     esp, 10h", "jmp     loc_6D30"], ["push    eax", "mov     ecx, attId; attId", "push    eax", "mov     eax, [esp+0B4h+var_84]", "push    eax; bindingsPtr", "mov     eax, [esp+0B8h+temp]", "mov     eax, [eax+ebp+4]", "push    eax; uri", "mov     eax, parser; parser", "call    addBinding", "add     esp, 10h", "test    result, result", "jz      loc_6DEB"], ["jmp     loc_6ED5"], ["mov     edx, [esp+0ACh+binding]", "test    edx, edx", "jle     loc_6D77"], ["mov     eax, [esp+0ACh+elementType]", "xor     edx, edx", "mov     eax, [eax+14h]", "jmp     short loc_6FC2"], ["inc     j", "add     eax, 0Ch", "cmp     [esp+0ACh+binding], j", "jz      short loc_6FD8"], ["cmp     [eax], attId", "jnz     short loc_6FB8"], ["xor     j, j", "mov     dl, [eax+4]", "mov     eax, edx", "jmp     loc_6D77"], ["mov     eax, 1", "jmp     loc_6D77"], ["mov     edx, [esp+0ACh+var_80]", "mov     elementType_0, [esp+0ACh+dtd]", "add     eax, 50h ; 'P'; pool", "mov     edx, [edx]; s", "call    poolCopyString", "mov     ecx, eax; name", "test    name, name", "jz      loc_6ED0"], ["sub     esp, 0Ch", "mov     edx, ebp; table", "mov     name, parser; parser", "push    18h; createSize", "call    lookup", "mov     [esp+0BCh+elementType], eax", "add     esp, 10h", "test    elementType_0, elementType_0", "jz      loc_6ED0"], ["cmp     byte ptr [parser+0E8h], 0", "jz      loc_6CDE"], ["mov     elementType_0, [esp+0ACh+elementType]", "lea     ecx, [elementType_0+4]", "mov     edx, [elementType_0]", "mov     elementType_0, parser", "call    setElementTypePrefix", "test    eax, eax", "jnz     loc_6CDE"], ["jmp     loc_6ED0"], ["mov     [esp+0ACh+nPrefixes], 0", "mov     [esp+0ACh+localPart], 0", "lea     enc, [enc+0]", "nop"], ["mov     enc, [esp+0ACh+localPart]", "mov     eax, [esp+0ACh+elementType]", "mov     [parser+17Ch], esi", "mov     eax, [eax+8]", "test    eax, eax", "jz      short loc_7081"], ["mov     edx, [eax]", "cmp     byte ptr [edx-1], 0", "jnz     loc_759B"], ["mov     dword ptr [parser+180h], 0FFFFFFFFh"], ["mov     eax, [esp+0ACh+binding]", "xor     ebx, ebx", "test    eax, eax", "jle     loc_7164"], ["mov     esi, [esp+0ACh+elementType]", "mov     [esp+0ACh+oldNsAttsPower], parser", "jmp     short loc_70E7"], ["cmp     byte ptr [ecx+9], 0", "jnz     short loc_7110"], ["mov     byte ptr [edx-1], 2", "mov     edx, [esp+0ACh+nPrefixes]", "inc     edx", "mov     [esp+0ACh+nPrefixes], edx"], ["mov     edi, [esp+0ACh+localPart]", "mov     ecx, [da]", "mov     ebp, [esp+0ACh+temp]", "lea     edx, ds:0[edi*4]", "mov     ecx, [ecx]", "add     edi, 2", "mov     [ebp+edx+0], ecx", "mov     [esp+0ACh+localPart], edi", "mov     da, [da+8]", "mov     [ebp+edx+4], eax"], ["inc     i_0", "cmp     [esp+0ACh+binding], i_0", "jz      short loc_7160"], ["mov     edx, [esi+14h]", "lea     eax, [i_0+i_0*2]", "lea     eax, [edx+eax*4]", "mov     ecx, [da]; attId", "mov     edx, [ecx]", "cmp     byte ptr [edx-1], 0", "jnz     short loc_70E0"], ["mov     ebp, [da+8]", "test    ebp, ebp", "jz      short loc_70E0"], ["mov     edi, [ecx+4]", "test    edi, edi", "jnz     short loc_70A8"], ["mov     byte ptr [edx-1], 1", "jmp     short loc_70BB"], ["push    eax", "mov     edx, edi; prefix", "push    eax", "mov     eax, [esp+0B4h+var_84]", "push    eax; bindingsPtr", "push    ebp; uri", "mov     eax, [esp+0BCh+oldNsAttsPower]; parser", "call    addBinding", "add     esp, 10h", "test    result, result", "jz      short loc_70E0"], ["jmp     loc_6ED5"], ["cmp     [parser+90h], enc", "mov     eax, 8", "jnz     loc_6ED5"], ["mov     edx, [parser+184h]", "mov     enc, [esp+0ACh+c]", "mov     edx, ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edx+esi]", "mov     [parser+11Ch], edx", "jmp     loc_6ED5"], ["mov     edi, [esp+0ACh+oldNsAttsPower]"], ["mov     eax, [esp+0ACh+temp]", "mov     esi, [esp+0ACh+localPart]", "mov     ebx, [esp+0ACh+nPrefixes]", "mov     dword ptr [eax+esi*4], 0", "test    ebx, ebx", "jz      loc_7418"], ["mov     cl, [edi+190h]", "mov     byte ptr [esp+0ACh+oldNsAttsPower], cl", "cmp     cl, 1Fh", "ja      loc_6ED0"], ["lea     eax, [ebx+ebx]", "sar     eax, cl", "test    eax, eax", "jz      loc_773B"], ["mov     dl, cl", "lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["mov     cl, dl", "mov     eax, ebx", "sar     eax, cl", "inc     edx", "test    eax, eax", "jnz     short loc_71A8"], ["cmp     dl, 2", "ja      loc_7783"], ["mov     byte ptr [edi+190h], 3", "mov     [esp+0ACh+nsAttsSize], 8", "mov     ebx, 3"], ["mov     cl, bl", "mov     eax, 0Ch", "push    esi", "push    esi", "shl     eax, cl", "push    eax", "mov     ebp, [edi+188h]", "push    ebp", "call    dword ptr [edi+10h]", "add     esp, 10h", "mov     edx, eax", "test    eax, eax", "jz      loc_78C8"], ["mov     [edi+188h], eax"], ["mov     eax, [esp+0ACh+nsAttsSize]", "jmp     short loc_7206"], ["mov     edx, [edi+188h]"], ["dec     j", "lea     ecx, [j+j*2]", "mov     dword ptr [edx+ecx*4], 0FFFFFFFFh", "jnz     short loc_7200"], ["mov     [esp+0ACh+binding], 0FFFFFFFEh"], ["mov     eax, [esp+0ACh+binding]", "mov     ecx, [esp+0ACh+localPart]", "mov     [edi+18Ch], eax", "test    ecx, ecx", "jz      loc_743E"], ["mov     eax, [esp+0ACh+nsAttsSize]", "mov     [esp+0ACh+oldNsAttsPower], 0", "dec     eax", "mov     [esp+0ACh+var_64], eax", "shr     eax, 2", "mov     [esp+0ACh+var_6D], al", "lea     eax, [edi+19Ch]", "mov     [esp+0ACh+pool], eax", "jmp     short loc_7275"], ["mov     byte ptr [s-1], 0"], ["mov     eax, [esp+0ACh+oldNsAttsPower]", "add     eax, 2", "mov     [esp+0ACh+oldNsAttsPower], eax", "mov     eax, [esp+0ACh+oldNsAttsPower]", "cmp     i_0, [esp+0ACh+localPart]", "jge     loc_743E"], ["mov     eax, [esp+0ACh+temp]", "mov     esi, [esp+0ACh+oldNsAttsPower]", "mov     esi, [eax+esi*4]", "cmp     byte ptr [s-1], 2", "jnz     short loc_7258"], ["mov     eax, [edi+1D8h]", "test    eax, eax", "jz      loc_7877"], ["lea     s, [s+0]"], ["mov     edx, eax", "mov     eax, [eax+1D8h]", "test    eax, eax", "jnz     short loc_7298"], ["add     edx, 1ECh"], ["mov     ecx, [edx]", "mov     dword ptr [esp+0ACh+sip_state.v0], 70736575h", "mov     eax, ecx", "mov     edx, ecx", "xor     eax, 79746573h", "xor     edx, 6E646F6Dh", "mov     dword ptr [esp+0ACh+sip_state.v3], eax", "lea     eax, [esp+0ACh+sip_state.buf]", "mov     [esp+0ACh+sip_state.p], eax", "mov     eax, [esp+0ACh+dtd]", "mov     dword ptr [esp+0ACh+sip_state.v1], edx", "mov     dword ptr [esp+0ACh+sip_state.v0+4], 736F6D65h", "mov     dword ptr [esp+0ACh+sip_state.v1+4], 646F7261h", "mov     dword ptr [esp+0ACh+sip_state.v2], 6E657261h", "mov     dword ptr [esp+0ACh+sip_state.v2+4], 6C796765h", "mov     dword ptr [esp+0ACh+sip_state.v3+4], 74656462h", "mov     dword ptr [esp+0ACh+sip_state.c], 0", "mov     dword ptr [esp+0ACh+sip_state.c+4], 0", "sub     esp, 0Ch", "mov     byte ptr [s-1], 0", "lea     edx, [eax+28h]; table", "mov     ecx, s; name", "mov     eax, edi; parser", "push    0; createSize", "call    lookup", "add     esp, 10h", "test    id, id", "jz      loc_6ED0"], ["mov     id, [id+4]", "test    eax, eax", "jz      loc_6ED0"], ["mov     ebx, [eax+4]", "test    b_0, b_0", "jz      loc_788B"], ["mov     ecx, [b_0+14h]; len", "test    ecx, ecx", "jle     loc_75CB"], ["xor     ebp, ebp", "jmp     short loc_7377"], ["lea     ecx, [eax+1]", "inc     j", "mov     [edi+1A8h], ecx", "mov     [eax], dl", "mov     ecx, [b_0+14h]", "cmp     ecx, j", "jle     loc_75CB"], ["mov     eax, [b_0+10h]", "mov     dl, [eax+j]", "mov     eax, [edi+1A8h]", "cmp     eax, [edi+1A4h]", "jnz     short loc_7360"], ["mov     eax, [esp+0ACh+pool]; pool", "mov     byte ptr [esp+0ACh+c], dl", "call    poolGrow", "test    al, al", "jz      loc_6ED0"], ["mov     eax, [edi+1A8h]", "mov     dl, byte ptr [esp+0ACh+c]", "jmp     short loc_7360"], ["mov     ebx, [esp+0ACh+b]", "mov     uriHash_0, [esp+0ACh+n]"], ["cmp     byte ptr [edi+0E9h], 0", "mov     j, [edi+1A8h]", "jnz     loc_77C0"], ["mov     edx, [edi+1ACh]", "mov     ebx, [esp+0ACh+oldNsAttsPower]", "mov     [edi+1ACh], eax", "mov     eax, [esp+0ACh+temp]", "dec     [esp+0ACh+nPrefixes]", "mov     [eax+ebx*4], s", "mov     ebx, [esp+0ACh+binding]", "mov     eax, [edi+188h]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax+esi], ebx", "mov     ebx, [esp+0ACh+uriHash]", "mov     eax, [edi+188h]", "mov     [eax+esi+4], ebx", "mov     eax, [edi+188h]", "mov     [eax+esi+8], s", "jnz     loc_725C"], ["mov     eax, [esp+0ACh+oldNsAttsPower]", "add     eax, 2", "mov     [esp+0ACh+nPrefixes], eax"], ["mov     esi, [esp+0ACh+localPart]", "cmp     [esp+0ACh+nPrefixes], esi", "jge     short loc_743E"], ["mov     ecx, [esp+0ACh+localPart]", "mov     eax, [esp+0ACh+nPrefixes]", "mov     ebx, [esp+0ACh+temp]", "xchg    ax, ax"], ["mov     edx, [ebx+i_0*4]", "add     i_0, 2", "cmp     eax, ecx", "mov     byte ptr [edx-1], 0", "jl      short loc_7430"], ["mov     eax, [esp+0ACh+var_84]", "mov     eax, [eax]", "test    binding_0, binding_0", "jz      short loc_7458"], ["mov     edx, [binding_0+0Ch]", "mov     edx, [edx]", "mov     byte ptr [edx-1], 0", "mov     binding_0, [binding_0+4]", "test    binding_0, binding_0", "jnz     short loc_7448"], ["cmp     byte ptr [edi+0E8h], 0", "jz      loc_7734"], ["mov     binding_0, [esp+0ACh+elementType]", "mov     eax, [eax+4]", "test    eax, eax", "jz      loc_776A"], ["mov     ecx, [eax+4]", "test    binding_0, binding_0", "jz      loc_788B"], ["mov     eax, [esp+0ACh+var_80]", "mov     edx, [eax]", "lea     esi, [esi+0]"], ["inc     localPart_0", "cmp     byte ptr [localPart_0-1], 3Ah ; ':'", "jnz     short loc_7488"], ["cmp     byte ptr [edi+0E9h], 0", "jz      loc_7728"], ["mov     eax, [binding_0]", "mov     eax, [eax]", "test    eax, eax", "jz      loc_7728"], ["xor     ebp, ebp", "lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["inc     prefixLen", "cmp     byte ptr [eax+prefixLen-1], 0", "jnz     short loc_74B0"], ["mov     eax, 7FFFFFFFh", "sub     eax, prefixLen"], ["mov     esi, [esp+0ACh+var_80]", "mov     [esi+4], localPart_0", "mov     ebx, [binding_0+14h]", "mov     [esi+10h], ebx", "mov     ebx, [binding_0]", "mov     ebx, [ebx]", "mov     [esi+14h], prefixLen", "mov     [esi+8], ebx", "xor     esi, esi"], ["mov     ebx, i_0", "inc     i_0", "cmp     byte ptr [localPart_0+i_0-1], 0", "jnz     short loc_74D8"], ["mov     [esp+0ACh+temp], ebx", "mov     ebx, [binding_0+14h]", "cmp     ebx, eax", "jg      loc_6ED0"], ["lea     eax, [ebx+prefixLen]", "mov     [esp+0ACh+oldNsAttsPower], eax", "mov     eax, 7FFFFFFFh", "sub     eax, [esp+0ACh+oldNsAttsPower]", "cmp     eax, i_0", "jl      loc_6ED0"], ["lea     eax, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[ebx+i_0]", "add     eax, prefixLen", "cmp     [binding_0+18h], n_0", "jge     loc_7882"], ["mov     [esp+0ACh+localPart], localPart_0", "mov     [esp+0ACh+binding], binding_0", "cmp     n_0, 7FFFFFE7h", "jg      loc_6ED0"], ["sub     esp, 0Ch", "lea     ebx, [n_0+18h]", "push    ebx", "call    dword ptr [edi+0Ch]", "mov     [esp+0BCh+oldNsAttsPower], eax", "mov     edx, uri_0", "add     esp, 10h", "test    uri_0, uri_0", "jz      loc_6ED0"], ["mov     ecx, [esp+0ACh+binding]", "mov     [ecx+18h], ebx", "mov     uri_0, [ecx+10h]", "push    ebx", "mov     ebx, [ecx+14h]", "push    ebx; n", "mov     [esp+0B4h+binding], ecx", "push    eax; src", "push    uri_0; dest", "mov     ebx, [esp+0BCh+var_78]", "call    _memcpy", "mov     eax, [edi+168h]", "mov     ecx, [esp+0BCh+binding]", "add     esp, 10h", "test    p, p", "mov     edx, [esp+0ACh+localPart]", "mov     ebx, [ecx+10h]", "jnz     short loc_758A"], ["jmp     loc_781D"], ["mov     p, [p]", "test    p, p", "jz      loc_781D"], ["cmp     [p+0Ch], ebx", "jnz     short loc_7580"], ["mov     ebx, [esp+0ACh+oldNsAttsPower]", "mov     [p+0Ch], ebx", "mov     ebx, [ecx+10h]", "jmp     short loc_7580"], ["test    esi, esi", "jz      loc_708B"], ["xor     eax, eax", "mov     ebx, esi", "mov     ecx, [esp+0ACh+temp]", "jmp     short loc_75BB"], ["add     i_0, 2", "cmp     i_0, ebx", "jge     loc_708B"], ["cmp     edx, [ecx+i_0*4]", "jnz     short loc_75B0"], ["mov     [parser+180h], i_0", "jmp     loc_708B"], ["lea     ebp, [esp+0ACh+sip_state]", "mov     edx, [b_0+10h]; src", "mov     eax, ebp; H", "call    sip24_update", "lea     s, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[s]"], ["inc     s", "cmp     byte ptr [s-1], 3Ah ; ':'", "jnz     short loc_75E0"], ["xor     ecx, ecx", "cmp     byte ptr ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[s], 0", "jz      short loc_75F7"], ["xchg    ax, ax"], ["inc     ecx; len", "cmp     byte ptr ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[s+ecx], 0", "jnz     short loc_75F0"], ["mov     edx, s; src", "mov     eax, ebp; H", "call    sip24_update", "mov     eax, edi", "mov     edi, s", "mov     s, eax", "jmp     short loc_761D"], ["lea     ecx, [eax+1]", "inc     s", "mov     [esi+1A8h], ecx", "mov     cl, [edi-1]", "mov     [eax], cl", "cmp     byte ptr [s-1], 0", "jz      short loc_7644"], ["mov     eax, [esi+1A8h]", "cmp     eax, [esi+1A4h]", "jnz     short loc_7608"], ["mov     eax, [esp+0ACh+pool]; pool", "call    poolGrow", "test    al, al", "jz      loc_6ED0"], ["mov     eax, [esi+1A8h]", "jmp     short loc_7608"], ["mov     eax, ebp; H", "mov     s, esi", "call    sip24_final", "mov     edx, [esi+188h]", "mov     ebp, eax", "mov     [esp+0ACh+uriHash], eax", "mov     uriHash_0, [esp+0ACh+var_64]", "mov     [esp+0ACh+c], edx", "and     eax, uriHash_0", "mov     ecx, [esp+0ACh+binding]", "lea     esi, [j+j*2]", "shl     esi, 2", "add     edx, esi", "cmp     [edx], ecx", "jnz     loc_73B4"], ["mov     esi, [esp+0ACh+nsAttsSize]", "mov     [esp+0ACh+n], edi", "neg     esi", "mov     ecx, esi", "mov     esi, uriHash_0", "and     ecx, uriHash_0", "mov     [esp+0ACh+b], b_0", "mov     [esp+0ACh+var_74], ecx", "mov     uriHash_0, j", "xor     ecx, ecx", "mov     edi, uriHash_0", "jmp     short loc_76BB"], ["mov     ebx, [esp+0ACh+nsAttsSize]", "add     j, ebx", "sub     eax, step", "mov     j, eax"], ["lea     esi, [j+j*2]", "mov     ebx, [esp+0ACh+c]", "shl     esi, 2", "lea     step, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[ebx+esi]", "mov     ebx, [esp+0ACh+binding]", "cmp     [edx], ebx", "jnz     loc_73AC"], ["cmp     [edx+4], uriHash_0", "jz      short loc_76F0"], ["test    cl, cl", "jnz     short loc_76E2"], ["mov     esi, [esp+0ACh+n]", "xor     step, step", "mov     dl, [esp+0ACh+var_6D]", "mov     cl, [esi+190h]", "mov     esi, [esp+0ACh+var_74]", "dec     ecx", "shr     esi, cl", "mov     ecx, esi", "and     ecx, edx", "or      ecx, 1"], ["xor     edx, edx", "mov     dl, cl", "cmp     edx, ebp", "jg      short loc_7698"], ["sub     ebp, step", "mov     eax, j", "jmp     short loc_76A2"], ["mov     esi, [esp+0ACh+n]", "mov     ebx, [edx+8]", "mov     esi, [esi+1ACh]", "mov     dl, byte ptr ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[s1]", "cmp     dl, [s2]", "jz      short loc_7711"], ["jmp     short loc_771F"], ["inc     s2", "mov     dl, [s1+1]", "inc     s1", "cmp     dl, [s2]", "jnz     short loc_771F"], ["test    dl, dl", "jnz     short loc_7708"], ["mov     j, 8", "jmp     loc_6ED5"], ["test    dl, dl", "jnz     short loc_76C0"], ["jmp     short loc_7715"], ["mov     eax, 7FFFFFFFh", "xor     ebp, ebp", "jmp     loc_74BF"], ["xor     eax, eax", "jmp     loc_6ED5"], ["mov     edx, [edi+18Ch]", "mov     eax, 1", "mov     cl, byte ptr [esp+0ACh+oldNsAttsPower]", "shl     eax, cl", "mov     [esp+0ACh+nsAttsSize], eax", "lea     eax, [edx-1]", "mov     [esp+0ACh+binding], eax", "test    edx, edx", "jnz     loc_721B"], ["mov     edx, [edi+188h]", "jmp     loc_71F9"], ["mov     eax, [esp+0ACh+dtd]", "mov     ecx, [eax+9Ch]", "test    ecx, ecx", "jz      short loc_7734"], ["mov     eax, [esp+0ACh+var_80]", "mov     edx, [eax]", "jmp     loc_748F"], ["mov     eax, 1", "cmp     dl, 1Fh", "ja      loc_6ED5"], ["mov     esi, eax", "mov     cl, dl", "xor     ebx, ebx", "mov     [edi+190h], dl", "shl     esi, cl", "mov     bl, dl", "mov     [esp+0ACh+nsAttsSize], esi", "cmp     nsAttsSize_0, 15555555h", "jbe     loc_71D0"], ["mov     cl, byte ptr [esp+0ACh+oldNsAttsPower]", "mov     [edi+190h], cl", "jmp     loc_6ED5"], ["mov     cl, [edi+1D4h]", "mov     ebp, [esp+0ACh+pool]", "mov     [eax-1], cl", "mov     eax, [ebx]", "mov     ebx, [eax]", "jmp     short loc_77ED"], ["lea     edx, [eax+1]", "inc     s", "mov     [edi+1A8h], edx", "mov     cl, [ebx-1]", "mov     [eax], cl", "cmp     byte ptr [s-1], 0", "jz      short loc_7812"], ["mov     eax, [edi+1A8h]", "cmp     eax, [edi+1A4h]", "jnz     short loc_77D8"], ["mov     eax, ebp; pool", "call    poolGrow", "test    al, al", "jz      loc_6ED0"], ["mov     eax, [edi+1A8h]", "jmp     short loc_77D8"], ["mov     eax, [edi+1A8h]", "jmp     loc_73C7"], ["mov     [esp+0ACh+localPart], edx", "mov     [esp+0ACh+binding], ecx", "sub     esp, 0Ch", "push    ebx", "call    dword ptr [edi+14h]", "mov     ecx, [esp+0BCh+binding]", "mov     eax, [esp+0BCh+oldNsAttsPower]", "mov     edx, [esp+0BCh+localPart]", "add     esp, 10h", "mov     [ecx+10h], eax", "mov     ebx, [ecx+14h]"], ["mov     eax, [esp+0ACh+oldNsAttsPower]", "mov     [esp+0ACh+binding], ecx", "add     ebx, eax", "mov     [esp+0ACh+oldNsAttsPower], ebx", "push    eax", "push    i_0; n", "push    edx; src", "push    uri_0; dest", "mov     uri_0, [esp+0BCh+var_78]", "call    _memcpy", "add     esp, 10h", "test    prefixLen, prefixLen", "mov     ecx, [esp+0ACh+binding]", "jnz     short loc_7895"], ["mov     i_0, [esp+0ACh+var_80]", "mov     eax, [ecx+10h]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi], eax", "xor     eax, eax", "jmp     loc_6ED5"], ["lea     edx, [edi+1ECh]", "jmp     loc_72AA"], ["mov     n_0, [binding_0+10h]", "mov     [esp+0ACh+oldNsAttsPower], eax", "jmp     short loc_7841"], ["mov     eax, 1Bh", "jmp     loc_6ED5"], ["mov     eax, [esp+0ACh+oldNsAttsPower]", "mov     edx, [esp+0ACh+temp]", "add     eax, edx", "mov     dl, [edi+1D4h]", "mov     [esp+0ACh+oldNsAttsPower], ecx", "mov     [uri_0], dl", "lea     edx, [uri_0+1]", "mov     uri_0, [ecx]", "mov     eax, [eax]", "push    ecx", "push    prefixLen; n", "push    eax; src", "push    edx; dest", "mov     ebx, [esp+0BCh+var_78]", "call    _memcpy", "add     esp, 10h", "mov     ecx, [esp+0ACh+oldNsAttsPower]", "jmp     short loc_7867"], ["mov     al, byte ptr [esp+0ACh+oldNsAttsPower]", "mov     [edi+190h], al", "mov     eax, 1", "jmp     loc_6ED5"], ["call    __stack_chk_fail_local"]], "doProlog": [["push    ebp", "mov     ebp, parser", "push    edi", "mov     edi, enc_0", "push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "sub     esp, 3Ch", "cmp     [ebp+90h], enc_0", "mov     al, [esp+4Ch+haveMore]", "mov     [esp+4Ch+s], s_0; source_line", "mov     [esp+4Ch+var_36], al", "mov     al, [esp+4Ch+allowClosingDoctype]", "mov     [esp+4Ch+var_35], al", "mov     eax, [parser+160h]", "mov     [esp+4Ch+table], eax", "jz      loc_7AC8"], ["mov     dtd_0, [parser+128h]", "mov     [esp+4Ch+var_48], eax; account", "add     eventPP_0, 4", "mov     [esp+4Ch+eventEndPP], eax"], ["lea     eventEndPP_0, (aClose_0 - 2DF78h)[esi]; \"CLOSE\"", "mov     [esp+4Ch+action], eax", "lea     eax, (externalSubsetName_10143 - 2DF78h)[esi]; \"#\"", "mov     [esp+4Ch+var_3C], eax"], ["mov     eax, [esp+4Ch+var_48]", "mov     ebx, [esp+4Ch+s]", "mov     ecx, [esp+4Ch+tok]", "mov     [eax], ebx", "mov     eax, [esp+4Ch+eventEndPP]", "mov     edx, [esp+4Ch+next]", "test    ecx, ecx", "mov     [eax], edx", "jle     loc_7A10"], ["sub     esp, 0Ch", "push    enc_0", "mov     eax, [esp+5Ch+next]", "push    eax"], ["mov     eax, [esp+60h+s]", "push    eax", "mov     eax, [esp+64h+tok]", "push    eax", "lea     eax, [ebp+0FCh]", "push    eax", "call    dword ptr [ebp+0FCh]", "add     esp, 20h", "mov     ebx, eax", "cmp     role, 2", "jg      short loc_79E0"], ["test    role, role", "jg      short loc_79C7"], ["mov     ecx, [esp+4Ch+next]", "push    eax; after", "push    eax; before", "mov     eax, [esp+54h+account]", "push    eax; tok", "mov     eax, ebp", "push    (offset originParser.m_tempPool.start+1); originParser", "mov     edx, [esp+5Ch+s]", "call    accountingDiffTolerated", "add     esp, 10h", "test    al, al", "jz      loc_9247"], ["lea     eax, [role+1]; switch 62 cases", "cmp     eax, 3Dh", "ja      def_79DC; jumptable 000079DC default case"], ["mov     ecx, ds:(jpt_79DC - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     ebx, 39h ; '9'", "jnz     short loc_79A1"], ["sub     esp, 0Ch; jumptable 000079DC case 57", "mov     edx, 1; isGeneralTextEntity", "mov     ecx, [esp+58h+next]", "push    ecx; next", "mov     ecx, [esp+5Ch+s]; s"], ["mov     eax, ebp; parser", "call    processXmlDecl", "add     esp, 10h", "test    result, result", "jnz     short loc_7A3D"], ["mov     enc_0, [ebp+90h]", "jmp     loc_7A9F"], ["jz      short loc_7A1D"], ["test    [esp+4Ch+var_36], 1", "jnz     loc_923A"], ["mov     eventEndPP_0, [esp+4Ch+tok]", "add     eax, 0Fh; switch 16 cases", "cmp     eax, 0Fh", "ja      _L1633; jumptable 00007A36 default case, cases -14--5,-3"], ["mov     s_0, ds:(jpt_7A36 - 2DF78h)[esi+eax*4]", "add     ebx, esi", "jmp     ebx; switch jump"], ["mov     eax, 5; jumptable 00007A36 case -1"], ["add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     esp, 3Ch; jumptable 00007A36 case -2", "mov     eax, 6", "pop     ebx", "pop     esi", "pop     enc_0", "pop     ebp", "retn"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC case 10", "cmp     byte ptr [eax+80h], 0", "jnz     loc_946A"], ["mov     edx, [esp+4Ch+table]"], ["mov     eax, [edx+60h]", "mov     [edx+5Ch], eax"], ["mov     dword ptr [ebp+138h], 0", "lea     esi, [esi+0]"], ["mov     ebx, [ebp+50h]; jumptable 000079DC default case", "test    ebx, ebx", "jz      short loc_7A9F"], ["sub     esp, 0Ch", "mov     edx, enc_0; enc", "mov     eax, ebp; parser", "mov     ecx, [esp+58h+next]", "push    ecx; end", "mov     ecx, [esp+5Ch+s]; s", "call    reportDefault", "add     esp, 10h"], ["mov     eax, [ebp+1DCh]", "cmp     eax, 2", "jz      short loc_7B08"], ["cmp     eax, 3", "mov     eax, [esp+4Ch+next]", "jnz     short loc_7AE8"], ["mov     edi, [esp+4Ch+nextPtr]", "mov     [edi], eax", "add     esp, 3Ch", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     dtd_0, [parser+11Ch]", "mov     [esp+4Ch+var_48], eax", "lea     eventPP_0, [parser+120h]", "mov     [esp+4Ch+eventEndPP], eax", "jmp     loc_7940"], ["mov     [esp+4Ch+s], eax", "mov     ecx, eax", "lea     eax, [esp+4Ch+next]", "push    eax", "mov     edx, [esp+50h+end]", "push    edx", "push    s_0", "push    edi", "call    dword ptr [edi]", "mov     [esp+5Ch+tok], eax", "add     esp, 10h", "jmp     loc_7954"], ["add     esp, 3Ch", "mov     eax, 23h ; '#'", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esp+4Ch+var_48]; jumptable 00007A36 case 0", "mov     [eax], edx", "mov     eax, 4", "jmp     loc_7A3D"], ["neg     [esp+4Ch+tok]; jumptable 00007A36 default case, cases -14--5,-3", "mov     eax, [esp+4Ch+end]", "mov     [esp+4Ch+next], eax"], ["sub     esp, 0Ch", "push    enc_0", "push    eax", "jmp     loc_797C"], ["cmp     [ebp+90h], enc_0; jumptable 00007A36 case -4", "jz      loc_9260"], ["mov     eax, [ebp+128h]", "cmp     byte ptr [eax+14h], 0", "jz      short loc_7B7A"], ["sub     esp, 0Ch", "push    enc_0", "mov     eax, [esp+5Ch+end]", "push    eax", "mov     eax, [esp+60h+end]", "push    eax", "lea     eax, [ebp+0FCh]", "push    0FFFFFFFCh", "push    eax", "call    dword ptr [ebp+0FCh]", "add     esp, 20h", "inc     eax", "jz      loc_9230"], ["mov     eax, [esp+4Ch+nextPtr]", "mov     esi, [esp+4Ch+s]", "mov     [eax], esi", "xor     eax, eax", "jmp     loc_7A3D"], ["mov     eax, [esp+4Ch+next]; jumptable 00007A36 case -15", "mov     [esp+4Ch+tok], 0Fh", "jmp     short loc_7B31"], ["sub     esp, 0Ch; jumptable 000079DC case 22", "mov     edx, enc_0; enc", "mov     eax, [esp+58h+next]", "push    eax; end", "mov     eax, ebp; parser", "mov     ecx, [esp+5Ch+s]; start", "call    getAttributeId", "add     esp, 10h", "mov     [ebp+158h], eax", "test    eax, eax", "jz      loc_857E"], ["mov     dword ptr [ebp+148h], 0", "mov     word ptr [ebp+15Ch], 0", "lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC case 33", "cmp     byte ptr [eax+80h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+84h]", "test    eax, eax", "jnz     loc_7A9F"], ["jmp     def_79DC; jumptable 000079DC default case"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC cases 31,32", "cmp     byte ptr [eax+80h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+84h]", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+148h]", "lea     ecx, (enumValueSep_10153 - 2DF78h)[esi]; \"|\"", "test    eax, eax", "jz      loc_96E1"], ["lea     role, [ebp+19Ch]", "mov     [esp+4Ch+name], enc_0", "mov     enc_0, ebp", "mov     ebp, prefix", "jmp     short loc_7C61"], ["lea     ecx, [eax+1]", "inc     ebp", "mov     [edi+1A8h], ecx", "mov     cl, [ebp-1]", "mov     [eax], cl", "cmp     byte ptr [ebp+0], 0", "jz      loc_9355"], ["mov     eax, [edi+1A8h]", "cmp     eax, [edi+1A4h]", "jnz     short loc_7C48"], ["mov     eax, ebx; pool", "call    poolGrow", "test    al, al", "jz      loc_857E"], ["mov     eax, [edi+1A8h]", "jmp     short loc_7C48"], ["mov     edx, [esp+4Ch+table]; jumptable 000079DC cases 59,60", "mov     byte ptr [edx+81h], 1", "mov     eax, [ebp+1E8h]", "test    eax, eax", "jnz     loc_939A"], ["mov     al, [edx+82h]", "mov     byte ptr [esp+4Ch+name], al", "mov     [edx+80h], al", "test    al, al", "jnz     def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+6Ch]", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["sub     esp, 0Ch", "mov     edx, [ebp+4]", "push    edx", "call    eax", "add     esp, 10h", "test    eax, eax", "jnz     def_79DC; jumptable 000079DC default case"], ["mov     eax, 16h", "jmp     loc_7A3D"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC cases 41,42", "cmp     byte ptr [eax+0A0h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+80h]", "test    eax, eax", "jz      loc_9690"], ["sub     esp, 0Ch", "push    14h", "call    dword ptr [ebp+0Ch]", "add     esp, 10h", "test    content_0, content_0", "jz      loc_857E"], ["xor     edx, edx", "cmp     role, 29h ; ')'", "setz    dl", "inc     edx", "mov     ecx, [esp+4Ch+s]", "mov     [content_0], edx", "mov     edx, [esp+4Ch+eventEndPP]", "mov     dword ptr [content_0+4], 0", "mov     dword ptr [content_0+8], 0", "mov     dword ptr [content_0+0Ch], 0", "mov     dword ptr [content_0+10h], 0", "mov     [edx], ecx", "push    edx", "push    content_0", "mov     content_0, [ebp+154h]", "mov     ecx, [eax]", "push    ecx", "mov     role, [ebp+4]", "push    ebx", "call    dword ptr [ebp+80h]", "mov     eax, [esp+5Ch+table]", "add     esp, 10h", "mov     byte ptr [eax+0A0h], 0", "jmp     loc_7A9F"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC cases 35,36", "cmp     byte ptr [eax+80h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+154h]", "xor     ecx, ecx", "mov     [esp+4Ch+name], eax", "mov     cl, [ebp+15Ch]; isCdata", "mov     edx, [ebp+158h]; attId", "push    eax", "push    ebp; parser", "xor     eax, eax", "push    0; value", "mov     al, [ebp+15Dh]", "push    eax; isId", "mov     eax, [esp+5Ch+name]; type", "call    defineAttribute", "add     esp, 10h", "test    eax, eax", "jz      loc_857E"], ["mov     eax, [ebp+84h]", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+148h]", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["mov     dl, [eax]", "cmp     dl, 28h ; '('", "jz      loc_9813"], ["cmp     dl, 4Eh ; 'N'", "jz      loc_9809"], ["mov     eax, [esp+4Ch+eventEndPP]", "mov     edx, [esp+4Ch+s]", "mov     [eax], edx", "push    ecx", "xor     eax, eax", "push    ecx", "cmp     role, 24h ; '$'", "setz    al", "push    eax", "push    0", "mov     role, [ebp+148h]", "push    ebx", "mov     eax, [ebp+158h]", "mov     eax, [eax]", "push    eax", "mov     eax, [ebp+154h]", "mov     eax, [eax]", "push    eax", "mov     eax, [ebp+4]", "push    eax", "call    dword ptr [ebp+84h]", "mov     ecx, [ebp+1A0h]", "add     esp, 20h", "mov     eax, [ebp+19Ch]", "test    ecx, ecx", "jz      loc_9552"], ["test    eax, eax", "jnz     short loc_7E4A"], ["jmp     short loc_7E60"], ["mov     eax, edx"], ["mov     edx, [eax]", "mov     [eax], ecx", "test    edx, edx", "mov     [ebp+1A0h], eax", "mov     ecx, eax", "jnz     short loc_7E48"], ["lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["mov     dword ptr [ebp+19Ch], 0", "mov     dword ptr [ebp+1ACh], 0", "mov     dword ptr [ebp+1A8h], 0", "mov     dword ptr [ebp+1A4h], 0", "jmp     loc_7A9F"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC cases 37,38", "cmp     byte ptr [eax+80h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["xor     ecx, ecx", "mov     eax, [enc_0+40h]", "mov     cl, [ebp+15Ch]; isCdata", "push    2; account", "mov     edx, [esp+50h+table]", "add     edx, 50h ; 'P'", "push    edx; pool", "mov     edx, [esp+54h+next]", "sub     edx, eax", "push    edx; end", "mov     edx, [esp+58h+s]", "add     eax, edx", "mov     edx, enc_0; enc", "push    eax; ptr", "mov     eax, ebp; parser", "call    storeAttributeValue", "add     esp, 10h", "test    result, result", "jnz     loc_7A3D"], ["mov     result, [esp+4Ch+table]", "sub     esp, 4", "xor     ecx, ecx", "mov     edx, [eax+60h]", "mov     [esp+50h+name], edx", "mov     edx, eax", "mov     eax, [eax+5Ch]", "mov     [edx+60h], eax", "mov     cl, [ebp+15Ch]; isCdata", "mov     edx, [ebp+158h]; attId", "mov     eax, [ebp+154h]; type", "push    ebp; parser", "push    [esp+54h+name]; value", "push    0; isId", "call    defineAttribute", "add     esp, 10h", "test    eax, eax", "jz      loc_857E"], ["mov     ecx, [ebp+84h]", "test    ecx, ecx", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+148h]", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["mov     dl, [eax]", "cmp     dl, 28h ; '('", "jz      loc_97B0"], ["cmp     dl, 4Eh ; 'N'", "jz      loc_97A6"], ["mov     eax, [esp+4Ch+eventEndPP]", "mov     edx, [esp+4Ch+s]", "mov     [eax], edx", "push    eax", "push    eax", "xor     eax, eax", "cmp     role, 26h ; '&'", "setz    al", "push    eax", "mov     eax, [esp+58h+name]", "push    eax", "mov     eax, [ebp+148h]", "push    eax", "mov     eax, [ebp+158h]", "mov     eax, [eax]", "push    eax", "mov     eax, [ebp+154h]", "mov     eax, [eax]", "push    eax", "mov     edx, [ebp+4]", "push    edx", "call    dword ptr [ebp+84h]", "mov     ecx, [ebp+1A0h]", "add     esp, 20h", "mov     eax, [ebp+19Ch]", "test    ecx, ecx", "jz      loc_9552"], ["test    eax, eax", "jnz     short loc_7FAA"], ["jmp     loc_7E60"], ["mov     eax, edx"], ["mov     edx, [eax]", "mov     [eax], ecx", "test    edx, edx", "mov     [ebp+1A0h], eax", "mov     ecx, eax", "jnz     short loc_7FA8"], ["jmp     loc_7E60"], ["mov     ecx, [esp+4Ch+table]; jumptable 000079DC case 43", "cmp     byte ptr [ecx+0A0h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [ecx+0B8h]", "mov     edx, [ecx+0B4h]", "mov     role, [ecx+0A4h]", "mov     edx, [eax+edx*4-4]", "lea     eax, ds:0[edx*8]", "sub     eax, edx", "lea     eax, [ebx+eax*4]", "mov     dword ptr [eax], 3"], ["mov     eax, [ebp+80h]; jumptable 000079DC case 39", "test    eax, eax", "jnz     loc_7A9F"], ["jmp     def_79DC; jumptable 000079DC default case"], ["mov     eax, [esp+4Ch+var_48]; jumptable 000079DC case 21", "push    eax", "mov     edx, [esp+50h+next]", "push    edx", "mov     role, [esp+54h+s]", "push    ebx", "push    enc_0", "call    dword ptr [enc_0+34h]", "add     esp, 10h", "test    eax, eax", "jz      loc_987B"], ["mov     eax, [ebp+14Ch]", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["sub     esp, 0Ch", "mov     edx, [enc_0+40h]", "mov     ecx, ebx", "lea     eax, [ebp+19Ch]; pool", "mov     ebx, [esp+58h+next]", "add     ecx, edx; ptr", "sub     ebx, edx", "mov     edx, enc_0; enc", "push    ebx; end", "call    poolStoreString", "add     esp, 10h", "test    tem, tem", "jz      loc_857E"], ["call    normalizePublicId", "mov     [ebp+150h], tem"], ["mov     eax, [ebp+1A8h]", "mov     [ebp+1ACh], eax", "jmp     loc_7A9F"], ["mov     eax, [esp+4Ch+next]; jumptable 000079DC case 14"], ["mov     edx, [esp+4Ch+var_48]", "push    edx", "push    eax", "mov     ecx, [esp+54h+s]", "push    ecx", "push    enc_0", "call    dword ptr [enc_0+34h]", "add     esp, 10h", "test    eax, eax", "jz      loc_987B"], ["mov     eax, [esp+4Ch+table]", "cmp     byte ptr [eax+80h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+138h]", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [esp+4Ch+s]", "mov     edx, [enc_0+40h]", "add     eax, edx", "sub     esp, 0Ch", "mov     [esp+58h+name], eax", "mov     eax, [esp+58h+table]", "mov     ecx, [esp+58h+next]", "add     eax, 50h ; 'P'; pool", "sub     ecx, edx", "mov     edx, enc_0; enc", "push    ecx; end", "mov     ecx, [esp+5Ch+name]; ptr", "call    poolStoreString", "add     esp, 10h", "test    tem, tem", "jz      loc_857E"], ["call    normalizePublicId", "mov     edx, [ebp+138h]", "mov     [edx+18h], tem", "mov     edx, [esp+4Ch+table]", "mov     tem, [edx+5Ch]", "mov     [edx+60h], eax", "mov     eax, [ebp+88h]", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["cmp     role, 0Eh", "jnz     def_79DC; jumptable 000079DC default case"], ["jmp     loc_7A9F"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC case 52", "cmp     byte ptr [eax+0A0h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     edx, 2"], ["mov     eax, [esp+4Ch+next]", "mov     ecx, [enc_0+40h]", "sub     eax, ecx", "mov     [esp+4Ch+nxt], eax"], ["mov     eax, ebp; parser", "mov     [esp+4Ch+name], edx", "call    nextScaffoldPart", "test    myindex, myindex", "js      loc_857E"], ["mov     edx, [esp+4Ch+table]", "lea     role, ds:0[myindex*8]", "sub     ebx, myindex", "sub     esp, 0Ch", "shl     ebx, 2", "mov     myindex, [edx+0A4h]", "mov     dword ptr [eax+ebx], 4", "mov     eax, [edx+0A4h]", "mov     edx, [esp+58h+name]", "mov     [eax+ebx+4], edx", "mov     eax, [esp+58h+nxt]", "push    eax; end", "mov     edx, enc_0; enc", "mov     ecx, [esp+5Ch+s]; ptr", "mov     eax, ebp; parser", "call    getElementType", "add     esp, 10h", "test    el, el", "jz      loc_857E"], ["mov     edx, [el]", "mov     el, [esp+4Ch+table]", "mov     eax, [eax+0A4h]", "mov     [eax+ebx+8], edx", "xor     eax, eax", "lea     esi, [esi+0]", "nop"], ["inc     nameLen", "cmp     byte ptr [edx+nameLen-1], 0", "jnz     short loc_81C8"], ["mov     ebx, [esp+4Ch+table]", "mov     edx, [ebx+0A8h]", "mov     ecx, edx", "xor     ecx, 0FFFFFFFFh", "cmp     ecx, nameLen", "jb      loc_857E"], ["add     nameLen, edx", "mov     [ebx+0A8h], eax", "mov     eax, [ebp+80h]", "test    eax, eax", "jnz     loc_7A9F"], ["jmp     def_79DC; jumptable 000079DC default case"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC case 51", "cmp     byte ptr [eax+0A0h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [esp+4Ch+next]", "xor     edx, edx", "mov     [esp+4Ch+nxt], eax", "jmp     loc_8153"], ["mov     eax, [ebp+100h]; jumptable 000079DC case 50", "mov     ecx, [ebp+1CCh]", "add     eax, ecx", "cmp     byte ptr [eax], 7Ch ; '|'", "jz      loc_98C5"], ["mov     byte ptr [eax], 2Ch ; ','", "mov     eax, [esp+4Ch+table]", "cmp     byte ptr [eax+0A0h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["jmp     _L1824; jumptable 000079DC case 39"], ["mov     edx, [ebp+1CCh]; jumptable 000079DC case 49", "mov     eax, [ebp+100h]", "add     eax, edx", "mov     edx, eax", "mov     al, [eax]", "cmp     al, 2Ch ; ','", "jz      loc_98C5"], ["mov     ecx, [esp+4Ch+table]", "cmp     byte ptr [ecx+0A0h], 0", "jz      short loc_8287"], ["test    al, al", "jz      loc_95B8"], ["mov     byte ptr [edx], 7Ch ; '|'", "jmp     def_79DC; jumptable 000079DC default case"], ["mov     edx, 3; jumptable 000079DC case 48"], ["mov     role, [esp+4Ch+table]", "cmp     byte ptr [ebx+0A0h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     ecx, [ebx+0A4h]", "mov     eax, [ebx+0B4h]", "mov     ebx, [ebx+0B8h]", "mov     [esp+4Ch+name], ecx", "lea     ecx, [eax-1]", "lea     eax, [ebx+eax*4-4]", "mov     ebx, [ebp+80h]", "test    ebx, ebx", "jz      loc_9281"], ["mov     ebx, [esp+4Ch+table]", "mov     [ebx+0B4h], ecx", "mov     ecx, [eax]", "lea     eax, ds:0[ecx*8]", "sub     eax, ecx", "mov     ecx, [esp+4Ch+name]", "mov     [ecx+eax*4+4], quant", "mov     eax, [ebx+0B4h]", "test    eax, eax", "jnz     loc_7A9F"], ["mov     ebx, [ebp+160h]", "mov     eax, [ebx+0B0h]", "cmp     eax, 0CCCCCCCh", "ja      loc_857E"], ["mov     quant, [ebx+0A8h]", "lea     eax, [eax+eax*4]", "shl     eax, 2", "mov     ecx, edx", "xor     ecx, 0FFFFFFFFh", "cmp     eax, ecx", "ja      loc_857E"], ["sub     esp, 0Ch", "add     eax, edx", "push    eax", "call    dword ptr [ebp+0Ch]", "mov     [esp+5Ch+model], eax", "mov     edx, eax", "add     esp, 10h", "test    eax, eax", "jz      loc_857E"], ["mov     eax, [ebx+0B0h]", "lea     eax, [eax+eax*4]", "lea     ecx, [edx+eax*4]", "mov     eax, edx", "lea     edx, [edx+14h]", "mov     [esp+4Ch+nxt], ecx", "mov     [esp+4Ch+var_24], edx", "mov     dword ptr [eax+0Ch], 0", "cmp     eax, ecx", "jnb     loc_9513"], ["mov     [esp+4Ch+name], ecx", "xor     edx, edx", "mov     ecx, [esp+4Ch+var_24]", "mov     [esp+4Ch+var_20], enc_0", "mov     [esp+4Ch+var_24], ebp", "mov     ebp, eax", "lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["lea     eax, ds:0[edx*8]", "sub     eax, edx", "mov     edx, [ebx+0A4h]", "shl     eax, 2", "mov     edx, [edx+eax]", "mov     [ebp+0], edx", "cmp     edx, 4", "mov     edi, [ebx+0A4h]", "mov     edi, [edi+eax+4]", "mov     [ebp+4], edi", "jz      loc_92CD"], ["mov     dword ptr [ebp+8], 0", "mov     edx, [ebx+0A4h]", "mov     edi, [edx+eax+14h]", "mov     [ebp+10h], ecx", "mov     [ebp+0Ch], edi", "test    edi, edi", "mov     edx, [ebx+0A4h]", "mov     edx, [edx+eax+0Ch]", "jz      short loc_8401"], ["xor     edi, edi", "lea     esi, [esi+0]"], ["mov     [ecx+0Ch], edx", "lea     eax, ds:0[edx*8]", "sub     eax, edx", "mov     edx, [ebx+0A4h]", "inc     edi", "add     ecx, 14h", "lea     eax, [edx+eax*4]", "cmp     edi, [ebp+0Ch]", "mov     edx, [eax+18h]", "jb      short loc_83E0"], ["add     ebp, 14h", "cmp     [esp+4Ch+nxt], ebp", "jbe     loc_950B"], ["mov     edx, [ebp+0Ch]", "jmp     loc_8388"], ["lea     eax, (atypeNMTOKENS_10151 - 2DF78h)[esi]; jumptable 000079DC case 30", "mov     [ebp+148h], eax", "jmp     _L1823; jumptable 000079DC case 33"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC case 5", "mov     byte ptr [ebp+1E5h], 0", "mov     byte ptr [eax+81h], 1", "mov     eax, [ebp+54h]", "test    eax, eax", "jz      loc_9332"], ["mov     eax, [esp+4Ch+s]", "mov     edx, [enc_0+40h]", "sub     esp, 0Ch", "lea     ecx, [eax+edx]; ptr", "mov     eax, [esp+58h+next]", "sub     eax, edx", "mov     edx, enc_0; enc", "push    eax; end", "lea     eax, [ebp+19Ch]; pool", "call    poolStoreString", "add     esp, 10h", "mov     [ebp+140h], eax", "test    eax, eax", "jz      loc_857E"], ["mov     eax, [ebp+1A8h]", "mov     byte ptr [esp+4Ch+name], 0", "mov     [ebp+1ACh], eax"], ["mov     eax, [esp+4Ch+table]", "cmp     byte ptr [eax+82h], 0", "jnz     short loc_84C8"], ["mov     eax, [ebp+1E8h]", "test    eax, eax", "jnz     short loc_84C8"], ["mov     eax, [ebp+6Ch]", "test    eax, eax", "jz      short loc_84C8"], ["sub     esp, 0Ch", "mov     ecx, [ebp+4]", "push    ecx", "call    eax", "add     esp, 10h", "test    eax, eax", "jz      loc_7CD8"], ["lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["mov     eax, [ebp+138h]", "mov     [esp+4Ch+nxt], eax", "test    eax, eax", "jz      loc_961A"], ["mov     eax, [esp+4Ch+table]", "cmp     byte ptr [eax+80h], 0", "jnz     loc_9098"], ["lea     esi, [esi+0]", "nop"], ["cmp     byte ptr [esp+4Ch+name], 0", "jz      loc_7A9F"], ["jmp     def_79DC; jumptable 000079DC default case"], ["mov     ecx, [ebp+54h]; jumptable 000079DC case 4", "test    ecx, ecx", "jz      loc_9346"], ["sub     esp, 0Ch", "lea     eax, [ebp+19Ch]; pool", "mov     edx, [esp+58h+next]", "push    edx; end", "mov     edx, enc_0; enc", "mov     ecx, [esp+5Ch+s]; ptr", "call    poolStoreString", "add     esp, 10h", "mov     [ebp+13Ch], eax", "test    eax, eax", "jz      short loc_857E"], ["mov     eax, [ebp+1A8h]", "mov     dword ptr [ebp+144h], 0", "mov     [ebp+1ACh], eax", "mov     dword ptr [ebp+140h], 0", "jmp     loc_7A9F"], ["sub     esp, 0Ch; jumptable 000079DC case 34", "mov     edx, enc_0; enc", "mov     eax, [esp+58h+next]", "push    eax; end", "mov     eax, ebp; parser", "mov     ecx, [esp+5Ch+s]; ptr", "call    getElementType", "add     esp, 10h", "mov     [ebp+154h], eax", "test    eax, eax", "jnz     _L1823; jumptable 000079DC case 33"], ["mov     eax, 1", "jmp     loc_7A3D"], ["sub     esp, 0Ch; jumptable 000079DC case 56", "mov     eax, ebp; parser", "mov     edx, [esp+58h+next]", "push    edx; end", "mov     edx, enc_0; enc", "mov     ecx, [esp+5Ch+s]; start", "call    reportComment", "add     esp, 10h", "test    eax, eax", "jnz     loc_7A9F"], ["jmp     short loc_857E"], ["sub     esp, 0Ch; jumptable 000079DC case 55", "mov     edx, enc_0; enc", "mov     eax, ebp; parser", "mov     ecx, [esp+58h+next]", "push    ecx; end", "mov     ecx, [esp+5Ch+s]; start", "call    reportProcessingInstruction", "add     esp, 10h", "test    eax, eax", "jnz     loc_7A9F"], ["jmp     short loc_857E"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC case 54", "cmp     byte ptr [eax+0A0h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     edx, 3", "jmp     loc_8146"], ["push    ecx; jumptable 000079DC case 9", "mov     role, [esp+50h+next]", "push    ebx", "mov     eax, [esp+54h+s]", "push    eax", "push    enc_0", "call    dword ptr [enc_0+2Ch]", "add     esp, 10h", "mov     ebx, eax", "test    eax, eax", "jnz     loc_7A73"], ["mov     eax, [esp+4Ch+table]", "cmp     byte ptr [eax+80h], 0", "jz      loc_7A69"], ["sub     esp, 0Ch", "lea     eax, [eax+50h]; pool", "mov     edx, [esp+58h+next]", "push    edx; end", "mov     edx, enc_0; enc", "mov     ecx, [esp+5Ch+s]; ptr", "call    poolStoreString", "add     esp, 10h", "mov     ecx, eax; name", "test    name_0, name_0", "jz      loc_857E"], ["sub     esp, 0Ch", "push    24h ; '$'; createSize", "mov     [esp+5Ch+name], name_0", "mov     edx, [esp+5Ch+table]; table", "mov     name_0, ebp; parser", "call    lookup", "add     esp, 10h", "mov     [ebp+138h], eax", "test    eax, eax", "jz      loc_857E"], ["mov     ecx, [esp+4Ch+name]", "cmp     [eax], ecx", "jnz     loc_7A69"], ["mov     ecx, [esp+4Ch+table]", "mov     eax, [ecx+5Ch]", "mov     [ecx+60h], eax", "mov     eax, [ebp+138h]", "mov     dword ptr [eax+18h], 0", "mov     eax, [ebp+138h]", "mov     byte ptr [eax+21h], 0", "cmp     dword ptr [ebp+1D8h], 0", "jz      loc_99C6"], ["mov     eax, [ebp+138h]", "mov     [eax+22h], bl", "cmp     dword ptr [ebp+88h], 0", "jnz     loc_7A9F"], ["jmp     def_79DC; jumptable 000079DC default case"], ["cmp     [esp+4Ch+var_35], 1; jumptable 000079DC case 8", "jnz     loc_9988"], ["mov     edx, [ebp+13Ch]", "mov     eax, [ebp+140h]", "test    edx, edx", "jz      loc_956F"], ["sub     esp, 0Ch", "push    0", "mov     role, [ebp+144h]", "push    ebx", "push    eax", "push    edx", "mov     eax, [ebp+4]", "push    eax", "call    dword ptr [ebp+54h]", "mov     ecx, [ebp+1A0h]", "add     esp, 20h", "mov     eax, [ebp+19Ch]", "test    ecx, ecx", "jz      loc_960F"], ["test    eax, eax", "jnz     short loc_8722"], ["jmp     short loc_8732"], ["mov     eax, edx"], ["mov     edx, [eax]", "mov     [eax], ecx", "test    edx, edx", "mov     [ebp+1A0h], eax", "mov     ecx, eax", "jnz     short loc_8720"], ["mov     dword ptr [ebp+19Ch], 0", "mov     dword ptr [ebp+1ACh], 0", "mov     dword ptr [ebp+1A8h], 0", "mov     dword ptr [ebp+1A4h], 0", "mov     eax, [ebp+140h]", "mov     byte ptr [esp+4Ch+name], 0"], ["test    eax, eax", "jz      loc_955D"], ["mov     eax, [esp+4Ch+table]", "mov     bl, [eax+81h]", "mov     byte ptr [eax+81h], 1", "mov     ecx, [ebp+1E8h]", "test    ecx, ecx", "jz      loc_8830"], ["mov     edx, [ebp+70h]", "test    edx, edx", "jz      loc_8830"], ["sub     esp, 0Ch", "lea     edx, [eax+84h]; table", "mov     eax, ebp; parser", "push    24h ; '$'; createSize", "mov     ecx, [esp+5Ch+var_3C]; name", "call    lookup", "add     esp, 10h", "test    entity, entity", "jz      loc_857E"], ["cmp     byte ptr [ebp+1E5h], 0", "jz      short loc_87CA"], ["mov     edx, [ebp+164h]", "mov     [entity+14h], edx"], ["mov     ecx, [esp+4Ch+table]", "sub     esp, 0Ch", "mov     byte ptr [ecx+83h], 0", "mov     edx, [entity+18h]", "push    edx", "mov     ecx, [entity+10h]", "push    ecx", "mov     entity, [entity+14h]", "push    eax", "push    0", "mov     eax, [ebp+74h]", "push    eax", "call    dword ptr [ebp+70h]", "add     esp, 20h", "test    eax, eax", "jz      loc_98BB"], ["mov     eax, [esp+4Ch+table]", "cmp     byte ptr [eax+83h], 0", "jz      loc_96C4"], ["cmp     byte ptr [eax+82h], 0", "jnz     short loc_8830"], ["mov     eax, [ebp+6Ch]", "test    eax, eax", "jz      short loc_8830"], ["sub     esp, 0Ch", "push    dword ptr [ebp+4]", "call    eax", "add     esp, 10h", "test    eax, eax", "jz      loc_7CD8"], ["lea     esi, [esi+0]"], ["mov     byte ptr [ebp+1E5h], 0"], ["mov     eax, [ebp+58h]", "test    eax, eax", "jz      loc_84F0"], ["sub     esp, 0Ch", "mov     edx, [ebp+4]", "push    edx", "call    eax", "add     esp, 10h", "jmp     loc_7A9F"], ["mov     eax, [ebp+54h]; jumptable 000079DC case 7", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["sub     esp, 0Ch", "push    1", "mov     role, [ebp+144h]", "push    ebx", "mov     edx, [ebp+140h]", "push    edx", "mov     ecx, [ebp+13Ch]", "push    ecx", "mov     ebx, [ebp+4]", "push    ebx", "call    eax", "mov     ecx, [ebp+1A0h]", "add     esp, 20h", "mov     dword ptr [ebp+13Ch], 0", "mov     eax, [ebp+19Ch]", "test    ecx, ecx", "jz      loc_9552"], ["test    eax, eax", "jnz     short loc_88B2"], ["jmp     loc_7E60"], ["mov     eax, edx"], ["mov     edx, [eax]", "mov     [eax], ecx", "test    edx, edx", "mov     [ebp+1A0h], eax", "mov     ecx, eax", "jnz     short loc_88B0"], ["jmp     loc_7E60"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC case 6", "sub     esp, 0Ch", "mov     byte ptr [ebp+1E5h], 0", "push    24h ; '$'; createSize", "lea     edx, [eax+84h]; table", "mov     ecx, [esp+5Ch+var_3C]; name", "mov     eax, ebp; parser", "call    lookup", "add     esp, 10h", "mov     [ebp+138h], eax", "test    eax, eax", "jz      loc_857E"], ["mov     eax, [esp+4Ch+table]", "mov     byte ptr [eax+81h], 1", "mov     eax, [esp+4Ch+next]", "mov     edx, [ebp+54h]", "test    edx, edx", "jz      loc_808C"], ["mov     role, [esp+4Ch+var_48]", "push    ebx", "push    eax", "mov     eax, [esp+54h+s]", "push    eax", "push    enc_0", "call    dword ptr [enc_0+34h]", "add     esp, 10h", "test    eax, eax", "jz      loc_987B"], ["mov     eax, [esp+4Ch+s]", "sub     esp, 0Ch", "mov     edx, [enc_0+40h]", "mov     ebx, [esp+58h+next]", "lea     ecx, [eax+edx]; ptr", "sub     ebx, edx", "lea     eax, [ebp+19Ch]; pool", "mov     edx, enc_0; enc", "push    ebx; end", "call    poolStoreString", "add     esp, 10h", "test    pubId_0, pubId_0", "jz      loc_857E"], ["call    normalizePublicId", "mov     edx, [ebp+1A8h]", "mov     [ebp+144h], pubId_0", "mov     pubId_0, [esp+4Ch+table]", "mov     [ebp+1ACh], edx", "cmp     byte ptr [eax+80h], 0", "jz      loc_7A9F"], ["mov     ecx, [ebp+138h]", "test    ecx, ecx", "jz      loc_7A9F"], ["mov     ecx, [esp+4Ch+s]", "mov     eax, [esp+4Ch+table]", "sub     esp, 0Ch", "mov     edx, [enc_0+40h]", "add     ecx, edx; ptr", "add     eax, 50h ; 'P'; pool", "mov     ebx, [esp+58h+next]", "sub     ebx, edx", "mov     edx, enc_0; enc", "push    ebx; end", "call    poolStoreString", "add     esp, 10h", "test    tem, tem", "jz      loc_857E"], ["call    normalizePublicId", "mov     edx, [ebp+138h]", "mov     ecx, [esp+4Ch+table]", "mov     [edx+18h], tem", "mov     tem, [ecx+5Ch]", "mov     [ecx+60h], eax", "jmp     loc_7A9F"], ["lea     eax, (atypeENTITY_10148 - 2DF78h)[esi]; jumptable 000079DC case 27", "mov     [ebp+148h], eax", "jmp     _L1823; jumptable 000079DC case 33"], ["cmp     [esp+4Ch+tok], 0Eh; jumptable 000079DC case 0", "jnz     def_79DC; jumptable 000079DC default case"], ["jmp     loc_7A9F"], ["mov     eax, [ebp+50h]; jumptable 000079DC case 58", "test    eax, eax", "jz      short loc_8A1F"], ["sub     esp, 0Ch", "mov     edx, enc_0; enc", "mov     eax, [esp+58h+next]", "push    eax; end", "mov     eax, ebp; parser", "mov     ecx, [esp+5Ch+s]; s", "call    reportDefault", "add     esp, 10h"], ["lea     ecx, [esp+4Ch+next]; startPtr", "xor     eax, eax", "push    ebx", "mov     edx, enc_0; enc", "mov     al, [esp+50h+var_36]", "push    eax; haveMore", "mov     eax, [esp+54h+nextPtr]", "push    eax; nextPtr", "mov     eax, [esp+58h+end]", "push    eax; end", "mov     eax, ebp; parser", "call    doIgnoreSection", "add     esp, 10h", "test    result, result", "jnz     loc_7A3D"], ["mov     edx, [esp+4Ch+next]", "test    edx, edx", "jnz     loc_7A9F"], ["lea     edx, (ignoreSectionProcessor - 2DF78h)[esi]", "mov     [ebp+114h], edx", "jmp     loc_7A3D"], ["mov     eax, [ebp+150h]; jumptable 000079DC case 20", "test    eax, eax", "jz      loc_931D"], ["mov     eax, [ebp+60h]", "test    eax, eax", "jz      loc_931D"], ["mov     eax, [esp+4Ch+eventEndPP]", "mov     ecx, [esp+4Ch+s]", "sub     esp, 0Ch", "mov     [eax], ecx", "mov     eax, [ebp+150h]", "push    eax", "push    0", "mov     edx, [ebp+164h]", "push    edx", "mov     ecx, [ebp+14Ch]", "push    ecx", "mov     role, [ebp+4]", "push    ebx", "call    dword ptr [ebp+60h]", "add     esp, 20h", "mov     byte ptr [esp+4Ch+name], 0"], ["mov     ecx, [ebp+1A0h]", "mov     eax, [ebp+19Ch]", "test    ecx, ecx", "jz      loc_92C2"], ["test    eax, eax", "jnz     short loc_8AD2"], ["jmp     short loc_8AE2"], ["mov     eax, edx"], ["mov     edx, [eax]", "mov     [eax], ecx", "test    edx, edx", "mov     [ebp+1A0h], eax", "mov     ecx, eax", "jnz     short loc_8AD0"], ["mov     dword ptr [ebp+19Ch], 0", "mov     dword ptr [ebp+1ACh], 0", "mov     dword ptr [ebp+1A8h], 0", "mov     dword ptr [ebp+1A4h], 0", "jmp     loc_84F0"], ["mov     eax, [ebp+14Ch]; jumptable 000079DC case 19", "test    eax, eax", "jz      loc_9277"], ["mov     eax, [ebp+60h]", "test    eax, eax", "jz      loc_9277"], ["mov     role, [esp+4Ch+s]", "sub     esp, 0Ch", "mov     edx, [enc_0+40h]", "mov     eax, [esp+58h+next]", "sub     eax, edx", "lea     ecx, [ebx+edx]; ptr", "push    eax; end", "mov     edx, enc_0; enc", "lea     eax, [ebp+19Ch]; pool", "call    poolStoreString", "add     esp, 10h", "test    systemId_0, systemId_0", "jz      loc_857E"], ["mov     ecx, [esp+4Ch+eventEndPP]", "sub     esp, 0Ch", "mov     [ecx], ebx", "mov     edx, [ebp+150h]", "push    edx", "push    systemId_0", "mov     ecx, [ebp+164h]", "push    ecx", "mov     ebx, [ebp+14Ch]", "push    ebx", "mov     systemId_0, [ebp+4]", "push    eax", "call    dword ptr [ebp+60h]", "add     esp, 20h", "mov     byte ptr [esp+4Ch+name], 0"], ["mov     ecx, [ebp+1A0h]", "mov     eax, [ebp+19Ch]", "test    ecx, ecx", "jz      loc_92C2"], ["test    eax, eax", "jnz     short loc_8BA2"], ["jmp     loc_8AE2"], ["mov     eax, edx"], ["mov     edx, [eax]", "mov     [eax], ecx", "test    edx, edx", "mov     [ebp+1A0h], eax", "mov     ecx, eax", "jnz     short loc_8BA0"], ["jmp     loc_8AE2"], ["mov     role, [ebp+60h]; jumptable 000079DC case 18", "mov     dword ptr [ebp+150h], 0", "mov     dword ptr [ebp+14Ch], 0", "test    ebx, ebx", "jz      def_79DC; jumptable 000079DC default case"], ["sub     esp, 0Ch", "lea     eax, [ebp+19Ch]; pool", "mov     edx, enc_0; enc", "mov     ecx, [esp+58h+next]", "push    ecx; end", "mov     ecx, [esp+5Ch+s]; ptr", "call    poolStoreString", "add     esp, 10h", "mov     [ebp+14Ch], eax", "test    eax, eax", "jnz     loc_8070"], ["jmp     loc_857E"], ["mov     edx, [esp+4Ch+table]; jumptable 000079DC case 16", "cmp     byte ptr [edx+80h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     role, [ebp+138h]", "test    ebx, ebx", "jz      def_79DC; jumptable 000079DC default case"], ["sub     esp, 0Ch", "lea     eax, [edx+50h]; pool", "mov     edx, [esp+58h+next]", "push    edx; end", "mov     edx, enc_0; enc", "mov     ecx, [esp+5Ch+s]; ptr", "call    poolStoreString", "add     esp, 10h", "mov     [ebx+1Ch], eax", "mov     eax, [ebp+138h]", "mov     ecx, [eax+1Ch]", "test    ecx, ecx", "jz      loc_857E"], ["mov     edx, [esp+4Ch+table]", "mov     eax, [edx+5Ch]", "mov     [edx+60h], eax", "mov     eax, [ebp+5Ch]", "test    eax, eax", "jz      loc_9728"], ["mov     edx, [esp+4Ch+eventEndPP]", "mov     eax, [esp+4Ch+s]", "mov     [edx], eax", "mov     eax, [ebp+138h]", "push    edx", "push    edx", "mov     ecx, [eax+1Ch]", "push    ecx", "mov     ebx, [eax+18h]", "push    ebx", "mov     edx, [eax+10h]", "push    edx", "mov     ecx, [eax+14h]", "push    ecx", "mov     ebx, [eax]", "push    ebx", "mov     eax, [ebp+4]", "push    eax", "call    dword ptr [ebp+5Ch]", "add     esp, 20h", "jmp     loc_7A9F"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC case 15", "cmp     byte ptr [eax+80h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+138h]", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+88h]", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [esp+4Ch+eventEndPP]", "mov     edx, [esp+4Ch+s]", "sub     esp, 0Ch", "mov     [eax], edx", "mov     eax, [ebp+138h]", "push    0", "mov     role, [eax+18h]", "push    ebx", "mov     edx, [eax+10h]", "push    edx", "xor     edx, edx", "mov     ecx, [eax+14h]", "push    ecx", "push    0", "push    0", "mov     dl, [eax+21h]", "push    edx", "mov     ebx, [eax]", "push    ebx", "mov     eax, [ebp+4]", "push    eax", "call    dword ptr [ebp+88h]", "add     esp, 30h", "jmp     loc_7A9F"], ["mov     eax, [ebp+60h]; jumptable 000079DC case 17", "test    eax, eax", "jnz     loc_7A9F"], ["jmp     def_79DC; jumptable 000079DC default case"], ["cmp     [esp+4Ch+tok], 0Ch; jumptable 000079DC case -1", "jz      loc_9460"], ["xor     eax, eax", "cmp     [esp+4Ch+tok], 1Ch", "setz    al", "lea     eax, ds:2[eax*8]", "jmp     loc_7A3D"], ["sub     esp, 0Ch; jumptable 000079DC case 1", "xor     edx, edx", "mov     role, [esp+58h+next]", "push    ebx", "mov     ecx, [esp+5Ch+s]", "jmp     loc_79F6"], ["xor     edx, edx; jumptable 000079DC case 45", "jmp     closeGroup"], ["mov     edx, [ebp+100h]; jumptable 000079DC case 44", "mov     eax, [ebp+1D0h]", "cmp     edx, eax", "jb      loc_9327"], ["test    eax, eax", "jz      loc_9579"], ["js      loc_857E"], ["add     eax, eax", "mov     edx, [ebp+10h]", "mov     [ebp+1D0h], eax", "push    ecx", "push    ecx", "push    eax", "mov     role, [ebp+1CCh]", "push    ebx", "call    edx", "add     esp, 10h", "test    new_connector_0, new_connector_0", "jz      loc_9A1D"], ["mov     ecx, [esp+4Ch+table]", "mov     [ebp+1CCh], new_connector_0", "mov     edx, [ecx+0B8h]", "test    edx, edx", "jz      short loc_8DF6"], ["mov     new_connector_0, [ebp+1D0h]", "cmp     eax, 3FFFFFFFh", "ja      loc_857E"], ["shl     eax, 2", "push    ebx", "push    ebx", "push    eax", "push    edx", "call    dword ptr [ebp+10h]", "add     esp, 10h", "test    new_scaff_index, new_scaff_index", "jz      loc_857E"], ["mov     ecx, [esp+4Ch+table]", "mov     [ecx+0B8h], new_scaff_index", "mov     new_scaff_index, [ebp+1CCh]"], ["mov     edx, [ebp+100h]"], ["mov     byte ptr [eax+edx], 0", "mov     eax, [esp+4Ch+table]", "cmp     byte ptr [eax+0A0h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, ebp; parser", "call    nextScaffoldPart", "test    myindex, myindex", "js      loc_857E"], ["mov     edx, [esp+4Ch+table]", "mov     edx, [edx+0B8h]", "test    edx, edx", "jz      loc_9A64"], ["mov     ebx, [esp+4Ch+table]", "mov     ecx, [ebx+0B4h]", "mov     [edx+ecx*4], myindex", "mov     ecx, ebx", "lea     edx, ds:0[myindex*8]", "mov     ebx, [ebx+0B4h]", "sub     edx, myindex", "inc     ebx", "mov     myindex, edx", "mov     edx, [ecx+0A4h]", "mov     [ecx+0B4h], ebx", "lea     eax, [edx+eax*4]", "mov     dword ptr [eax], 6", "mov     ecx, [ebp+80h]", "test    ecx, ecx", "jnz     loc_7A9F"], ["jmp     def_79DC; jumptable 000079DC default case"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC case 53", "mov     edx, 1", "cmp     byte ptr [eax+0A0h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["jmp     loc_8146"], ["mov     eax, [ebp+80h]; jumptable 000079DC case 40", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["sub     esp, 0Ch", "mov     edx, enc_0; enc", "mov     eax, [esp+58h+next]", "push    eax; end", "mov     eax, ebp; parser", "mov     ecx, [esp+5Ch+s]; ptr", "call    getElementType", "add     esp, 10h", "mov     [ebp+154h], eax", "test    eax, eax", "jz      loc_857E"], ["mov     eax, [esp+4Ch+table]", "mov     dword ptr [eax+0B4h], 0", "mov     dword ptr [eax+0B0h], 0", "mov     byte ptr [eax+0A0h], 1", "jmp     loc_7A9F"], ["lea     eax, (atypeIDREF_10146 - 2DF78h)[esi]; jumptable 000079DC case 25", "mov     [ebp+148h], eax", "jmp     _L1823; jumptable 000079DC case 33"], ["lea     eax, (atypeID_10145 - 2DF78h)[esi]; jumptable 000079DC case 24", "mov     byte ptr [ebp+15Dh], 1", "mov     [ebp+148h], eax", "jmp     _L1823; jumptable 000079DC case 33"], ["lea     eax, (atypeCDATA_10144 - 2DF78h)[esi]; jumptable 000079DC case 23", "mov     byte ptr [ebp+15Ch], 1", "mov     [ebp+148h], eax", "jmp     _L1823; jumptable 000079DC case 33"], ["mov     eax, [ebp+54h]; jumptable 000079DC case 3", "test    eax, eax", "jnz     loc_7A9F"], ["jmp     def_79DC; jumptable 000079DC default case"], ["cmp     byte ptr [ebp+1E5h], 0; jumptable 000079DC case 2", "jz      loc_9010"], ["mov     enc_0, [esp+4Ch+table]", "mov     bl, [edi+81h]", "mov     byte ptr [edi+81h], 1", "mov     eax, [ebp+1E8h]", "test    eax, eax", "jz      loc_9010"], ["mov     eax, [ebp+70h]", "test    eax, eax", "jz      loc_9010"], ["sub     esp, 0Ch", "lea     edx, [edi+84h]; table", "lea     ecx, (externalSubsetName_10143 - 2DF78h)[esi]; \"#\"", "mov     eax, ebp; parser", "push    24h ; '$'; createSize", "call    lookup", "add     esp, 10h", "test    entity, entity", "jz      loc_857E"], ["mov     edx, [ebp+164h]", "sub     esp, 0Ch", "mov     [entity+14h], edx", "mov     byte ptr [edi+83h], 0", "mov     edx, [entity+18h]", "push    edx", "mov     ecx, [entity+10h]", "push    ecx", "mov     entity, [entity+14h]", "push    eax", "push    0", "mov     eax, [ebp+74h]", "push    eax", "call    dword ptr [ebp+70h]", "add     esp, 20h", "test    eax, eax", "jz      loc_98BB"], ["cmp     byte ptr [edi+83h], 0", "jz      loc_986C"], ["cmp     byte ptr [edi+82h], 0", "jnz     short loc_9010"], ["mov     eax, [ebp+6Ch]", "test    eax, eax", "jz      short loc_9010"], ["sub     esp, 0Ch", "push    dword ptr [ebp+4]", "call    eax", "add     esp, 10h", "test    eax, eax", "jz      loc_7CD8"], ["lea     esi, [esi+0]"], ["lea     eax, (contentProcessor - 2DF78h)[esi]", "mov     [ebp+114h], eax", "mov     eax, [esp+4Ch+nextPtr]", "push    eax; endPtr", "mov     edx, [esp+50h+end]", "push    edx; end", "mov     ecx, [esp+54h+s]", "push    ecx; start", "push    ebp; parser", "call    contentProcessor", "add     esp, 10h", "jmp     loc_7A3D"], ["lea     eax, (atypeNMTOKEN_10150 - 2DF78h)[esi]; jumptable 000079DC case 29", "mov     [ebp+148h], eax", "jmp     _L1823; jumptable 000079DC case 33"], ["lea     eax, (atypeENTITIES_10149 - 2DF78h)[esi]; jumptable 000079DC case 28", "mov     [ebp+148h], eax", "jmp     _L1823; jumptable 000079DC case 33"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC case 13", "cmp     byte ptr [eax+80h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+138h]", "mov     byte ptr [esp+4Ch+name], 1", "mov     [esp+4Ch+nxt], eax", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [esp+4Ch+s]", "mov     edx, [enc_0+40h]", "add     eax, edx", "sub     esp, 0Ch", "mov     [esp+58h+model], eax", "mov     eax, [esp+58h+table]", "mov     ecx, [esp+58h+next]", "add     eax, 50h ; 'P'; pool", "sub     ecx, edx", "mov     edx, enc_0; enc", "push    ecx; end", "mov     ecx, [esp+5Ch+model]; ptr", "call    poolStoreString", "mov     ecx, [esp+5Ch+nxt]", "add     esp, 10h", "mov     [ecx+10h], eax", "mov     eax, [ebp+138h]", "mov     edx, [eax+10h]", "test    edx, edx", "jz      loc_857E"], ["mov     edx, [ebp+164h]", "mov     [eax+14h], edx", "mov     edx, [esp+4Ch+table]", "mov     eax, [edx+5Ch]", "mov     [edx+60h], eax", "mov     eax, [ebp+88h]", "test    eax, eax", "jz      loc_84F0"], ["cmp     role, 0Dh", "jnz     loc_84F0"], ["jmp     loc_7A9F"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC case 12", "cmp     byte ptr [eax+80h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [enc_0+40h]", "mov     edx, [esp+4Ch+s]", "push    ebx", "push    ebx", "lea     ecx, [edx+eax]; entityTextPtr", "push    2; account", "mov     edx, [esp+58h+next]", "sub     edx, eax", "mov     eax, ebp; parser", "push    edx; entityTextEnd", "mov     edx, enc_0; enc", "call    storeEntityValue", "mov     edx, [ebp+138h]", "add     esp, 10h", "test    edx, edx", "jz      loc_9678"], ["mov     ebx, [esp+4Ch+table]", "mov     ecx, [ebx+78h]", "mov     [edx+4], ecx", "mov     edx, [ebx+74h]", "mov     ecx, [ebp+138h]", "sub     edx, [ebx+78h]", "mov     [ecx+8], edx", "mov     edx, [ebx+74h]", "mov     [ebx+78h], edx", "mov     edx, [ebp+88h]", "test    edx, edx", "jz      loc_9682"], ["mov     [esp+4Ch+name], result_0", "mov     result_0, [esp+4Ch+eventEndPP]", "mov     ecx, [esp+4Ch+s]", "sub     esp, 0Ch", "mov     [eax], ecx", "xor     ecx, ecx", "mov     edx, [ebp+138h]", "push    0", "push    0", "push    0", "mov     eax, [ebp+164h]", "push    eax", "mov     eax, [edx+8]", "push    eax", "mov     eax, [edx+4]", "push    eax", "mov     cl, [edx+21h]", "push    ecx", "mov     edx, [edx]", "push    edx", "mov     ecx, [ebp+4]", "push    ecx", "call    dword ptr [ebp+88h]", "mov     eax, [esp+7Ch+name]", "add     esp, 30h", "test    eax, eax", "jz      loc_7A9F"], ["jmp     loc_7A3D"], ["mov     eax, [esp+4Ch+table]; jumptable 000079DC case 11", "cmp     byte ptr [eax+80h], 0", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+88h]", "test    eax, eax", "jnz     loc_7A9F"], ["jmp     def_79DC; jumptable 000079DC default case"], ["lea     eax, (atypeIDREFS_10147 - 2DF78h)[esi]; jumptable 000079DC case 26", "mov     [ebp+148h], eax", "jmp     _L1823; jumptable 000079DC case 33"], ["mov     edx, 1; jumptable 000079DC case 47", "jmp     closeGroup"], ["mov     edx, 2; jumptable 000079DC case 46", "jmp     closeGroup"], ["mov     eax, 1Dh", "jmp     loc_7A3D"], ["mov     eventEndPP_0, [esp+4Ch+nextPtr]", "mov     [eax], s_0", "xor     eax, eax", "jmp     loc_7A3D"], ["mov     eax, ebp; originParser", "lea     edx, (aAborting - 2DF78h)[esi]; \" ABORTING\\n\"", "call    accountingReportStats", "mov     eax, 2Ah ; '*'", "jmp     loc_7A3D"], ["cmp     byte ptr [ebp+1E4h], 0", "mov     eax, 3", "jnz     loc_7B53"], ["jmp     loc_7A3D"], ["mov     byte ptr [esp+4Ch+name], 1", "jmp     loc_8B82"], ["mov     ebx, [esp+4Ch+table]", "mov     [ebx+0B4h], ecx", "mov     ecx, [eax]", "lea     eax, ds:0[ecx*8]", "sub     eax, ecx", "mov     ecx, [esp+4Ch+name]", "mov     [ecx+eax*4+4], quant", "mov     eax, [ebx+0B4h]", "test    eax, eax", "jnz     def_79DC; jumptable 000079DC default case"], ["mov     byte ptr [ebx+0A0h], 0", "mov     dword ptr [ebx+0A8h], 0", "jmp     def_79DC; jumptable 000079DC default case"], ["mov     [ebp+1A0h], eax", "jmp     loc_8AE2"], ["mov     edi, [esp+4Ch+name]", "mov     [ebp+8], edi", "mov     edx, [ebx+0A4h]", "mov     eax, [edx+eax+8]", "lea     edx, [edi+1]", "mov     [esp+4Ch+name], edx", "mov     dl, [eax]", "mov     [edi], dl", "cmp     byte ptr [eax], 0", "jz      short loc_930A"], ["mov     edx, [esp+4Ch+name]", "mov     edi, ecx", "lea     esi, [esi+0]"], ["inc     edx", "inc     eax", "mov     cl, [eax]", "mov     [edx-1], cl", "cmp     byte ptr [eax], 0", "jnz     short loc_92F8"], ["mov     [esp+4Ch+name], edx", "mov     ecx, edi"], ["mov     dword ptr [ebp+0Ch], 0", "mov     dword ptr [ebp+10h], 0", "jmp     loc_8401"], ["mov     byte ptr [esp+4Ch+name], 1", "jmp     loc_8AB3"], ["mov     eax, [ebp+1CCh]", "jmp     loc_8DFC"], ["mov     eax, [esp+4Ch+var_3C]", "mov     byte ptr [esp+4Ch+name], 1", "mov     [ebp+140h], eax", "jmp     loc_848F"], ["mov     dword ptr [ebp+140h], 0", "jmp     def_79DC; jumptable 000079DC default case"], ["mov     ebp, edi", "mov     edi, [esp+4Ch+name]", "mov     ecx, [ebp+1ACh]", "test    ecx, ecx", "jz      loc_857E"], ["sub     esp, 0Ch", "mov     eax, ebx; pool", "mov     edx, [esp+58h+next]", "push    edx; end", "mov     edx, edi; enc", "mov     ecx, [esp+5Ch+s]; ptr", "call    poolAppend", "add     esp, 10h", "test    eax, eax", "jz      loc_857E"], ["mov     eax, [ebp+1ACh]", "mov     [ebp+148h], eax", "jmp     loc_7A9F"], ["mov     eax, [esp+4Ch+s]", "mov     edx, [enc_0+40h]", "add     eax, edx", "sub     esp, 0Ch", "mov     [esp+58h+name], eax", "mov     eax, [esp+58h+table]", "mov     ecx, [esp+58h+next]", "add     eax, 50h ; 'P'; pool", "sub     ecx, edx", "mov     edx, enc_0; enc", "push    ecx; end", "mov     ecx, [esp+5Ch+name]; ptr", "call    poolStoreString", "add     esp, 10h", "mov     ecx, eax; name", "test    name_1, name_1", "jz      loc_857E"], ["mov     name_1, [esp+4Ch+table]", "sub     esp, 0Ch", "lea     edx, [eax+84h]; table", "push    0; createSize", "mov     eax, ebp; parser", "mov     [esp+5Ch+name], name_1", "call    lookup", "mov     ecx, [esp+5Ch+table]", "mov     edx, eax; entity", "mov     entity_0, [ecx+60h]", "mov     [ecx+5Ch], eax", "add     esp, 10h", "mov     eax, [ebp+10Ch]", "mov     ecx, [esp+4Ch+name]", "test    eax, eax", "jz      short loc_9425"], ["mov     eax, [esp+4Ch+table]", "cmp     byte ptr [eax+82h], 0", "jz      loc_96F5"], ["mov     eax, [ebp+128h]", "test    eax, eax", "jz      loc_9706"], ["test    entity_0, entity_0", "jz      loc_976D"], ["cmp     byte ptr [entity_0+20h], 0", "jnz     loc_99D7"], ["mov     eax, [entity_0+4]", "test    eax, eax", "jz      loc_96A0"], ["xor     ecx, ecx", "mov     eax, ebp; parser", "cmp     role, 3Ch ; '<'", "setz    cl; betweenDecl", "call    processInternalEntity", "test    result, result", "jz      loc_7A9F"], ["jmp     loc_7A3D"], ["mov     eax, 11h", "jmp     loc_7A3D"], ["sub     esp, 0Ch", "lea     eax, [eax+50h]; pool", "mov     edx, enc_0; enc", "mov     ecx, [esp+58h+next]", "push    ecx; end", "mov     ecx, [esp+5Ch+s]; ptr", "call    poolStoreString", "add     esp, 10h", "mov     role, eax", "test    eax, eax", "jz      loc_857E"], ["mov     edx, [esp+4Ch+table]", "sub     esp, 0Ch", "add     edx, 84h; table", "mov     ecx, eax; name", "mov     eax, ebp; parser", "push    24h ; '$'; createSize", "call    lookup", "add     esp, 10h", "mov     [ebp+138h], eax", "test    eax, eax", "jz      loc_857E"], ["cmp     [eax], ebx", "mov     edx, [esp+4Ch+table]", "jnz     loc_7A6D"], ["mov     eax, [edx+5Ch]", "mov     [edx+60h], eax", "mov     eax, [ebp+138h]", "mov     dword ptr [eax+18h], 0", "mov     eax, [ebp+138h]", "mov     byte ptr [eax+21h], 1", "xor     eax, eax", "mov     edx, [ebp+1D8h]", "test    edx, edx", "jz      loc_996E"], ["mov     edx, [ebp+138h]", "mov     [edx+22h], al", "mov     eax, [ebp+88h]", "test    eax, eax", "jnz     loc_7A9F"], ["jmp     def_79DC; jumptable 000079DC default case"], ["mov     ebp, [esp+4Ch+var_24]", "mov     edi, [esp+4Ch+var_20]"], ["mov     eax, [esp+4Ch+eventEndPP]", "mov     ecx, [esp+4Ch+s]", "mov     [eax], ecx", "push    ebx", "mov     eax, [esp+50h+model]", "push    eax", "mov     eax, [ebp+154h]", "mov     eax, [eax]", "push    eax", "mov     eax, [ebp+4]", "push    eax", "call    dword ptr [ebp+80h]", "mov     eax, [esp+5Ch+table]", "add     esp, 10h", "mov     byte ptr [eax+0A0h], 0", "mov     dword ptr [eax+0A8h], 0", "jmp     loc_7A9F"], ["mov     [ebp+1A0h], eax", "jmp     loc_7E60"], ["cmp     byte ptr [ebp+1E5h], 0", "jz      loc_8837"], ["jmp     loc_876D"], ["mov     byte ptr [esp+4Ch+name], 1", "jmp     loc_8765"], ["sub     esp, 0Ch", "mov     eax, [ebp+0Ch]", "mov     dword ptr [ebp+1D0h], 20h ; ' '", "push    20h ; ' '", "call    eax", "add     esp, 10h", "mov     [ebp+1CCh], eax", "test    eax, eax", "jnz     loc_8DF6"], ["mov     dword ptr [ebp+1D0h], 0", "mov     eax, 1", "jmp     loc_7A3D"], ["mov     role, [esp+4Ch+table]", "mov     eax, [ebx+0B8h]", "mov     ecx, [ebx+0B4h]", "mov     ecx, [eax+ecx*4-4]", "lea     eax, ds:0[ecx*8]", "sub     eax, ecx", "mov     ecx, [ebx+0A4h]", "lea     eax, [ecx+eax*4]", "cmp     dword ptr [eax], 3", "jz      loc_8287"], ["mov     dword ptr [eax], 5", "mov     eax, [ebp+80h]", "mov     edx, [ebp+1CCh]", "test    eax, eax", "mov     eax, [ebp+100h]", "setz    byte ptr [esp+4Ch+name]", "mov     byte ptr [edx+eax], 7Ch ; '|'", "jmp     loc_84F0"], ["mov     [ebp+1A0h], eax", "jmp     loc_8732"], ["mov     eax, [esp+4Ch+table]", "sub     esp, 0Ch", "push    24h ; '$'; createSize", "lea     edx, [eax+84h]; table", "mov     ecx, [esp+5Ch+var_3C]; name", "mov     eax, ebp; parser", "call    lookup", "add     esp, 10h", "mov     [ebp+138h], eax", "test    eax, eax", "jz      loc_857E"], ["mov     dword ptr [eax+18h], 0", "mov     eax, [esp+4Ch+table]", "cmp     byte ptr [eax+80h], 0", "jz      loc_84F0"], ["mov     eax, [ebp+138h]", "mov     [esp+4Ch+nxt], eax", "test    eax, eax", "jz      loc_84F0"], ["jmp     loc_9098"], ["mov     ecx, [esp+4Ch+table]", "mov     edx, [ecx+78h]", "mov     [ecx+74h], edx"], ["test    result_0, result_0", "jz      def_79DC; jumptable 000079DC default case"], ["jmp     loc_7A3D"], ["mov     eax, [esp+4Ch+table]", "mov     byte ptr [eax+0A0h], 0", "jmp     def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+70h]", "test    eax, eax", "jnz     loc_98CF"], ["mov     ecx, [esp+4Ch+table]", "mov     al, [ecx+82h]", "mov     byte ptr [esp+4Ch+name], al", "mov     [ecx+80h], al", "jmp     def_79DC; jumptable 000079DC default case"], ["mov     ecx, [ebp+140h]", "test    ecx, ecx", "jnz     loc_8830"], ["mov     eax, [esp+4Ch+table]", "mov     [eax+81h], bl", "jmp     loc_8830"], ["cmp     role, 20h ; ' '", "jz      loc_997D"], ["lea     ecx, (enumValueStart_10154 - 2DF78h)[esi]; \"(\"", "jmp     loc_7C33"], ["mov     eax, [esp+4Ch+table]", "cmp     byte ptr [eax+81h], 0", "jnz     loc_9425"], ["test    entity_0, entity_0", "jz      loc_9A85"], ["cmp     byte ptr [entity_0+22h], 0", "jnz     loc_942D"], ["mov     eax, 18h", "jmp     loc_7A3D"], ["mov     eax, [ebp+88h]", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["mov     eax, [esp+4Ch+eventEndPP]", "mov     edx, [esp+4Ch+s]", "sub     esp, 0Ch", "mov     [eax], edx", "mov     eax, [ebp+138h]", "push    dword ptr [eax+1Ch]", "push    dword ptr [eax+18h]", "push    dword ptr [eax+10h]", "push    dword ptr [eax+14h]", "push    0", "push    0", "push    0", "push    dword ptr [eax]", "push    dword ptr [ebp+4]", "call    dword ptr [ebp+88h]", "add     esp, 30h", "jmp     loc_7A9F"], ["mov     entity_0, [esp+4Ch+table]", "cmp     role, 3Ch ; '<'", "mov     al, [edx+82h]", "mov     byte ptr [esp+4Ch+name], al", "mov     [edx+80h], al", "jnz     def_79DC; jumptable 000079DC default case"], ["mov     eax, [ebp+78h]", "test    eax, eax", "jz      def_79DC; jumptable 000079DC default case"], ["push    edx", "push    1", "push    ecx", "push    dword ptr [ebp+4]", "call    eax", "add     esp, 10h", "jmp     loc_7A9F"], ["cmp     byte ptr [eax+1], 4Fh ; 'O'", "jnz     loc_7F49"], ["mov     eax, [ebp+1A8h]", "cmp     eax, [ebp+1A4h]", "jz      loc_99FF"], ["lea     edx, [eax+1]", "mov     [ebp+1A8h], edx", "mov     byte ptr [eax], 29h ; ')'", "mov     eax, [ebp+1A8h]", "cmp     eax, [ebp+1A4h]", "jz      loc_99E1"], ["lea     edx, [eax+1]", "mov     [ebp+1A8h], edx", "mov     byte ptr [eax], 0", "mov     eax, [ebp+1ACh]", "mov     [ebp+148h], eax", "mov     eax, [ebp+1A8h]", "mov     [ebp+1ACh], eax", "jmp     loc_7F49"], ["cmp     byte ptr [eax+1], 4Fh ; 'O'", "jnz     loc_7DF2"], ["mov     eax, [ebp+1A8h]", "cmp     eax, [ebp+1A4h]", "jz      loc_9A46"], ["lea     edx, [eax+1]", "mov     [ebp+1A8h], edx", "mov     byte ptr [eax], 29h ; ')'", "mov     eax, [ebp+1A8h]", "cmp     eax, [ebp+1A4h]", "jz      loc_9A28"], ["lea     edx, [eax+1]; entity", "mov     [ebp+1A8h], edx", "mov     byte ptr [eax], 0", "mov     eax, [ebp+1ACh]", "mov     [ebp+148h], eax", "mov     eax, [ebp+1A8h]", "mov     [ebp+1ACh], eax", "jmp     loc_7DF2"], ["mov     eax, [esp+4Ch+table]", "mov     [eax+81h], bl", "jmp     loc_9010"], ["mov     eax, 20h ; ' '", "jmp     loc_7A3D"], ["mov     ebx, ebp", "mov     ebp, [ebp+1D8h]", "test    ebp, ebp", "jnz     short loc_9885"], ["sub     esp, 0Ch", "lea     ecx, (aClose_0 - 2DF78h)[esi]; \"CLOSE\"", "mov     eax, ebx; rootParser", "push    1491h; sourceLine", "mov     [esp+5Ch+s], edx", "call    entityTrackingReportStats", "mov     edx, [esp+5Ch+s]", "dec     dword ptr [ebx+214h]", "add     esp, 10h", "mov     byte ptr [edx+20h], 0"], ["mov     eax, 15h", "jmp     loc_7A3D"], ["mov     eax, 2", "jmp     loc_7A3D"], ["mov     eax, [esp+4Ch+table]", "mov     ecx, 148Dh; sourceLine", "mov     [esp+4Ch+s], entity_0", "mov     byte ptr [eax+83h], 0", "mov     byte ptr [entity_0+20h], 1", "mov     eax, ebp; originParser", "call    entityTrackingOnOpen", "sub     esp, 0Ch", "mov     edx, [esp+58h+s]", "push    dword ptr [edx+18h]", "push    dword ptr [edx+10h]", "push    dword ptr [edx+14h]", "mov     [esp+64h+s], edx", "push    0", "push    dword ptr [ebp+74h]", "call    dword ptr [ebp+70h]", "add     esp, 20h", "test    eax, eax", "mov     edx, [esp+4Ch+s]; entity", "jz      loc_9885"], ["mov     eax, ebp"], ["mov     ebx, eax", "mov     eax, [eax+1D8h]", "test    eax, eax", "jnz     short loc_9919"], ["sub     esp, 0Ch", "mov     eax, ebx; rootParser", "push    1495h; sourceLine", "mov     ecx, [esp+5Ch+action]; action", "mov     [esp+5Ch+s], edx", "call    entityTrackingReportStats", "mov     edx, [esp+5Ch+s]", "add     esp, 10h", "dec     dword ptr [ebx+214h]", "mov     byte ptr [edx+20h], 0", "mov     edx, [esp+4Ch+table]", "cmp     byte ptr [edx+83h], 0", "jnz     short loc_9992"], ["mov     al, [edx+82h]", "mov     byte ptr [esp+4Ch+s], al", "mov     [edx+80h], al", "jmp     loc_7A9F"], ["cmp     dword ptr [ebp+128h], 0", "setz    al", "jmp     loc_94EF"], ["lea     ecx, (notationPrefix_10152 - 2DF78h)[esi]; \"NOTATION(\"", "jmp     loc_7C33"], ["mov     eax, 4", "jmp     loc_7A3D"], ["mov     eax, [esp+4Ch+table]", "cmp     byte ptr [eax+82h], 0", "jnz     loc_7A9F"], ["mov     eax, [ebp+6Ch]", "test    eax, eax", "jz      loc_7A9F"], ["sub     esp, 0Ch", "push    dword ptr [ebp+4]", "call    eax", "add     esp, 10h", "test    eax, eax", "jnz     loc_7A9F"], ["jmp     loc_7CD8"], ["xor     ebx, ebx", "cmp     dword ptr [ebp+128h], 0", "setz    bl", "jmp     loc_86A7"], ["mov     eax, 0Ch", "jmp     loc_7A3D"], ["lea     eax, [ebp+19Ch]; pool", "call    poolGrow", "test    al, al", "jz      loc_857E"], ["mov     eax, [ebp+1A8h]", "jmp     loc_97E0"], ["lea     eax, [ebp+19Ch]; pool", "call    poolGrow", "test    al, al", "jz      loc_857E"], ["mov     eax, [ebp+1A8h]", "jmp     loc_97C2"], ["shr     dword ptr [ebp+1D0h], 1", "jmp     loc_857E"], ["lea     eax, [ebp+19Ch]; pool", "call    poolGrow", "test    al, al", "jz      loc_857E"], ["mov     eax, [ebp+1A8h]", "jmp     loc_9843"], ["lea     eax, [ebp+19Ch]; pool", "call    poolGrow", "test    al, al", "jz      loc_857E"], ["mov     eax, [ebp+1A8h]", "jmp     loc_9825"], ["lea     myindex, (__PRETTY_FUNCTION___10237 - 2DF78h)[esi]; \"doProlog\"", "mov     ebx, esi", "push    eax; function", "lea     eax, (aGitExpatLibXml - 2DF78h)[esi]; \"../../git/expat/lib/xmlparse.c\"", "push    1428h; line", "push    eax; file", "lea     eax, (aDtdScaffindexN - 2DF78h)[esi]; \"dtd->scaffIndex != NULL\"", "push    eax; assertion", "call    ___assert_fail"], ["mov     eax, 0Bh", "jmp     loc_7A3D"]], "processInternalEntity": [["push    ebp", "mov     ebp, betweenDecl", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "mov     ebx, parser", "sub     esp, 2Ch", "mov     esi, [ebx+12Ch]", "mov     [esp+3Ch+var_30], edi", "mov     edi, entity", "mov     parser, large gs:14h", "mov     [esp+3Ch+var_20], parser", "xor     parser, parser", "test    esi, esi", "jz      loc_9D58"], ["mov     eax, [openEntity+8]", "mov     [parser+12Ch], eax"], ["mov     edx, entity; entity", "mov     eax, parser; originParser", "mov     byte ptr [entity+20h], 1", "mov     ecx, 15B2h; sourceLine", "call    entityTrackingOnOpen", "mov     dword ptr [entity+0Ch], 0", "mov     eax, [parser+128h]", "mov     [openEntity+8], eax", "mov     [parser+128h], openEntity", "mov     [openEntity+0Ch], entity", "mov     eax, [parser+134h]", "mov     dword ptr [openEntity], 0", "mov     [openEntity+10h], eax", "mov     eax, ebp", "mov     [openEntity+14h], al", "mov     dword ptr [openEntity+4], 0", "mov     ebp, [entity+4]", "mov     edx, [entity+8]", "add     edx, textStart", "mov     [esp+3Ch+next], textStart", "cmp     byte ptr [entity+21h], 0", "mov     [esp+3Ch+textEnd], edx", "jz      loc_9D20"], ["lea     ecx, [esp+3Ch+next]", "mov     eax, [parser+0E0h]", "push    ecx", "mov     [esp+40h+textEnd], textEnd_0", "mov     [esp+40h+result], ecx", "push    textEnd_0", "push    textStart", "push    eax", "call    dword ptr [eax]", "add     esp, 0Ch", "mov     edx, [parser+0E0h]; enc", "push    1; account", "push    0; allowClosingDoctype", "push    0; haveMore", "mov     ecx, [esp+4Ch+result]", "push    ecx; nextPtr", "mov     ecx, [esp+50h+next]", "push    ecx; next", "mov     ecx, textStart; s", "push    tok_0; tok", "mov     tok_0, [esp+58h+textEnd]", "push    eax; end", "mov     eax, parser; parser", "call    doProlog", "mov     [esp+5Ch+result], eax", "add     esp, 20h"], ["mov     ecx, [esp+3Ch+result]", "test    ecx, ecx", "jnz     short loc_9D01"], ["mov     eax, [esp+3Ch+next]", "mov     edx, parser", "cmp     eax, [esp+3Ch+textEnd]", "jz      short loc_9CA8"], ["cmp     dword ptr [ebx+1DCh], 3", "jz      loc_9D78"], ["nop"], ["mov     eax, edx; rootParser", "mov     edx, [edx+1D8h]", "test    edx, edx", "jnz     short loc_9CA8"], ["sub     esp, 0Ch", "mov     edx, entity; entity", "push    15D4h; sourceLine", "mov     ecx, [esp+4Ch+var_30]", "mov     [esp+4Ch+textEnd], eax", "lea     ecx, [ecx-0E185h]; action", "call    entityTrackingReportStats", "mov     eax, [esp+4Ch+textEnd]", "mov     edx, [eax+214h]", "add     esp, 10h", "dec     edx", "mov     [eax+214h], edx", "mov     byte ptr [entity+20h], 0", "mov     eax, [openEntity+8]", "mov     [parser+128h], eax", "mov     eax, [parser+12Ch]", "mov     [openEntity+8], eax", "mov     [parser+12Ch], openEntity"], ["mov     eax, [esp+3Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_9D92"], ["mov     eax, [esp+3Ch+result]", "add     esp, 2Ch", "pop     parser", "pop     openEntity", "pop     entity", "pop     ebp", "retn"], ["sub     esp, 0Ch", "mov     ecx, [parser+0E0h]; enc", "mov     textEnd_0, [parser+134h]; startTagLevel", "push    1; account", "push    0; haveMore", "lea     eax, [esp+50h+next]", "push    eax; nextPtr", "mov     eax, [esp+54h+textEnd]", "push    eax; end", "mov     eax, parser; parser", "push    textStart; s", "call    doContent", "mov     [esp+5Ch+result], eax", "add     esp, 20h", "jmp     loc_9C86"], ["sub     esp, 0Ch", "push    18h", "call    dword ptr [parser+0Ch]", "add     esp, 10h", "mov     esi, eax", "test    openEntity, openEntity", "jnz     loc_9BDF"], ["mov     [esp+3Ch+result], 1", "jmp     short loc_9D01"], ["sub     eax, textStart", "mov     [entity+0Ch], eax", "mov     eax, [esp+3Ch+var_30]", "lea     eax, [eax-22AE8h]", "mov     [ebx+114h], eax", "jmp     loc_9D01"], ["call    __stack_chk_fail_local"]], "doContent": [["push    ebp", "mov     ebp, parser", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "sub     esp, 8Ch", "mov     parser, [esp+9Ch+end]", "mov     [esp+9Ch+var_94], edi", "mov     [esp+9Ch+before], eax", "mov     eax, [esp+9Ch+nextPtr]", "mov     [esp+9Ch+var_7C], eax", "mov     eax, [esp+9Ch+haveMore]", "mov     esi, eax", "mov     [esp+9Ch+var_78], eax", "mov     eax, [esp+9Ch+s]", "mov     [esp+9Ch+startTagLevel], startTagLevel_0", "mov     [esp+9Ch+attStr], eax", "mov     eax, esi", "mov     [esp+9Ch+var_7D], al", "mov     edi, enc", "mov     eax, large gs:14h", "mov     [esp+9Ch+var_20], eax", "xor     eax, eax", "mov     eax, [parser+160h]", "cmp     [parser+90h], enc", "mov     [esp+9Ch+table], eax", "jz      loc_9F28"], ["mov     dtd_0, [parser+128h]", "mov     [esp+9Ch+var_90], eax", "add     eventPP_0, 4", "mov     [esp+9Ch+eventEndPP], eax"], ["mov     enc, [esp+9Ch+var_90]", "mov     eax, [esp+9Ch+attStr]", "mov     [ecx], eax", "lea     eax, [esp+9Ch+next]", "mov     [esp+9Ch+startPtr], eax", "mov     eax, [esp+9Ch+var_94]", "lea     eax, [eax-288C8h]", "mov     [esp+9Ch+var_6C], eax"], ["mov     eax, [esp+9Ch+attStr]", "mov     edx, [esp+9Ch+startPtr]", "mov     [esp+9Ch+next], eax", "push    edx", "mov     esi, [esp+0A0h+before]", "push    esi", "push    eax", "push    edi", "call    dword ptr [edi+4]", "add     esp, 10h", "lea     ebx, [tok+5]", "test    ebx, 0FFFFFFFDh", "jnz     short loc_9ED0"], ["mov     edx, [esp+9Ch+attStr]", "cmp     [esp+9Ch+var_7D], 0", "mov     ecx, edx", "jz      loc_9F20"], ["cmp     tok, 0FFFFFFFCh", "jz      short loc_9EDD"], ["jl      short loc_9E8D"], ["add     tok, 2", "cmp     eax, 2", "jbe     short loc_9EAE"], ["push    esi; after", "push    esi; before", "mov     eax, [esp+0A4h+account]", "push    eax; tok", "mov     eax, ebp", "push    offset stru_A9C.st_value; originParser", "call    accountingDiffTolerated", "add     esp, 10h", "test    al, al", "jz      loc_A9E8"], ["mov     ecx, [esp+9Ch+eventEndPP]", "mov     eax, [esp+9Ch+next]", "cmp     ebx, 12h; switch 19 cases", "mov     [ecx], eax", "ja      _L2155; jumptable 00009ECE default case, case 1"], ["mov     esi, [esp+9Ch+var_94]", "mov     edx, ds:(jpt_9ECE - 2DF78h)[esi+ebx*4]", "add     edx, esi", "jmp     edx; switch jump"], ["mov     ecx, [esp+9Ch+next]", "mov     edx, [esp+9Ch+attStr]", "cmp     tok, 0FFFFFFFCh", "jnz     short loc_9E83"], ["mov     edi, [esp+9Ch+eventEndPP]", "mov     tok, [esp+9Ch+next]", "cmp     byte ptr [esp+9Ch+var_78], 0", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], eax", "jnz     short loc_9F08"], ["mov     eax, [esp+9Ch+startTagLevel]", "test    eax, eax", "jle     loc_A892"], ["cmp     [ebp+134h], eax", "jnz     loc_A5FE"], ["xchg    ax, ax"], ["mov     edi, [esp+9Ch+var_7C]", "mov     eax, [esp+9Ch+attStr]", "xor     ebx, ebx", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], eax", "jmp     loc_A3BE"], ["mov     ecx, esi", "jmp     loc_9E7E"], ["lea     dtd_0, [parser+11Ch]", "mov     [esp+9Ch+var_90], eax", "lea     eventPP_0, [parser+120h]", "mov     [esp+9Ch+eventEndPP], eax", "jmp     loc_9E28"], ["mov     eax, [esp+9Ch+attStr]; jumptable 00009ECE cases 8,9", "mov     ecx, [edi+40h]", "add     ecx, eax", "mov     [esp+9Ch+bindings], 0", "mov     edx, rawName_0", "mov     eax, edi", "mov     [esp+9Ch+rawName], rawName_0", "call    dword ptr [edi+1Ch]", "sub     esp, 0Ch", "mov     edx, eax", "lea     eax, [ebp+19Ch]; pool", "mov     ecx, [esp+0A8h+rawName]; ptr", "add     edx, ecx", "push    edx; end", "mov     edx, edi; enc", "call    poolStoreString", "mov     [esp+0ACh+dataPtr], eax", "add     esp, 10h", "test    eax, eax", "jz      loc_A628"], ["mov     eax, [ebp+1A8h]", "mov     edx, edi; enc", "mov     [ebp+1ACh], eax", "push    eax", "push    2; account", "lea     eax, [esp+0A4h+bindings]", "push    eax; bindingsPtr", "lea     eax, [esp+0A8h+dataPtr]", "push    eax; tagNamePtr", "mov     eax, ebp; parser", "mov     ecx, [esp+0ACh+attStr]; attStr", "call    storeAtts", "add     esp, 10h", "test    result, result", "jnz     loc_AE86"], ["mov     result, [ebp+1A8h]", "mov     [ebp+1ACh], eax", "mov     eax, [ebp+34h]", "test    eax, eax", "jz      loc_A828"], ["push    edx", "mov     ecx, [ebp+184h]", "push    ecx", "mov     ebx, [esp+0A4h+dataPtr]", "push    ebx", "mov     esi, [ebp+4]", "push    esi", "call    eax", "mov     eax, [ebp+38h]", "add     esp, 10h", "test    eax, eax", "jz      short loc_A017"], ["mov     esi, [ebp+34h]", "test    esi, esi", "jz      short loc_A007"], ["mov     eax, [esp+9Ch+eventEndPP]", "mov     esi, [esp+9Ch+var_90]", "mov     eax, [eax]", "mov     [esi], eax", "mov     eax, [ebp+38h]"], ["push    edx", "push    edx", "mov     ecx, [esp+0A4h+dataPtr]", "push    ecx", "mov     ebx, [ebp+4]", "push    ebx", "call    eax", "add     esp, 10h"], ["mov     ecx, [ebp+1A0h]", "mov     eax, [ebp+19Ch]", "test    ecx, ecx", "jz      loc_A8A0"], ["test    eax, eax", "jnz     short loc_A03A"], ["jmp     short loc_A04A"], ["mov     eax, edx"], ["mov     edx, [eax]", "mov     [eax], ecx", "test    edx, edx", "mov     [ebp+1A0h], eax", "mov     ecx, eax", "jnz     short loc_A038"], ["mov     dword ptr [ebp+19Ch], 0", "mov     dword ptr [ebp+1ACh], 0", "mov     dword ptr [ebp+1A8h], 0", "mov     dword ptr [ebp+1A4h], 0", "mov     edx, [esp+9Ch+bindings]; bindings", "mov     eax, ebp; parser", "call    freeBindings", "mov     ebx, [ebp+134h]", "test    ebx, ebx", "jnz     loc_A38C"], ["mov     eax, [ebp+1DCh]", "mov     edx, [esp+9Ch+next]", "cmp     eax, 2", "jnz     loc_A359"], ["jmp     loc_A390"], ["mov     esi, [ebp+16Ch]; jumptable 00009ECE cases 6,7", "test    esi, esi", "jz      loc_A7F0"], ["mov     eax, [tag]", "mov     [ebp+16Ch], eax"], ["mov     dword ptr [tag+2Ch], 0", "mov     eax, [ebp+168h]", "mov     [tag], eax", "mov     [ebp+168h], tag", "mov     dword ptr [tag+10h], 0", "mov     dword ptr [tag+14h], 0", "mov     edx, [edi+40h]", "mov     ecx, [esp+9Ch+attStr]", "add     edx, ecx", "mov     eax, edi", "mov     [tag+4], edx", "call    dword ptr [edi+1Ch]", "mov     [esp+9Ch+var_5C], ebp", "mov     [tag+8], eax", "mov     ebx, [ebp+134h]", "inc     ebx", "mov     [ebp+134h], ebx", "mov     ebp, tag", "mov     eax, [tag+4]", "mov     ecx, [tag+8]", "mov     [esp+9Ch+dataPtr], eax", "add     ecx, eax", "mov     eax, [tag+24h]", "mov     [esp+9Ch+bindings], eax", "lea     eax, [esp+9Ch+dataPtr]", "mov     [esp+9Ch+entity], eax", "lea     eax, [esp+9Ch+bindings]", "mov     ebx, [tag+28h]", "mov     [esp+9Ch+pool], eax", "mov     tag, rawNameEnd", "jmp     short loc_A16A"], ["dec     convert_res", "jz      short loc_A196"], ["mov     ebx, [tag+28h]", "push    eax", "sub     ebx, ecx", "push    eax", "add     ebx, ebx", "push    bufSize", "push    ecx", "mov     eax, [esp+0ACh+var_5C]", "call    dword ptr [eax+10h]", "add     esp, 10h", "test    temp_0, temp_0", "jz      loc_A628"], ["mov     edx, [esp+9Ch+rawName]", "mov     [tag+24h], temp_0", "add     bufSize, temp_0", "add     temp_0, edx", "mov     [tag+28h], ebx", "mov     [esp+9Ch+bindings], eax"], ["sub     esp, 0Ch", "dec     ebx", "push    ebx", "mov     eax, [esp+0ACh+pool]", "push    eax", "push    rawNameEnd", "mov     eax, [esp+0B4h+entity]", "push    eax", "push    edi", "call    dword ptr [edi+38h]", "mov     ebx, [esp+0BCh+bindings]", "mov     ecx, [tag+24h]", "mov     edx, ebx", "sub     edx, ecx", "mov     [esp+0BCh+rawName], edx", "add     esp, 20h", "cmp     [esp+9Ch+dataPtr], rawNameEnd", "jb      short loc_A138"], ["mov     rawNameEnd, tag", "mov     eax, [esp+9Ch+rawName]", "mov     tag, [esp+9Ch+var_5C]", "mov     convLen_0, edi; enc", "mov     [tag+18h], eax", "mov     [tag+0Ch], ecx", "mov     byte ptr [ebx], 0", "push    eax", "mov     eax, [esp+0A0h+account]", "push    eax; account", "lea     eax, [tag+2Ch]", "push    eax; bindingsPtr", "lea     eax, [tag+0Ch]", "push    eax; tagNamePtr", "mov     eax, ebp; parser", "mov     ecx, [esp+0ACh+attStr]; attStr", "call    storeAtts", "add     esp, 10h", "test    result, result", "jnz     loc_AB27"], ["mov     result, [ebp+34h]", "test    eax, eax", "jz      loc_A928"], ["push    edx", "mov     ecx, [ebp+184h]", "push    ecx", "mov     ebx, [tag+0Ch]", "push    ebx", "mov     tag, [ebp+4]", "push    esi", "call    eax", "add     esp, 10h"], ["mov     ecx, [ebp+1A0h]", "mov     eax, [ebp+19Ch]", "test    ecx, ecx", "jz      loc_A918"], ["test    eax, eax", "jnz     short loc_A212"], ["jmp     short loc_A222"], ["mov     eax, edx"], ["mov     edx, [eax]", "mov     [eax], ecx", "test    edx, edx", "mov     [ebp+1A0h], eax", "mov     ecx, eax", "jnz     short loc_A210"], ["mov     dword ptr [ebp+19Ch], 0", "mov     dword ptr [ebp+1ACh], 0", "mov     dword ptr [ebp+1A8h], 0", "mov     dword ptr [ebp+1A4h], 0", "mov     edx, [esp+9Ch+next]", "jmp     loc_A390"], ["mov     eax, [esp+9Ch+startTagLevel]; jumptable 00009ECE case 10", "cmp     [ebp+134h], eax", "jz      loc_A5FE"], ["mov     esi, [ebp+168h]", "mov     eax, [tag]", "mov     [ebp+168h], eax", "mov     eax, [ebp+16Ch]", "mov     [tag], eax", "mov     [ebp+16Ch], tag", "mov     edx, [edi+40h]", "mov     eax, [esp+9Ch+attStr]", "lea     ebx, [eax+edx*2]", "mov     eax, edi", "mov     edx, ebx", "mov     [esp+9Ch+rawName], ebx", "call    dword ptr [edi+1Ch]", "cmp     [tag+8], len", "jnz     loc_AD80"], ["push    edx", "push    len; n", "push    rawName_1; s2", "mov     ecx, [tag+4]", "push    ecx; s1", "mov     rawName_1, [esp+0ACh+var_94]", "call    _memcmp", "add     esp, 10h", "test    eax, eax", "jnz     loc_AD80"], ["mov     ebx, [ebp+134h]", "mov     ecx, [ebp+38h]", "dec     ebx", "test    ecx, ecx", "mov     [ebp+134h], ebx", "jz      loc_A860"], ["cmp     byte ptr [ebp+0E8h], 0", "mov     edx, [tag+10h]", "mov     eax, [tag+0Ch]", "jz      short loc_A2EC"], ["test    localPart, localPart", "jnz     loc_AA12"], ["push    edx", "push    edx", "push    eax", "mov     ebx, [ebp+4]", "push    ebx", "call    ecx", "add     esp, 10h", "jmp     short loc_A337"], ["mov     edx, [ebp+68h]", "test    edx, edx", "jz      short loc_A31A"], ["push    ecx", "push    ecx", "mov     b, [b]", "mov     eax, [eax]", "push    eax", "mov     eax, [ebp+4]", "push    eax", "call    edx", "add     esp, 10h", "mov     eax, [tag+2Ch]"], ["mov     eax, [eax+4]", "mov     [tag+2Ch], eax", "mov     eax, [ebp+174h]", "mov     [b+4], eax", "mov     [ebp+174h], b", "mov     eax, [b]", "mov     edx, [b+8]", "mov     [eax+4], edx"], ["mov     eax, [tag+2Ch]", "mov     ebx, eax", "test    eax, eax", "jnz     short loc_A300"], ["mov     eax, [ebp+134h]", "mov     edx, [esp+9Ch+next]", "test    eax, eax", "jnz     short loc_A390"], ["mov     eax, [ebp+1DCh]", "cmp     eax, 2", "jz      short loc_A390"], ["cmp     eax, 3", "jnz     loc_AEBB"], ["mov     eax, [esp+9Ch+var_6C]", "mov     [ebp+114h], eax", "jmp     short loc_A390"], ["sub     esp, 0Ch; jumptable 00009ECE case 16", "mov     edx, edi; enc", "push    eax; end", "mov     eax, ebp; parser", "mov     ecx, [esp+0ACh+attStr]; start", "call    reportProcessingInstruction", "add     esp, 10h", "test    eax, eax", "jz      loc_A628"], ["mov     edx, [esp+9Ch+next]"], ["mov     eax, [esp+9Ch+var_90]", "mov     [esp+9Ch+attStr], edx", "mov     [eax], edx", "mov     eax, [ebp+1DCh]", "cmp     eax, 2", "jz      loc_A6E8"], ["cmp     eax, 3", "jnz     loc_9E48"], ["mov     edi, [esp+9Ch+var_7C]", "mov     eax, [esp+9Ch+next]", "xor     ebx, ebx", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], eax"], ["mov     eax, [esp+9Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_AF1A"], ["add     esp, 8Ch", "mov     eax, ebx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edi, [esp+9Ch+var_90]; jumptable 00009ECE case 5", "mov     ebx, 4", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], eax", "jmp     short loc_A3BE"], ["mov     edx, [ebp+3Ch]; jumptable 00009ECE case 12", "test    edx, edx", "jz      _L2155; jumptable 00009ECE default case, case 1"], ["mov     byte ptr [esp+9Ch+dataPtr], 0Ah", "push    esi", "push    1", "lea     eax, [esp+0A4h+dataPtr]", "push    eax", "mov     eax, [ebp+4]", "push    eax", "call    edx", "mov     edx, [esp+0ACh+next]", "add     esp, 10h", "jmp     loc_A390"], ["mov     edx, [ebp+48h]; jumptable 00009ECE case 13", "test    edx, edx", "jz      loc_A7C8"], ["sub     esp, 0Ch", "mov     ebx, [ebp+4]", "push    ebx", "call    edx", "add     esp, 10h"], ["mov     eax, [esp+9Ch+account]", "push    eax; account", "xor     eax, eax", "mov     al, [esp+0A0h+var_7D]", "push    eax; haveMore", "mov     eax, [esp+0A4h+var_7C]", "push    eax; nextPtr", "mov     eax, ebp; parser", "mov     edx, [esp+0A8h+before]", "push    edx; end", "mov     edx, edi; enc", "mov     ecx, [esp+0ACh+startPtr]; startPtr", "call    doCdataSection", "add     esp, 10h", "test    result, result", "jnz     loc_AB27"], ["mov     edx, [esp+9Ch+next]", "test    edx, edx", "jnz     loc_A390"], ["mov     ebx, result", "mov     result, [esp+9Ch+var_94]", "lea     eax, [eax-22F38h]", "mov     [ebp+114h], eax", "jmp     loc_A3BE"], ["mov     edx, [edi+40h]; jumptable 00009ECE case 14", "push    esi", "sub     eax, edx", "push    eax", "mov     eax, [esp+0A4h+attStr]", "add     edx, eax", "push    edx", "push    edi", "call    dword ptr [edi+2Ch]", "mov     byte ptr [esp+0ACh+dataPtr], al", "add     esp, 10h", "test    al, al", "jz      loc_A6F8"], ["lea     esi, [esp+9Ch+dataPtr]", "lea     ecx, [esp+9Ch+dataPtr+1]", "push    ebx; after", "mov     edx, esi", "push    ebx; before", "mov     eax, ebp", "push    1; tok", "push    (offset aGmonStart+5); originParser", "call    accountingDiffTolerated", "mov     eax, [ebp+3Ch]", "add     esp, 10h", "test    eax, eax", "jz      loc_A6A8"], ["push    edx", "push    1", "push    esi", "mov     ecx, [ebp+4]", "push    ecx", "call    eax", "mov     edx, [esp+0ACh+next]", "add     esp, 10h", "jmp     loc_A390"], ["mov     edx, [esp+9Ch+attStr]; jumptable 00009ECE case 15", "mov     eax, edi", "call    dword ptr [edi+28h]", "test    n, n", "js      loc_AE60"], ["mov     esi, [ebp+3Ch]", "test    esi, esi", "jz      loc_A6A8"], ["lea     edx, [esp+9Ch+buf]; buf", "mov     ebx, [esp+9Ch+var_94]", "mov     [esp+9Ch+rawName], edx", "call    XmlUtf8Encode", "push    edx", "push    eax", "mov     edx, [esp+0A4h+rawName]", "jmp     loc_A669"], ["cmp     byte ptr [esp+9Ch+var_78], 0; jumptable 00009ECE case 0", "jnz     loc_9F08"], ["mov     eax, [ebp+3Ch]", "test    eax, eax", "jz      loc_A950"], ["cmp     byte ptr [edi+44h], 0", "jnz     loc_A8D0"], ["mov     eax, [ebp+2Ch]", "sub     esp, 0Ch", "mov     [esp+0A8h+dataPtr], eax", "mov     eax, [ebp+30h]", "push    eax", "lea     eax, [esp+0ACh+dataPtr]", "push    eax", "mov     eax, [esp+0B0h+before]", "push    eax", "lea     eax, [esp+0B4h+attStr]", "push    eax", "push    edi", "call    dword ptr [edi+38h]", "add     esp, 1Ch", "mov     edx, [ebp+2Ch]", "mov     eax, [esp+0A0h+dataPtr]", "sub     eax, edx", "push    eax", "push    edx", "mov     eax, [ebp+4]", "push    eax", "call    dword ptr [ebp+3Ch]", "add     esp, 10h"], ["mov     eax, [esp+9Ch+startTagLevel]", "test    eax, eax", "jz      loc_A888"], ["mov     eax, [esp+9Ch+startTagLevel]", "cmp     [ebp+134h], eax", "jnz     loc_AA03"], ["mov     eax, [esp+9Ch+var_7C]", "mov     edi, [esp+9Ch+before]", "xor     ebx, ebx", "mov     [eax], edi", "jmp     loc_A3BE"], ["cmp     byte ptr [esp+9Ch+var_78], 0; jumptable 00009ECE case 2", "jnz     loc_9F08"], ["mov     eax, [esp+9Ch+eventEndPP]", "mov     esi, [esp+9Ch+before]", "mov     [eax], esi", "mov     eax, [ebp+3Ch]", "test    eax, eax", "jz      loc_A8F0"], ["mov     byte ptr [esp+9Ch+dataPtr], 0Ah", "push    edx", "push    1", "lea     edx, [esp+0A4h+dataPtr]", "push    edx", "mov     ecx, [ebp+4]", "push    ecx", "call    eax", "add     esp, 10h"], ["mov     eax, [esp+9Ch+startTagLevel]", "test    eax, eax", "jz      loc_A892"], ["mov     eax, [esp+9Ch+startTagLevel]", "cmp     [ebp+134h], eax", "jz      short loc_A59D"], ["mov     ebx, 0Dh", "jmp     loc_A3BE"], ["sub     esp, 0Ch; jumptable 00009ECE case 18", "mov     edx, edi; enc", "push    eax; end", "mov     eax, ebp; parser", "mov     ecx, [esp+0ACh+attStr]; start", "call    reportComment", "add     esp, 10h", "test    eax, eax", "jnz     loc_A38C"], ["lea     esi, [esi+0]"], ["mov     ebx, 1", "jmp     loc_A3BE"], ["cmp     byte ptr [esp+9Ch+var_78], 0; jumptable 00009ECE case 4", "mov     ebx, 5", "jz      loc_A3BE"], ["jmp     loc_9F08"], ["mov     esi, [ebp+3Ch]; jumptable 00009ECE case 11", "test    charDataHandler, charDataHandler", "jz      short _L2155; jumptable 00009ECE default case, case 1"], ["cmp     byte ptr [edi+44h], 0", "jz      loc_A978"], ["mov     edx, [esp+9Ch+attStr]", "push    ecx", "sub     eax, edx", "push    eax"], ["push    edx", "mov     eax, [ebp+4]", "push    eax", "call    esi", "mov     edx, [esp+0ACh+next]", "add     esp, 10h", "jmp     loc_A390"], ["cmp     byte ptr [esp+9Ch+var_78], 0; jumptable 00009ECE case 3", "mov     ebx, 6", "jz      loc_A3BE"], ["jmp     loc_9F08"], ["mov     ebx, 11h; jumptable 00009ECE case 17", "jmp     loc_A3BE"], ["mov     eax, [ebp+50h]", "mov     edx, [esp+9Ch+next]", "test    eax, eax", "jz      loc_A390"], ["sub     esp, 0Ch", "push    edx", "jmp     short loc_A6CF"], ["mov     esi, [ebp+50h]; jumptable 00009ECE default case, case 1", "test    esi, esi", "jz      loc_A38C"], ["sub     esp, 0Ch", "push    eax; end"], ["mov     ecx, [esp+0ACh+attStr]; s", "mov     edx, edi; enc", "mov     eax, ebp; parser", "call    reportDefault", "mov     edx, [esp+0ACh+next]", "add     esp, 10h", "jmp     loc_A390"], ["mov     ebx, 23h ; '#'", "jmp     loc_A3BE"], ["mov     ecx, [esp+9Ch+attStr]", "mov     esi, [esp+9Ch+table]", "sub     esp, 0Ch", "mov     edx, [edi+40h]", "add     ecx, edx; ptr", "lea     eax, [esi+50h]; pool", "mov     ebx, [esp+0A8h+next]", "sub     ebx, edx", "mov     edx, edi; enc", "push    ebx; end", "call    poolStoreString", "add     esp, 10h", "mov     ebx, eax", "test    name, name", "jz      loc_A628"], ["sub     esp, 0Ch", "mov     ecx, name; name", "mov     edx, esi; table", "mov     name, ebp; parser", "push    0; createSize", "call    lookup", "mov     [esp+0ACh+entity], eax", "mov     entity_0, [esi+60h]", "add     esp, 10h", "mov     [esi+5Ch], eax", "cmp     byte ptr [esi+81h], 0", "jz      loc_A8B0"], ["cmp     byte ptr [esi+82h], 0", "jnz     loc_A8B0"], ["mov     esi, [esp+9Ch+entity]", "test    esi, esi", "jz      loc_AE3F"], ["lea     esi, [esi+0]"], ["mov     esi, [esp+9Ch+entity]", "mov     cl, [esi+20h]", "test    cl, cl", "jnz     loc_AEF2"], ["mov     eax, [esi+1Ch]", "test    eax, eax", "jnz     loc_AEE8"], ["mov     eax, [esi+4]", "test    eax, eax", "jz      loc_AA4C"], ["cmp     byte ptr [ebp+130h], 0", "jnz     loc_AB12"], ["mov     eax, [ebp+78h]", "test    eax, eax", "jz      loc_A6A8"], ["push    edx", "push    0", "mov     ecx, [esi]", "push    ecx", "mov     name, [ebp+4]", "push    ebx", "call    eax", "mov     edx, [esp+0ACh+next]", "add     esp, 10h", "jmp     loc_A390"], ["mov     ecx, [ebp+50h]", "test    ecx, ecx", "jz      loc_A437"], ["sub     esp, 0Ch", "mov     edx, edi; enc", "push    eax; end", "mov     eax, ebp; parser", "mov     ecx, [esp+0ACh+attStr]; s", "call    reportDefault", "add     esp, 10h", "jmp     loc_A437"], ["sub     esp, 0Ch", "push    30h ; '0'", "call    dword ptr [ebp+0Ch]", "add     esp, 10h", "mov     esi, eax", "test    tag, tag", "jz      loc_A628"], ["sub     esp, 0Ch", "push    20h ; ' '", "call    dword ptr [ebp+0Ch]", "add     esp, 10h", "mov     [tag+24h], eax", "test    eax, eax", "jz      loc_AED4"], ["add     eax, 20h ; ' '", "mov     [tag+28h], eax", "jmp     loc_A0BE"], ["mov     eax, [ebp+38h]", "test    eax, eax", "jnz     loc_A007"], ["mov     eax, [ebp+50h]", "test    eax, eax", "jz      loc_A017"], ["sub     esp, 0Ch", "mov     edx, edi; enc", "mov     eax, ebp; parser", "mov     esi, [esp+0A8h+next]", "push    esi; end", "mov     ecx, [esp+0ACh+attStr]; s", "call    reportDefault", "add     esp, 10h", "jmp     loc_A017"], ["mov     eax, [ebp+50h]", "test    eax, eax", "jz      loc_A337"], ["sub     esp, 0Ch", "mov     edx, edi; enc", "mov     eax, [esp+0A8h+next]", "push    eax; end", "mov     eax, ebp; parser", "mov     ecx, [esp+0ACh+attStr]; s", "call    reportDefault", "add     esp, 10h", "jmp     loc_A337"], ["mov     eax, [esp+9Ch+var_90]", "mov     edi, [esp+9Ch+before]", "mov     [eax], edi"], ["mov     ebx, 3", "jmp     loc_A3BE"], ["mov     [ebp+1A0h], eax", "jmp     loc_A04A"], ["mov     eax, [esp+9Ch+entity]", "test    eax, eax", "jz      loc_AF1F"], ["cmp     byte ptr [eax+22h], 0", "jnz     loc_A770"], ["mov     name, 18h", "jmp     loc_A3BE"], ["mov     edx, [esp+9Ch+attStr]", "push    ebx", "mov     ecx, [esp+0A0h+before]", "sub     ecx, edx", "push    ecx", "push    edx", "mov     esi, [ebp+4]", "push    esi", "call    eax", "add     esp, 10h", "jmp     loc_A581"], ["mov     eax, [ebp+50h]", "test    eax, eax", "jz      loc_A5E6"], ["sub     esp, 0Ch", "mov     edx, edi; enc", "mov     eax, [esp+0A8h+before]", "push    eax; end", "mov     eax, ebp; parser", "mov     ecx, [esp+0ACh+attStr]; s", "call    reportDefault", "add     esp, 10h", "jmp     loc_A5E6"], ["mov     [ebp+1A0h], eax", "jmp     loc_A222"], ["mov     eax, [ebp+50h]", "test    eax, eax", "jz      loc_A1F2"], ["sub     esp, 0Ch", "mov     edx, edi; enc", "mov     eax, [esp+0A8h+next]", "push    eax; end", "mov     eax, ebp; parser", "mov     ecx, [esp+0ACh+attStr]; s", "call    reportDefault", "add     esp, 10h", "jmp     loc_A1F2"], ["mov     ecx, [ebp+50h]", "test    ecx, ecx", "jz      loc_A581"], ["sub     esp, 0Ch", "mov     eax, ebp; parser", "mov     edx, [esp+0A8h+before]", "push    edx; end", "mov     edx, edi; enc", "mov     ecx, [esp+0ACh+attStr]; s", "call    reportDefault", "add     esp, 10h", "jmp     loc_A581"], ["lea     eax, [esp+9Ch+dataPtr]", "mov     [esp+9Ch+entity], eax", "lea     eax, [esp+9Ch+attStr]", "mov     [esp+9Ch+rawName], eax", "jmp     short loc_A99A"], ["mov     ecx, [esp+9Ch+var_90]", "mov     eax, [esp+9Ch+attStr]", "mov     [ecx], eax"], ["mov     eax, [ebp+2Ch]", "sub     esp, 0Ch", "mov     ebx, [ebp+30h]", "mov     [esp+0A8h+dataPtr], eax", "push    ebx", "mov     eax, [esp+0ACh+entity]", "push    eax", "mov     eax, [esp+0B0h+next]", "push    eax", "mov     eax, [esp+0B4h+rawName]", "push    eax", "push    edi", "call    dword ptr [edi+38h]", "mov     ecx, [esp+0BCh+eventEndPP]", "mov     ebx, eax", "mov     convert_res, [esp+0BCh+attStr]", "add     esp, 1Ch", "mov     [ecx], eax", "mov     eax, [esp+0A0h+dataPtr]", "mov     ecx, [ebp+2Ch]", "sub     eax, ecx", "push    eax", "push    ecx", "mov     eax, [ebp+4]", "push    eax", "call    charDataHandler", "add     esp, 10h", "cmp     convert_res, 1", "ja      short loc_A990"], ["jmp     loc_A38C"], ["mov     eax, [esp+9Ch+var_94]", "mov     ebx, 2Ah ; '*'", "lea     edx, [eax-0E196h]; epilog", "mov     eax, ebp; originParser", "call    accountingReportStats", "jmp     loc_A3BE"], ["mov     eax, [esp+9Ch+var_90]", "mov     edi, [esp+9Ch+before]", "mov     [eax], edi", "jmp     loc_A5FE"], ["mov     ecx, [tag+1Ch]", "add     eax, ecx", "mov     cl, [localPart]", "test    cl, cl", "jz      short loc_AA2A"], ["lea     tag, [tag+0]"], ["inc     localPart", "mov     [uri], cl", "inc     uri", "mov     cl, [localPart]", "test    cl, cl", "jnz     short loc_AA20"], ["cmp     byte ptr [ebp+0E9h], 0", "mov     localPart, [tag+14h]", "jz      short loc_AA3E"], ["test    prefix, prefix", "jnz     loc_AD94"], ["mov     byte ptr [uri], 0", "mov     ecx, [ebp+38h]", "mov     uri, [tag+0Ch]", "jmp     loc_A2EC"], ["mov     eax, [ebp+70h]", "test    eax, eax", "jz      loc_A6A8"], ["mov     eax, [esp+9Ch+entity]", "mov     byte ptr [eax+20h], 1", "mov     eax, [ebp+160h]", "mov     [esp+9Ch+var_58], eax", "mov     eax, [eax+9Ch]", "test    eax, eax", "jz      loc_AB52"], ["mov     eax, [ebp+1A8h]", "cmp     eax, [ebp+1A4h]", "jz      loc_AEFC"], ["lea     edx, [eax+1]", "mov     [ebp+1A8h], edx", "mov     byte ptr [eax], 3Dh ; '='", "mov     eax, [esp+9Ch+var_58]", "cmp     byte ptr [ebp+1D4h], 1", "mov     eax, [eax+9Ch]", "mov     esi, [eax+14h]", "lea     eax, [ebp+19Ch]", "adc     esi, 0FFFFFFFFh", "mov     [esp+9Ch+rawName], eax", "xor     name, name", "test    esi, esi", "jle     loc_AB50"], ["mov     [esp+9Ch+pool], edi", "mov     edi, [esp+9Ch+var_58]", "jmp     short loc_AAEF"], ["mov     edx, dword ptr ds:(free - 2DF78h)[edi]", "mov     ecx, [edx+10h]", "add     ecx, ebx", "inc     ebx", "mov     edx, ecx", "lea     ecx, [eax+1]", "mov     [ebp+1A8h], ecx", "cmp     ebx, esi", "mov     cl, [edx]", "mov     [eax], cl", "jz      short loc_AB4C"], ["mov     eax, [ebp+1A8h]", "cmp     eax, [ebp+1A4h]", "jnz     short loc_AAD0"], ["mov     eax, [esp+9Ch+rawName]; pool", "call    poolGrow", "test    al, al", "jz      short loc_AB3F"], ["mov     eax, [ebp+1A8h]", "jmp     short loc_AAD0"], ["xor     ecx, ecx; betweenDecl", "mov     edx, [esp+9Ch+entity]; entity", "mov     eax, ebp; parser", "call    processInternalEntity", "test    result, result", "jz      loc_A38C"], ["mov     ebx, eax", "jmp     loc_A3BE"], ["mov     eax, [esp+9Ch+pool]; pool", "call    poolGrow", "test    al, al", "jnz     loc_ADDF"], ["mov     eax, [esp+9Ch+entity]", "mov     byte ptr [eax+20h], 0", "jmp     loc_A628"], ["mov     edi, [esp+9Ch+pool]"], ["mov     cl, 1"], ["mov     eax, [esp+9Ch+var_58]", "lea     ebx, [ebp+19Ch]", "mov     [esp+9Ch+var_54], edi", "mov     edx, [ebp+1A4h]", "mov     esi, [eax+3Ch]", "mov     eax, [eax+44h]", "mov     [esp+9Ch+var_5C], ebx", "mov     edi, esi", "lea     eax, [esi+eax*4]", "mov     [esp+9Ch+rawName], eax", "mov     eax, [ebp+1A8h]", "mov     [esp+9Ch+pool], eax", "jmp     short loc_AB95"], ["mov     esi, ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi]", "add     edi, 4", "test    esi, esi", "jnz     loc_AC42"], ["cmp     [esp+9Ch+rawName], edi", "jnz     short loc_AB88"], ["mov     eax, [esp+9Ch+var_58]", "mov     edi, [esp+9Ch+var_54]", "mov     ebx, [eax]", "mov     eax, [eax+8]", "lea     eax, [ebx+eax*4]", "mov     [esp+9Ch+rawName], eax", "lea     eax, [ebp+19Ch]", "mov     [esp+9Ch+pool], eax", "jmp     short loc_ABCD"], ["mov     esi, [ebx]", "add     ebx, 4", "test    esi, esi", "jnz     loc_ADBF"], ["cmp     [esp+9Ch+rawName], ebx", "jnz     short loc_ABC0"], ["mov     eax, [ebp+1A8h]", "cmp     eax, [ebp+1A4h]", "mov     [esp+9Ch+pool], eax", "jz      loc_AF33"], ["mov     esi, [esp+9Ch+pool]", "lea     eax, [esi+1]", "mov     [ebp+1A8h], eax", "mov     byte ptr [esi], 0", "mov     esi, [esp+9Ch+entity]", "mov     eax, [ebp+1ACh]", "test    context, context", "mov     byte ptr [esi+20h], 0", "jz      loc_A628"], ["sub     esp, 0Ch", "mov     edx, [esi+18h]", "push    edx", "mov     ecx, [esi+10h]", "push    ecx", "mov     ebx, [esi+14h]", "push    ebx", "push    context", "mov     esi, [ebp+74h]", "push    esi", "call    dword ptr [ebp+70h]", "add     esp, 20h", "test    eax, eax", "jz      loc_AF29"], ["mov     eax, [ebp+1ACh]", "mov     [ebp+1A8h], eax", "jmp     loc_A38C"], ["mov     ebx, [esi+4]", "test    ebx, ebx", "jz      loc_AB95"], ["test    cl, cl", "jz      short loc_AC77"], ["cmp     [esp+9Ch+pool], edx", "jz      loc_AE98"], ["lea     edx, [eax+1]", "mov     [ebp+1A8h], edx", "mov     byte ptr [eax], 0Ch", "mov     eax, [ebp+1A8h]", "mov     edx, [ebp+1A4h]", "mov     [esp+9Ch+pool], eax"], ["mov     ebx, [esi]", "cmp     byte ptr [ebx], 0", "jz      short loc_ACD2"], ["mov     ecx, ebp", "mov     ebp, ebx", "mov     ebx, ecx", "jmp     short loc_ACA9"], ["lea     edx, [eax+1]", "inc     ebp", "mov     [ebx+1A8h], edx", "mov     cl, [ebp-1]", "mov     [eax], cl", "cmp     byte ptr [ebp+0], 0", "jz      short loc_ACC6"], ["mov     eax, [ebx+1A8h]", "mov     edx, [ebx+1A4h]"], ["cmp     eax, edx", "jnz     short loc_AC88"], ["mov     eax, [esp+9Ch+var_5C]; pool", "call    poolGrow", "test    al, al", "jz      loc_AB3F"], ["mov     eax, [ebx+1A8h]", "jmp     short loc_AC88"], ["mov     eax, [ebx+1A8h]", "mov     ebp, ebx", "mov     [esp+9Ch+pool], eax"], ["mov     eax, [esp+9Ch+pool]", "cmp     eax, [ebp+1A4h]", "jz      loc_AE6A"], ["lea     edx, [eax+1]", "mov     [ebp+1A8h], edx", "mov     byte ptr [eax], 3Dh ; '='", "mov     eax, [esi+4]", "mov     edx, [ebp+1A4h]", "cmp     byte ptr [ebp+1D4h], 1", "mov     ecx, [eax+14h]", "mov     eax, [ebp+1A8h]", "adc     ecx, 0FFFFFFFFh", "mov     [esp+9Ch+pool], eax", "test    ecx, ecx", "jle     short loc_AD79"], ["mov     [esp+9Ch+pool], edi", "xor     ebx, ebx", "mov     edi, ecx", "jmp     short loc_AD48"], ["mov     edx, [esi+4]", "mov     ecx, [edx+10h]", "add     ecx, ebx", "inc     ebx", "mov     edx, ecx", "lea     ecx, [eax+1]", "mov     [ebp+1A8h], ecx", "cmp     ebx, edi", "mov     cl, [edx]", "mov     [eax], cl", "jz      short loc_AD65"], ["mov     eax, [ebp+1A8h]", "mov     edx, [ebp+1A4h]"], ["cmp     eax, edx", "jnz     short loc_AD20"], ["mov     eax, [esp+9Ch+var_5C]; pool", "call    poolGrow", "test    al, al", "jz      loc_AB3F"], ["mov     eax, [ebp+1A8h]", "jmp     short loc_AD20"], ["mov     eax, [ebp+1A8h]", "mov     edi, [esp+9Ch+pool]", "mov     edx, [ebp+1A4h]", "mov     [esp+9Ch+pool], eax"], ["mov     cl, 1", "jmp     loc_AB95"], ["mov     eax, [esp+9Ch+var_90]", "mov     edi, [esp+9Ch+rawName]", "mov     ebx, 7", "mov     [eax], edi", "jmp     loc_A3BE"], ["mov     cl, [ebp+1D4h]", "lea     ebx, [uri+1]", "mov     [eax], cl", "mov     eax, uri", "mov     cl, [prefix]", "test    cl, cl", "jz      loc_AA3E"], ["lea     tag, [tag+0]", "nop"], ["inc     prefix", "mov     [uri], cl", "inc     uri", "mov     cl, [prefix]", "test    cl, cl", "jnz     short loc_ADB0"], ["jmp     loc_AA3E"], ["cmp     byte ptr [esi+20h], 0", "jz      loc_ABCD"], ["test    cl, cl", "jz      short loc_ADF1"], ["mov     eax, [ebp+1A8h]", "cmp     [ebp+1A4h], eax", "jz      loc_AB2E"], ["mov     eax, [ebp+1A8h]", "lea     edx, [eax+1]", "mov     [ebp+1A8h], edx", "mov     byte ptr [eax], 0Ch"], ["mov     esi, [esi]", "cmp     byte ptr [esi], 0", "jnz     short loc_AE18"], ["jmp     loc_AEB4"], ["lea     edx, [eax+1]", "inc     esi", "mov     [ebp+1A8h], edx", "mov     cl, [esi-1]", "mov     [eax], cl", "cmp     byte ptr [esi], 0", "jz      loc_AEB4"], ["mov     eax, [ebp+1A8h]", "cmp     eax, [ebp+1A4h]", "jnz     short loc_AE00"], ["mov     eax, [esp+9Ch+pool]; pool", "call    poolGrow", "test    al, al", "jz      loc_AB3F"], ["mov     eax, [ebp+1A8h]", "jmp     short loc_AE00"], ["mov     eax, [ebp+78h]", "test    eax, eax", "jz      loc_A6A8"], ["push    edx", "push    0", "push    name", "mov     ecx, [ebp+4]", "push    ecx", "call    eax", "mov     edx, [esp+0ACh+next]", "add     esp, 10h", "jmp     loc_A390"], ["mov     ebx, 0Eh", "jmp     loc_A3BE"], ["mov     eax, [esp+9Ch+var_5C]; pool", "call    poolGrow", "test    al, al", "jz      loc_AB3F"], ["mov     eax, [ebp+1A8h]", "jmp     loc_ACE2"], ["mov     ebx, result", "mov     edx, [esp+9Ch+bindings]; bindings", "mov     result, ebp; parser", "call    freeBindings", "jmp     loc_A3BE"], ["mov     eax, [esp+9Ch+var_5C]; pool", "call    poolGrow", "test    al, al", "jz      loc_AB3F"], ["mov     eax, [ebp+1A8h]", "jmp     loc_AC5B"], ["mov     cl, 1", "jmp     loc_ABCD"], ["push    [esp+9Ch+var_7C]; nextPtr", "push    [esp+0A0h+before]; end", "push    edx; s", "push    ebp; parser", "call    epilogProcessor", "add     esp, 10h", "mov     ebx, eax", "jmp     loc_A3BE"], ["sub     esp, 0Ch", "mov     ebx, 1", "push    tag", "call    dword ptr [ebp+14h]", "add     esp, 10h", "jmp     loc_A3BE"], ["mov     name, 0Fh", "jmp     loc_A3BE"], ["mov     name, 0Ch", "jmp     loc_A3BE"], ["lea     eax, [ebp+19Ch]; pool", "call    poolGrow", "test    al, al", "jz      loc_AB3F"], ["mov     eax, [ebp+1A8h]", "jmp     loc_AA89"], ["call    __stack_chk_fail_local"], ["mov     name, 0Bh", "jmp     loc_A3BE"], ["mov     ebx, 15h", "jmp     loc_A3BE"], ["lea     eax, [ebp+19Ch]; pool", "call    poolGrow", "test    al, al", "jz      loc_AB3F"], ["mov     eax, [ebp+1A8h]", "mov     [esp+9Ch+pool], eax", "jmp     loc_ABE9"]], "cdataSectionProcessor": [["push    ebp", "xor     eax, eax", "push    edi", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "sub     esp, 0Ch", "mov     ebx, [esp+1Ch+parser]", "mov     esi, [esp+1Ch+end]", "mov     edi, [esp+1Ch+endPtr]", "lea     ecx, [esp+1Ch+start]; startPtr", "mov     edx, [ebx+90h]; enc", "push    0; account", "cmp     byte ptr [ebx+1E0h], 0", "setz    al", "push    eax; haveMore", "mov     eax, ebx; parser", "push    edi; nextPtr", "push    esi; end", "call    doCdataSection", "add     esp, 10h", "test    result, result", "jnz     short loc_B0B1"], ["mov     edx, [esp+1Ch+start]", "test    edx, edx", "jz      short loc_B0B1"], ["mov     result, [ebx+1D8h]", "test    eax, eax", "jz      short loc_B0C0"], ["lea     eax, (externalEntityContentProcessor - 2DF78h)[ebp]", "mov     [ebx+114h], eax", "push    edi; endPtr", "push    esi; end", "push    edx; start", "push    ebx; parser", "call    externalEntityContentProcessor", "add     esp, 10h"], ["add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     eax, (contentProcessor - 2DF78h)[ebp]", "mov     [ebx+114h], eax", "push    edi; endPtr", "push    esi; end", "push    edx; start", "push    ebx; parser", "call    contentProcessor", "add     esp, 10h", "add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "externalEntityInitProcessor3": [["push    ebp", "call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 2Ch", "mov     ebx, [esp+3Ch+parser]", "mov     ebp, [esp+3Ch+start]", "mov     [esp+3Ch+var_30], eax", "lea     edx, [esp+3Ch+next]", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     esi, [esp+3Ch+end]", "mov     edi, [esp+3Ch+endPtr]", "mov     [esp+3Ch+next], ebp", "mov     [ebx+11Ch], ebp", "mov     eax, [ebx+90h]", "push    edx", "push    esi", "push    ebp", "push    eax", "call    dword ptr [eax+4]", "mov     edx, [esp+4Ch+next]", "add     esp, 10h", "mov     [ebx+120h], edx", "cmp     tok, 0FFFFFFFFh", "jz      short loc_B188"], ["cmp     tok, 0Ch", "jz      short loc_B1B8"], ["cmp     tok, 0FFFFFFFEh", "jz      short loc_B1A0"], ["mov     eax, [esp+3Ch+var_30]", "mov     dword ptr [ebx+134h], 1", "lea     eax, (externalEntityContentProcessor - 2DF78h)[eax]", "mov     [ebx+114h], eax", "push    edi; endPtr", "push    esi; end", "push    start_0; start", "push    ebx; parser", "call    externalEntityContentProcessor", "add     esp, 10h"], ["mov     ecx, [esp+3Ch+var_20]", "xor     ecx, large gs:14h", "jnz     loc_B209"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     byte ptr [ebx+1E0h], 0", "mov     tok, 5", "jnz     short loc_B16E"], ["mov     [edi], ebp", "xor     eax, eax", "jmp     short loc_B16E"], ["cmp     byte ptr [ebx+1E0h], 0", "mov     tok, 6", "jnz     short loc_B16E"], ["mov     [edi], ebp", "xor     eax, eax", "jmp     short loc_B16E"], ["sub     esp, 0Ch", "mov     ecx, ebp; s", "mov     tok, ebx; parser", "push    edx; next", "mov     edx, 1; isGeneralTextEntity", "call    processXmlDecl", "add     esp, 10h", "test    result, result", "jnz     short loc_B16E"], ["mov     edx, [ebx+1DCh]", "cmp     edx, 2", "jz      short loc_B1F0"], ["cmp     edx, 3", "jnz     short loc_B200"], ["mov     edx, [esp+3Ch+next]", "mov     [edi], edx", "jmp     short loc_B16E"], ["mov     result, 23h ; '#'", "jmp     loc_B16E"], ["mov     ebp, [esp+3Ch+next]", "jmp     loc_B148"], ["call    __stack_chk_fail_local"]], "externalEntityInitProcessor2": [["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 2Ch", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     ebx, [esp+3Ch+parser]", "mov     edx, [esp+3Ch+start]", "lea     ecx, [esp+3Ch+next]", "mov     [esp+3Ch+next], edx", "mov     esi, [esp+3Ch+end]", "mov     edi, [esp+3Ch+endPtr]", "mov     eax, [ebx+90h]", "push    ecx", "push    esi", "push    edx", "mov     [esp+48h+var_30], edx", "push    eax", "call    dword ptr [eax+4]", "add     esp, 10h", "cmp     tok, 0FFFFFFFFh", "mov     edx, [esp+3Ch+var_30]", "jz      short loc_B2A0"], ["cmp     tok, 0Eh", "jz      short loc_B2C8"], ["cmp     tok, 0FFFFFFFEh", "jz      short loc_B2B8"], ["lea     eax, (externalEntityInitProcessor3 - 2DF78h)[ebp]", "mov     [ebx+114h], eax", "push    edi; endPtr", "push    esi; end", "push    start_0; start", "push    ebx; parser", "call    externalEntityInitProcessor3", "add     esp, 10h"], ["mov     edi, [esp+3Ch+var_20]", "xor     edi, large gs:14h", "jnz     loc_B327"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     byte ptr [ebx+1E0h], 0", "jz      short loc_B2C1"], ["mov     [ebx+11Ch], edx", "mov     tok, 5", "jmp     short loc_B285"], ["cmp     byte ptr [ebx+1E0h], 0", "jnz     short loc_B300"], ["mov     [edi], edx", "xor     eax, eax", "jmp     short loc_B285"], ["push    eax; after", "push    eax; before", "mov     eax, ebx", "push    0; tok", "push    offset stru_A1C.st_size; originParser", "mov     ecx, [esp+4Ch+next]", "call    accountingDiffTolerated", "add     esp, 10h", "test    al, al", "jz      short loc_B310"], ["mov     edx, [esp+3Ch+next]", "cmp     edx, esi", "jnz     short loc_B26D"], ["cmp     byte ptr [ebx+1E0h], 0", "jnz     loc_B26D"], ["jmp     short loc_B2C1"], ["mov     [ebx+11Ch], edx", "mov     tok, 6", "jmp     loc_B285"], ["mov     eax, ebx; originParser", "lea     edx, (aAborting - 2DF78h)[ebp]; \" ABORTING\\n\"", "call    accountingReportStats", "mov     eax, 2Ah ; '*'", "jmp     loc_B285"], ["call    __stack_chk_fail_local"]], "externalParEntProcessor": [["push    ebp", "call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 2Ch", "mov     [esp+3Ch+var_30], eax", "mov     ebx, [esp+3Ch+parser]", "mov     eax, [esp+3Ch+nextPtr]", "mov     esi, [esp+3Ch+s]", "mov     [esp+3Ch+var_34], eax", "lea     ebp, [esp+3Ch+next]", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     edi, [esp+3Ch+end]", "mov     [esp+3Ch+next], esi", "mov     eax, [ebx+90h]", "push    ebp", "push    edi", "push    esi", "push    eax", "call    ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax]", "add     esp, 10h", "test    tok_0, tok_0", "jle     short loc_B3F0"], ["mov     ecx, [esp+3Ch+next]", "cmp     tok_0, 0Eh", "jz      loc_B418"], ["cmp     byte ptr [ebx+1E0h], 0", "setz    dl", "mov     ebp, edx"], ["mov     edx, [esp+3Ch+var_30]", "sub     esp, 4", "and     ebp, 0FFh", "lea     edx, [edx-244E8h]", "mov     [ebx+114h], edx", "mov     edx, [ebx+90h]; enc", "push    0; account", "push    1; allowClosingDoctype", "push    ebp; haveMore", "mov     ebp, [esp+4Ch+var_34]", "push    ebp; nextPtr", "push    ecx; next", "mov     ecx, s_0; s", "push    tok_0; tok", "mov     tok_0, ebx; parser", "push    edi; end", "call    doProlog", "add     esp, 20h"], ["mov     ecx, [esp+3Ch+var_20]", "xor     ecx, large gs:14h", "jnz     loc_B48B"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     byte ptr [ebx+1E0h], 0", "setz    dl", "mov     ebp, edx", "test    tok_0, tok_0", "jz      short loc_B404"], ["test    dl, dl", "jnz     short loc_B460"], ["lea     edx, [tok_0+2]", "cmp     edx, 2", "ja      short loc_B450"], ["mov     edx, 4", "sub     edx, tok_0", "mov     tok_0, edx", "jmp     short loc_B3D1"], ["push    eax; after", "mov     edx, esi", "push    eax; before", "mov     eax, ebx", "push    0; tok", "push    offset originParser.m_prologState.role_none; originParser", "call    accountingDiffTolerated", "add     esp, 10h", "test    al, al", "jz      short loc_B470"], ["mov     esi, [esp+3Ch+next]", "mov     eax, [ebx+90h]", "push    ebp", "push    edi", "push    s_0", "push    eax", "call    ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax]", "add     esp, 10h", "cmp     byte ptr [ebx+1E0h], 0", "setz    cl", "mov     ebp, ecx"], ["mov     ecx, [esp+3Ch+next]", "jmp     loc_B399"], ["mov     tok_0, [esp+3Ch+var_34]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax], esi", "xor     eax, eax", "jmp     loc_B3D1"], ["mov     eax, [esp+3Ch+var_30]", "lea     edx, (aAborting - 2DF78h)[eax]; \" ABORTING\\n\"", "mov     eax, ebx; originParser", "call    accountingReportStats", "mov     eax, 2Ah ; '*'", "jmp     loc_B3D1"], ["call    __stack_chk_fail_local"]], "internalEntityProcessor": [["push    ebp", "call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 3Ch", "mov     [esp+4Ch+var_40], eax", "mov     eax, [esp+4Ch+s]", "mov     [esp+4Ch+var_3C], eax", "mov     ebx, [esp+4Ch+parser]", "mov     eax, [esp+4Ch+end]", "mov     [esp+4Ch+var_38], eax", "mov     eax, [esp+4Ch+nextPtr]", "mov     [esp+4Ch+var_34], eax", "mov     ebp, [ebx+128h]", "mov     eax, large gs:14h", "mov     [esp+4Ch+var_20], eax", "xor     eax, eax", "test    openEntity, openEntity", "jz      loc_B6C0"], ["mov     esi, [openEntity+0Ch]", "mov     edi, [entity+4]", "mov     ecx, [entity+0Ch]", "add     ecx, edi", "mov     eax, [entity+8]", "add     edi, eax", "mov     [esp+4Ch+next], textStart_0", "cmp     byte ptr [entity+21h], 0", "mov     eax, [ebx+0E0h]", "jz      loc_B630"], ["lea     edx, [esp+4Ch+next]", "mov     [esp+4Ch+var_44], edx", "push    edx", "push    textEnd", "push    textStart_0", "mov     [esp+58h+textStart], textStart_0", "push    eax", "call    ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax]", "add     esp, 0Ch", "mov     edx, [ebx+0E0h]; enc", "push    1; account", "push    1; allowClosingDoctype", "push    0; haveMore", "mov     ecx, [esp+5Ch+var_44]", "push    ecx; nextPtr", "mov     ecx, [esp+60h+next]", "push    ecx; next", "push    tok_0; tok", "mov     tok_0, ebx; parser", "push    textEnd; end", "mov     ecx, [esp+6Ch+textStart]; s", "call    doProlog", "add     esp, 20h"], ["test    result, result", "jnz     loc_B617"], ["mov     ecx, [esp+4Ch+next]", "mov     edx, ebx", "cmp     ecx, textEnd", "jz      short loc_B560"], ["cmp     dword ptr [ebx+1DCh], 3", "jz      loc_B6B0"], ["lea     entity, [entity+0]"], ["mov     edi, edx", "mov     edx, [edx+1D8h]", "test    edx, edx", "jnz     short loc_B560"], ["sub     esp, 0Ch", "mov     edx, entity; entity", "push    1606h; sourceLine", "mov     result, [esp+5Ch+var_40]", "lea     ecx, (aClose_0 - 2DF78h)[eax]; \"CLOSE\"", "mov     eax, edi; rootParser", "call    entityTrackingReportStats", "mov     eax, [edi+214h]", "dec     eax", "add     esp, 10h", "mov     [edi+214h], eax", "mov     byte ptr [entity+20h], 0", "mov     eax, [openEntity+8]", "mov     [ebx+128h], eax", "mov     eax, [ebx+12Ch]", "mov     [openEntity+8], eax", "mov     [ebx+12Ch], openEntity", "cmp     byte ptr [entity+21h], 0", "mov     eax, [esp+4Ch+var_40]", "jz      loc_B660"], ["mov     edx, [esp+4Ch+var_44]", "lea     eax, (prologProcessor - 2DF78h)[eax]", "mov     [ebx+114h], eax", "mov     eax, [ebx+90h]", "push    edx", "mov     edi, [esp+50h+var_38]", "push    edi", "mov     entity, [esp+54h+var_3C]", "push    esi", "push    eax", "call    ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax]", "add     esp, 0Ch", "mov     edx, [ebx+90h]; enc", "xor     ecx, ecx", "push    0; account", "push    1; allowClosingDoctype", "cmp     byte ptr [ebx+1E0h], 0", "setz    cl", "push    ecx; haveMore", "mov     ecx, [esp+5Ch+var_34]", "push    ecx; nextPtr", "mov     ecx, esi; s", "mov     openEntity, [esp+60h+next]", "push    ebp; next", "push    tok_1; tok", "mov     tok_1, ebx; parser", "push    edi; end", "call    doProlog", "add     esp, 20h"], ["mov     esi, [esp+4Ch+var_20]", "xor     esi, large gs:14h", "jnz     loc_B6CA"], ["add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edx, [openEntity+10h]", "sub     esp, 0Ch", "mov     [esp+58h+textStart], edx", "push    1; account", "push    0; haveMore", "lea     edx, [esp+60h+next]", "mov     [esp+60h+var_44], edx", "push    edx; nextPtr", "push    textEnd; end", "push    textStart_0; s", "mov     textStart_0, eax; enc", "mov     edx, [esp+6Ch+textStart]; startTagLevel", "mov     eax, ebx; parser", "call    doContent", "add     esp, 20h", "jmp     loc_B53A"], ["lea     eax, (contentProcessor - 2DF78h)[eax]", "xor     edx, edx", "mov     [ebx+114h], eax", "mov     eax, [ebx+1D8h]", "test    eax, eax", "mov     ecx, [ebx+90h]; enc", "setnz   dl; startTagLevel", "sub     esp, 0Ch", "xor     eax, eax", "push    0; account", "cmp     byte ptr [ebx+1E0h], 0", "setz    al", "push    eax; haveMore", "mov     eax, ebx; parser", "mov     entity, [esp+60h+var_34]", "push    esi; nextPtr", "mov     edi, [esp+64h+var_38]", "push    edi; end", "mov     openEntity, [esp+68h+var_3C]", "push    ebp; s", "call    doContent", "add     esp, 20h", "jmp     loc_B617"], ["mov     edx, [entity+4]", "sub     ecx, edx", "mov     [entity+0Ch], ecx", "jmp     loc_B617"], ["mov     eax, 17h", "jmp     loc_B617"], ["call    __stack_chk_fail_local"]], "startParsing": [["push    ebp", "mov     ebp, parser_0", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     esi, [ebp+1ECh]", "mov     parser_0, large gs:14h", "mov     [esp+3Ch+var_20], parser_0", "xor     parser_0, parser_0", "test    esi, esi", "jz      short loc_B918"], ["cmp     byte ptr [parser_0+0E8h], 0", "mov     al, 1", "jnz     loc_BA15"], ["mov     ecx, [esp+3Ch+var_20]", "xor     ecx, large gs:14h", "jnz     loc_BA61"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     eax, [esp+3Ch+entropy]", "xor     edi, edi", "mov     [esp+3Ch+var_38], eax", "lea     esi, [esi+0]"], ["push    eax", "mov     eax, 4", "push    1", "sub     eax, edi", "push    eax", "mov     eax, [esp+48h+var_38]", "add     eax, edi", "push    eax", "call    _getrandom", "add     esp, 10h", "test    eax, eax", "jle     short loc_B951"], ["add     edi, eax", "cmp     edi, 3", "ja      loc_BA28"], ["call    ___errno_location", "cmp     dword ptr [eax], 4", "jz      short loc_B928"], ["mov     [esp+3Ch+var_34], eax", "push    eax", "push    eax", "lea     eax, (aDevUrandom - 2DF78h)[ebx]; \"/dev/urandom\"", "push    0; oflag", "push    eax; file", "call    _open", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "js      short loc_B9C6"], ["mov     edx, [esp+3Ch+var_34]", "mov     [esp+3Ch+parser], parser_0", "mov     parser_0, edx", "lea     esi, [esi+0]"], ["mov     eax, 4", "push    ecx", "sub     eax, esi", "push    eax; nbytes", "mov     eax, [esp+44h+var_38]", "add     eax, esi", "push    eax; buf", "push    edi; fd", "call    _read", "add     esp, 10h", "test    eax, eax", "jle     short loc_B9B0"], ["add     esi, eax", "cmp     esi, 3", "ja      loc_BA40"], ["cmp     dword ptr [ebp+0], 4", "jz      short loc_B988"], ["mov     ebp, [esp+3Ch+parser]", "sub     esp, 0Ch", "push    edi; fd", "call    _close", "add     esp, 10h"], ["push    edx", "push    edx", "push    0; tz", "lea     eax, [esp+48h+tv]", "push    eax; tv", "call    _gettimeofday", "add     esp, 10h", "test    eax, eax", "jnz     loc_BA66"], ["mov     esi, [esp+3Ch+tv.tv_usec]", "call    _getpid", "xor     eax, esi", "mov     edx, eax", "mov     [esp+3Ch+entropy], eax", "shl     edx, 1Fh", "sub     edx, eax; entropy", "lea     eax, (aFallback4 - 2DF78h)[ebx]; \"fallback(4)\"", "call    ENTROPY_DEBUG"], ["mov     [ebp+1ECh], eax", "mov     al, 1", "cmp     byte ptr [ebp+0E8h], 0", "jz      loc_B8F9"], ["lea     edx, (implicitContext - 2DF78h)[ebx]; \"xml=http://www.w3.org/XML/1998/namespac\"...", "mov     eax, ebp; parser", "call    setContext", "jmp     loc_B8F9"], ["mov     edx, [esp+3Ch+entropy]; entropy", "lea     eax, (aGetrandom_0 - 2DF78h)[ebx]; \"getrandom\"", "call    ENTROPY_DEBUG", "jmp     short loc_BA00"], ["mov     ebp, [esp+3Ch+parser]", "sub     esp, 0Ch", "push    edi; fd", "call    _close", "add     esp, 10h", "lea     eax, (aDevUrandom - 2DF78h)[ebx]; \"/dev/urandom\"", "mov     edx, [esp+3Ch+entropy]; entropy", "call    ENTROPY_DEBUG", "jmp     short loc_BA00"], ["call    __stack_chk_fail_local"], ["lea     eax, (__PRETTY_FUNCTION___9245 - 2DF78h)[ebx]; \"gather_time_entropy\"", "push    eax; function", "lea     eax, (aGitExpatLibXml - 2DF78h)[ebx]; \"../../git/expat/lib/xmlparse.c\"", "push    34Fh; line", "push    eax; file", "lea     eax, (aGettimeofdayRe - 2DF78h)[ebx]; \"gettimeofday_res == 0\"", "push    eax; assertion", "call    ___assert_fail"]], "getDebugLevel": [["push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     ecx, large gs:14h", "mov     [esp+28h+var_10], ecx", "xor     ecx, ecx", "push    variableName; name", "call    _getenv", "add     esp, 10h", "test    valueOrNull, valueOrNull", "jz      short loc_BB18"], ["mov     esi, valueOrNull", "call    ___errno_location", "mov     [esp+1Ch+afterValue], value", "mov     edi, eax", "mov     dword ptr [eax], 0", "push    eax", "push    0Ah; base", "lea     eax, [esp+24h+afterValue]", "push    eax; endptr", "push    value; nptr", "call    _strtoul", "mov     edx, [edi]", "add     esp, 10h", "test    edx, edx", "jnz     short loc_BB08"], ["mov     edx, [esp+1Ch+afterValue]", "cmp     byte ptr [edx], 0", "jnz     short loc_BB08"], ["mov     edx, [esp+1Ch+var_10]", "xor     edx, large gs:14h", "jnz     short loc_BB1C"], ["add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["mov     dword ptr [edi], 0", "xor     debugLevel, debugLevel", "jmp     short loc_BAEE"], ["xor     valueOrNull, valueOrNull", "jmp     short loc_BAEE"], ["call    __stack_chk_fail_local"]], "parserInit": [["push    ebp", "mov     ebp, esp", "push    edi", "push    esi", "mov     esi, parser", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 18h", "lea     parser, (prologInitProcessor - 2DF78h)[ebx]", "mov     [parser+114h], eax", "lea     eax, [parser+0FCh]", "mov     edi, encodingName", "push    eax; state", "call    XmlPrologStateInit", "add     esp, 10h", "test    encodingName, encodingName", "jz      short loc_BB77"], ["lea     edx, [parser+0Ch]", "mov     eax, encodingName", "call    copyString", "mov     [parser+0E4h], eax"], ["push    eax", "lea     eax, [parser+90h]", "push    0; name", "mov     dword ptr [parser+164h], 0", "push    eax; defaultDebugLevel", "lea     eax, [parser+94h]", "push    eax; variableName", "call    XmlInitEncoding", "mov     eax, [parser+8]", "mov     dword ptr [parser], 0", "mov     dword ptr [parser+4], 0", "mov     dword ptr [parser+34h], 0", "mov     dword ptr [parser+38h], 0", "mov     dword ptr [parser+3Ch], 0", "mov     dword ptr [parser+40h], 0", "mov     dword ptr [parser+44h], 0", "mov     dword ptr [parser+48h], 0", "mov     dword ptr [parser+4Ch], 0", "mov     dword ptr [parser+50h], 0", "mov     dword ptr [parser+54h], 0", "mov     dword ptr [parser+58h], 0", "mov     dword ptr [parser+5Ch], 0", "mov     dword ptr [parser+60h], 0", "mov     dword ptr [parser+64h], 0", "mov     dword ptr [parser+68h], 0", "mov     dword ptr [parser+6Ch], 0", "mov     dword ptr [parser+70h], 0", "mov     [parser+74h], parser", "mov     dword ptr [parser+78h], 0", "mov     dword ptr [parser+80h], 0", "mov     dword ptr [parser+84h], 0", "mov     dword ptr [parser+88h], 0", "mov     dword ptr [parser+8Ch], 0", "mov     [parser+18h], eax", "mov     [parser+1Ch], eax", "mov     dword ptr [parser+24h], 0", "mov     dword ptr [parser+28h], 0", "mov     dword ptr [parser+194h], 0", "mov     dword ptr [parser+198h], 0", "mov     dword ptr [parser+118h], 0", "lea     encodingName, [parser+1F0h]", "mov     dword ptr [parser+11Ch], 0", "mov     edx, 20h ; ' '", "mov     dword ptr [parser+120h], 0", "mov     dword ptr [parser+124h], 0", "mov     dword ptr [parser+128h], 0", "mov     byte ptr [parser+130h], 1", "mov     dword ptr [parser+134h], 0", "mov     dword ptr [parser+138h], 0", "mov     dword ptr [parser+13Ch], 0", "mov     dword ptr [parser+140h], 0", "mov     dword ptr [parser+144h], 0", "mov     dword ptr [parser+148h], 0", "mov     dword ptr [parser+14Ch], 0", "mov     dword ptr [parser+150h], 0", "mov     dword ptr [parser+154h], 0", "mov     dword ptr [parser+158h], 0", "mov     word ptr [parser+15Ch], 0", "mov     dword ptr [parser+168h], 0", "mov     dword ptr [parser+170h], 0", "mov     dword ptr [parser+17Ch], 0", "mov     dword ptr [parser+0ECh], 0", "mov     dword ptr [parser+0F8h], 0", "mov     dword ptr [parser+0F0h], 0", "mov     dword ptr [parser+1D8h], 0", "mov     dword ptr [parser+1DCh], 0", "mov     word ptr [parser+1E4h], 0", "mov     dword ptr [parser+1E8h], 0", "mov     dword ptr [parser+1ECh], 0", "test    parser, 1", "jnz     loc_BE38"], ["test    edi, 2", "jnz     loc_BE58"], ["mov     ecx, edx", "xor     eax, eax", "shr     ecx, 2", "rep stosd", "test    dl, 2", "jz      short loc_BDBD"], ["mov     word ptr [edi], 0", "add     edi, 2"], ["and     edx, 1", "jz      short loc_BDC5"], ["mov     byte ptr [edi], 0"], ["lea     eax, (aExpatAccountin_0 - 2DF78h)[ebx]; \"EXPAT_ACCOUNTING_DEBUG\"", "call    getDebugLevel", "mov     dword ptr [parser+204h], 42C80000h", "mov     [parser+200h], eax", "mov     dword ptr [parser+208h], 800000h", "mov     dword ptr [parser+20Ch], 0", "mov     dword ptr [parser+210h], 0", "mov     dword ptr [parser+214h], 0", "mov     dword ptr [parser+218h], 0", "mov     dword ptr [parser+21Ch], 0", "lea     eax, (aExpatEntityDeb - 2DF78h)[ebx]; \"EXPAT_ENTITY_DEBUG\"", "call    getDebugLevel", "add     esp, 10h", "mov     [parser+21Ch], eax", "lea     esp, [ebp-0Ch]", "pop     ebx", "pop     parser", "pop     edi", "pop     ebp", "retn"], ["lea     edi, [parser+1F1h]", "mov     byte ptr [parser+1F0h], 0", "mov     edx, 1Fh", "test    edi, 2", "jz      loc_BDA7"], ["xchg    ax, ax"], ["mov     word ptr [edi], 0", "sub     edx, 2", "add     edi, 2", "jmp     loc_BDA7"]], "XML_ParserReset": [["push    ebp", "xor     eax, eax", "push    edi", "push    esi", "push    ebx", "sub     esp, 0Ch", "mov     edi, [esp+1Ch+parser]", "test    edi, edi", "jz      short loc_BE8B"], ["mov     ebx, [edi+1D8h]", "test    ebx, ebx", "jz      short loc_BE98"], ["add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ebx, [edi+168h]", "test    tStk, tStk", "jz      short loc_BEF0"], ["mov     eax, [edi+16Ch]"], ["mov     esi, [tag]", "mov     [tag], eax", "mov     eax, [tag+2Ch]", "test    eax, eax", "jz      short loc_BED4"], ["mov     ecx, [edi+174h]", "jmp     short loc_BEC2"], ["mov     eax, edx"], ["mov     edx, [eax+4]", "mov     [eax+4], ecx", "test    edx, edx", "mov     [edi+174h], eax", "mov     ecx, eax", "jnz     short loc_BEC0"], ["mov     dword ptr [tag+2Ch], 0", "mov     eax, tag", "mov     [edi+16Ch], tag", "test    tStk, tStk", "jz      short loc_BEF0"], ["mov     ebx, tStk", "jmp     short loc_BEA8"], ["mov     eax, [edi+128h]", "test    openEntityList, openEntityList", "jz      short loc_BF1C"], ["mov     ecx, [edi+12Ch]", "jmp     short loc_BF0A"], ["mov     openEntity, openEntityList"], ["mov     edx, [openEntity+8]", "mov     [openEntity+8], ecx", "test    openEntityList, openEntityList", "mov     [edi+12Ch], openEntity", "mov     ecx, openEntity", "jnz     short loc_BF08"], ["mov     eax, [edi+170h]", "test    eax, eax", "jz      short loc_BF44"], ["mov     ecx, [edi+174h]", "jmp     short loc_BF32"], ["mov     eax, edx"], ["mov     edx, [eax+4]", "mov     [eax+4], ecx", "test    edx, edx", "mov     [edi+174h], eax", "mov     ecx, eax", "jnz     short loc_BF30"], ["sub     esp, 0Ch", "mov     ecx, [edi+0ECh]", "push    ecx", "call    dword ptr [edi+14h]", "mov     eax, [edi+0F8h]", "add     esp, 10h", "test    eax, eax", "jz      short loc_BF6D"], ["sub     esp, 0Ch", "mov     edx, [edi+0F0h]", "push    edx", "call    eax", "add     esp, 10h"], ["mov     ecx, [edi+1A0h]", "mov     eax, [edi+19Ch]", "test    ecx, ecx", "jz      loc_C2DD"], ["test    eax, eax", "jnz     short loc_BF8A"], ["jmp     short loc_BF9A"], ["mov     eax, edx"], ["mov     edx, [eax]", "mov     [eax], ecx", "test    edx, edx", "mov     [edi+1A0h], eax", "mov     ecx, eax", "jnz     short loc_BF88"], ["mov     ecx, [edi+1B8h]", "mov     dword ptr [edi+19Ch], 0", "mov     dword ptr [edi+1ACh], 0", "mov     dword ptr [edi+1A8h], 0", "mov     dword ptr [edi+1A4h], 0", "mov     eax, [edi+1B4h]", "test    ecx, ecx", "jz      loc_C2F8"], ["test    eax, eax", "jnz     short loc_BFE2"], ["jmp     short loc_BFF2"], ["mov     eax, edx"], ["mov     edx, [eax]", "mov     [eax], ecx", "test    edx, edx", "mov     [edi+1B8h], eax", "mov     ecx, eax", "jnz     short loc_BFE0"], ["sub     esp, 0Ch", "mov     eax, [edi+0E4h]", "mov     dword ptr [edi+1B4h], 0", "mov     dword ptr [edi+1C4h], 0", "mov     dword ptr [edi+1C0h], 0", "mov     dword ptr [edi+1BCh], 0", "push    eax", "call    dword ptr [edi+14h]", "add     esp, 10h", "mov     eax, edi; parser", "mov     dword ptr [edi+0E4h], 0", "mov     edx, [esp+1Ch+encodingName]; encodingName", "call    parserInit", "mov     esi, [edi+160h]", "mov     ebx, [esi+14h]", "mov     eax, [esi+1Ch]", "lea     ebp, [ebx+eax*4]", "jmp     short loc_C05D"], ["mov     eax, [ebx]", "add     ebx, 4", "test    eax, eax", "jnz     loc_C2C0"], ["cmp     ebp, ebx", "jnz     short loc_C050"], ["mov     ebp, [esi+8]", "xor     ebx, ebx", "test    ebp, ebp", "jz      short loc_C092"], ["lea     ebp, ds:0[ebx*4]", "mov     edx, [esi]", "sub     esp, 0Ch", "mov     eax, [esi+10h]", "mov     edx, [edx+ebp]", "inc     ebx", "push    edx", "call    dword ptr [eax+8]", "mov     eax, [esi]", "add     esp, 10h", "mov     dword ptr [eax+ebp], 0", "cmp     ebx, [esi+8]", "jb      short loc_C06A"], ["mov     ecx, [esi+8Ch]", "xor     ebx, ebx", "mov     dword ptr [esi+0Ch], 0", "mov     byte ptr [esi+83h], 0", "test    ecx, ecx", "jz      short loc_C0E6"], ["lea     esi, [esi+0]"], ["lea     ebp, ds:0[ebx*4]", "mov     edx, [esi+84h]", "sub     esp, 0Ch", "mov     eax, [esi+94h]", "mov     edx, [edx+ebp]", "inc     ebx", "push    edx", "call    dword ptr [eax+8]", "mov     eax, [esi+84h]", "add     esp, 10h", "mov     dword ptr [eax+ebp], 0", "cmp     ebx, [esi+8Ch]", "jb      short loc_C0B0"], ["mov     ecx, [esi+1Ch]", "xor     ebx, ebx", "mov     dword ptr [esi+90h], 0", "test    ecx, ecx", "jz      short loc_C12A"], ["lea     esi, [esi+0]"], ["lea     ebp, ds:0[ebx*4]", "mov     edx, [esi+14h]", "sub     esp, 0Ch", "mov     eax, [esi+24h]", "mov     edx, [edx+ebp]", "inc     ebx", "push    edx", "call    dword ptr [eax+8]", "mov     eax, [esi+14h]", "add     esp, 10h", "mov     dword ptr [eax+ebp], 0", "cmp     ebx, [esi+1Ch]", "jb      short loc_C100"], ["mov     ecx, [esi+30h]", "xor     ebx, ebx", "mov     dword ptr [esi+20h], 0", "test    ecx, ecx", "jz      short loc_C16A"], ["lea     esi, [esi+0]"], ["lea     ebp, ds:0[ebx*4]", "mov     edx, [esi+28h]", "sub     esp, 0Ch", "mov     eax, [esi+38h]", "mov     ecx, [edx+ebp]", "inc     ebx", "push    ecx", "call    dword ptr [eax+8]", "mov     eax, [esi+28h]", "add     esp, 10h", "mov     dword ptr [eax+ebp], 0", "cmp     ebx, [esi+30h]", "jb      short loc_C140"], ["mov     ebp, [esi+44h]", "xor     ebx, ebx", "mov     dword ptr [esi+34h], 0", "test    ebp, ebp", "jz      short loc_C1AA"], ["lea     esi, [esi+0]"], ["lea     ebp, ds:0[ebx*4]", "mov     edx, [esi+3Ch]", "sub     esp, 0Ch", "mov     eax, [esi+4Ch]", "mov     edx, [edx+ebp]", "inc     ebx", "push    edx", "call    dword ptr [eax+8]", "mov     eax, [esi+3Ch]", "add     esp, 10h", "mov     dword ptr [eax+ebp], 0", "cmp     ebx, [esi+44h]", "jb      short loc_C180"], ["mov     ecx, [esi+54h]", "mov     dword ptr [esi+48h], 0", "mov     eax, [esi+50h]", "test    ecx, ecx", "jz      loc_C2F0"], ["test    eax, eax", "jnz     short loc_C1CA"], ["jmp     short loc_C1D7"], ["mov     eax, edx"], ["mov     edx, [eax]", "mov     [eax], ecx", "test    edx, edx", "mov     [esi+54h], eax", "mov     ecx, eax", "jnz     short loc_C1C8"], ["mov     ecx, [esi+6Ch]", "mov     dword ptr [esi+50h], 0", "mov     dword ptr [esi+60h], 0", "mov     dword ptr [esi+5Ch], 0", "mov     dword ptr [esi+58h], 0", "mov     eax, [esi+68h]", "test    ecx, ecx", "jz      loc_C2E8"], ["test    eax, eax", "jnz     short loc_C20A"], ["jmp     short loc_C217"], ["mov     eax, edx"], ["mov     edx, [eax]", "mov     [eax], ecx", "test    edx, edx", "mov     [esi+6Ch], eax", "mov     ecx, eax", "jnz     short loc_C208"], ["sub     esp, 0Ch", "mov     eax, [esi+0B8h]", "mov     dword ptr [esi+68h], 0", "mov     dword ptr [esi+78h], 0", "mov     dword ptr [esi+74h], 0", "mov     dword ptr [esi+70h], 0", "mov     dword ptr [esi+98h], 0", "mov     dword ptr [esi+9Ch], 0", "mov     byte ptr [esi+0A0h], 0", "push    eax", "call    dword ptr [edi+14h]", "mov     dword ptr [esi+0B8h], 0", "pop     edx", "mov     ecx, [esi+0A4h]", "push    ecx", "call    dword ptr [edi+14h]", "add     esp, 10h", "mov     dword ptr [esi+0A4h], 0", "mov     dword ptr [esi+0B4h], 0", "mov     dword ptr [esi+0ACh], 0", "mov     dword ptr [esi+0B0h], 0", "mov     dword ptr [esi+0A8h], 0", "mov     word ptr [esi+80h], 1", "mov     byte ptr [esi+82h], 0", "add     esp, 0Ch", "mov     al, 1", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edx, [eax+10h]", "test    edx, edx", "jz      loc_C05D"], ["sub     esp, 0Ch", "mov     ecx, [eax+14h]", "push    ecx", "call    dword ptr [edi+14h]", "add     esp, 10h", "jmp     loc_C05D"], ["mov     [edi+1A0h], eax", "jmp     loc_BF9A"], ["mov     [esi+6Ch], eax", "jmp     loc_C217"], ["mov     [esi+54h], eax", "jmp     loc_C1D7"], ["mov     [edi+1B8h], eax", "jmp     loc_BFF2"]], "XML_SetEncoding": [["push    ebx", "sub     esp, 8", "mov     ebx, [esp+0Ch+parser]", "test    ebx, ebx", "jz      short loc_C380"], ["mov     eax, [ebx+1DCh]", "and     eax, 0FFFFFFFDh", "dec     eax", "jz      short loc_C380"], ["sub     esp, 0Ch", "mov     eax, [ebx+0E4h]", "push    eax", "call    dword ptr [ebx+14h]", "mov     eax, [esp+1Ch+encodingName]", "add     esp, 10h", "test    eax, eax", "jz      short loc_C368"], ["lea     edx, [ebx+0Ch]", "mov     eax, [esp+0Ch+encodingName]", "call    copyString", "mov     [ebx+0E4h], eax", "test    eax, eax", "setnz   al", "add     esp, 8", "and     eax, 0FFh", "pop     ebx", "retn"], ["mov     dword ptr [ebx+0E4h], 0", "add     esp, 8", "mov     eax, 1", "pop     ebx", "retn"], ["add     esp, 8", "xor     eax, eax", "pop     ebx", "retn"]], "XML_ParserFree": [["push    ebp", "push    edi", "push    esi", "push    ebx", "sub     esp, 1Ch", "mov     esi, [esp+2Ch+parser]", "test    esi, esi", "jz      loc_C5F7"], ["mov     edi, [esi+168h]", "test    tagList, tagList", "jz      short loc_C3FE"], ["lea     esi, [esi+0]"], ["mov     eax, [p]", "sub     esp, 0Ch", "mov     ebx, [p+24h]", "mov     [esp+38h+var_20], eax", "push    ebx", "call    dword ptr [esi+14h]", "mov     ebx, [p+2Ch]", "add     esp, 10h", "test    ebx, ebx", "jz      short loc_C3EC"], ["lea     esi, [esi+0]"], ["mov     ebp, ebx", "sub     esp, 0Ch", "mov     ebx, [ebx+4]", "mov     ecx, [ebp+10h]", "push    ecx", "call    dword ptr [esi+14h]", "mov     [esp+3Ch+var_3C], ebp", "call    dword ptr [esi+14h]", "add     esp, 10h", "test    ebx, ebx", "jnz     short loc_C3D0"], ["sub     esp, 0Ch", "push    p", "call    dword ptr [esi+14h]", "mov     p, [esp+3Ch+var_20]", "add     esp, 10h", "test    tagList, tagList", "jnz     short loc_C3B0"], ["mov     tagList, [esi+16Ch]", "test    edi, edi", "jz      short loc_C414"], ["mov     dword ptr [esi+16Ch], 0", "jmp     short loc_C3B0"], ["mov     eax, [esi+128h]", "jmp     short loc_C42F"], ["sub     esp, 0Ch", "mov     ebx, [openEntity+8]", "push    openEntity", "call    dword ptr [esi+14h]", "add     esp, 10h", "mov     eax, entityList"], ["test    entityList, entityList", "jnz     short loc_C420"], ["mov     entityList, [esi+12Ch]", "test    eax, eax", "jz      short loc_C449"], ["mov     dword ptr [esi+12Ch], 0", "jmp     short loc_C420"], ["mov     ebx, [esi+174h]", "test    ebx, ebx", "jz      short loc_C474"], ["lea     esi, [esi+0]", "nop"], ["mov     edi, ebx", "sub     esp, 0Ch", "mov     ebx, [ebx+4]", "mov     edx, [edi+10h]", "push    edx", "call    dword ptr [esi+14h]", "mov     [esp+3Ch+var_3C], edi", "call    dword ptr [esi+14h]", "add     esp, 10h", "test    ebx, ebx", "jnz     short loc_C458"], ["mov     ebx, [esi+170h]", "test    ebx, ebx", "jz      short loc_C49C"], ["xchg    ax, ax"], ["mov     edi, ebx", "sub     esp, 0Ch", "mov     ebx, [ebx+4]", "mov     eax, [edi+10h]", "push    eax", "call    dword ptr [esi+14h]", "mov     [esp+3Ch+var_3C], edi", "call    dword ptr [esi+14h]", "add     esp, 10h", "test    ebx, ebx", "jnz     short loc_C480"], ["lea     eax, [esi+19Ch]; pool", "call    poolDestroy", "lea     eax, [esi+1B4h]; pool", "call    poolDestroy", "sub     esp, 0Ch", "mov     eax, [esi+0E4h]", "push    eax", "call    dword ptr [esi+14h]", "add     esp, 10h", "cmp     byte ptr [esi+1E4h], 0", "jnz     loc_C570"], ["mov     edi, [esi+160h]", "test    edi, edi", "jz      loc_C570"], ["mov     eax, [esi+1D8h]", "mov     ebx, [edi+14h]", "mov     [esp+2Ch+var_20], eax", "mov     eax, [edi+1Ch]", "lea     ebp, [ebx+eax*4]", "jmp     short loc_C505"], ["mov     eax, [ebx]", "add     ebx, 4", "test    eax, eax", "jnz     loc_C5DA"], ["cmp     ebp, ebx", "jnz     short loc_C4F8"], ["mov     eax, edi; table", "call    hashTableDestroy", "lea     eax, [edi+84h]; table", "call    hashTableDestroy", "lea     eax, [edi+14h]; table", "call    hashTableDestroy", "lea     eax, [edi+28h]; table", "call    hashTableDestroy", "lea     eax, [edi+3Ch]; table", "call    hashTableDestroy", "lea     eax, [edi+50h]; pool", "call    poolDestroy", "lea     eax, [edi+68h]; pool", "call    poolDestroy", "mov     eax, [esp+2Ch+var_20]", "test    eax, eax", "jnz     short loc_C566"], ["sub     esp, 0Ch", "mov     ebp, [edi+0B8h]", "push    ebp", "call    dword ptr [esi+14h]", "pop     eax", "mov     eax, [edi+0A4h]", "push    eax", "call    dword ptr [esi+14h]", "add     esp, 10h"], ["sub     esp, 0Ch", "push    edi", "call    dword ptr [esi+14h]", "add     esp, 10h"], ["sub     esp, 0Ch", "mov     ebx, [esi+184h]", "push    ebx", "call    dword ptr [esi+14h]", "pop     edi", "mov     ebp, [esi+1CCh]", "push    ebp", "call    dword ptr [esi+14h]", "pop     eax", "mov     eax, [esi+8]", "push    eax", "call    dword ptr [esi+14h]", "pop     eax", "mov     eax, [esi+2Ch]", "push    eax", "call    dword ptr [esi+14h]", "pop     eax", "mov     edx, [esi+188h]", "push    edx", "call    dword ptr [esi+14h]", "pop     ecx", "mov     ebx, [esi+0ECh]", "push    ebx", "call    dword ptr [esi+14h]", "mov     eax, [esi+0F8h]", "add     esp, 10h", "test    eax, eax", "jz      short loc_C5CA"], ["sub     esp, 0Ch", "mov     ecx, [esi+0F0h]", "push    ecx", "call    eax", "add     esp, 10h"], ["mov     [esp+2Ch+parser], esi", "mov     eax, [esi+14h]", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "jmp     eax"], ["mov     edx, [eax+10h]", "test    edx, edx", "jz      loc_C505"], ["sub     esp, 0Ch", "mov     eax, [eax+14h]", "push    eax", "call    dword ptr [esi+14h]", "add     esp, 10h", "jmp     loc_C505"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "parserCreate": [["push    ebp", "push    edi", "mov     edi, nameSep", "push    esi", "mov     esi, encodingName", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "test    memsuite_0, memsuite_0", "jz      loc_C818"], ["sub     esp, 0Ch", "push    220h", "mov     [esp+3Ch+memsuite], memsuite_0", "call    dword ptr [memsuite_0]", "add     esp, 10h", "mov     ebp, eax", "test    parser, parser", "mov     edx, [esp+2Ch+memsuite]", "jz      loc_C7F2"], ["mov     parser, [edx]", "mov     [parser+0Ch], eax", "mov     ecx, [edx+4]", "mov     [parser+10h], ecx", "mov     edx, [edx+8]", "mov     [parser+14h], edx"], ["sub     esp, 0Ch", "mov     dword ptr [parser+8], 0", "mov     dword ptr [parser+20h], 0", "mov     dword ptr [parser+178h], 10h", "push    100h", "call    eax", "add     esp, 10h", "mov     [parser+184h], eax", "test    eax, eax", "jz      loc_C7E8"], ["sub     esp, 0Ch", "push    400h", "call    dword ptr [parser+0Ch]", "add     esp, 10h", "mov     [parser+2Ch], eax", "test    eax, eax", "jz      loc_C9C0"], ["add     eax, 400h", "lea     edx, [parser+0Ch]", "mov     [parser+30h], eax", "mov     eax, [esp+2Ch+dtd]", "test    eax, eax", "jz      loc_C850"], ["mov     eax, [esp+2Ch+dtd]", "mov     [parser+160h], eax"], ["mov     [parser+1B0h], edx", "mov     [parser+1C8h], edx", "mov     dword ptr [parser+174h], 0", "mov     dword ptr [parser+16Ch], 0", "mov     dword ptr [parser+12Ch], 0", "mov     dword ptr [parser+1D0h], 0", "mov     dword ptr [parser+1CCh], 0", "mov     dword ptr [parser+7Ch], 0", "mov     dword ptr [parser+0F4h], 0", "mov     byte ptr [parser+1D4h], 21h ; '!'", "mov     dword ptr [parser+188h], 0", "mov     dword ptr [parser+18Ch], 0", "mov     byte ptr [parser+190h], 0", "mov     dword ptr [parser+0E4h], 0", "mov     word ptr [parser+0E8h], 0", "mov     dword ptr [parser+19Ch], 0", "mov     dword ptr [parser+1A0h], 0", "mov     dword ptr [parser+1ACh], 0", "mov     dword ptr [parser+1A8h], 0", "mov     dword ptr [parser+1A4h], 0", "mov     dword ptr [parser+1B4h], 0", "mov     dword ptr [parser+1B8h], 0", "mov     dword ptr [parser+1C4h], 0", "mov     dword ptr [parser+1C0h], 0", "mov     dword ptr [parser+1BCh], 0", "mov     edx, encodingName; encodingName", "mov     eax, parser; parser", "call    parserInit", "test    encodingName, encodingName", "jz      short loc_C7BE"], ["mov     encodingName, [parser+0E4h]", "test    esi, esi", "jz      loc_C9E0"], ["test    nameSep, nameSep", "jz      short loc_C800"], ["mov     byte ptr [parser+0E8h], 1", "call    XmlGetUtf8InternalEncodingNS", "mov     [parser+0E0h], eax", "mov     al, [nameSep]", "mov     [parser+1D4h], al"], ["add     esp, 1Ch", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     nameSep", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    parser", "call    dword ptr [parser+14h]", "add     esp, 10h"], ["add     esp, 1Ch", "xor     parser, parser", "mov     eax, ebp", "pop     ebx", "pop     encodingName", "pop     nameSep", "pop     ebp", "retn"], ["call    XmlGetUtf8InternalEncoding", "mov     [parser+0E0h], eax", "add     esp, 1Ch", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     nameSep", "pop     ebp", "retn"], ["sub     esp, 0Ch", "push    220h; size", "call    _malloc", "add     esp, 10h", "mov     ebp, eax", "test    parser, parser", "jz      short loc_C7F2"], ["mov     edx, ds:(realloc_ptr - 2DF78h)[ebx]", "mov     parser, ds:(malloc_ptr - 2DF78h)[ebx]", "mov     [parser+10h], edx", "mov     edx, ds:(free_ptr - 2DF78h)[ebx]", "mov     [parser+0Ch], eax", "mov     [parser+14h], edx", "jmp     loc_C64E"], ["mov     [esp+2Ch+memsuite], edx", "sub     esp, 0Ch", "push    0BCh", "call    dword ptr [parser+0Ch]", "add     esp, 10h", "test    eax, eax", "jz      loc_C9F8"], ["mov     edx, [esp+2Ch+memsuite]", "mov     dword ptr [eax+50h], 0", "mov     dword ptr [eax+54h], 0", "mov     dword ptr [eax+60h], 0", "mov     dword ptr [eax+5Ch], 0", "mov     dword ptr [eax+58h], 0", "mov     [eax+64h], edx", "mov     dword ptr [eax+68h], 0", "mov     dword ptr [eax+6Ch], 0", "mov     dword ptr [eax+78h], 0", "mov     dword ptr [eax+74h], 0", "mov     dword ptr [eax+70h], 0", "mov     [eax+7Ch], edx", "mov     byte ptr [eax+4], 0", "mov     dword ptr [eax+8], 0", "mov     dword ptr [eax+0Ch], 0", "mov     dword ptr [eax], 0", "mov     [eax+10h], edx", "mov     byte ptr [eax+18h], 0", "mov     dword ptr [eax+1Ch], 0", "mov     dword ptr [eax+20h], 0", "mov     dword ptr [eax+14h], 0", "mov     [eax+24h], edx", "mov     byte ptr [eax+2Ch], 0", "mov     dword ptr [eax+30h], 0", "mov     dword ptr [eax+34h], 0", "mov     dword ptr [eax+28h], 0", "mov     [eax+38h], edx", "mov     byte ptr [eax+40h], 0", "mov     dword ptr [eax+44h], 0", "mov     dword ptr [eax+48h], 0", "mov     dword ptr [eax+3Ch], 0", "mov     [eax+4Ch], edx", "mov     dword ptr [eax+8Ch], 0", "mov     dword ptr [eax+90h], 0", "mov     [eax+94h], edx", "mov     dword ptr [eax+98h], 0", "mov     dword ptr [eax+9Ch], 0", "mov     byte ptr [eax+0A0h], 0", "mov     dword ptr [eax+0B8h], 0", "mov     dword ptr [eax+0A4h], 0", "mov     dword ptr [eax+0B4h], 0", "mov     dword ptr [eax+0ACh], 0", "mov     dword ptr [eax+0B0h], 0", "mov     dword ptr [eax+0A8h], 0", "mov     dword ptr [eax+80h], 1", "mov     dword ptr [eax+84h], 0", "mov     byte ptr [eax+88h], 0", "mov     [parser+160h], eax", "jmp     loc_C6BB"], ["sub     esp, 0Ch"], ["mov     eax, [parser+184h]", "push    eax", "call    dword ptr [parser+14h]", "mov     [esp+3Ch+var_3C], parser", "call    dword ptr [parser+14h]", "add     esp, 10h", "xor     parser, parser", "jmp     loc_C7DC"], ["sub     esp, 0Ch", "push    parser; parser", "xor     parser, parser", "call    _XML_ParserFree", "add     esp, 10h", "jmp     loc_C7DC"], ["sub     esp, 0Ch", "mov     edx, [parser+2Ch]", "mov     dword ptr [parser+160h], 0", "push    edx", "call    dword ptr [parser+14h]", "pop     ecx", "jmp     short loc_C9C3"]], "XML_ExternalEntityParserCreate": [["push    ebp", "call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 9Ch", "mov     [esp+0ACh+var_90], eax", "mov     eax, [esp+0ACh+context]", "mov     [esp+0ACh+var_94], eax", "mov     edi, [esp+0ACh+oldParser]", "mov     ebx, large gs:14h", "mov     [esp+0ACh+var_20], ebx", "xor     ebx, ebx", "mov     eax, [esp+0ACh+encodingName]; encodingName", "test    parser_0, parser_0", "jz      loc_CE50"], ["mov     esi, [parser_0+160h]", "mov     edx, [parser_0+34h]", "mov     [esp+0ACh+oldDtd], esi", "mov     oldDtd_0, [parser_0+38h]", "mov     [esp+0ACh+oldStartElementHandler], edx", "mov     [esp+0ACh+oldEndElementHandler], esi", "mov     oldStartElementHandler_0, [parser_0+3Ch]", "mov     oldEndElementHandler_0, [parser_0+40h]", "mov     [esp+0ACh+oldCharacterDataHandler], edx", "mov     [esp+0ACh+oldProcessingInstructionHandler], esi", "mov     oldCharacterDataHandler_0, [parser_0+44h]", "mov     oldProcessingInstructionHandler_0, [parser_0+48h]", "mov     [esp+0ACh+oldCommentHandler], edx", "mov     [esp+0ACh+oldStartCdataSectionHandler], esi", "mov     oldCommentHandler_0, [parser_0+4Ch]", "mov     oldStartCdataSectionHandler_0, [parser_0+50h]", "mov     [esp+0ACh+oldEndCdataSectionHandler], edx", "mov     [esp+0ACh+oldDefaultHandler], esi", "mov     oldEndCdataSectionHandler_0, [parser_0+5Ch]", "mov     oldDefaultHandler_0, [parser_0+60h]", "mov     [esp+0ACh+oldUnparsedEntityDeclHandler], edx", "mov     [esp+0ACh+oldNotationDeclHandler], esi", "mov     oldUnparsedEntityDeclHandler_0, [parser_0+64h]", "mov     oldNotationDeclHandler_0, [parser_0+68h]", "mov     [esp+0ACh+oldStartNamespaceDeclHandler], edx", "mov     [esp+0ACh+oldEndNamespaceDeclHandler], esi", "mov     oldStartNamespaceDeclHandler_0, [parser_0+70h]", "mov     oldEndNamespaceDeclHandler_0, [parser_0+78h]", "mov     ecx, [parser_0+6Ch]", "mov     [esp+0ACh+oldExternalEntityRefHandler], edx", "mov     [esp+0ACh+oldSkippedEntityHandler], esi", "mov     [esp+0ACh+oldNotStandaloneHandler], ecx", "mov     oldNotStandaloneHandler_0, [parser_0+7Ch]", "mov     oldExternalEntityRefHandler_0, [parser_0+80h]", "mov     [esp+0ACh+oldUnknownEncodingHandler], ecx", "mov     oldUnknownEncodingHandler_0, [parser_0+88h]", "mov     [esp+0ACh+oldElementDeclHandler], edx", "mov     [esp+0ACh+oldEntityDeclHandler], ecx", "mov     oldElementDeclHandler_0, [parser_0+8Ch]", "mov     cl, [parser_0+130h]", "mov     [esp+0ACh+oldXmlDeclHandler], edx", "mov     [esp+0ACh+oldDefaultExpandInternalEntities], cl", "mov     edx, [parser_0+1E8h]", "mov     ecx, [parser_0+74h]", "mov     oldSkippedEntityHandler_0, [parser_0+84h]", "mov     [esp+0ACh+oldExternalEntityRefHandlerArg], ecx", "mov     [esp+0ACh+oldParamEntityParsing], edx", "mov     ecx, [parser_0+110h]", "mov     edx, [parser_0+1ECh]", "mov     [esp+0ACh+oldAttlistDeclHandler], esi", "mov     [esp+0ACh+oldInEntityValue], ecx", "mov     oldAttlistDeclHandler_0, [parser_0+154h]", "mov     cl, [parser_0+0E9h]", "mov     [esp+0ACh+oldhash_secret_salt], edx", "mov     edx, [esp+0ACh+var_94]", "mov     [esp+0ACh+oldDeclElementType], esi", "xor     ebp, ebp", "mov     oldDeclElementType_0, [parser_0]", "mov     ebx, [parser_0+4]", "mov     [esp+0ACh+oldns_triplets], cl", "test    edx, edx", "jz      loc_CFB0"], ["cmp     byte ptr [parser_0+0E8h], 0", "lea     edx, [parser_0+0Ch]; memsuite", "jnz     loc_CE78"], ["sub     esp, 0Ch", "xor     oldns_triplets_0, oldns_triplets_0; nameSep", "push    newDtd; dtd", "call    parserCreate", "add     esp, 10h", "mov     newDtd, eax"], ["test    ebp, ebp", "jz      loc_CE50"], ["mov     parser_0, [esp+0ACh+oldStartElementHandler]", "cmp     oldUserData, oldHandlerArg", "mov     [parser_0+34h], eax", "mov     eax, [esp+0ACh+oldEndElementHandler]", "mov     [parser_0+38h], eax", "mov     eax, [esp+0ACh+oldCharacterDataHandler]", "mov     [parser_0+3Ch], eax", "mov     eax, [esp+0ACh+oldProcessingInstructionHandler]", "mov     [parser_0+40h], eax", "mov     eax, [esp+0ACh+oldCommentHandler]", "mov     [parser_0+44h], eax", "mov     eax, [esp+0ACh+oldStartCdataSectionHandler]", "mov     [parser_0+48h], eax", "mov     eax, [esp+0ACh+oldEndCdataSectionHandler]", "mov     [parser_0+4Ch], eax", "mov     eax, [esp+0ACh+oldDefaultHandler]", "mov     [parser_0+50h], eax", "mov     eax, [esp+0ACh+oldUnparsedEntityDeclHandler]", "mov     [parser_0+5Ch], eax", "mov     eax, [esp+0ACh+oldNotationDeclHandler]", "mov     [parser_0+60h], eax", "mov     eax, [esp+0ACh+oldStartNamespaceDeclHandler]", "mov     [parser_0+64h], eax", "mov     eax, [esp+0ACh+oldEndNamespaceDeclHandler]", "mov     [parser_0+68h], eax", "mov     eax, [esp+0ACh+oldNotStandaloneHandler]", "mov     [parser_0+6Ch], eax", "mov     eax, [esp+0ACh+oldExternalEntityRefHandler]", "mov     [parser_0+70h], eax", "mov     eax, [esp+0ACh+oldSkippedEntityHandler]", "mov     [parser_0+78h], eax", "mov     eax, [esp+0ACh+oldUnknownEncodingHandler]", "mov     [parser_0+7Ch], eax", "mov     eax, [esp+0ACh+oldElementDeclHandler]", "mov     [parser_0+80h], eax", "mov     eax, [esp+0ACh+oldAttlistDeclHandler]", "mov     [parser_0+84h], eax", "mov     eax, [esp+0ACh+oldEntityDeclHandler]", "mov     [parser_0+88h], eax", "mov     eax, [esp+0ACh+oldXmlDeclHandler]", "mov     [parser_0+8Ch], eax", "mov     eax, [esp+0ACh+oldDeclElementType]", "mov     [parser_0+154h], eax", "mov     [parser_0+0], oldUserData", "jz      short loc_CCD4"], ["mov     oldHandlerArg, parser_0"], ["mov     eax, [esp+0ACh+oldExternalEntityRefHandlerArg]", "mov     [parser_0+4], ebx", "cmp     edi, eax", "jz      short loc_CCE2"], ["mov     [parser_0+74h], eax"], ["mov     al, [esp+0ACh+oldDefaultExpandInternalEntities]", "mov     ecx, [esp+0ACh+var_94]", "mov     [parser_0+130h], al", "mov     al, [esp+0ACh+oldns_triplets]", "mov     [parser_0+0E9h], al", "mov     eax, [esp+0ACh+oldhash_secret_salt]", "mov     [parser_0+1ECh], eax", "mov     eax, [esp+0ACh+oldParamEntityParsing]", "mov     [parser_0+1E8h], eax", "mov     eax, [esp+0ACh+oldInEntityValue]", "mov     [parser_0+1D8h], edi", "mov     [parser_0+110h], eax", "test    ecx, ecx", "jz      loc_CFC0"], ["mov     eax, [esp+0ACh+oldDtd]", "mov     oldUserData, [parser_0+160h]", "mov     [esp+0ACh+oldStartElementHandler], esi", "mov     ebx, [eax+3Ch]", "mov     eax, [eax+44h]", "lea     eax, [ebx+eax*4]", "mov     [esp+0ACh+oldCharacterDataHandler], eax", "lea     eax, [esi+50h]", "mov     [esp+0ACh+oldEndElementHandler], eax", "add     esi, 3Ch ; '<'", "jmp     short loc_CD5D"], ["mov     eax, [ebx]", "add     ebx, 4", "test    eax, eax", "jnz     loc_CEA8"], ["cmp     [esp+0ACh+oldCharacterDataHandler], ebx", "jnz     short loc_CD50"], ["mov     ebx, [esp+0ACh+oldDtd]", "mov     esi, [ebx+28h]", "mov     eax, [ebx+30h]", "mov     [esp+0ACh+oldCharacterDataHandler], esi", "lea     eax, [esi+eax*4]", "mov     [esp+0ACh+oldProcessingInstructionHandler], eax", "mov     eax, [esp+0ACh+oldStartElementHandler]", "add     eax, 28h ; '('", "mov     [esp+0ACh+oldCommentHandler], eax", "lea     eax, [ebx+98h]", "mov     [esp+0ACh+oldStartCdataSectionHandler], eax", "jmp     short loc_CDAA"], ["mov     edx, [esp+0ACh+oldCharacterDataHandler]", "add     edx, 4", "mov     [esp+0ACh+oldCharacterDataHandler], edx", "mov     eax, [esp+0ACh+oldCharacterDataHandler]", "mov     esi, [eax-4]", "test    esi, esi", "jnz     loc_CEE8"], ["mov     esi, [esp+0ACh+oldCharacterDataHandler]", "cmp     [esp+0ACh+oldProcessingInstructionHandler], esi", "jnz     short loc_CD90"], ["mov     eax, [esp+0ACh+oldDtd]", "mov     [esp+0ACh+oldDefaultHandler], parser_0", "mov     [esp+0ACh+oldCommentHandler], edi", "mov     esi, [eax+14h]", "mov     eax, [eax+1Ch]", "mov     [esp+0ACh+oldCharacterDataHandler], esi", "lea     eax, [esi+eax*4]", "mov     [esp+0ACh+oldEndCdataSectionHandler], eax", "mov     eax, [esp+0ACh+oldStartElementHandler]", "lea     edx, [eax+14h]", "add     eax, 28h ; '('", "mov     [esp+0ACh+oldUnparsedEntityDeclHandler], edx", "mov     [esp+0ACh+oldStartCdataSectionHandler], eax", "jmp     short loc_CE02"], ["mov     eax, [esp+0ACh+oldCharacterDataHandler]", "add     eax, 4", "mov     [esp+0ACh+oldCharacterDataHandler], eax", "mov     eax, [esp+0ACh+oldCharacterDataHandler]", "mov     ebp, [eax-4]", "test    ebp, ebp", "jnz     loc_CFF0"], ["mov     edx, [esp+0ACh+oldCharacterDataHandler]", "cmp     [esp+0ACh+oldEndCdataSectionHandler], edx", "jnz     short loc_CDE8"], ["mov     edi, [esp+0ACh+oldCommentHandler]", "mov     ebp, [esp+0ACh+oldDefaultHandler]", "push    eax; oldTable", "push    eax; newPool", "mov     eax, [esp+0B4h+oldDtd]", "mov     edx, [eax+8]", "push    edx; newTable", "mov     ecx, ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax]", "mov     eax, edi", "push    ecx; oldParser", "mov     ecx, [esp+0BCh+oldEndElementHandler]", "mov     edx, [esp+0BCh+oldStartElementHandler]", "call    copyEntityTable", "add     esp, 10h", "test    eax, eax", "jnz     loc_D148"], ["lea     esi, [esi+0]", "nop"], ["sub     esp, 0Ch", "push    ebp; parser", "mov     ebx, [esp+0BCh+var_90]", "call    _XML_ParserFree", "add     esp, 10h"], ["xor     ebp, ebp"], ["mov     eax, [esp+0ACh+var_20]", "xor     eax, large gs:14h", "jnz     loc_D220"], ["add     esp, 9Ch", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     cl, [parser_0+1D4h]", "mov     [esp+0ACh+tmp+1], 0", "mov     [esp+0ACh+tmp], cl", "lea     ecx, [esp+0ACh+tmp]; nameSep", "sub     esp, 0Ch", "push    newDtd; dtd", "call    parserCreate", "add     esp, 10h", "mov     newDtd, eax", "jmp     loc_CC21"], ["mov     edx, ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax]; s", "mov     eax, [esp+0ACh+oldEndElementHandler]; pool", "call    poolCopyString", "mov     ecx, eax; name", "test    eax, eax", "jz      short loc_CE40"], ["sub     esp, 0Ch", "mov     edx, esi; table", "mov     eax, edi; parser", "push    8; createSize", "call    lookup", "add     esp, 10h", "test    eax, eax", "jnz     loc_CD5D"], ["sub     esp, 0Ch", "push    parser_0; parser", "mov     ebx, [esp+0BCh+var_90]", "call    _XML_ParserFree", "add     esp, 10h", "jmp     loc_CE50"], ["mov     edx, [esp+0ACh+oldStartElementHandler]", "mov     eax, [edx+5Ch]", "cmp     eax, [edx+58h]", "jz      loc_CF90"], ["mov     ecx, [esp+0ACh+oldStartElementHandler]", "lea     edx, [eax+1]", "mov     [ecx+5Ch], edx", "mov     byte ptr ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax], 0", "mov     edx, [esi]; s", "mov     eax, [esp+0ACh+oldEndElementHandler]; pool", "call    poolCopyString", "test    eax, eax", "jz      loc_CE40"], ["sub     esp, 0Ch", "lea     ecx, [eax+1]; name", "mov     eax, edi; parser", "push    0Ch; createSize", "mov     edx, [esp+0BCh+oldCommentHandler]; table", "call    lookup", "add     esp, 10h", "mov     ebx, eax", "test    eax, eax", "jz      loc_CE40"], ["mov     al, [esi+8]", "mov     [ebx+8], al", "mov     eax, [esi+4]", "test    eax, eax", "jz      loc_CDAA"], ["mov     al, [esi+9]", "mov     [ebx+9], al", "mov     eax, [esi+4]", "cmp     eax, [esp+0ACh+oldStartCdataSectionHandler]", "jz      short loc_CF78"], ["mov     esi, [esp+0ACh+oldStartElementHandler]", "sub     esp, 0Ch", "push    0; createSize", "lea     edx, [esi+3Ch]; table", "mov     ecx, ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax]; name", "mov     eax, edi; parser", "call    lookup", "add     esp, 10h", "mov     [ebx+4], eax", "jmp     loc_CDAA"], ["mov     ecx, [esp+0ACh+oldStartElementHandler]", "lea     eax, [ecx+98h]", "mov     [ebx+4], eax", "jmp     loc_CDAA"], ["mov     eax, [esp+0ACh+oldEndElementHandler]; pool", "call    poolGrow", "test    al, al", "jz      loc_CE40"], ["mov     eax, [esp+0ACh+oldStartElementHandler]", "mov     eax, [eax+5Ch]", "jmp     loc_CEF8"], ["mov     ebp, [esp+0ACh+oldDtd]", "jmp     loc_CC01"], ["sub     esp, 0Ch", "lea     eax, [parser_0+0FCh]", "mov     byte ptr [parser_0+1E4h], 1", "push    eax; state", "mov     ebx, [esp+0BCh+var_90]", "call    XmlPrologStateInitExternalEntity", "add     esp, 10h", "lea     eax, [ebx-22838h]", "mov     [parser_0+114h], eax", "jmp     loc_CE52"], ["mov     edx, [ebp+0]; s", "mov     eax, [esp+0ACh+oldEndElementHandler]; pool", "call    poolCopyString", "mov     ecx, eax; name", "test    eax, eax", "jz      loc_D138"], ["sub     esp, 0Ch", "push    18h; createSize", "mov     edx, [esp+0BCh+oldUnparsedEntityDeclHandler]; table", "mov     eax, [esp+0BCh+oldCommentHandler]; parser", "call    lookup", "add     esp, 10h", "mov     esi, eax", "test    eax, eax", "jz      loc_D138"], ["mov     eax, [ebp+0Ch]", "test    eax, eax", "jz      short loc_D04B"], ["sub     esp, 0Ch", "lea     eax, [eax+eax*2]", "shl     eax, 2", "push    eax", "mov     eax, [esp+0BCh+oldDefaultHandler]", "call    dword ptr [eax+0Ch]", "add     esp, 10h", "mov     [esi+14h], eax", "test    eax, eax", "jz      loc_D138"], ["mov     eax, [ebp+8]", "test    eax, eax", "jz      short loc_D06C"], ["sub     esp, 0Ch", "push    0; createSize", "mov     ecx, ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax]; name", "mov     edx, [esp+0BCh+oldStartCdataSectionHandler]; table", "mov     eax, [esp+0BCh+oldCommentHandler]; parser", "call    lookup", "add     esp, 10h", "mov     [esi+8], eax"], ["mov     eax, [ebp+0Ch]", "mov     [esi+0Ch], eax", "mov     [esi+10h], eax", "mov     edx, [ebp+4]", "test    edx, edx", "jz      short loc_D09E"], ["mov     eax, [esp+0ACh+oldStartElementHandler]", "sub     esp, 0Ch", "add     eax, 3Ch ; '<'", "push    0; createSize", "mov     ecx, [edx]; name", "mov     edx, eax; table", "mov     eax, [esp+0BCh+oldCommentHandler]; parser", "call    lookup", "add     esp, 10h", "mov     [esi+4], eax", "mov     eax, [esi+0Ch]"], ["test    eax, eax", "jle     loc_CE02"], ["xor     edi, edi", "jmp     short loc_D0DE"], ["mov     eax, [esi+14h]", "add     eax, ebx", "mov     [esp+0ACh+oldProcessingInstructionHandler], eax", "mov     eax, [esp+0ACh+oldEndElementHandler]; pool", "call    poolCopyString", "mov     edx, [esp+0ACh+oldProcessingInstructionHandler]", "mov     [edx+8], eax", "mov     eax, [esi+14h]", "mov     eax, [eax+ebx+8]", "test    eax, eax", "jz      short loc_D138"], ["inc     edi", "cmp     edi, [esi+0Ch]", "jge     loc_CE02"], ["lea     ebx, [edi+edi*2]", "mov     eax, [esi+14h]", "shl     ebx, 2", "sub     esp, 0Ch", "add     eax, ebx", "mov     [esp+0B8h+oldProcessingInstructionHandler], eax", "mov     eax, [ebp+14h]", "mov     eax, ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax+ebx]", "push    0; createSize", "mov     edx, [esp+0BCh+oldStartCdataSectionHandler]; table", "mov     ecx, ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax]; name", "mov     eax, [esp+0BCh+oldCommentHandler]; parser", "call    lookup", "mov     edx, [esp+0BCh+oldProcessingInstructionHandler]", "add     esp, 10h", "mov     [edx], eax", "mov     eax, [ebp+14h]", "mov     dl, [eax+ebx+4]", "mov     eax, [esi+14h]", "mov     [eax+ebx+4], dl", "mov     eax, [ebp+14h]", "mov     edx, [eax+ebx+8]; s", "test    edx, edx", "jnz     short loc_D0B0"], ["mov     eax, [esi+14h]", "mov     dword ptr [eax+ebx+8], 0", "jmp     short loc_D0D4"], ["mov     ebp, [esp+0ACh+oldDefaultHandler]", "jmp     loc_CE40"], ["mov     ebx, [esp+0ACh+oldStartElementHandler]", "push    esi; oldTable", "push    esi; newPool", "mov     esi, [esp+0B4h+oldDtd]", "lea     edx, [ebx+84h]", "mov     eax, [esi+8Ch]", "push    eax; newTable", "mov     eax, [esi+84h]", "push    eax; oldParser", "mov     eax, edi", "mov     ecx, [esp+0BCh+oldEndElementHandler]", "call    copyEntityTable", "add     esp, 10h", "test    eax, eax", "jz      loc_CE40"], ["mov     al, [esi+83h]", "mov     edx, [esp+0ACh+var_94]; context", "mov     [ebx+83h], al", "mov     al, [esi+80h]", "mov     [ebx+80h], al", "mov     al, [esi+81h]", "mov     [ebx+81h], al", "mov     al, [esi+82h]", "mov     [ebx+82h], al", "mov     al, [esi+0A0h]", "mov     [ebx+0A0h], al", "mov     byte ptr [esp+0ACh+oldStartElementHandler], al", "mov     eax, [esi+0A4h]", "mov     [ebx+0A4h], eax", "mov     eax, [esi+0A8h]", "mov     [ebx+0A8h], eax", "mov     eax, [esi+0ACh]", "mov     [ebx+0ACh], eax", "mov     eax, [esi+0B4h]", "mov     [ebx+0B4h], eax", "mov     eax, [esi+0B8h]", "mov     [ebx+0B8h], eax", "mov     eax, ebp; parser", "call    setContext", "test    al, al", "jz      loc_CE40"], ["mov     eax, [esp+0ACh+var_90]", "lea     eax, (externalEntityInitProcessor - 2DF78h)[eax]", "mov     [ebp+114h], eax", "jmp     loc_CE52"], ["call    __stack_chk_fail_local"]], "XML_SetBase": [["push    ebx", "sub     esp, 8", "mov     ebx, [esp+0Ch+parser]", "mov     edx, [esp+0Ch+p]; s", "test    ebx, ebx", "jz      short loc_D320"], ["test    edx, edx", "jz      short loc_D308"], ["mov     eax, [ebx+160h]", "add     eax, 50h ; 'P'; pool", "call    poolCopyString", "test    p_0, p_0", "jz      short loc_D320"], ["mov     [ebx+164h], p_0", "add     esp, 8", "mov     p_0, 1", "pop     ebx", "retn"], ["mov     dword ptr [ebx+164h], 0", "add     esp, 8", "mov     eax, 1", "pop     ebx", "retn"], ["add     esp, 8", "xor     eax, eax", "pop     ebx", "retn"]], "XML_SetHashSalt": [["mov     eax, [esp+parser]", "jmp     short loc_D654"], ["mov     edx, [eax+1D8h]", "test    edx, edx", "jz      short loc_D660"], ["mov     eax, edx"], ["test    eax, eax", "jnz     short loc_D648"], ["xor     eax, eax", "retn"], ["mov     edx, [eax+1DCh]", "and     edx, 0FFFFFFFDh", "dec     edx", "jz      short loc_D658"], ["mov     edx, [esp+hash_salt]", "mov     [eax+1ECh], edx", "mov     eax, 1", "retn"]], "XML_ParseBuffer": [["push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "mov     ebx, [esp+0Ch+parser]", "test    ebx, ebx", "jz      loc_D800"], ["mov     esi, [ebx+1DCh]", "cmp     esi, 2", "jz      loc_D7A8"], ["cmp     esi, 3", "jz      loc_D790"], ["test    esi, esi", "jz      loc_D760"], ["mov     ecx, [esp+0Ch+len]", "mov     eax, [ebx+1Ch]", "mov     esi, [ebx+24h]", "add     eax, ecx", "mov     ecx, [esp+0Ch+len]", "mov     edx, [ebx+18h]", "add     esi, ecx", "mov     cl, byte ptr [esp+0Ch+isFinal]", "mov     [ebx+1E0h], cl", "lea     ecx, [ebx+18h]", "mov     dword ptr [ebx+1DCh], 1", "mov     [ebx+124h], edx", "mov     [ebx+1Ch], eax", "mov     [ebx+28h], eax", "mov     [ebx+24h], esi", "push    ecx", "push    eax", "push    edx", "push    ebx", "call    dword ptr [ebx+114h]", "add     esp, 10h", "mov     [ebx+118h], eax", "test    eax, eax", "jnz     loc_D7C0"], ["mov     eax, [ebx+1DCh]", "cmp     eax, 1", "jbe     loc_D7E0"], ["cmp     eax, 3", "setz    al", "and     eax, 0FFh", "mov     esi, eax", "inc     esi"], ["lea     edx, [ebx+194h]", "mov     eax, [ebx+90h]", "push    edx", "mov     edx, [ebx+18h]", "push    edx", "mov     ecx, [ebx+124h]", "push    ecx", "push    eax", "call    dword ptr [eax+30h]", "mov     eax, [ebx+18h]", "add     esp, 10h", "mov     [ebx+124h], eax"], ["pop     ebx", "mov     eax, esi", "pop     esi", "pop     edi", "retn"], ["mov     eax, [parser_0+1D8h]", "test    eax, eax", "jnz     loc_D6BA"], ["mov     eax, parser_0; parser", "call    startParsing", "test    al, al", "jnz     loc_D6BA"], ["mov     dword ptr [parser_0+118h], 1", "jmp     short loc_D755"], ["mov     dword ptr [parser_0+118h], 21h ; '!'", "xor     esi, esi", "pop     parser_0", "mov     eax, esi", "pop     esi", "pop     edi", "retn"], ["mov     dword ptr [parser_0+118h], 24h ; '$'", "xor     esi, esi", "pop     parser_0", "mov     eax, esi", "pop     esi", "pop     edi", "retn"], ["mov     eax, [ebx+11Ch]", "xor     esi, esi", "mov     [ebx+120h], eax", "lea     eax, (errorProcessor - 2DF78h)[edi]", "mov     [ebx+114h], eax", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["mov     edi, [esp+0Ch+isFinal]", "mov     esi, 1", "test    edi, edi", "jz      loc_D72D"], ["mov     dword ptr [ebx+1DCh], 2", "jmp     loc_D755"], ["xor     esi, esi", "pop     parser_0", "mov     eax, esi", "pop     esi", "pop     edi", "retn"]], "XML_GetBuffer": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 1Ch", "mov     esi, [esp+2Ch+parser]", "test    esi, esi", "jz      loc_DA50"], ["mov     ecx, [esp+2Ch+len]", "test    ecx, ecx", "js      loc_DA38"], ["mov     edx, [esi+1DCh]", "cmp     edx, 2", "jz      loc_D958"], ["cmp     edx, 3", "jnz     short loc_D868"], ["mov     dword ptr [esi+118h], 21h ; '!'", "xor     eax, eax"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ecx, [esi+20h]", "mov     eax, [esi+1Ch]", "test    ecx, ecx", "jz      loc_D970"], ["test    eax, eax", "jz      loc_DA58"], ["mov     edi, ecx", "sub     edi, eax", "cmp     [esp+2Ch+len], edi", "jle     short loc_D85A"], ["mov     edi, [esi+18h]", "test    edi, edi", "jz      loc_DA70"], ["mov     ebp, eax", "sub     ebp, edi", "add     [esp+2Ch+len], ebp", "js      loc_DA38"], ["mov     edx, [esi+8]", "test    edx, edx", "jz      loc_DAA0"], ["mov     ebp, edi", "sub     ebp, edx", "mov     [esp+2Ch+var_20], ebp", "mov     [esp+2Ch+var_24], ebp", "cmp     ebp, 400h", "jg      loc_DA90"], ["mov     ebp, 7FFFFFFFh", "sub     ebp, [esp+2Ch+len]", "cmp     [esp+2Ch+var_24], ebp", "jg      loc_DA38"], ["mov     ebp, [esp+2Ch+var_24]", "add     [esp+2Ch+len], ebp", "test    ecx, ecx", "jz      loc_DAF8"], ["mov     ebp, ecx", "sub     ebp, edx", "cmp     ebp, [esp+2Ch+len]", "jl      loc_DABC"], ["test    edx, edx", "jz      loc_DB12"], ["mov     ebp, edi", "sub     ebp, edx", "cmp     ebp, [esp+2Ch+var_24]", "jle     short loc_D932"], ["mov     ecx, [esp+2Ch+var_24]", "sub     eax, edi", "sub     esp, 4", "sub     ebp, ecx", "add     eax, ecx", "push    eax; n", "lea     eax, [edx+ebp]", "push    eax; src", "push    edx; dest", "call    _memmove", "mov     eax, [esi+1Ch]", "mov     edx, [esi+18h]", "sub     eax, ebp", "sub     edx, ebp", "mov     [esi+1Ch], eax", "mov     [esi+18h], edx", "add     esp, 10h"], ["mov     dword ptr [esi+120h], 0", "mov     dword ptr [esi+11Ch], 0", "mov     dword ptr [esi+124h], 0", "jmp     loc_D85A"], ["mov     dword ptr [esi+118h], 24h ; '$'", "add     esp, 1Ch", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edx, [esp+2Ch+len]", "test    edx, edx", "jz      loc_D85A"], ["mov     edi, [esi+18h]", "test    eax, eax", "jz      loc_DAD8"], ["test    edi, edi", "jnz     loc_D893"], ["mov     ecx, [esp+2Ch+len]", "test    ecx, ecx", "jz      short loc_D932"], ["mov     [esp+2Ch+var_24], 0"], ["mov     ecx, 400h", "mov     eax, [esp+2Ch+len]"], ["lea     ebp, [ecx+ecx]", "mov     ecx, ebp", "cmp     ebp, eax", "jge     short loc_D9B5"], ["test    ebp, ebp", "jg      short loc_D9A8"], ["test    ebp, ebp", "jle     short loc_DA38"], ["sub     esp, 0Ch", "push    ebp", "call    dword ptr [esi+0Ch]", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jz      short loc_DA38"], ["add     ebp, eax", "mov     eax, [esi+18h]", "mov     [esi+20h], ebp", "test    eax, eax", "jz      loc_DAE8"], ["mov     edx, [esi+1Ch]", "test    edx, edx", "jz      loc_DB09"], ["sub     edx, eax", "mov     ecx, [esp+2Ch+var_24]", "add     edx, ecx"], ["mov     ecx, [esp+2Ch+var_24]", "push    ebp", "push    edx; n", "sub     eax, ecx", "push    eax; src", "push    edi; dest", "call    _memcpy", "pop     eax", "mov     eax, [esi+8]", "push    eax", "call    dword ptr [esi+14h]", "mov     edx, [esi+1Ch]", "add     esp, 10h", "mov     [esi+8], edi", "test    edx, edx", "jz      loc_DAD0"], ["mov     eax, [esi+18h]", "test    eax, eax", "jz      loc_DAD0"], ["sub     edx, eax"], ["mov     ebx, [esp+2Ch+var_24]", "add     edx, ebx", "lea     eax, [edi+edx]", "add     edi, ebx", "mov     [esi+1Ch], eax", "mov     [esi+18h], edi", "jmp     loc_D932"], ["mov     dword ptr [esi+118h], 1", "add     esp, 1Ch", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     eax, eax", "jmp     loc_D85A"], ["mov     edx, [esp+2Ch+len]", "test    edx, edx", "jz      loc_D85A"], ["mov     edi, [esi+18h]", "test    edi, edi", "jnz     loc_D8A1"], ["nop"], ["mov     edi, [esi+8]", "test    edi, edi", "jz      loc_D98F"], ["sub     ecx, edi", "cmp     [esp+2Ch+len], ecx", "jle     loc_D932"], ["jmp     loc_D997"], ["mov     [esp+2Ch+var_24], 400h", "jmp     loc_D8C4"], ["test    ecx, ecx", "jz      loc_D98F"], ["mov     edx, [esp+2Ch+len]", "test    edx, edx", "jz      loc_D932"], ["mov     [esp+2Ch+var_24], 0"], ["sub     ecx, edi", "jz      loc_D99F"], ["mov     eax, [esp+2Ch+len]", "jmp     loc_D9A8"], ["xor     edx, edx", "jmp     loc_DA21"], ["test    edi, edi", "jnz     loc_D8A1"], ["jmp     loc_D98F"], ["mov     [esi+1Ch], edi", "mov     [esi+8], edi", "mov     [esi+18h], edi", "mov     eax, edi", "jmp     loc_D932"], ["mov     ebp, [esp+2Ch+len]", "test    ebp, ebp", "jle     loc_D8FD"], ["jmp     loc_D99F"], ["mov     edx, [esp+2Ch+var_24]", "jmp     loc_D9EC"], ["mov     ecx, [esp+2Ch+var_20]", "xor     ebp, ebp", "test    ecx, ecx", "js      loc_D907"], ["jmp     loc_D932"]], "XML_Parse": [["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 0Ch", "mov     esi, [esp+1Ch+parser]", "mov     edi, [esp+1Ch+len]", "test    esi, esi", "jz      short loc_DB6C"], ["test    edi, edi", "js      loc_DC88"], ["mov     eax, [esp+1Ch+s]", "test    eax, eax", "jnz     short loc_DB78"], ["test    edi, edi", "jz      short loc_DB78"], ["mov     dword ptr [esi+118h], 29h ; ')'"], ["xor     ebx, ebx"], ["add     esp, 0Ch", "mov     eax, ebx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ebx, [esi+1DCh]", "cmp     ebx, 2", "jz      loc_DCE0"], ["cmp     ebx, 3", "jz      loc_DCC8"], ["test    ebx, ebx", "jz      loc_DC98"], ["mov     dword ptr [esi+1DCh], 1", "test    edi, edi", "jnz     loc_DC38"], ["mov     al, byte ptr [esp+1Ch+isFinal]", "mov     ebx, [esp+1Ch+isFinal]", "mov     [esi+1E0h], al", "test    ebx, ebx", "jz      loc_DC78"], ["mov     eax, [esi+18h]", "mov     edx, [esi+1Ch]", "lea     ecx, [esi+18h]", "mov     [esi+124h], eax", "mov     [esi+28h], edx", "push    ecx", "push    edx", "push    eax", "push    esi", "call    dword ptr [esi+114h]", "add     esp, 10h", "mov     [esi+118h], eax", "test    eax, eax", "jnz     loc_DD10"], ["mov     eax, [esi+1DCh]", "cmp     eax, 1", "jbe     loc_DCF8"], ["cmp     eax, 3", "jnz     short loc_DC78"], ["lea     edx, [esi+194h]", "mov     eax, [esi+90h]", "push    edx", "mov     ebx, 2", "mov     edx, [esi+18h]", "push    edx", "mov     ecx, [esi+124h]", "push    ecx", "push    eax", "call    dword ptr [eax+30h]", "mov     eax, [esi+18h]", "add     esp, 10h", "mov     [esi+124h], eax", "jmp     loc_DB6E"], ["push    eax", "mov     ebx, ebp", "push    eax", "push    edi; len", "push    esi; parser", "call    _XML_GetBuffer", "add     esp, 10h", "test    buff, buff", "jz      loc_DB6C"], ["push    edx", "push    edi; n", "mov     ecx, [esp+24h+s]", "push    ecx; src", "push    buff; dest", "call    _memcpy", "add     esp, 0Ch", "mov     ebp, [esp+20h+isFinal]", "push    ebp; isFinal", "push    edi; len", "push    esi; parser", "call    _XML_ParseBuffer", "add     esp, 10h", "mov     ebx, eax", "jmp     loc_DB6E"], ["mov     ebx, 1", "jmp     loc_DB6E"], ["test    esi, esi", "jnz     loc_DB62"], ["jmp     loc_DB6C"], ["mov     eax, [esi+1D8h]", "test    eax, eax", "jnz     loc_DB98"], ["mov     eax, esi; parser", "call    startParsing", "test    al, al", "jnz     loc_DB98"], ["mov     dword ptr [esi+118h], 1", "jmp     loc_DB6E"], ["mov     dword ptr [esi+118h], 21h ; '!'", "add     esp, 0Ch", "xor     ebx, ebx", "mov     eax, ebx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     dword ptr [esi+118h], 24h ; '$'", "add     esp, 0Ch", "xor     ebx, ebx", "mov     eax, ebx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     dword ptr [esi+1DCh], 2", "mov     ebx, 1", "jmp     loc_DB6E"], ["mov     eax, [esi+11Ch]", "xor     ebx, ebx", "mov     [esi+120h], eax", "lea     eax, (errorProcessor - 2DF78h)[ebp]", "mov     [esi+114h], eax", "jmp     loc_DB6E"]], "XML_StopParser": [["mov     eax, [esp+parser]", "mov     ecx, [esp+resumable]", "test    eax, eax", "jz      short loc_DDA8"], ["mov     edx, [eax+1DCh]", "cmp     edx, 2", "jz      short loc_DD88"], ["cmp     edx, 3", "jz      short loc_DD70"], ["test    cl, cl", "jz      short loc_DD74"], ["cmp     byte ptr [eax+1E4h], 0", "jnz     short loc_DDB0"], ["mov     dword ptr [eax+1DCh], 3", "mov     eax, 1", "retn"], ["test    cl, cl", "jnz     short loc_DD98"], ["mov     dword ptr [parser_0+1DCh], 2", "mov     parser_0, 1", "retn"], ["mov     dword ptr [parser_0+118h], 24h ; '$'", "xor     parser_0, parser_0", "retn"], ["mov     dword ptr [parser_0+118h], 21h ; '!'", "xor     parser_0, parser_0", "retn"], ["xor     parser_0, parser_0", "retn"], ["mov     dword ptr [parser_0+118h], 25h ; '%'", "xor     parser_0, parser_0", "retn"]], "XML_ResumeParser": [["push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "sub     esp, 14h", "mov     ebx, [esp+1Ch+parser]", "test    ebx, ebx", "jz      loc_DE90"], ["cmp     dword ptr [ebx+1DCh], 3", "jz      short loc_DDF8"], ["mov     dword ptr [ebx+118h], 22h ; '\"'", "xor     eax, eax"], ["add     esp, 14h", "pop     ebx", "pop     esi", "retn"], ["lea     eax, [ebx+18h]", "mov     dword ptr [ebx+1DCh], 1", "push    eax", "mov     eax, [ebx+28h]", "push    eax", "mov     eax, [ebx+18h]", "push    eax", "push    ebx", "call    dword ptr [ebx+114h]", "add     esp, 10h", "mov     [ebx+118h], eax", "test    eax, eax", "jnz     short loc_DE98"], ["mov     eax, [ebx+1DCh]", "cmp     eax, 1", "jbe     short loc_DE70"], ["cmp     eax, 3", "setz    al", "and     eax, 0FFh", "inc     eax"], ["lea     ecx, [ebx+194h]", "mov     [esp+1Ch+result], eax", "mov     edx, [ebx+90h]", "push    ecx", "mov     result_0, [ebx+18h]", "push    eax", "mov     ecx, [ebx+124h]", "push    ecx", "push    edx", "call    dword ptr [edx+30h]", "mov     edx, [ebx+18h]", "add     esp, 10h", "mov     [ebx+124h], edx", "mov     eax, [esp+1Ch+result]", "add     esp, 14h", "pop     ebx", "pop     esi", "retn"], ["cmp     byte ptr [ebx+1E0h], 0", "mov     eax, 1", "jz      short loc_DE39"], ["mov     dword ptr [ebx+1DCh], 2", "jmp     loc_DDF1"], ["add     esp, 14h", "xor     eax, eax", "pop     ebx", "pop     esi", "retn"], ["mov     eax, [ebx+11Ch]", "mov     [ebx+120h], eax", "lea     eax, (errorProcessor - 2DF78h)[esi]", "mov     [ebx+114h], eax", "add     esp, 14h", "xor     eax, eax", "pop     ebx", "pop     esi", "retn"]], "XML_GetCurrentByteCount": [["mov     eax, [esp+parser]", "test    eax, eax", "jz      short loc_DF98"], ["mov     edx, [eax+120h]", "test    edx, edx", "jz      short loc_DF98"], ["mov     ecx, [eax+11Ch]", "xor     eax, eax", "test    ecx, ecx", "jz      short locret_DF9A"], ["mov     eax, edx", "sub     eax, ecx", "retn"], ["xor     parser_0, parser_0"], ["retn"]], "XML_GetInputContext": [["mov     eax, [esp+parser]", "test    eax, eax", "jz      short loc_DFE8"], ["mov     ecx, [eax+11Ch]", "test    ecx, ecx", "jz      short loc_DFE8"], ["mov     edx, [eax+8]", "test    edx, edx", "jz      short loc_DFE3"], ["cmp     [esp+offset], 0", "jz      short loc_DFCB"], ["sub     ecx, edx", "mov     edx, [esp+offset]", "mov     [edx], ecx", "mov     edx, [eax+8]"], ["mov     ecx, [esp+size]", "test    ecx, ecx", "jz      short loc_DFE3"], ["mov     ecx, [eax+1Ch]", "sub     ecx, edx", "mov     edx, ecx", "mov     ecx, [esp+size]", "mov     [ecx], edx", "mov     edx, [eax+8]"], ["mov     parser_0, edx", "retn"], ["xor     edx, edx", "mov     parser_0, edx", "retn"]], "XML_GetCurrentLineNumber": [["push    esi", "push    ebx", "push    ecx", "mov     ebx, [esp+0Ch+parser]", "test    ebx, ebx", "jz      short loc_E048"], ["mov     eax, [ebx+11Ch]", "test    eax, eax", "jz      short loc_E00F"], ["mov     edx, [ebx+124h]", "cmp     eax, edx", "jnb     short loc_E020"], ["mov     eax, [ebx+194h]", "pop     edx", "pop     ebx", "inc     eax", "pop     esi", "retn"], ["lea     esi, [ebx+194h]", "mov     ecx, [ebx+90h]", "push    esi", "push    eax", "push    edx", "push    ecx", "call    dword ptr [ecx+30h]", "mov     eax, [ebx+11Ch]", "add     esp, 10h", "mov     [ebx+124h], eax", "jmp     short loc_E00F"], ["pop     edx", "xor     eax, eax", "pop     ebx", "pop     esi", "retn"]], "XML_GetCurrentColumnNumber": [["push    esi", "push    ebx", "push    ecx", "mov     ebx, [esp+0Ch+parser]", "test    ebx, ebx", "jz      short loc_E0A8"], ["mov     eax, [ebx+11Ch]", "test    eax, eax", "jz      short loc_E06F"], ["mov     edx, [ebx+124h]", "cmp     eax, edx", "jnb     short loc_E080"], ["mov     eax, [ebx+198h]", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     esi, [ebx+194h]", "mov     ecx, [ebx+90h]", "push    esi", "push    eax", "push    edx", "push    ecx", "call    dword ptr [ecx+30h]", "mov     eax, [ebx+11Ch]", "add     esp, 10h", "mov     [ebx+124h], eax", "jmp     short loc_E06F"], ["pop     edx", "xor     eax, eax", "pop     ebx", "pop     esi", "retn"]], "XML_DefaultCurrent": [["push    ebx", "mov     eax, [esp+4+parser]", "test    eax, eax", "jz      short loc_E170"], ["mov     edx, [eax+50h]", "test    edx, edx", "jz      short loc_E170"], ["mov     ecx, [eax+128h]", "test    ecx, ecx", "jz      short loc_E178"], ["mov     ebx, [ecx+4]", "mov     edx, [eax+0E0h]", "mov     [esp+4+parser], ebx", "pop     ebx", "mov     ecx, [ecx]", "jmp     reportDefault"], ["pop     ebx", "retn"], ["mov     ebx, [parser_0+120h]", "mov     ecx, [parser_0+11Ch]", "mov     edx, [parser_0+90h]", "mov     [esp+4+parser], ebx", "pop     ebx", "jmp     reportDefault"]], "XML_ErrorString": [["mov     edx, [esp+code]", "call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "cmp     edx, 2Ah; switch 43 cases", "ja      _L3326; jumptable 0000E1C0 default case, case 0"], ["mov     ecx, ds:(jpt_E1C0 - 2DF78h)[eax+edx*4]", "add     ecx, eax", "jmp     ecx; switch jump"], ["lea     eax, (aOutOfMemory - 2DF78h)[eax]; jumptable 0000E1C0 case 1", "retn"], ["lea     eax, (aLimitOnInputAm - 2DF78h)[eax]; jumptable 0000E1C0 case 42", "retn"], ["lea     eax, (aInvalidArgumen - 2DF78h)[eax]; jumptable 0000E1C0 case 41", "retn"], ["lea     eax, (aPrefixMustNotB - 2DF78h)[eax]; jumptable 0000E1C0 case 40", "retn"], ["lea     eax, (aReservedPrefix - 2DF78h)[eax]; jumptable 0000E1C0 case 39", "retn"], ["lea     eax, (aReservedPrefix_0 - 2DF78h)[eax]; jumptable 0000E1C0 case 38", "retn"], ["lea     eax, (aCannotSuspendI - 2DF78h)[eax]; jumptable 0000E1C0 case 37", "retn"], ["lea     eax, (aParsingFinishe - 2DF78h)[eax]; jumptable 0000E1C0 case 36", "retn"], ["lea     eax, (aParsingAborted - 2DF78h)[eax]; jumptable 0000E1C0 case 35", "retn"], ["lea     eax, (aParserNotSuspe - 2DF78h)[eax]; jumptable 0000E1C0 case 34", "retn"], ["lea     eax, (aParserSuspende - 2DF78h)[eax]; jumptable 0000E1C0 case 33", "retn"], ["lea     eax, (aIllegalCharact - 2DF78h)[eax]; jumptable 0000E1C0 case 32", "retn"], ["lea     eax, (aTextDeclaratio - 2DF78h)[eax]; jumptable 0000E1C0 case 31", "retn"], ["lea     eax, (aXmlDeclaration - 2DF78h)[eax]; jumptable 0000E1C0 case 30", "retn"], ["lea     eax, (aIncompleteMark - 2DF78h)[eax]; jumptable 0000E1C0 case 29", "retn"], ["lea     eax, (aMustNotUndecla - 2DF78h)[eax]; jumptable 0000E1C0 case 28", "retn"], ["lea     eax, (aUnboundPrefix - 2DF78h)[eax]; jumptable 0000E1C0 case 27", "retn"], ["lea     eax, (aCannotChangeSe - 2DF78h)[eax]; jumptable 0000E1C0 case 26", "retn"], ["lea     eax, (aRequestedFeatu - 2DF78h)[eax]; jumptable 0000E1C0 case 25", "retn"], ["lea     eax, (aEntityDeclared - 2DF78h)[eax]; jumptable 0000E1C0 case 24", "retn"], ["lea     eax, (aUnexpectedPars - 2DF78h)[eax]; jumptable 0000E1C0 case 23", "retn"], ["lea     eax, (aDocumentIsNotS - 2DF78h)[eax]; jumptable 0000E1C0 case 22", "retn"], ["lea     eax, (aErrorInProcess - 2DF78h)[eax]; jumptable 0000E1C0 case 21", "retn"], ["lea     eax, (aUnclosedCdataS - 2DF78h)[eax]; jumptable 0000E1C0 case 20", "retn"], ["lea     eax, (aEncodingSpecif - 2DF78h)[eax]; jumptable 0000E1C0 case 19", "retn"], ["lea     eax, (aUnknownEncodin - 2DF78h)[eax]; jumptable 0000E1C0 case 18", "retn"], ["lea     eax, (aXmlOrTextDecla - 2DF78h)[eax]; jumptable 0000E1C0 case 17", "retn"], ["lea     eax, (aReferenceToExt - 2DF78h)[eax]; jumptable 0000E1C0 case 16", "retn"], ["lea     eax, (aReferenceToBin - 2DF78h)[eax]; jumptable 0000E1C0 case 15", "retn"], ["lea     eax, (aReferenceToInv - 2DF78h)[eax]; jumptable 0000E1C0 case 14", "retn"], ["lea     eax, (aAsynchronousEn - 2DF78h)[eax]; jumptable 0000E1C0 case 13", "retn"], ["lea     eax, (aRecursiveEntit - 2DF78h)[eax]; jumptable 0000E1C0 case 12", "retn"], ["lea     eax, (aUndefinedEntit - 2DF78h)[eax]; jumptable 0000E1C0 case 11", "retn"], ["lea     eax, (aIllegalParamet - 2DF78h)[eax]; jumptable 0000E1C0 case 10", "retn"], ["lea     eax, (aJunkAfterDocum - 2DF78h)[eax]; jumptable 0000E1C0 case 9", "retn"], ["lea     eax, (aDuplicateAttri - 2DF78h)[eax]; jumptable 0000E1C0 case 8", "retn"], ["lea     eax, (aMismatchedTag - 2DF78h)[eax]; jumptable 0000E1C0 case 7", "retn"], ["lea     eax, (aPartialCharact - 2DF78h)[eax]; jumptable 0000E1C0 case 6", "retn"], ["lea     eax, (aUnclosedToken - 2DF78h)[eax]; jumptable 0000E1C0 case 5", "retn"], ["lea     eax, (aNotWellFormedI - 2DF78h)[eax]; jumptable 0000E1C0 case 4", "retn"], ["lea     eax, (aNoElementFound - 2DF78h)[eax]; jumptable 0000E1C0 case 3", "retn"], ["lea     eax, (aSyntaxError - 2DF78h)[eax]; jumptable 0000E1C0 case 2", "retn"], ["xor     eax, eax; jumptable 0000E1C0 default case, case 0", "retn"]], "XML_SetBillionLaughsAttackProtectionMaximumAmplification": [["mov     edx, [esp+parser]", "fld     [esp+maximumAmplificationFactor]", "test    edx, edx", "jz      short loc_E3B8"], ["mov     eax, [edx+1D8h]", "test    eax, eax", "jnz     short loc_E3C0"], ["fucom   st", "fnstsw  ax", "test    ah, 4", "jnz     short loc_E3C8"], ["fld1", "fcomp   st(1)", "fnstsw  ax", "test    ah, 45h", "jz      short loc_E3D0"], ["fstp    dword ptr [edx+204h]", "mov     al, 1", "retn"], ["fstp    st", "jmp     short loc_E3D2"], ["fstp    st", "jmp     short loc_E3D2"], ["fstp    st", "jmp     short loc_E3D2"], ["fstp    st"], ["xor     eax, eax", "retn"]], "utf8_isInvalid3": [["push    ebx", "mov     ebx, 1", "mov     al, [p+2]", "test    al, al", "js      short loc_E5F8"], ["mov     eax, ebx", "pop     ebx", "retn"], ["mov     cl, [p]", "cmp     cl, 0EFh", "jz      short loc_E620"], ["and     eax, 0FFFFFFC0h", "cmp     al, 0C0h", "jz      short loc_E5ED"], ["mov     dl, [p+1]", "cmp     cl, 0E0h", "jnz     short loc_E638"], ["cmp     dl, 9Fh", "jbe     short loc_E5ED"], ["xor     ebx, ebx", "and     edx, 0FFFFFFC0h", "cmp     dl, 0C0h", "setz    bl", "jmp     short loc_E5ED"], ["mov     dl, [p+1]", "cmp     dl, 0BFh", "jz      short loc_E650"], ["and     eax, 0FFFFFFC0h", "cmp     al, 0C0h", "jz      short loc_E5ED"], ["test    dl, dl", "jns     short loc_E5ED"], ["jmp     short loc_E613"], ["test    dl, dl", "jns     short loc_E5ED"], ["cmp     cl, 0EDh", "jnz     short loc_E613"], ["xor     ebx, ebx", "cmp     dl, 9Fh", "setnbe  bl", "jmp     short loc_E5ED"], ["xor     ebx, ebx", "cmp     al, 0BDh", "setnbe  bl", "jmp     short loc_E5ED"]], "normal_cdataSectionTok": [["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 1Ch", "mov     edx, [esp+2Ch+ptr]", "mov     edi, [esp+2Ch+end]", "mov     ebx, [esp+2Ch+enc]", "cmp     edx, edi", "jnb     loc_E886"], ["xor     eax, eax", "mov     al, [edx]", "cmp     byte ptr [ebx+eax+48h], 0Ah; switch 11 cases", "ja      short _L29; jumptable 0000E6A2 default case, cases 2,3"], ["xor     ecx, ecx", "mov     cl, [ebx+eax+48h]", "mov     eax, ecx", "mov     esi, ss:(jpt_E6A2 - 2DF78h)[ebp+eax*4]", "add     esi, ebp", "jmp     esi; switch jump"], ["mov     eax, edi; jumptable 0000E6A2 case 5", "sub     eax, edx", "dec     eax", "jle     loc_E890"], ["mov     eax, ebx", "mov     [esp+2Ch+ptr], edx", "call    dword ptr [ebx+160h]", "mov     edx, [esp+2Ch+ptr]", "test    eax, eax", "lea     esi, [edx+2]", "jz      short loc_E6E8"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+2Ch+nextTokPtr]; jumptable 0000E6A2 cases 0,1,8", "mov     [eax], edx", "xor     eax, eax"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     esi, [edx+1]; jumptable 0000E6A2 default case, cases 2,3", "lea     ptr_0, [ptr_0+0]", "nop"], ["mov     ecx, edi", "sub     ecx, ptr_0", "test    ecx, ecx", "jle     short _L43; jumptable 0000E713 cases 0,1,4,8-10"], ["mov     al, [ptr_0]"], ["and     eax, 0FFh", "cmp     byte ptr [ebx+eax+48h], 0Ah; switch 11 cases", "ja      _L44; jumptable 0000E713 default case, cases 2,3"], ["xor     edx, edx", "mov     dl, [ebx+eax+48h]", "mov     eax, edx", "mov     edx, ss:(jpt_E713 - 2DF78h)[ebp+eax*4]", "add     edx, ebp", "jmp     edx; switch jump"], ["mov     eax, [esp+2Ch+nextTokPtr]; jumptable 0000E713 cases 0,1,4,8-10", "mov     [eax], ptr_0", "add     esp, 1Ch", "mov     eax, 6", "pop     ebx", "pop     ptr_0", "pop     edi", "pop     ebp", "retn"], ["cmp     ecx, 3; jumptable 0000E713 case 7", "jle     short _L43; jumptable 0000E713 cases 0,1,4,8-10"], ["mov     edx, ptr_0", "mov     eax, ebx", "call    dword ptr [ebx+168h]", "test    eax, eax", "jnz     short _L43; jumptable 0000E713 cases 0,1,4,8-10"], ["add     ptr_0, 4", "jmp     short loc_E6E8"], ["cmp     ecx, 2; jumptable 0000E713 case 6", "jle     short _L43; jumptable 0000E713 cases 0,1,4,8-10"], ["mov     edx, ptr_0", "mov     eax, ebx", "call    dword ptr [ebx+164h]", "test    eax, eax", "jnz     short _L43; jumptable 0000E713 cases 0,1,4,8-10"], ["add     ptr_0, 3", "jmp     short loc_E6E8"], ["dec     ecx; jumptable 0000E713 case 5", "jz      short _L43; jumptable 0000E713 cases 0,1,4,8-10"], ["mov     edx, ptr_0", "mov     eax, ebx", "call    dword ptr [ebx+160h]", "test    eax, eax", "jnz     short _L43; jumptable 0000E713 cases 0,1,4,8-10"], ["add     ptr_0, 2", "jmp     loc_E6E8"], ["inc     ptr_0; jumptable 0000E713 default case, cases 2,3", "jmp     loc_E6E8"], ["lea     esi, [edx+1]; jumptable 0000E6A2 case 4", "mov     ecx, edi", "sub     ecx, ptr_0", "test    ecx, ecx", "jle     loc_E89A"], ["mov     al, [edx+1]", "mov     [esp+2Ch+var_21], al", "cmp     al, 5Dh ; ']'", "jz      loc_E858"], ["mov     al, [esp+2Ch+var_21]", "jmp     loc_E6F2"], ["mov     eax, edi; jumptable 0000E6A2 case 6", "sub     eax, edx", "cmp     eax, 2", "jle     loc_E890"], ["mov     eax, ebx", "mov     [esp+2Ch+ptr], edx", "call    dword ptr [ebx+164h]", "mov     edx, [esp+2Ch+ptr]", "test    eax, eax", "jnz     _L33; jumptable 0000E6A2 cases 0,1,8"], ["lea     esi, [edx+3]", "jmp     loc_E6E8"], ["mov     eax, edi; jumptable 0000E6A2 case 7", "sub     eax, edx", "cmp     eax, 3", "jle     loc_E890"], ["mov     eax, ebx", "mov     [esp+2Ch+ptr], edx", "call    dword ptr [ebx+168h]", "mov     edx, [esp+2Ch+ptr]", "test    eax, eax", "jnz     _L33; jumptable 0000E6A2 cases 0,1,8"], ["lea     esi, [edx+4]", "jmp     loc_E6E8"], ["lea     eax, [edx+1]; jumptable 0000E6A2 case 9", "sub     edi, ptr_0", "test    edi, edi", "jle     loc_E89A"], ["xor     ecx, ecx", "mov     cl, [edx+1]", "cmp     byte ptr [ebx+ecx+48h], 0Ah", "jnz     short loc_E82C"], ["lea     ptr_0, [edx+2]"], ["mov     edi, [esp+2Ch+nextTokPtr]", "mov     [edi], ptr_0", "add     esp, 1Ch", "mov     ptr_0, 7", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esp+2Ch+nextTokPtr]; jumptable 0000E6A2 case 10", "inc     edx", "mov     [eax], edx", "add     esp, 1Ch", "mov     eax, 7", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     eax, [edx+2]", "mov     [esp+2Ch+var_20], ptr_0", "mov     ptr_0, edi", "sub     eax, [esp+2Ch+var_20]", "test    eax, eax", "jle     short loc_E89A"], ["cmp     byte ptr [edx+2], 3Eh ; '>'", "jnz     loc_E7A6"], ["mov     eax, [esp+2Ch+nextTokPtr]", "add     edx, 3", "mov     [eax], edx", "mov     eax, 28h ; '('", "jmp     loc_E6D8"], ["mov     eax, 0FFFFFFFCh", "jmp     loc_E6D8"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_E6D8"], ["or      eax, 0FFFFFFFFh", "jmp     loc_E6D8"]], "normal_scanRef": [["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "mov     ebx, ptr", "mov     ptr, end", "sub     esp, 0Ch", "sub     edx, ptr", "test    edx, edx", "jle     loc_EB00"], ["mov     esi, enc", "xor     enc, enc", "mov     al, [ptr]", "mov     al, [enc+eax+48h]", "sub     eax, 5; switch 20 cases", "cmp     al, 13h", "ja      short _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["and     eax, 0FFh", "mov     edi, end", "mov     end, ss:(jpt_E8F1 - 2DF78h)[ebp+eax*4]", "add     ecx, ebp", "jmp     ecx; switch jump"], ["add     ptr, 2", "mov     eax, end", "sub     eax, ebx", "test    eax, eax", "jle     loc_EB00"], ["xor     eax, eax", "mov     al, [ebx]", "mov     al, [enc+eax+48h]", "cmp     al, 12h", "jz      loc_EB60"], ["cmp     al, 19h", "jz      loc_EAF0"], ["nop"], ["mov     eax, [esp+1Ch+nextTokPtr]; jumptable 0000E8F1 default case, cases 8-18,20,21,23", "mov     [eax], ebx", "xor     eax, eax"], ["add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["inc     ptr; jumptable 0000E8F1 cases 22,24"], ["mov     edx, end", "sub     edx, ptr", "test    edx, edx", "jle     loc_EB00"], ["xor     eax, eax", "mov     al, [ptr]", "mov     al, [enc+eax+48h]", "sub     eax, 5; switch 23 cases", "cmp     al, 16h", "ja      short _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["and     eax, 0FFh", "mov     ecx, ss:(jpt_E95A - 2DF78h)[ebp+eax*4]", "add     ecx, ebp", "jmp     ecx; switch jump"], ["lea     edx, [ptr+1]; jumptable 0000E8F1 case 19", "mov     eax, end", "sub     eax, edx", "test    eax, eax", "jle     loc_EB00"], ["mov     al, [ptr+1]", "cmp     al, 78h ; 'x'", "jz      loc_EB08"], ["and     eax, 0FFh", "cmp     byte ptr [enc+eax+48h], 19h", "jz      loc_E8F8"], ["mov     eax, [esp+1Ch+nextTokPtr]", "mov     [eax], edx", "xor     eax, eax", "jmp     short loc_E928"], ["dec     edx; jumptable 0000E8F1 case 5", "jz      loc_EB71"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+160h]", "test    eax, eax", "jnz     _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+154h]", "test    eax, eax", "jz      _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["add     ptr, 2", "jmp     loc_E931"], ["cmp     edx, 2; jumptable 0000E8F1 case 6", "jle     loc_EB71"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+164h]", "test    eax, eax", "jnz     _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+158h]", "test    eax, eax", "jz      _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["add     ptr, 3", "jmp     loc_E931"], ["cmp     edx, 3; jumptable 0000E8F1 case 7", "jle     loc_EB71"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+168h]", "test    eax, eax", "jnz     _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+15Ch]", "test    eax, eax", "jz      _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["add     ptr, 4", "jmp     loc_E931"], ["mov     eax, [esp+1Ch+nextTokPtr]; jumptable 0000E95A case 18", "inc     ptr", "mov     [eax], ebx", "mov     eax, 9", "jmp     loc_E928"], ["cmp     edx, 3; jumptable 0000E95A case 7", "jle     loc_EB71"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+168h]", "test    eax, eax", "jnz     _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+150h]", "test    eax, eax", "jnz     short loc_EA35"], ["jmp     _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["cmp     edx, 2; jumptable 0000E95A case 6", "jle     loc_EB71"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+164h]", "test    eax, eax", "jnz     _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+14Ch]", "test    eax, eax", "jnz     loc_E9FD"], ["jmp     _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["dec     edx; jumptable 0000E95A case 5", "jz      loc_EB71"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+160h]", "test    eax, eax", "jnz     _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+148h]", "test    eax, eax", "jnz     loc_E9C3"], ["jmp     _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["inc     ebx", "mov     eax, end", "sub     eax, ebx", "test    eax, eax", "jg      loc_E907"], ["lea     esi, [esi+0]"], ["or      eax, 0FFFFFFFFh", "jmp     loc_E928"], ["lea     edx, [ptr+2]", "mov     eax, end", "sub     eax, edx", "test    eax, eax", "jle     short loc_EB00"], ["xor     eax, eax", "xor     ecx, ecx", "mov     al, [ptr+2]", "mov     cl, [enc+eax+48h]", "mov     eax, ecx", "sub     eax, 18h", "cmp     eax, 1", "ja      loc_E98A"], ["add     ptr, 3", "mov     eax, end", "sub     eax, ebx", "test    eax, eax", "jg      short loc_EB54"], ["jmp     short loc_EB00"], ["sub     eax, 18h", "cmp     al, 1", "ja      _L99; jumptable 0000E8F1 default case, cases 8-18,20,21,23"], ["inc     ebx", "mov     eax, end", "sub     eax, ebx", "test    eax, eax", "jle     short loc_EB00"], ["xor     eax, eax", "mov     al, [ebx]", "mov     al, [enc+eax+48h]", "cmp     al, 12h", "jnz     short loc_EB40"], ["mov     eax, [esp+1Ch+nextTokPtr]", "inc     ebx", "mov     [eax], ebx", "mov     eax, 0Ah", "jmp     loc_E928"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_E928"]], "normal_scanPercent": [["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "mov     ebx, ptr_0", "mov     ptr_0, end", "sub     esp, 0Ch", "sub     edx, ptr_0", "test    edx, edx", "jle     loc_ED58"], ["mov     esi, enc", "xor     enc, enc", "mov     al, [ptr_0]", "mov     al, [enc+eax+48h]", "sub     eax, 5; switch 26 cases", "cmp     al, 19h", "ja      short _L162; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29"], ["and     eax, 0FFh", "mov     edi, end", "mov     end, ss:(jpt_EBC1 - 2DF78h)[ebp+eax*4]", "add     ecx, ebp", "jmp     ecx; switch jump"], ["dec     edx; jumptable 0000EC2A case 5", "jz      loc_ED60"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+160h]", "test    eax, eax", "jnz     short _L162; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+148h]", "test    eax, eax", "jnz     loc_EC6B"], ["nop"], ["mov     eax, [esp+1Ch+nextTokPtr]; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29", "mov     [eax], ptr_0", "xor     eax, eax"], ["add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["inc     ptr_0; jumptable 0000EBC1 cases 22,24"], ["mov     edx, end", "sub     edx, ptr_0", "test    edx, edx", "jle     loc_ED58"], ["xor     eax, eax", "mov     al, [ptr_0]", "mov     al, [enc+eax+48h]", "sub     eax, 5; switch 23 cases", "cmp     al, 16h", "ja      short _L162; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29"], ["and     eax, 0FFh", "mov     ecx, ss:(jpt_EC2A - 2DF78h)[ebp+eax*4]", "add     ecx, ebp", "jmp     ecx; switch jump"], ["mov     eax, [esp+1Ch+nextTokPtr]; jumptable 0000EBC1 cases 9,10,21,30", "mov     [eax], ptr_0", "add     esp, 0Ch", "mov     eax, 16h", "pop     ptr_0", "pop     enc", "pop     end", "pop     ebp", "retn"], ["dec     edx; jumptable 0000EBC1 case 5", "jz      loc_ED60"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+160h]", "test    eax, eax", "jnz     short _L162; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+154h]", "test    eax, eax", "jz      short _L162; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29"], ["add     ptr_0, 2", "jmp     short loc_EC01"], ["cmp     edx, 2; jumptable 0000EBC1 case 6", "jle     loc_ED60"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+164h]", "test    eax, eax", "jnz     _L162; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+158h]", "test    eax, eax", "jz      _L162; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29"], ["add     ptr_0, 3", "jmp     loc_EC01"], ["cmp     edx, 3; jumptable 0000EBC1 case 7", "jle     loc_ED60"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+168h]", "test    eax, eax", "jnz     _L162; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+15Ch]", "test    eax, eax", "jz      _L162; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29"], ["add     ptr_0, 4", "jmp     loc_EC01"], ["mov     eax, [esp+1Ch+nextTokPtr]; jumptable 0000EC2A case 18", "inc     ptr_0", "mov     [eax], ebx", "mov     eax, 1Ch", "jmp     loc_EBF8"], ["cmp     edx, 3; jumptable 0000EC2A case 7", "jle     short loc_ED60"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+168h]", "test    eax, eax", "jnz     _L162; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+150h]", "test    eax, eax", "jnz     short loc_ECD5"], ["jmp     _L162; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29"], ["cmp     edx, 2; jumptable 0000EC2A case 6", "jle     short loc_ED60"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+164h]", "test    eax, eax", "jnz     _L162; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+14Ch]", "test    eax, eax", "jnz     loc_EC9D"], ["jmp     _L162; jumptable 0000EBC1 default case, cases 8,11-20,23,25-29"], ["or      eax, 0FFFFFFFFh", "jmp     loc_EBF8"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_EBF8"]], "normal_scanLit": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "mov     esi, enc", "push    ebx", "sub     esp, 1Ch", "mov     ebp, [esp+2Ch+end]", "mov     [esp+2Ch+open], open_0", "mov     enc, ebp", "sub     edx, ptr", "test    edx, edx", "jle     short loc_EDD3"], ["mov     ebx, ptr"], ["xor     eax, eax", "mov     al, [ptr]", "mov     al, [enc+eax+48h]", "cmp     al, 0Dh; switch 14 cases", "ja      short _L205; jumptable 0000EDAF default case, cases 2-4,9-11"], ["xor     ecx, ecx", "mov     cl, al", "mov     ebp, ds:(jpt_EDAF - 2DF78h)[edi+ecx*4]", "add     ebp, edi", "jmp     ebp; switch jump"], ["mov     eax, [esp+2Ch+nextTokPtr]; jumptable 0000EDAF cases 0,1,8", "mov     [eax], ptr", "xor     eax, eax"], ["add     esp, 1Ch", "pop     ebx", "pop     enc", "pop     edi", "pop     ebp", "retn"], ["inc     ptr; jumptable 0000EDAF default case, cases 2-4,9-11"], ["mov     edx, [esp+2Ch+end]", "sub     edx, ptr", "test    edx, edx", "jg      short loc_ED96"], ["or      eax, 0FFFFFFFFh", "jmp     short loc_EDC0"], ["and     eax, 0FFh; jumptable 0000EDAF cases 12,13", "lea     edx, [ptr+1]", "cmp     eax, [esp+2Ch+open]", "jz      short loc_EE3D"], ["mov     ebx, ptr", "jmp     short loc_EDC9"], ["cmp     edx, 3; jumptable 0000EDAF case 7", "jle     short loc_EE36"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+168h]", "test    eax, eax", "jnz     short _L208_0; jumptable 0000EDAF cases 0,1,8"], ["add     ptr, 4", "jmp     short loc_EDC9"], ["cmp     edx, 2; jumptable 0000EDAF case 6", "jle     short loc_EE36"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+164h]", "test    eax, eax", "jnz     short _L208_0; jumptable 0000EDAF cases 0,1,8"], ["add     ptr, 3", "jmp     short loc_EDC9"], ["dec     edx; jumptable 0000EDAF case 5", "jz      short loc_EE36"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+160h]", "test    eax, eax", "jnz     short _L208_0; jumptable 0000EDAF cases 0,1,8"], ["add     ptr, 2", "jmp     short loc_EDC9"], ["mov     eax, 0FFFFFFFEh", "jmp     short loc_EDC0"], ["mov     ebp, [esp+2Ch+end]", "sub     ebp, ptr", "test    ebp, ebp", "jle     short loc_EE81"], ["mov     eax, [esp+2Ch+nextTokPtr]", "mov     [eax], ptr", "xor     eax, eax", "mov     al, [ebx+1]", "mov     cl, [enc+eax+48h]", "cmp     cl, 1Eh", "ja      short loc_EE7A"], ["mov     eax, 1", "shl     eax, cl", "and     eax, 40300E00h", "cmp     eax, 1", "sbb     eax, eax", "add     esp, 1Ch", "xor     eax, 0FFFFFFFFh", "pop     ebx", "and     eax, 1Bh", "pop     enc", "pop     edi", "pop     ebp", "retn"], ["xor     eax, eax", "jmp     loc_EDC0"], ["mov     eax, 0FFFFFFE5h", "jmp     loc_EDC0"]], "normal_ignoreSectionTok": [["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 1Ch", "mov     edi, [esp+2Ch+end]", "mov     ebx, [esp+2Ch+ptr]", "mov     edx, edi", "mov     esi, [esp+2Ch+enc]", "sub     edx, ptr_0", "test    edx, edx", "jle     loc_EFF0"], ["mov     al, [ptr_0]", "mov     [esp+2Ch+level], 0"], ["and     eax, 0FFh", "cmp     byte ptr [esi+eax+48h], 8; switch 9 cases", "ja      short _L230_0; jumptable 0000EEE1 default case, case 3"], ["xor     ecx, ecx", "mov     cl, [esi+eax+48h]", "mov     eax, ecx", "mov     ecx, ss:(jpt_EEE1 - 2DF78h)[ebp+eax*4]", "add     ecx, ebp", "jmp     ecx; switch jump"], ["mov     eax, [esp+2Ch+nextTokPtr]; jumptable 0000EEE1 cases 0,1,8", "mov     [eax], ptr_0", "xor     eax, eax"], ["add     esp, 1Ch", "pop     ptr_0", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     edx, 3; jumptable 0000EEE1 case 7", "jle     loc_EFFB"], ["mov     edx, ptr_0", "mov     eax, esi", "call    dword ptr [esi+168h]", "test    eax, eax", "jnz     short _L231_0; jumptable 0000EEE1 cases 0,1,8"], ["add     ptr_0, 4"], ["mov     edx, edi", "sub     edx, ptr_0", "test    edx, edx", "jle     loc_EFF0"], ["mov     al, [ptr_0]", "and     eax, 0FFh", "cmp     byte ptr [esi+eax+48h], 8", "jbe     short loc_EED0"], ["inc     ptr_0; jumptable 0000EEE1 default case, case 3", "jmp     short loc_EF12"], ["cmp     edx, 2; jumptable 0000EEE1 case 6", "jle     loc_EFFB"], ["mov     edx, ptr_0", "mov     eax, esi", "call    dword ptr [esi+164h]", "test    eax, eax", "jnz     short _L231_0; jumptable 0000EEE1 cases 0,1,8"], ["add     ebx, 3", "jmp     short loc_EF12"], ["dec     edx; jumptable 0000EEE1 case 5", "jz      loc_EFFB"], ["mov     edx, ptr_0", "mov     eax, esi", "call    dword ptr [esi+160h]", "test    eax, eax", "jnz     short _L231_0; jumptable 0000EEE1 cases 0,1,8"], ["add     ptr_0, 2", "jmp     short loc_EF12"], ["lea     ecx, [ptr_0+1]; jumptable 0000EEE1 case 4", "mov     edx, edi", "sub     edx, ptr_0", "test    edx, edx", "jle     short loc_EFF0"], ["mov     al, [ebx+1]", "cmp     al, 5Dh ; ']'", "jz      short loc_EFC0"], ["mov     ebx, ecx", "jmp     loc_EEC4"], ["lea     ecx, [ptr_0+1]; jumptable 0000EEE1 case 2", "mov     edx, edi", "sub     edx, ptr_0", "test    edx, edx", "jle     short loc_EFF0"], ["mov     al, [ebx+1]", "cmp     al, 21h ; '!'", "jnz     short loc_EF82"], ["lea     ptr_0, [ebx+2]", "mov     edx, edi", "sub     edx, ptr_0", "test    edx, edx", "jle     short loc_EFF0"], ["mov     al, [ebx+2]", "cmp     al, 5Bh ; '['", "jnz     short loc_EF82"], ["mov     ptr_0, [esp+2Ch+level]", "inc     ecx", "mov     [esp+2Ch+level], ecx", "jmp     short loc_EF47"], ["lea     ptr_0, [ebx+2]", "mov     edx, edi", "sub     edx, ptr_0", "test    edx, edx", "jle     short loc_EFF0"], ["mov     al, [ebx+2]", "cmp     al, 3Eh ; '>'", "jnz     short loc_EF82"], ["mov     edx, [esp+2Ch+level]", "add     ebx, 3", "test    edx, edx", "jz      short loc_F005"], ["mov     eax, [esp+2Ch+level]", "dec     eax", "mov     [esp+2Ch+level], eax", "jmp     loc_EF12"], ["add     esp, 1Ch", "or      eax, 0FFFFFFFFh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_EEF0"], ["mov     eax, [esp+2Ch+nextTokPtr]", "mov     [eax], ptr_0", "mov     eax, 2Ah ; '*'", "jmp     loc_EEF0"]], "normal_isPublicId": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+10h+ptr]", "mov     edi, [esp+10h+enc]", "lea     edx, [eax+1]", "mov     eax, [esp+10h+end]", "lea     esi, [eax-1]", "mov     eax, end_0", "sub     eax, ptr_0", "test    eax, eax", "jle     short loc_F08B"], ["lea     end_0, [end_0+0]"], ["xor     eax, eax", "mov     cl, [ptr_0]", "mov     al, cl", "mov     al, [edi+eax+48h]", "sub     eax, 9; switch 27 cases", "cmp     al, 1Ah", "ja      short _L263_0; jumptable 0000F06F default case, cases 11,12,20,28,29"], ["and     eax, 0FFh", "mov     ebp, ds:(jpt_F06F - 2DF78h)[ebx+eax*4]", "add     ebp, ebx", "jmp     ebp; switch jump"], ["cmp     cl, 24h ; '$'; jumptable 0000F06F default case, cases 11,12,20,28,29", "jz      short _L264_0; jumptable 0000F06F cases 9,10,13-19,23-25,27,30-35"], ["cmp     cl, 40h ; '@'", "jnz     short loc_F09C"], ["inc     ptr_0; jumptable 0000F06F cases 9,10,13-19,23-25,27,30-35", "mov     eax, end_0", "sub     eax, ptr_0", "test    eax, eax", "jg      short loc_F050"], ["pop     ebx", "mov     eax, 1", "pop     end_0", "pop     enc_0", "pop     ebp", "retn"], ["test    cl, cl; jumptable 0000F06F cases 22,26", "jns     short _L264_0; jumptable 0000F06F cases 9,10,13-19,23-25,27,30-35"], ["mov     eax, [esp+10h+badPtr]", "mov     [eax], ptr_0", "xor     eax, eax", "pop     ebx", "pop     end_0", "pop     enc_0", "pop     ebp", "retn"], ["cmp     cl, 9; jumptable 0000F06F case 21", "jz      short loc_F09C"], ["inc     ptr_0", "mov     eax, end_0", "sub     eax, ptr_0", "test    eax, eax", "jg      short loc_F050"], ["jmp     short loc_F08B"]], "normal_getAtts": [["push    ebp", "push    edi", "mov     edi, 1", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 0Ch", "mov     eax, [esp+1Ch+ptr]", "mov     ebp, [esp+1Ch+enc]", "mov     [esp+1Ch+open], 0", "mov     [esp+1Ch+nAtts], 0", "mov     cl, [eax+1]", "lea     edx, [eax+1]", "xor     eax, eax", "mov     al, cl", "mov     al, [ebp+eax+48h]", "lea     esi, [esi+0]"], ["sub     eax, 3; switch 27 cases", "cmp     al, 1Ah", "ja      short _L281_0; jumptable 0000F115 default case, cases 4,8,14-16,18-20,23,25-28"], ["and     eax, 0FFh", "mov     esi, ds:(jpt_F115 - 2DF78h)[ebx+eax*4]", "add     esi, ebx", "jmp     esi; switch jump"], ["cmp     state, 2; jumptable 0000F115 cases 11,17", "jnz     loc_F38A"], ["lea     esi, [esi+0]"], ["mov     cl, [ptr_0+1]; jumptable 0000F115 default case, cases 4,8,14-16,18-20,23,25-28", "xor     eax, eax", "mov     al, cl", "inc     ptr_0", "mov     al, [ebp+eax+48h]", "jmp     short loc_F100"], ["lea     esi, [ptr_0+1]; jumptable 0000F115 cases 22,24,29", "test    state, state", "jnz     loc_F2E8"], ["mov     eax, [esp+1Ch+nAtts]", "cmp     eax, [esp+1Ch+attsMax]", "jge     short loc_F15E"], ["mov     eax, [esp+1Ch+nAtts]", "mov     ecx, [esp+1Ch+atts]", "shl     eax, 4", "add     eax, ecx", "mov     [eax], ptr_0", "mov     byte ptr [eax+0Ch], 1"], ["mov     cl, [ptr_0+1]", "xor     eax, eax", "mov     al, cl", "mov     ptr_0, esi", "mov     state, 1", "mov     al, [ebp+eax+48h]", "jmp     short loc_F100"], ["lea     esi, [ptr_0+1]; jumptable 0000F115 cases 9,10", "cmp     state, 1", "jz      loc_F3BE"], ["cmp     state, 2", "jnz     loc_F2E8"], ["mov     eax, [esp+1Ch+nAtts]", "cmp     eax, [esp+1Ch+attsMax]", "jge     loc_F2E8"], ["mov     eax, [esp+1Ch+nAtts]", "mov     state, [esp+1Ch+atts]", "shl     eax, 4", "mov     byte ptr [edi+eax+0Ch], 0"], ["mov     cl, [ptr_0+1]", "xor     eax, eax", "mov     al, cl", "mov     al, [ebp+eax+48h]"], ["mov     ptr_0, esi", "mov     edi, 2", "jmp     loc_F100"], ["lea     esi, [ptr_0+1]; jumptable 0000F115 case 21", "cmp     state, 1", "jz      loc_F3BE"], ["cmp     state, 2", "jnz     loc_F2E8"], ["mov     eax, [esp+1Ch+nAtts]", "cmp     eax, [esp+1Ch+attsMax]", "jge     loc_F2E8"], ["mov     eax, [esp+1Ch+nAtts]", "mov     state, [esp+1Ch+atts]", "shl     eax, 4", "add     edi, eax", "mov     [esp+1Ch+var_14], edi", "mov     edi, [esp+1Ch+atts]", "cmp     byte ptr [edi+eax+0Ch], 0", "jz      short loc_F1A9"], ["mov     eax, [esp+1Ch+var_14]", "cmp     [eax+4], ptr_0", "jz      short loc_F20F"], ["cmp     cl, 20h ; ' '", "jz      loc_F3E5"], ["mov     eax, [esp+1Ch+var_14]", "mov     byte ptr [eax+0Ch], 0", "jmp     short loc_F1A9"], ["test    state, state; jumptable 0000F115 case 7", "jnz     short loc_F241"], ["mov     eax, [esp+1Ch+nAtts]", "mov     state, 1", "cmp     eax, [esp+1Ch+attsMax]", "jge     short loc_F241"], ["shl     eax, 4", "mov     esi, [esp+1Ch+atts]", "add     eax, esi", "mov     [eax], ptr_0", "mov     byte ptr [eax+0Ch], 1"], ["mov     cl, [edx+4]", "xor     eax, eax", "mov     al, cl", "add     edx, 4", "mov     al, [ebp+eax+48h]", "jmp     loc_F100"], ["test    state, state; jumptable 0000F115 case 6", "jnz     short loc_F279"], ["mov     eax, [esp+1Ch+nAtts]", "mov     state, 1", "cmp     eax, [esp+1Ch+attsMax]", "jge     short loc_F279"], ["shl     eax, 4", "mov     ecx, [esp+1Ch+atts]", "add     eax, ecx", "mov     [eax], ptr_0", "mov     byte ptr [eax+0Ch], 1"], ["mov     cl, [edx+3]", "xor     eax, eax", "mov     al, cl", "add     edx, 3", "mov     al, [ebp+eax+48h]", "jmp     loc_F100"], ["test    state, state; jumptable 0000F115 case 5", "jnz     short loc_F2B1"], ["mov     eax, [esp+1Ch+nAtts]", "mov     state, 1", "cmp     eax, [esp+1Ch+attsMax]", "jge     short loc_F2B1"], ["shl     eax, 4", "mov     esi, [esp+1Ch+atts]", "add     eax, esi", "mov     [eax], ptr_0", "mov     byte ptr [eax+0Ch], 1"], ["mov     cl, [edx+2]", "xor     eax, eax", "mov     al, cl", "add     edx, 2", "mov     al, [ebp+eax+48h]", "jmp     loc_F100"], ["mov     eax, [esp+1Ch+nAtts]; jumptable 0000F115 case 3", "lea     esi, [ptr_0+1]", "cmp     eax, [esp+1Ch+attsMax]", "jge     short loc_F2E8"], ["mov     eax, [esp+1Ch+nAtts]", "mov     ecx, [esp+1Ch+atts]", "shl     eax, 4", "mov     byte ptr [ecx+eax+0Ch], 0", "lea     esi, [esi+0]", "nop"], ["mov     cl, [ptr_0+1]", "xor     eax, eax", "mov     al, cl", "mov     ptr_0, esi", "mov     al, [ebp+eax+48h]", "jmp     loc_F100"], ["lea     esi, [ptr_0+1]; jumptable 0000F115 case 13", "cmp     state, 2", "jz      loc_F398"], ["mov     eax, [esp+1Ch+nAtts]", "cmp     eax, [esp+1Ch+attsMax]", "jge     short loc_F323"], ["mov     eax, [esp+1Ch+nAtts]", "mov     state, [esp+1Ch+atts]", "shl     eax, 4", "mov     [edi+eax+4], esi"], ["mov     cl, [ptr_0+1]", "xor     eax, eax", "mov     al, cl", "mov     ptr_0, esi", "mov     [esp+1Ch+open], 0Dh", "mov     edi, 2", "mov     al, [ebp+eax+48h]", "jmp     loc_F100"], ["lea     esi, [ptr_0+1]; jumptable 0000F115 case 12", "cmp     state, 2", "jz      loc_F3D8"], ["mov     eax, [esp+1Ch+nAtts]", "cmp     eax, [esp+1Ch+attsMax]", "jge     short loc_F36B"], ["mov     eax, [esp+1Ch+nAtts]", "mov     state, [esp+1Ch+atts]", "shl     eax, 4", "mov     [edi+eax+4], esi"], ["mov     cl, [ptr_0+1]", "xor     eax, eax", "mov     al, cl", "mov     ptr_0, esi", "mov     [esp+1Ch+open], 0Ch", "mov     edi, 2", "mov     al, [ebp+eax+48h]", "jmp     loc_F100"], ["mov     eax, [esp+1Ch+nAtts]", "add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     state", "pop     ebp", "retn"], ["cmp     [esp+1Ch+open], 0Dh", "jnz     loc_F2E8"], ["mov     eax, [esp+1Ch+nAtts]", "cmp     eax, [esp+1Ch+attsMax]", "jge     short loc_F3B7"], ["shl     eax, 4", "mov     edi, [esp+1Ch+atts]", "mov     [edi+eax+8], ptr_0"], ["mov     eax, [esp+1Ch+nAtts]", "inc     eax", "mov     [esp+1Ch+nAtts], eax"], ["mov     cl, [ptr_0+1]", "xor     eax, eax", "mov     al, cl", "mov     ptr_0, esi", "xor     edi, edi", "mov     al, [ebp+eax+48h]", "jmp     loc_F100"], ["cmp     [esp+1Ch+open], 0Ch", "jnz     loc_F2E8"], ["jmp     short loc_F3A3"], ["mov     cl, [ptr_0+1]", "cmp     cl, 20h ; ' '", "jz      loc_F20F"], ["xor     eax, eax", "mov     al, cl", "mov     al, [ebp+eax+48h]", "mov     edi, eax", "and     edi, 0FFh", "cmp     edi, [esp+1Ch+open]", "jnz     loc_F1B4"], ["jmp     loc_F20F"]], "normal_charRefNumber": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "movsx   enc, byte ptr [edx+2]", "cmp     al, 78h ; 'x'", "jz      short loc_F498"], ["cmp     al, 3Bh ; ';'", "jz      short loc_F478"], ["lea     ecx, [edx+2]", "sub     eax, 30h ; '0'", "jmp     short loc_F446"], ["lea     result, [result+result*4]", "lea     eax, [edx+eax*2-30h]", "cmp     result, 10FFFFh", "jg      short loc_F478"], ["movsx   edx, byte ptr [ptr+1]", "inc     ptr", "cmp     dl, 3Bh ; ';'", "jnz     short loc_F438"], ["mov     edx, result", "sar     edx, 8", "cmp     result, 0DFFFh", "jg      short loc_F480"], ["cmp     edx, 0D7h", "jg      short loc_F478"], ["test    edx, edx", "jnz     short loc_F47B"], ["cmp     ds:(latin1_encoding.type - 2DF78h)[ebx+result], 0", "jnz     short loc_F47B"], ["lea     esi, [esi+0]"], ["or      eax, 0FFFFFFFFh"], ["pop     ebx", "pop     esi", "retn"], ["cmp     edx, 0FFh", "jnz     short loc_F47B"], ["lea     edx, [result-0FFFEh]", "cmp     edx, 1", "jbe     short loc_F478"], ["pop     ebx", "pop     esi", "retn"], ["lea     ecx, [edx+3]", "mov     dl, [edx+3]", "cmp     dl, 3Bh ; ';'", "jz      short loc_F478"], ["xor     eax, eax", "jmp     short loc_F4CD"], ["cmp     dl, 40h ; '@'", "jg      short loc_F4E8"], ["sub     edx, 30h ; '0'", "cmp     dl, 9", "ja      short loc_F4C4"], ["shl     result, 4", "sub     c, 30h ; '0'", "or      result, esi"], ["cmp     result, 10FFFFh", "jg      short loc_F478"], ["mov     dl, [ptr+1]", "inc     ptr", "cmp     dl, 3Bh ; ';'", "jz      short loc_F450"], ["movsx   esi, dl", "cmp     dl, 46h ; 'F'", "jle     short loc_F4A8"], ["sub     edx, 61h ; 'a'", "cmp     dl, 5", "ja      short loc_F4C4"], ["shl     result, 4", "lea     result, [c+result-57h]", "jmp     short loc_F4BD"], ["shl     result, 4", "lea     result, [c+result-37h]", "jmp     short loc_F4BD"]], "normal_nameMatchesAscii": [["push    esi", "push    ebx", "mov     ecx, [esp+8+ptr2]", "mov     eax, [esp+8+ptr1]", "mov     esi, [esp+8+end1]", "mov     dl, [ecx]", "test    dl, dl", "jnz     short loc_F525"], ["jmp     short loc_F538"], ["cmp     [ptr1_0], dl", "jnz     short loc_F52D"], ["mov     dl, [ptr2_0+1]", "inc     ptr2_0", "inc     ptr1_0", "test    dl, dl", "jz      short loc_F538"], ["mov     ebx, end1_0", "sub     ebx, ptr1_0", "test    ebx, ebx", "jg      short loc_F518"], ["pop     ebx", "xor     ptr1_0, ptr1_0", "pop     end1_0", "retn"], ["cmp     end1_0, ptr1_0", "pop     ebx", "setz    al", "and     eax, 0FFh", "pop     end1_0", "retn"]], "normal_nameLength": [["push    edi", "push    esi", "mov     esi, enc", "mov     enc, start", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "lea     enc, [enc+0]"], ["xor     ecx, ecx", "mov     cl, [ptr]", "mov     cl, [enc+ecx+48h]", "sub     ecx, 5; switch 25 cases", "cmp     cl, 18h", "ja      short _L388_0; jumptable 0000F587 default case, cases 8-21,28"], ["and     ecx, 0FFh", "mov     edi, ds:(jpt_F587 - 2DF78h)[ebx+ecx*4]", "add     edi, ebx", "jmp     edi; switch jump"], ["pop     ebx; jumptable 0000F587 default case, cases 8-21,28", "sub     ptr, start", "pop     enc", "pop     edi", "retn"], ["inc     ptr; jumptable 0000F587 cases 22-27,29", "jmp     short loc_F568"], ["add     ptr, 4; jumptable 0000F587 case 7", "jmp     short loc_F568"], ["add     ptr, 3; jumptable 0000F587 case 6", "jmp     short loc_F568"], ["add     ptr, 2; jumptable 0000F587 case 5", "jmp     short loc_F568"]], "normal_skipS": [["push    ebx", "mov     ebx, enc", "mov     enc, ptr", "lea     esi, [esi+0]"], ["xor     edx, edx", "mov     dl, [ptr]", "mov     cl, [enc+edx+48h]", "cmp     cl, 0Ah", "ja      short loc_F5E0"], ["cmp     cl, 8", "ja      short loc_F5E5"], ["pop     enc", "retn"], ["cmp     cl, 15h", "jnz     short loc_F5DA"], ["inc     ptr", "jmp     short loc_F5C8"]], "normal_updatePosition": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     ebp, [esp+10h+end]", "mov     eax, [esp+10h+ptr]", "mov     ecx, ebp", "mov     esi, [esp+10h+enc]", "sub     ecx, eax", "test    ecx, ecx", "jle     short loc_F65B"], ["lea     esi, [esi+0]", "nop"], ["xor     ecx, ecx", "mov     cl, [ptr_0]", "mov     cl, [esi+ecx+48h]", "sub     ecx, 5; switch 6 cases", "cmp     cl, 5", "ja      _L404_0; jumptable 0000F63B default case, case 8"], ["and     ecx, 0FFh", "mov     edx, ds:(jpt_F63B - 2DF78h)[ebx+ecx*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["mov     edi, [esp+10h+pos]; jumptable 0000F63B case 10", "inc     ptr_0", "mov     ecx, [edi]", "inc     ecx", "mov     [edi], ecx", "mov     ecx, ebp", "sub     ecx, ptr_0", "xor     edi, edi"], ["mov     edx, [esp+10h+pos]", "test    ecx, ecx", "mov     [edx+4], edi", "jg      short loc_F618"], ["pop     ebx", "pop     enc_0", "pop     edi", "pop     end_0", "retn"], ["mov     edi, [esp+10h+pos]; jumptable 0000F63B case 9", "mov     ecx, end_0", "mov     edx, [edi]", "inc     edx", "mov     [edi], edx", "lea     edi, [ptr_0+1]", "sub     ecx, ptr_0", "test    ecx, ecx", "jle     short loc_F687"], ["xor     edx, edx", "mov     dl, [eax+1]", "cmp     byte ptr [enc_0+edx+48h], 0Ah", "jnz     short loc_F687"], ["lea     ptr_0, [eax+2]", "mov     ecx, end_0", "sub     ecx, ptr_0"], ["mov     eax, ptr_0", "xor     ptr_0, ptr_0", "jmp     short loc_F650"], ["add     ptr_0, 4; jumptable 0000F63B case 7"], ["mov     edi, [esp+10h+pos]", "mov     ecx, end_0", "sub     ecx, ptr_0", "mov     edi, [edi+4]", "inc     edi", "jmp     short loc_F650"], ["add     ptr_0, 3; jumptable 0000F63B case 6", "jmp     short loc_F693"], ["add     ptr_0, 2; jumptable 0000F63B case 5", "jmp     short loc_F693"], ["mov     edi, [esp+10h+pos]; jumptable 0000F63B default case, case 8", "inc     ptr_0", "mov     ecx, end_0", "mov     edx, [edi+4]", "sub     ecx, ptr_0", "lea     edi, [edx+1]", "jmp     short loc_F650"]], "utf8_toUtf16": [["push    ebp", "push    edi", "push    esi", "push    ebx", "mov     eax, [esp+10h+toP]", "mov     ebp, [esp+10h+enc]", "mov     esi, [esp+10h+fromLim]", "mov     edi, [esp+10h+toLim]", "mov     ecx, [eax]", "mov     eax, [esp+10h+fromP]", "mov     edx, [eax]", "lea     esi, [esi+0]"], ["cmp     from, esi", "jnb     short loc_F728"], ["cmp     to, edi", "jnb     short loc_F728"], ["movsx   ax, byte ptr [from]", "xor     ebx, ebx", "mov     bl, al", "mov     bl, [ebp+ebx+48h]", "cmp     bl, 6", "jz      loc_F7E8"], ["cmp     bl, 7", "jz      short loc_F770"], ["cmp     bl, 5", "jz      short loc_F748"], ["inc     from", "mov     [ecx], ax", "add     ecx, 2", "cmp     from, esi", "jb      short loc_F6F4"], ["lea     fromLim_0, [fromLim_0+0]"], ["xor     eax, eax", "cmp     fromLim_0, from", "setnbe  al", "add     eax, eax"], ["mov     toLim_0, [esp+10h+fromP]", "mov     [edi], from", "mov     edi, [esp+10h+toP]", "mov     [edi], to", "pop     ebx", "pop     fromLim_0", "pop     edi", "pop     enc_0", "retn"], ["mov     ebx, fromLim_0", "sub     ebx, from", "dec     ebx", "jle     loc_F820"], ["mov     bl, [from+1]", "add     ecx, 2", "shl     eax, 6", "and     ebx, 3Fh", "and     eax, 7C0h", "add     from, 2", "or      eax, ebx", "mov     [to-2], ax", "jmp     short loc_F6F0"], ["mov     ebx, toLim_0", "sub     ebx, to", "cmp     ebx, 2", "jle     loc_F82A"], ["mov     ebx, fromLim_0", "sub     ebx, from", "cmp     ebx, 3", "jle     loc_F820"], ["movsx   ebx, byte ptr [from+1]", "shl     eax, 12h", "add     to, 4", "shl     ebx, 0Ch", "and     eax, 1C0000h", "and     ebx, 3F000h", "add     from, 4", "or      eax, ebx", "mov     bl, [edx-1]", "and     ebx, 3Fh", "or      eax, ebx", "movsx   ebx, byte ptr [edx-2]", "shl     ebx, 6", "and     ebx, 0FC0h", "or      eax, ebx", "sub     n, offset loc_10000", "mov     ebx, n", "and     n, 3FFh", "shr     n, 0Ah", "or      eax, 0FFFFDC00h", "or      ebx, 0FFFFD800h", "mov     [ecx-2], ax", "mov     [ecx-4], bx", "jmp     loc_F6F0"], ["mov     ebx, fromLim_0", "sub     ebx, from", "cmp     ebx, 2", "jle     short loc_F820"], ["mov     bl, [from+2]", "add     ecx, 2", "and     ebx, 3Fh", "add     from, 3", "shl     eax, 0Ch", "or      eax, ebx", "movsx   ebx, byte ptr [edx-2]", "shl     ebx, 6", "and     ebx, 0FC0h", "or      eax, ebx", "mov     [to-2], ax", "jmp     loc_F6F0"], ["mov     eax, 1", "jmp     after"], ["mov     eax, 2", "jmp     after"]], "latin1_toUtf8": [["push    ebp", "push    edi", "push    esi", "push    ebx", "mov     ebx, [esp+10h+fromP]", "mov     esi, [esp+10h+fromLim]", "mov     ecx, [esp+10h+toP]", "mov     edi, [esp+10h+toLim]", "mov     eax, [ebx]", "cmp     esi, eax", "jnz     short loc_F87A"], ["jmp     short loc_F8B1"], ["cmp     edi, ebp", "jz      short loc_F8B8"], ["lea     c, [eax+1]", "mov     [ebx], edx", "mov     edx, [toP_0]", "lea     ebp, [edx+1]", "mov     [toP_0], ebp", "mov     al, [eax]", "mov     [edx], al", "mov     eax, [ebx]", "cmp     esi, eax", "jz      short loc_F8B1"], ["mov     dl, [eax]", "mov     ebp, [toP_0]", "test    dl, dl", "jns     short loc_F860"], ["mov     eax, toLim_0", "sub     eax, ebp", "dec     eax", "jle     short loc_F8B8"], ["lea     eax, [ebp+1]", "mov     [toP_0], eax", "mov     al, dl", "shr     al, 6", "and     c, 3Fh", "or      eax, 0FFFFFFC0h", "or      edx, 0FFFFFF80h", "mov     [ebp+0], al", "mov     eax, [toP_0]", "lea     ebp, [eax+1]", "mov     [toP_0], ebp", "mov     [eax], dl", "mov     eax, [fromP_0]", "inc     eax", "mov     [fromP_0], eax", "cmp     fromLim_0, eax", "jnz     short loc_F87A"], ["pop     fromP_0", "xor     eax, eax", "pop     fromLim_0", "pop     toLim_0", "pop     ebp", "retn"], ["pop     fromP_0", "mov     eax, 2", "pop     fromLim_0", "pop     toLim_0", "pop     ebp", "retn"]], "latin1_toUtf16": [["push    ebp", "push    edi", "push    esi", "push    ebx", "mov     ecx, [esp+10h+fromP]", "mov     ebx, [esp+10h+fromLim]", "mov     edx, [esp+10h+toP]", "mov     esi, [esp+10h+toLim]", "mov     eax, [ecx]", "cmp     ebx, eax", "ja      short loc_F90C"], ["jmp     short loc_F912"], ["lea     edi, [eax+1]", "mov     [ecx], edi", "mov     edi, [toP_0]", "mov     al, [eax]", "and     eax, 0FFh", "lea     ebp, [edi+2]", "mov     [toP_0], ebp", "mov     [edi], ax", "mov     eax, [ecx]", "cmp     eax, ebx", "jnb     short loc_F912"], ["cmp     [toP_0], toLim_0", "jb      short loc_F8F0"], ["jz      short loc_F920"], ["pop     fromLim_0", "xor     eax, eax", "pop     toLim_0", "pop     edi", "pop     ebp", "retn"], ["pop     fromLim_0", "mov     eax, 2", "pop     toLim_0", "pop     edi", "pop     ebp", "retn"]], "ascii_toUtf8": [["push    ebp", "push    edi", "push    esi", "push    ebx", "mov     ebx, [esp+10h+fromP]", "mov     edi, [esp+10h+fromLim]", "mov     edx, [esp+10h+toP]", "mov     ebp, [esp+10h+toLim]", "mov     eax, [ebx]", "cmp     edi, eax", "ja      short loc_F966"], ["jmp     short loc_F96C"], ["lea     ecx, [eax+1]", "mov     [ebx], ecx", "mov     ecx, [toP_0]", "lea     esi, [ecx+1]", "mov     [toP_0], esi", "mov     al, [eax]", "mov     [ecx], al", "mov     eax, [ebx]", "cmp     eax, edi", "jnb     short loc_F96C"], ["cmp     [toP_0], toLim_0", "jb      short loc_F950"], ["jz      short loc_F978"], ["pop     fromP_0", "xor     eax, eax", "pop     esi", "pop     fromLim_0", "pop     toLim_0", "retn"], ["pop     fromP_0", "mov     eax, 2", "pop     esi", "pop     fromLim_0", "pop     toLim_0", "retn"]], "little2_toUtf8": [["push    ebp", "push    edi", "push    esi", "push    ebx", "sub     esp, 8", "mov     eax, [esp+18h+fromP]", "mov     esi, [esp+18h+toP]", "mov     ecx, [eax]", "mov     eax, [esp+18h+fromLim]", "sub     eax, from", "and     eax, 0FFFFFFFEh", "add     eax, from", "mov     [esp+18h+var_14], eax", "cmp     from, fromLim_0", "jb      short loc_F9F5"], ["jmp     loc_FABF"], ["test    bl, bl", "jnz     loc_FAD0"], ["test    dl, dl", "js      loc_FAD0"], ["cmp     [esp+18h+toLim], edi", "jz      loc_FB48"], ["lea     eax, [edi+1]", "mov     [esi], eax", "mov     [edi], dl", "lea     esi, [esi+0]"], ["add     from, 2", "cmp     [esp+18h+var_14], from", "jbe     loc_FABF"], ["mov     bl, [from+1]", "mov     dl, [from]", "mov     al, bl", "mov     edi, [esi]", "and     eax, 0FFh", "cmp     bl, 7", "mov     [esp+18h+var_18], eax", "jbe     short loc_F9C0"], ["lea     ebp, [hi+28h]", "mov     eax, ebp", "cmp     al, 3", "ja      loc_FB08"], ["mov     hi, [esp+18h+toLim]", "sub     ebx, edi", "cmp     ebx, 3", "jle     loc_FB48"], ["mov     ebx, [esp+18h+var_14]", "sub     ebx, from", "cmp     ebx, 3", "jle     loc_FB5B"], ["mov     bl, dl", "mov     eax, [esp+18h+var_18]", "shl     eax, 2", "add     from, 2", "shr     bl, 6", "and     eax, 0Ch", "and     ebx, 0FFh", "or      eax, ebx", "lea     ebx, [edi+1]", "inc     eax", "mov     [esi], ebx", "mov     ebx, plane", "sar     ebx, 2", "shl     plane, 4", "or      ebx, 0FFFFFFF0h", "mov     [edi], bl", "and     eax, 30h", "mov     edi, [esi]", "lea     ebx, [edi+1]", "mov     [esi], ebx", "mov     bl, dl", "shr     bl, 2", "shl     lo, 4", "and     ebx, 0Fh", "or      ebx, eax", "and     edx, 30h", "or      ebx, 0FFFFFF80h", "mov     [edi], bl", "xor     ebx, ebx", "mov     bl, [ecx+1]", "mov     al, [ecx]", "shl     ebx, 2", "add     ecx, 2", "and     ebx, 0Ch", "or      edx, ebx", "mov     bl, al", "shr     bl, 6", "and     lo2, 3Fh", "or      edx, ebx", "mov     ebx, [esi]", "or      edx, 0FFFFFF80h", "or      eax, 0FFFFFF80h", "lea     edi, [ebx+1]", "cmp     [esp+18h+var_14], ecx", "mov     [esi], edi", "mov     [ebx], dl", "mov     edx, [esi]", "lea     ebx, [edx+1]", "mov     [esi], ebx", "mov     [edx], al", "ja      loc_F9F5"], ["mov     eax, [esp+18h+fromP]", "mov     [eax], from", "add     esp, 8", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     hi, [esp+18h+toLim]", "sub     ebx, edi", "dec     ebx", "jle     short loc_FB48"], ["lea     ebx, [edi+1]", "mov     eax, [esp+18h+var_18]", "shl     eax, 2", "mov     [esi], ebx", "mov     bl, dl", "shr     bl, 6", "or      eax, ebx", "or      eax, 0FFFFFFC0h", "mov     [edi], al"], ["mov     eax, [esi]", "and     lo, 3Fh", "or      edx, 0FFFFFF80h", "lea     ebx, [eax+1]", "mov     [esi], ebx", "mov     [eax], dl", "jmp     loc_F9E8"], ["mov     ebp, [esp+18h+toLim]", "sub     ebp, edi", "cmp     ebp, 2", "jle     short loc_FB48"], ["shr     bl, 4", "lea     ebp, [edi+1]", "or      ebx, 0FFFFFFE0h", "mov     [esi], ebp", "mov     eax, [esp+18h+var_18]", "mov     [edi], bl", "shl     eax, 2", "mov     ebx, [esi]", "mov     ebp, eax", "mov     al, dl", "lea     edi, [ebx+1]", "and     ebp, 3Ch", "shr     al, 6", "mov     [esi], edi", "mov     edi, eax", "mov     eax, ebp", "or      eax, edi", "or      eax, 0FFFFFF80h", "mov     [ebx], al", "jmp     short loc_FAF0"], ["mov     eax, [esp+18h+fromP]", "mov     [eax], from", "add     esp, 8", "mov     eax, 2", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esp+18h+fromP]", "mov     [eax], from", "add     esp, 8", "mov     eax, 1", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "little2_toUtf16": [["push    ebp", "push    edi", "push    esi", "push    ebx", "push    ecx", "mov     eax, [esp+14h+fromP]", "mov     ebx, [esp+14h+toP]", "mov     edi, [esp+14h+toLim]", "mov     ebp, [esp+14h+fromLim]", "mov     eax, [eax]", "mov     edx, [ebx]", "sub     ebp, eax", "mov     ecx, edi", "and     ebp, 0FFFFFFFEh", "sub     ecx, edx", "and     ecx, 0FFFFFFFEh", "mov     [esp+14h+res], 0", "lea     esi, [eax+ebp]", "cmp     ebp, ecx", "jle     short loc_FBAE"], ["mov     cl, [fromLim_0-1]", "and     ecx, 0FFFFFFF8h", "cmp     cl, 0D8h", "jz      short loc_FC00"], ["cmp     eax, fromLim_0", "jnb     short loc_FBF4"], ["mov     ecx, [esp+14h+fromP]", "mov     [esp+14h+toP], ebx", "jmp     short loc_FBEE"], ["movzx   ebp, byte ptr [eax+1]", "xor     ebx, ebx", "and     ebp, 0FFh", "shl     ebp, 8", "mov     bl, [eax]", "mov     eax, ebx", "mov     ebx, [esp+14h+toP]", "or      eax, ebp", "lea     ebp, [edx+2]", "mov     [ebx], ebp", "mov     [edx], ax", "mov     eax, [ecx]", "add     eax, 2", "mov     [ecx], eax", "cmp     eax, fromLim_0", "jnb     short loc_FBF4"], ["mov     edx, [ebx]"], ["cmp     edi, edx", "ja      short loc_FBC0"], ["jz      short loc_FC10"], ["mov     eax, [esp+14h+res]", "pop     edx", "pop     ebx", "pop     fromLim_0", "pop     edi", "pop     ebp", "retn"], ["sub     fromLim_0, 2", "mov     [esp+14h+res], 1", "jmp     short loc_FBAE"], ["mov     [esp+14h+res], 2", "mov     eax, [esp+14h+res]", "pop     edx", "pop     ebx", "pop     fromLim_0", "pop     edi", "pop     ebp", "retn"]], "big2_toUtf8": [["push    ebp", "push    edi", "push    esi", "push    ebx", "sub     esp, 8", "mov     eax, [esp+18h+fromP]", "mov     esi, [esp+18h+toP]", "mov     ecx, [eax]", "mov     eax, [esp+18h+fromLim]", "sub     eax, from", "and     eax, 0FFFFFFFEh", "add     eax, from", "mov     [esp+18h+var_14], eax", "cmp     from, fromLim_0", "jb      short loc_FC85"], ["jmp     loc_FD4F"], ["test    bl, bl", "jnz     loc_FD60"], ["test    dl, dl", "js      loc_FD60"], ["cmp     [esp+18h+toLim], edi", "jz      loc_FDD8"], ["lea     eax, [edi+1]", "mov     [esi], eax", "mov     [edi], dl", "lea     esi, [esi+0]"], ["add     from, 2", "cmp     [esp+18h+var_14], from", "jbe     loc_FD4F"], ["mov     bl, [from]", "mov     dl, [from+1]", "mov     al, bl", "mov     edi, [esi]", "and     eax, 0FFh", "cmp     bl, 7", "mov     [esp+18h+var_18], eax", "jbe     short loc_FC50"], ["lea     ebp, [hi+28h]", "mov     eax, ebp", "cmp     al, 3", "ja      loc_FD98"], ["mov     hi, [esp+18h+toLim]", "sub     ebx, edi", "cmp     ebx, 3", "jle     loc_FDD8"], ["mov     ebx, [esp+18h+var_14]", "sub     ebx, from", "cmp     ebx, 3", "jle     loc_FDEB"], ["mov     bl, dl", "mov     eax, [esp+18h+var_18]", "shl     eax, 2", "add     from, 2", "shr     bl, 6", "and     eax, 0Ch", "and     ebx, 0FFh", "or      eax, ebx", "lea     ebx, [edi+1]", "inc     eax", "mov     [esi], ebx", "mov     ebx, plane", "sar     ebx, 2", "shl     plane, 4", "or      ebx, 0FFFFFFF0h", "mov     [edi], bl", "and     eax, 30h", "mov     edi, [esi]", "lea     ebx, [edi+1]", "mov     [esi], ebx", "mov     bl, dl", "shr     bl, 2", "shl     lo, 4", "and     ebx, 0Fh", "or      ebx, eax", "and     edx, 30h", "or      ebx, 0FFFFFF80h", "mov     [edi], bl", "xor     ebx, ebx", "mov     bl, [ecx]", "mov     al, [ecx+1]", "shl     ebx, 2", "add     ecx, 2", "and     ebx, 0Ch", "or      edx, ebx", "mov     bl, al", "shr     bl, 6", "and     lo2, 3Fh", "or      edx, ebx", "mov     ebx, [esi]", "or      edx, 0FFFFFF80h", "or      eax, 0FFFFFF80h", "lea     edi, [ebx+1]", "cmp     [esp+18h+var_14], ecx", "mov     [esi], edi", "mov     [ebx], dl", "mov     edx, [esi]", "lea     ebx, [edx+1]", "mov     [esi], ebx", "mov     [edx], al", "ja      loc_FC85"], ["mov     eax, [esp+18h+fromP]", "mov     [eax], from", "add     esp, 8", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     hi, [esp+18h+toLim]", "sub     ebx, edi", "dec     ebx", "jle     short loc_FDD8"], ["lea     ebx, [edi+1]", "mov     eax, [esp+18h+var_18]", "shl     eax, 2", "mov     [esi], ebx", "mov     bl, dl", "shr     bl, 6", "or      eax, ebx", "or      eax, 0FFFFFFC0h", "mov     [edi], al"], ["mov     eax, [esi]", "and     lo, 3Fh", "or      edx, 0FFFFFF80h", "lea     ebx, [eax+1]", "mov     [esi], ebx", "mov     [eax], dl", "jmp     loc_FC78"], ["mov     ebp, [esp+18h+toLim]", "sub     ebp, edi", "cmp     ebp, 2", "jle     short loc_FDD8"], ["shr     bl, 4", "lea     ebp, [edi+1]", "or      ebx, 0FFFFFFE0h", "mov     [esi], ebp", "mov     eax, [esp+18h+var_18]", "mov     [edi], bl", "shl     eax, 2", "mov     ebx, [esi]", "mov     ebp, eax", "mov     al, dl", "lea     edi, [ebx+1]", "and     ebp, 3Ch", "shr     al, 6", "mov     [esi], edi", "mov     edi, eax", "mov     eax, ebp", "or      eax, edi", "or      eax, 0FFFFFF80h", "mov     [ebx], al", "jmp     short loc_FD80"], ["mov     eax, [esp+18h+fromP]", "mov     [eax], from", "add     esp, 8", "mov     eax, 2", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esp+18h+fromP]", "mov     [eax], from", "add     esp, 8", "mov     eax, 1", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "big2_toUtf16": [["push    ebp", "push    edi", "push    esi", "push    ebx", "push    ecx", "mov     eax, [esp+14h+fromP]", "mov     ebx, [esp+14h+toP]", "mov     edi, [esp+14h+toLim]", "mov     ebp, [esp+14h+fromLim]", "mov     eax, [eax]", "mov     edx, [ebx]", "sub     ebp, eax", "mov     ecx, edi", "and     ebp, 0FFFFFFFEh", "sub     ecx, edx", "and     ecx, 0FFFFFFFEh", "mov     [esp+14h+res], 0", "lea     esi, [eax+ebp]", "cmp     ebp, ecx", "jle     short loc_FE3E"], ["mov     cl, [fromLim_0-2]", "and     ecx, 0FFFFFFF8h", "cmp     cl, 0D8h", "jz      short loc_FE90"], ["cmp     eax, fromLim_0", "jnb     short loc_FE84"], ["mov     ecx, [esp+14h+fromP]", "mov     [esp+14h+toP], ebx", "jmp     short loc_FE7E"], ["movzx   ebp, byte ptr [eax]", "xor     ebx, ebx", "and     ebp, 0FFh", "shl     ebp, 8", "mov     bl, [eax+1]", "mov     eax, ebx", "mov     ebx, [esp+14h+toP]", "or      eax, ebp", "lea     ebp, [edx+2]", "mov     [ebx], ebp", "mov     [edx], ax", "mov     eax, [ecx]", "add     eax, 2", "mov     [ecx], eax", "cmp     eax, fromLim_0", "jnb     short loc_FE84"], ["mov     edx, [ebx]"], ["cmp     edi, edx", "ja      short loc_FE50"], ["jz      short loc_FEA0"], ["mov     eax, [esp+14h+res]", "pop     edx", "pop     ebx", "pop     fromLim_0", "pop     edi", "pop     ebp", "retn"], ["sub     fromLim_0, 2", "mov     [esp+14h+res], 1", "jmp     short loc_FE3E"], ["mov     [esp+14h+res], 2", "mov     eax, [esp+14h+res]", "pop     edx", "pop     ebx", "pop     fromLim_0", "pop     edi", "pop     ebp", "retn"]], "little2_cdataSectionTok": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "push    eax", "mov     ecx, [esp+14h+ptr]", "cmp     ecx, [esp+14h+end]", "jnb     loc_100F2"], ["mov     eax, [esp+14h+end]", "sub     eax, ecx", "test    al, 1", "jz      short loc_FEE7"], ["and     eax, 0FFFFFFFEh", "jz      loc_100FC"], ["add     n, ecx", "mov     [esp+14h+end], eax"], ["mov     al, [ecx+1]", "mov     dl, [ecx]", "test    al, al", "jz      short loc_FF18"], ["cmp     al, 0DFh", "ja      short loc_FF40"], ["cmp     al, 0DBh", "ja      short _L568; jumptable 0000FF3A cases 0,1,8"], ["add     eax, 28h ; '('", "cmp     al, 3", "ja      short _L564; jumptable 0000FF3A cases 2,3"], ["mov     eax, [esp+14h+end]; jumptable 0000FF3A case 7", "sub     eax, ecx", "cmp     eax, 3", "jle     loc_100E8"], ["lea     edx, [ecx+4]", "jmp     short loc_FF80"], ["and     edx, 0FFh", "mov     eax, [esp+14h+enc]", "cmp     byte ptr [eax+edx+48h], 0Ah", "ja      short _L564; jumptable 0000FF3A cases 2,3"], ["mov     esi, eax", "xor     eax, eax", "mov     al, [esi+edx+48h]", "mov     ebx, ds:(jpt_FF3A - 2DF78h)[edi+eax*4]; switch 11 cases", "add     ebx, edi", "jmp     ebx; switch jump"], ["inc     al", "jnz     short _L564; jumptable 0000FF3A cases 2,3"], ["and     edx, 0FFh", "sub     edx, 0FEh", "cmp     edx, 1", "ja      short _L564; jumptable 0000FF3A cases 2,3"], ["mov     eax, [esp+14h+nextTokPtr]; jumptable 0000FF3A cases 0,1,8", "mov     [eax], ecx", "xor     eax, eax"], ["pop     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esp+14h+end]; jumptable 0000FF3A case 5", "sub     eax, ecx", "dec     eax", "jle     loc_100E8"], ["lea     esi, [esi+0]"], ["lea     edx, [ecx+2]; jumptable 0000FF3A cases 2,3", "lea     esi, [esi+0]", "nop"], ["mov     ebp, [esp+14h+end]", "sub     ebp, ptr_0", "cmp     ebp, 1", "jle     short _L577; jumptable 0000FFB6 cases 0,1,4,8-10"], ["mov     al, [ptr_0+1]", "mov     bl, [ptr_0]"], ["test    al, al", "jnz     short loc_10000"], ["and     ebx, 0FFh", "mov     eax, [esp+14h+enc]", "cmp     byte ptr [eax+ebx+48h], 0Ah", "ja      short _L579; jumptable 0000FFB6 cases 2,3,5"], ["mov     esi, eax", "xor     eax, eax", "mov     al, [esi+ebx+48h]", "mov     ebx, ds:(jpt_FFB6 - 2DF78h)[edi+eax*4]; switch 11 cases", "add     ebx, edi", "jmp     ebx; switch jump"], ["inc     al", "jnz     short _L579; jumptable 0000FFB6 cases 2,3,5"], ["and     ebx, 0FFh", "sub     ebx, 0FEh", "cmp     ebx, 1", "ja      short _L579; jumptable 0000FFB6 cases 2,3,5"], ["mov     eax, [esp+14h+nextTokPtr]; jumptable 0000FFB6 cases 0,1,4,8-10", "mov     [eax], ptr_0", "mov     eax, 6", "pop     ptr_0", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     edx, [ecx+2]; jumptable 0000FF3A case 4", "mov     ebp, [esp+14h+end]", "sub     ebp, ptr_0", "cmp     ebp, 1", "jle     loc_100FC"], ["mov     al, [ecx+3]", "mov     bl, [ecx+2]", "test    al, al", "jz      loc_100A8"], ["cmp     al, 0DFh", "ja      short loc_FFB8"], ["cmp     al, 0DBh", "ja      short _L577; jumptable 0000FFB6 cases 0,1,4,8-10"], ["add     eax, 28h ; '('", "cmp     al, 3", "jbe     short _L582; jumptable 0000FFB6 case 7"], ["add     ptr_0, 2; jumptable 0000FFB6 cases 2,3,5", "jmp     loc_FF80"], ["cmp     ebp, 3; jumptable 0000FFB6 case 7", "jle     short _L577; jumptable 0000FFB6 cases 0,1,4,8-10"], ["add     ptr_0, 4", "jmp     loc_FF80"], ["cmp     ebp, 2; jumptable 0000FFB6 case 6", "jz      short _L577; jumptable 0000FFB6 cases 0,1,4,8-10"], ["add     ptr_0, 3", "jmp     loc_FF80"], ["mov     eax, [esp+14h+nextTokPtr]; jumptable 0000FF3A case 10", "add     ecx, 2", "mov     [eax], ecx", "mov     eax, 7", "jmp     loc_FF5D"], ["lea     eax, [ecx+2]; jumptable 0000FF3A case 9", "mov     edx, [esp+14h+end]", "sub     edx, ptr_0", "dec     edx", "jle     loc_100FC"], ["cmp     byte ptr [ecx+3], 0", "mov     dl, [ecx+2]", "jnz     short loc_1007D"], ["and     edx, 0FFh", "mov     esi, [esp+14h+enc]", "cmp     byte ptr [esi+edx+48h], 0Ah", "jnz     short loc_1007D"], ["lea     ptr_0, [ecx+4]"], ["mov     edi, [esp+14h+nextTokPtr]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], ptr_0", "mov     ptr_0, 7", "jmp     loc_FF5D"], ["mov     eax, [esp+14h+end]; jumptable 0000FF3A case 6", "sub     eax, ecx", "cmp     eax, 2", "jle     short loc_100E8"], ["lea     edx, [ecx+3]", "jmp     loc_FF80"], ["cmp     bl, 5Dh ; ']'", "jnz     loc_FF90"], ["lea     esi, [ecx+4]", "mov     [esp+14h+var_14], ptr_0", "mov     ptr_0, [esp+14h+end]", "sub     esi, [esp+14h+var_14]", "dec     esi", "jle     short loc_100FC"], ["cmp     byte ptr [ecx+5], 0", "jnz     loc_FF90"], ["cmp     byte ptr [ecx+4], 3Eh ; '>'", "jnz     loc_FF90"], ["mov     eax, [esp+14h+nextTokPtr]", "add     ecx, 6", "mov     [eax], ecx", "mov     eax, 28h ; '('", "jmp     loc_FF5D"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_FF5D"], ["mov     eax, 0FFFFFFFCh", "jmp     loc_FF5D"], ["or      eax, 0FFFFFFFFh", "jmp     loc_FF5D"]], "little2_scanRef": [["push    ebp", "push    edi", "mov     edi, end", "push    esi", "sub     edi, ptr", "push    ebx", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "cmp     edi, 1", "mov     [esp+20h+enc], enc_0", "jle     loc_102D0"], ["mov     bl, [ptr+1]", "mov     ebp, end", "test    bl, bl", "mov     cl, [ptr]", "jz      short loc_10170"], ["cmp     bl, 0DFh", "ja      loc_10230"], ["cmp     bl, 0DBh", "ja      short _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["lea     enc_0, [ebx+28h]", "cmp     al, 3", "ja      short loc_101A0"], ["cmp     edi, 3; jumptable 0001018F case 7", "jle     loc_103AB"], ["lea     esi, [esi+0]", "nop"], ["mov     eax, [esp+20h+nextTokPtr]; jumptable 0001018F default case, cases 8-18,20,21,23,25-28", "mov     [eax], edx", "xor     eax, eax"], ["add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     ebx, ebx", "mov     bl, cl", "mov     bl, [enc_0+ebx+48h]", "sub     ebx, 6; switch 24 cases", "cmp     bl, 17h", "ja      short _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["and     ebx, 0FFh", "mov     enc_0, ds:(jpt_1018F - 2DF78h)[esi+ebx*4]", "add     eax, esi", "jmp     eax; switch jump"], ["xor     ebx, ebx; jumptable 0001018F case 29", "lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["and     ebx, 0FFh", "movzx   edi, ds:(nmstrtPages - 2DF78h)[esi+ebx]", "mov     bl, cl", "and     edi, 0FFh", "shr     bl, 5", "and     ebx, 0FFh", "lea     ebx, [ebx+edi*8]", "mov     ebx, ds:(namingBitmap - 2DF78h)[esi+ebx*4]", "shr     ebx, cl", "and     ebx, 1", "jz      short _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["add     ptr, 2; jumptable 0001018F cases 22,24", "mov     eax, end", "sub     eax, ptr", "mov     [esp+20h+var_1C], eax", "dec     eax", "jle     loc_102D0"], ["lea     eax, (namePages - 2DF78h)[esi]", "mov     [esp+20h+var_18], eax", "lea     eax, (namingBitmap - 2DF78h)[esi]", "mov     [esp+20h+var_14], eax"], ["mov     bl, [ptr+1]", "mov     cl, [ptr]", "test    bl, bl", "jz      short loc_10258"], ["cmp     bl, 0DFh", "ja      loc_10358"], ["cmp     bl, 0DBh", "ja      _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["lea     edi, [ebx+28h]", "mov     eax, edi", "cmp     al, 3", "ja      short loc_10288"], ["cmp     [esp+20h+var_1C], 3; jumptable 0001027E case 7", "jg      _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["jmp     loc_103AB"], ["cmp     bl, 0FFh", "jnz     loc_101A0"], ["mov     edi, ecx", "and     edi, 0FFh", "sub     edi, 0FEh", "cmp     edi, 1", "jbe     _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["jmp     loc_101A0"], ["xor     ebx, ebx", "mov     eax, [esp+20h+enc]", "mov     bl, cl", "mov     bl, [eax+ebx+48h]", "sub     ebx, 5; switch 25 cases", "cmp     bl, 18h", "ja      _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["and     ebx, 0FFh", "mov     eax, ds:(jpt_1027E - 2DF78h)[esi+ebx*4]", "add     eax, esi", "jmp     eax; switch jump"], ["xor     ebx, ebx; jumptable 0001027E case 29", "lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["and     ebx, 0FFh", "mov     eax, [esp+20h+var_18]", "movzx   edi, byte ptr [eax+ebx]", "mov     bl, cl", "and     edi, 0FFh", "shr     bl, 5", "mov     eax, [esp+20h+var_14]", "and     ebx, 0FFh", "lea     ebx, [ebx+edi*8]", "mov     ebx, [eax+ebx*4]", "shr     ebx, cl", "and     ebx, 1", "jz      _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["add     ptr, 2; jumptable 0001027E cases 22,24-27", "mov     eax, end", "sub     eax, ptr", "mov     [esp+20h+var_1C], eax", "dec     eax", "jg      loc_101F6"], ["xchg    ax, ax"], ["or      eax, 0FFFFFFFFh", "jmp     loc_10168"], ["lea     ebx, [ptr+2]; jumptable 0001018F case 19", "mov     ecx, end", "sub     ecx, ebx", "dec     ecx", "jle     short loc_102D0"], ["cmp     byte ptr [ptr+3], 0", "jnz     loc_10380"], ["mov     cl, [ptr+2]", "cmp     cl, 78h ; 'x'", "jz      loc_1042B"], ["and     ecx, 0FFh", "mov     eax, [esp+20h+enc]", "cmp     byte ptr [eax+ecx+48h], 19h", "jnz     short loc_10380"], ["add     ptr, 4", "mov     ecx, end", "sub     ecx, edx", "dec     ecx", "jle     short loc_102D0"], ["mov     eax, [esp+20h+enc]"], ["cmp     byte ptr [edx+1], 0", "jnz     _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["xor     ecx, ecx", "mov     cl, [edx]", "mov     cl, [eax+ecx+48h]", "cmp     cl, 12h", "jz      loc_10418"], ["cmp     cl, 19h", "jnz     _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["add     edx, 2", "mov     ecx, end", "sub     ecx, edx", "dec     ecx", "jg      short loc_10315"], ["jmp     short loc_102D0"], ["cmp     edi, 2; jumptable 0001018F case 6", "jnz     _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["jmp     short loc_103AB"], ["cmp     bl, 0FFh", "jnz     loc_10288"], ["mov     edi, ecx", "and     edi, 0FFh", "sub     edi, 0FEh", "cmp     edi, 1", "jbe     _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["jmp     loc_10288"], ["mov     eax, [esp+20h+nextTokPtr]", "mov     [eax], ebx", "xor     eax, eax", "jmp     loc_10168"], ["mov     eax, [esp+20h+nextTokPtr]; jumptable 0001027E case 18", "add     ptr, 2", "mov     [eax], edx", "mov     eax, 9", "jmp     loc_10168"], ["cmp     [esp+20h+var_1C], 2; jumptable 0001027E case 6", "jnz     _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_10168"], ["xor     ebx, ebx", "mov     esi, [esp+20h+enc]", "mov     bl, [ptr+4]", "xor     eax, eax", "mov     al, [esi+ebx+48h]", "mov     ebx, eax", "sub     ebx, 18h", "cmp     ebx, 1", "ja      short loc_10443"], ["add     ptr, 6", "mov     ecx, end", "sub     ecx, edx", "dec     ecx", "jle     loc_102D0"], ["mov     eax, [esp+20h+enc]", "jmp     short loc_103FA"], ["sub     ecx, 18h", "cmp     cl, 1", "ja      _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["add     edx, 2", "mov     ecx, end", "sub     ecx, edx", "dec     ecx", "jle     loc_102D0"], ["cmp     byte ptr [edx+1], 0", "jnz     _L636; jumptable 0001018F default case, cases 8-18,20,21,23,25-28"], ["xor     ecx, ecx", "mov     cl, [edx]", "mov     cl, [eax+ecx+48h]", "cmp     cl, 12h", "jnz     short loc_103E0"], ["lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["mov     eax, [esp+20h+nextTokPtr]", "add     edx, 2", "mov     [eax], edx", "mov     eax, 0Ah", "jmp     loc_10168"], ["lea     ecx, [ptr+4]", "mov     ebx, end", "sub     ebx, ecx", "dec     ebx", "jle     loc_102D0"], ["cmp     byte ptr [ptr+5], 0", "jz      loc_103B5"], ["mov     eax, [esp+20h+nextTokPtr]", "mov     [eax], ecx", "xor     eax, eax", "jmp     loc_10168"]], "little2_scanPercent": [["push    ebp", "push    edi", "mov     edi, end_0", "push    esi", "sub     edi, ptr", "push    ebx", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "cmp     edi, 1", "jle     loc_10618"], ["mov     ebp, enc", "mov     ebx, end_0", "mov     al, [ptr+1]", "mov     cl, [ptr]", "mov     byte ptr [esp+20h+var_20], cl", "test    al, al", "jz      short loc_104B0"], ["cmp     al, 0DFh", "ja      loc_10568"], ["cmp     al, 0DBh", "ja      short _L686; jumptable 000104CD default case, cases 8,11-20,23,25-28"], ["lea     ecx, [eax+28h]", "cmp     cl, 3", "ja      short loc_104D8"], ["cmp     edi, 3; jumptable 000104CD case 7", "jle     loc_1066A"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+20h+nextTokPtr]; jumptable 000104CD default case, cases 8,11-20,23,25-28", "mov     [eax], ptr", "xor     eax, eax"], ["add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     eax, eax", "mov     al, cl", "mov     al, [enc+eax+48h]", "sub     eax, 6; switch 25 cases", "cmp     al, 18h", "ja      short _L686; jumptable 000104CD default case, cases 8,11-20,23,25-28"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_104CD - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["xor     eax, eax; jumptable 000104CD case 29", "lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["and     eax, 0FFh", "mov     cl, byte ptr [esp+20h+var_20]", "movzx   edi, ds:(nmstrtPages - 2DF78h)[esi+eax]", "mov     al, cl", "and     edi, 0FFh", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edi*8]", "mov     eax, ds:(namingBitmap - 2DF78h)[esi+eax*4]", "shr     eax, cl", "test    al, 1", "jz      short _L686; jumptable 000104CD default case, cases 8,11-20,23,25-28"], ["add     ptr, 2; jumptable 000104CD cases 22,24", "mov     eax, end_0", "sub     eax, ptr", "mov     [esp+20h+var_20], eax", "dec     eax", "jle     loc_10618"], ["lea     eax, (namePages - 2DF78h)[esi]", "mov     [esp+20h+end], end_0", "mov     [esp+20h+var_18], eax", "lea     eax, (namingBitmap - 2DF78h)[esi]", "mov     [esp+20h+var_14], eax"], ["mov     al, [ptr+1]", "mov     cl, [ptr]", "test    al, al", "jz      short loc_10590"], ["cmp     al, 0DFh", "ja      loc_10630"], ["cmp     al, 0DBh", "ja      _L686; jumptable 000104CD default case, cases 8,11-20,23,25-28"], ["lea     edi, [eax+28h]", "mov     ebx, edi", "cmp     bl, 3", "ja      short loc_105D0"], ["cmp     [esp+20h+var_20], 3; jumptable 000105B1 case 7", "jg      _L686; jumptable 000104CD default case, cases 8,11-20,23,25-28"], ["jmp     loc_1066A"], ["cmp     al, 0FFh", "jnz     loc_104D8"], ["movzx   edi, byte ptr [esp+20h+var_20]", "and     edi, 0FFh", "sub     edi, 0FEh", "cmp     edi, 1", "jbe     _L686; jumptable 000104CD default case, cases 8,11-20,23,25-28"], ["jmp     loc_104D8"], ["xor     eax, eax", "mov     al, cl", "mov     al, [enc+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      _L686; jumptable 000104CD default case, cases 8,11-20,23,25-28"], ["and     eax, 0FFh", "mov     ebx, ds:(jpt_105B1 - 2DF78h)[esi+eax*4]", "add     ebx, esi", "jmp     ebx; switch jump"], ["mov     eax, [esp+20h+nextTokPtr]; jumptable 000104CD cases 9,10,21,30", "mov     [eax], ptr", "mov     eax, 16h", "jmp     loc_104A8"], ["xor     eax, eax; jumptable 000105B1 case 29", "lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["and     eax, 0FFh", "mov     ebx, [esp+20h+var_18]", "movzx   edi, byte ptr [ebx+eax]", "mov     al, cl", "and     edi, 0FFh", "shr     al, 5", "mov     ebx, [esp+20h+var_14]", "and     eax, 0FFh", "lea     eax, [eax+edi*8]", "mov     eax, [ebx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      _L686; jumptable 000104CD default case, cases 8,11-20,23,25-28"], ["add     ptr, 2; jumptable 000105B1 cases 22,24-27", "mov     ebx, [esp+20h+end]", "sub     ebx, ptr", "mov     [esp+20h+var_20], ebx", "dec     ebx", "jg      loc_10531"], ["lea     esi, [esi+0]"], ["or      eax, 0FFFFFFFFh", "jmp     loc_104A8"], ["cmp     edi, 2; jumptable 000104CD case 6", "jnz     _L686; jumptable 000104CD default case, cases 8,11-20,23,25-28"], ["jmp     short loc_1066A"], ["cmp     al, 0FFh", "jnz     short loc_105D0"], ["mov     edi, ecx", "and     edi, 0FFh", "sub     edi, 0FEh", "cmp     edi, 1", "jbe     _L686; jumptable 000104CD default case, cases 8,11-20,23,25-28"], ["jmp     short loc_105D0"], ["mov     eax, [esp+20h+nextTokPtr]; jumptable 000105B1 case 18", "add     ptr, 2", "mov     [eax], edx", "mov     eax, 1Ch", "jmp     loc_104A8"], ["cmp     [esp+20h+var_20], 2; jumptable 000105B1 case 6", "jnz     _L686; jumptable 000104CD default case, cases 8,11-20,23,25-28"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_104A8"]], "little2_scanLit": [["push    ebp", "push    edi", "push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "sub     esp, 8", "mov     ebp, [esp+18h+end]", "mov     [esp+18h+open], open_0", "mov     edi, ebp", "sub     edi, ptr_0", "cmp     edi, 1", "jle     short loc_106FC"], ["mov     [esp+18h+enc], enc_0", "xchg    ax, ax"], ["mov     al, [ptr_0+1]", "mov     bl, [ptr_0]", "test    al, al", "jnz     short loc_10730"], ["and     ebx, 0FFh", "mov     eax, [esp+18h+enc]", "mov     al, [eax+ebx+48h]", "cmp     al, 0Dh; switch 14 cases", "ja      short _L713; jumptable 000106CF default case, cases 2-5,9-11"], ["xor     ebx, ebx", "mov     bl, al", "mov     edx, ds:(jpt_106CF - 2DF78h)[esi+ebx*4]", "add     edx, esi", "jmp     edx; switch jump"], ["inc     al", "jnz     short _L713; jumptable 000106CF default case, cases 2-5,9-11"], ["and     ebx, 0FFh", "sub     ebx, 0FEh", "cmp     ebx, 1", "jbe     short _L716; jumptable 000106CF cases 0,1,8"], ["lea     esi, [esi+0]"], ["add     ptr_0, 2; jumptable 000106CF default case, cases 2-5,9-11"], ["mov     edi, ebp", "sub     edi, ptr_0", "cmp     edi, 1", "jg      short loc_106A8"], ["add     esp, 8", "or      eax, 0FFFFFFFFh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esp+18h+nextTokPtr]; jumptable 000106CF cases 0,1,8", "mov     [eax], ptr_0", "xor     eax, eax"], ["add     esp, 8", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["and     eax, 0FFh; jumptable 000106CF cases 12,13", "lea     ebx, [ptr_0+2]", "cmp     eax, [esp+18h+open]", "jz      short loc_10761"], ["mov     ecx, ptr_0", "jmp     short loc_106F3"], ["cmp     al, 0DFh", "ja      short loc_106D8"], ["cmp     al, 0DBh", "ja      short _L716; jumptable 000106CF cases 0,1,8"], ["add     eax, 28h ; '('", "cmp     al, 3", "ja      short _L713; jumptable 000106CF default case, cases 2-5,9-11"], ["cmp     edi, 3; jumptable 000106CF case 7", "jle     short loc_1075A"], ["add     ptr_0, 4", "jmp     short loc_106F3"], ["cmp     edi, 2; jumptable 000106CF case 6", "jz      short loc_1075A"], ["add     ptr_0, 3", "jmp     short loc_106F3"], ["mov     eax, 0FFFFFFFEh", "jmp     short loc_10710"], ["sub     ebp, ptr_0", "mov     edx, [esp+18h+enc]", "dec     ebp", "jle     short loc_107A6"], ["mov     eax, [esp+18h+nextTokPtr]", "mov     [eax], ptr_0", "xor     eax, eax", "cmp     byte ptr [ecx+3], 0", "jnz     short loc_10710"], ["xor     ptr_0, ptr_0", "mov     bl, [ecx+2]", "mov     ecx, ebx", "mov     cl, [edx+ecx+48h]", "cmp     cl, 1Eh", "ja      short loc_10710"], ["mov     eax, 1", "shl     eax, cl", "and     eax, 40300E00h", "cmp     eax, 1", "sbb     eax, eax", "add     esp, 8", "xor     eax, 0FFFFFFFFh", "pop     ebx", "and     eax, 1Bh", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, 0FFFFFFE5h", "jmp     loc_10710"]], "little2_ignoreSectionTok": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "sub     esp, 8", "mov     ebp, [esp+18h+end]", "mov     edx, [esp+18h+ptr]", "mov     ebx, ebp", "mov     esi, [esp+18h+enc]", "sub     ebx, edx", "test    bl, 1", "jz      short loc_107DD"], ["and     n, 0FFFFFFFEh", "lea     ebp, [edx+n]"], ["cmp     n, 1", "jle     loc_10920"], ["mov     al, [ptr_0+1]", "mov     cl, [ptr_0]", "mov     [esp+18h+var_18], 0"], ["test    al, al", "jz      short loc_10827"], ["cmp     al, 0DFh", "ja      short loc_10848"], ["cmp     al, 0DBh", "ja      short _L739; jumptable 00010843 cases 0,1,8"], ["add     eax, 28h ; '('", "cmp     al, 3", "ja      short _L738; jumptable 00010843 default case, cases 3,5"], ["cmp     ebx, 3; jumptable 00010843 case 7", "jle     loc_10956"], ["add     edx, 4"], ["mov     ebx, end_0", "sub     ebx, ptr_0", "cmp     ebx, 1", "jle     loc_10920"], ["mov     al, [ptr_0+1]", "mov     cl, [ptr_0]", "test    al, al", "jnz     short loc_107F6"], ["and     ecx, 0FFh", "cmp     byte ptr [esi+ecx+48h], 8; switch 9 cases", "ja      short _L738; jumptable 00010843 default case, cases 3,5"], ["xor     eax, eax", "mov     al, [esi+ecx+48h]", "mov     ecx, ds:(jpt_10843 - 2DF78h)[edi+eax*4]", "add     ecx, edi", "jmp     ecx; switch jump"], ["inc     al", "jnz     short _L738; jumptable 00010843 default case, cases 3,5"], ["and     ecx, 0FFh", "sub     ecx, 0FEh", "cmp     ecx, 1", "ja      short _L738; jumptable 00010843 default case, cases 3,5"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+18h+nextTokPtr]; jumptable 00010843 cases 0,1,8", "mov     [eax], edx", "xor     eax, eax"], ["add     esp, 8", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     edx, 2; jumptable 00010843 default case, cases 3,5", "jmp     short loc_10811"], ["cmp     ebx, 2; jumptable 00010843 case 6", "jz      loc_10956"], ["add     edx, 3", "jmp     short loc_10811"], ["lea     eax, [edx+2]; jumptable 00010843 case 4", "mov     ebx, ebp", "sub     ebx, eax", "mov     [esp+18h+var_14], eax", "cmp     ebx, 1", "jle     loc_10920"], ["mov     al, [edx+3]", "mov     cl, [edx+2]", "test    al, al", "jnz     short loc_10910"], ["cmp     cl, 5Dh ; ']'", "jnz     short loc_10907"], ["lea     eax, [edx+4]", "mov     ebx, ebp", "sub     ebx, eax", "mov     [esp+18h+var_14], eax", "cmp     ebx, 1", "jle     short loc_10920"], ["mov     al, [edx+5]", "mov     cl, [edx+4]", "test    al, al", "jnz     short loc_10910"], ["cmp     cl, 3Eh ; '>'", "jnz     short loc_10907"], ["mov     eax, [esp+18h+var_18]", "add     edx, 6", "test    eax, eax", "jz      loc_10960"], ["mov     ebx, [esp+18h+var_18]", "dec     ebx", "mov     [esp+18h+var_18], ebx", "jmp     loc_10811"], ["lea     eax, [edx+2]; jumptable 00010843 case 2", "mov     ebx, ebp", "sub     ebx, eax", "mov     [esp+18h+var_14], eax", "cmp     ebx, 1", "jle     short loc_10920"], ["mov     al, [edx+3]", "mov     cl, [edx+2]", "test    al, al", "jnz     short loc_10910"], ["cmp     cl, 21h ; '!'", "jz      short loc_10928"], ["mov     edx, [esp+18h+var_14]", "jmp     loc_10827"], ["mov     edx, [esp+18h+var_14]", "jmp     loc_107F2"], ["or      eax, 0FFFFFFFFh", "jmp     loc_10868"], ["lea     eax, [edx+4]", "mov     ebx, ebp", "sub     ebx, eax", "mov     [esp+18h+var_14], eax", "cmp     ebx, 1", "jle     short loc_10920"], ["mov     al, [edx+5]", "mov     cl, [edx+4]", "test    al, al", "jnz     short loc_10910"], ["cmp     cl, 5Bh ; '['", "jnz     short loc_10907"], ["mov     eax, [esp+18h+var_18]", "add     edx, 6", "inc     eax", "mov     [esp+18h+var_18], eax", "jmp     loc_10811"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_10868"], ["mov     eax, [esp+18h+nextTokPtr]", "mov     [eax], ptr_0", "mov     eax, 2Ah ; '*'", "jmp     loc_10868"]], "little2_isPublicId": [["push    ebp", "push    edi", "push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "mov     ebx, [esp+10h+end]", "mov     eax, [esp+10h+ptr]", "sub     ebx, 2", "add     eax, 2", "mov     edx, end_0", "mov     edi, [esp+10h+enc]", "sub     edx, ptr_0", "dec     edx", "jle     short loc_109EA"], ["cmp     byte ptr [ptr_0+1], 0", "jz      short loc_109B0"], ["mov     edi, [esp+10h+badPtr]", "mov     [edi], ptr_0", "xor     ptr_0, ptr_0", "pop     end_0", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     edx, edx", "mov     cl, [ptr_0]", "mov     dl, cl", "mov     dl, [enc_0+edx+48h]", "sub     edx, 9; switch 27 cases", "cmp     dl, 1Ah", "ja      short _L788; jumptable 000109D1 default case, cases 11,12,20,28,29"], ["and     edx, 0FFh", "mov     ebp, ds:(jpt_109D1 - 2DF78h)[esi+edx*4]", "add     ebp, esi", "jmp     ebp; switch jump"], ["cmp     cl, 9; jumptable 000109D1 case 21", "jz      short loc_1099E"], ["lea     esi, [esi+0]"], ["add     ptr_0, 2; jumptable 000109D1 cases 9,10,13-19,23-25,27,30-35", "mov     edx, end_0", "sub     edx, ptr_0", "dec     edx", "jg      short loc_10998"], ["pop     end_0", "mov     ptr_0, 1", "pop     esi", "pop     enc_0", "pop     ebp", "retn"], ["cmp     cl, 24h ; '$'; jumptable 000109D1 default case, cases 11,12,20,28,29", "jz      short _L789; jumptable 000109D1 cases 9,10,13-19,23-25,27,30-35"], ["cmp     cl, 40h ; '@'", "jnz     short loc_1099E"], ["add     ptr_0, 2", "mov     edx, end_0", "sub     edx, ptr_0", "dec     edx", "jg      short loc_10998"], ["jmp     short loc_109EA"], ["test    cl, cl; jumptable 000109D1 cases 22,26", "js      short loc_109FD"], ["add     ptr_0, 2", "mov     edx, end_0", "sub     edx, ptr_0", "dec     edx", "jg      loc_10998"], ["jmp     short loc_109EA"]], "little2_getAtts": [["push    ebp", "xor     ebp, ebp", "push    edi", "mov     edi, 1", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "mov     ecx, [esp+20h+ptr]", "mov     [esp+20h+open], 0", "lea     edx, [ecx+2]", "mov     al, [ecx+3]", "mov     cl, [ecx+2]", "mov     [esp+20h+var_1D], cl", "lea     esi, [esi+0]"], ["test    al, al", "jnz     short loc_10AC0"], ["xor     eax, eax", "mov     ecx, [esp+20h+enc]", "mov     al, [esp+20h+var_1D]", "mov     al, [ecx+eax+48h]", "sub     eax, 3; switch 27 cases", "cmp     al, 1Ah", "ja      short _L809; jumptable 00010A8F default case, cases 4,8,14-16,18-20,23,25-28"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_10A8F - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["cmp     state, 2; jumptable 00010A8F cases 11,17", "jnz     loc_10D02"], ["lea     esi, [esi+0]"], ["mov     cl, [ptr_0+2]; jumptable 00010A8F default case, cases 4,8,14-16,18-20,23,25-28", "mov     al, [ptr_0+3]", "mov     [esp+20h+var_1D], cl", "add     ptr_0, 2", "test    al, al", "jz      short loc_10A6C"], ["lea     esi, [esi+0]"], ["lea     esi, [edx+2]", "cmp     al, 0DFh", "ja      loc_10D10"], ["cmp     al, 0DBh", "ja      loc_10C20"], ["add     eax, 28h ; '('", "cmp     al, 3", "jbe     loc_10BD8"], ["test    edi, edi", "jz      short loc_10B04"], ["mov     cl, [edx+2]", "mov     al, [edx+3]", "mov     [esp+20h+var_1D], cl", "mov     edx, esi", "jmp     loc_10A68"], ["lea     esi, [ptr_0+2]; jumptable 00010A8F cases 22,24,29", "lea     esi, [esi+0]", "nop"], ["test    edi, edi", "jnz     short loc_10AE2"], ["cmp     nAtts, [esp+20h+attsMax]", "jl      loc_10D38"], ["mov     al, [edx+3]", "mov     dl, [edx+2]", "mov     [esp+20h+var_1D], dl", "mov     edi, 1", "mov     edx, esi", "jmp     loc_10A68"], ["lea     esi, [ptr_0+2]; jumptable 00010A8F cases 9,10", "cmp     state, 1", "jz      loc_10D7F"], ["cmp     state, 2", "jnz     loc_10C20"], ["cmp     nAtts, [esp+20h+attsMax]", "jge     loc_10C20"], ["mov     eax, nAtts", "mov     state, [esp+20h+atts]", "shl     eax, 4", "mov     byte ptr [edi+eax+0Ch], 0", "mov     edi, 2", "mov     al, [ptr_0+3]", "mov     dl, [ptr_0+2]", "mov     [esp+20h+var_1D], dl", "mov     edx, esi", "jmp     loc_10A68"], ["lea     eax, [ptr_0+2]; jumptable 00010A8F case 21", "cmp     state, 1", "mov     [esp+20h+var_18], eax", "jz      loc_10DD0"], ["cmp     state, 2", "jnz     loc_10DE8"], ["cmp     nAtts, [esp+20h+attsMax]", "jge     loc_10DE8"], ["mov     eax, nAtts", "mov     state, [esp+20h+atts]", "shl     eax, 4", "mov     ecx, [esp+20h+atts]", "add     edi, eax", "mov     [esp+20h+var_14], edi", "cmp     byte ptr [ecx+eax+0Ch], 0", "jnz     loc_10E5B"], ["mov     cl, [ptr_0+2]", "mov     al, [ptr_0+3]", "mov     [esp+20h+var_1D], cl", "mov     ptr_0, [esp+20h+var_18]", "mov     edi, 2", "jmp     loc_10A68"], ["lea     esi, [ptr_0+2]; jumptable 00010A8F case 7", "lea     esi, [esi+0]", "nop"], ["test    edi, edi", "jnz     short loc_10BF8"], ["cmp     nAtts, [esp+20h+attsMax]", "mov     edi, 1", "jge     short loc_10BF8"], ["mov     eax, nAtts", "mov     ecx, [esp+20h+atts]", "shl     eax, 4", "add     eax, ecx", "mov     [eax], edx", "mov     byte ptr [eax+0Ch], 1"], ["mov     cl, [edx+4]", "mov     al, [edx+5]", "mov     [esp+20h+var_1D], cl", "lea     edx, [esi+2]", "jmp     loc_10A68"], ["lea     esi, [ptr_0+2]; jumptable 00010A8F case 5", "test    state, state", "jz      loc_10B04"], ["lea     esi, [esi+0]", "nop"], ["mov     al, [edx+3]", "mov     dl, [edx+2]", "mov     [esp+20h+var_1D], dl", "mov     edx, esi", "jmp     loc_10A68"], ["cmp     nAtts, [esp+20h+attsMax]; jumptable 00010A8F case 3", "lea     esi, [ptr_0+2]", "jge     short loc_10C20"], ["mov     eax, nAtts", "mov     ecx, [esp+20h+atts]", "shl     eax, 4", "mov     byte ptr [ecx+eax+0Ch], 0", "mov     al, [ptr_0+3]", "mov     dl, [ptr_0+2]", "mov     [esp+20h+var_1D], dl", "mov     edx, esi", "jmp     loc_10A68"], ["lea     esi, [ptr_0+2]; jumptable 00010A8F case 13", "cmp     state, 2", "jz      loc_10D98"], ["cmp     nAtts, [esp+20h+attsMax]", "jl      loc_10E30"], ["mov     al, [ptr_0+3]", "mov     dl, [ptr_0+2]", "mov     [esp+20h+var_1D], dl", "mov     [esp+20h+open], 0Dh", "mov     edx, esi", "mov     state, 2", "jmp     loc_10A68"], ["lea     esi, [ptr_0+2]; jumptable 00010A8F case 12", "cmp     state, 2", "jz      loc_10D60"], ["cmp     nAtts, [esp+20h+attsMax]", "jl      loc_10E00"], ["mov     al, [ptr_0+3]", "mov     dl, [ptr_0+2]", "mov     [esp+20h+var_1D], dl", "mov     [esp+20h+open], 0Ch", "mov     edx, esi", "mov     state, 2", "jmp     loc_10A68"], ["test    state, state; jumptable 00010A8F case 6", "jnz     short loc_10CF0"], ["cmp     nAtts, [esp+20h+attsMax]", "mov     state, 1", "jge     short loc_10CF0"], ["mov     eax, nAtts", "mov     esi, [esp+20h+atts]", "shl     eax, 4", "add     eax, esi", "mov     [eax], ptr_0", "mov     byte ptr [eax+0Ch], 1"], ["mov     cl, [edx+3]", "mov     al, [edx+4]", "mov     [esp+20h+var_1D], cl", "add     edx, 3", "jmp     loc_10A68"], ["add     esp, 10h", "mov     eax, nAtts", "pop     ebx", "pop     esi", "pop     state", "pop     nAtts", "retn"], ["inc     al", "jnz     loc_10B00"], ["xor     ecx, ecx", "mov     cl, [esp+20h+var_1D]", "sub     ecx, 0FEh", "cmp     ecx, 1", "jbe     loc_10C20"], ["jmp     loc_10B00"], ["mov     eax, nAtts", "mov     ecx, [esp+20h+atts]", "shl     eax, 4", "mov     edi, 1", "add     eax, ecx", "mov     [eax], edx", "mov     byte ptr [eax+0Ch], 1", "mov     cl, [edx+2]", "mov     al, [edx+3]", "mov     [esp+20h+var_1D], cl", "mov     edx, esi", "jmp     loc_10A68"], ["cmp     [esp+20h+open], 0Ch", "jnz     loc_10C20"], ["cmp     nAtts, [esp+20h+attsMax]", "jge     short loc_10D7E"], ["mov     eax, nAtts", "mov     edi, [esp+20h+atts]", "shl     eax, 4", "mov     [edi+eax+8], ptr_0"], ["inc     nAtts"], ["mov     al, [ptr_0+3]", "mov     dl, [ptr_0+2]", "mov     [esp+20h+var_1D], dl", "xor     edi, edi", "mov     edx, esi", "jmp     loc_10A68"], ["cmp     [esp+20h+open], 0Dh", "jnz     loc_10AE2"], ["cmp     nAtts, [esp+20h+attsMax]", "jge     short loc_10DB6"], ["mov     eax, nAtts", "mov     edi, [esp+20h+atts]", "shl     eax, 4", "mov     [edi+eax+8], ptr_0"], ["mov     cl, [ptr_0+2]", "mov     al, [ptr_0+3]", "inc     nAtts", "mov     [esp+20h+var_1D], cl", "mov     ptr_0, esi", "xor     edi, edi", "jmp     loc_10A68"], ["mov     al, [ptr_0+3]", "mov     dl, [ptr_0+2]", "mov     [esp+20h+var_1D], dl", "xor     state, state", "mov     edx, [esp+20h+var_18]", "jmp     loc_10A68"], ["mov     cl, [ptr_0+2]", "mov     al, [ptr_0+3]", "mov     [esp+20h+var_1D], cl", "mov     ptr_0, [esp+20h+var_18]", "jmp     loc_10A68"], ["mov     eax, nAtts", "mov     state, [esp+20h+atts]", "shl     eax, 4", "mov     [esp+20h+open], 0Ch", "mov     [edi+eax+4], esi", "mov     edi, 2", "mov     cl, [ptr_0+2]", "mov     al, [ptr_0+3]", "mov     [esp+20h+var_1D], cl", "mov     ptr_0, esi", "jmp     loc_10A68"], ["mov     eax, nAtts", "mov     state, [esp+20h+atts]", "shl     eax, 4", "mov     [esp+20h+open], 0Dh", "mov     [edi+eax+4], esi", "mov     edi, 2", "mov     cl, [ptr_0+2]", "mov     al, [ptr_0+3]", "mov     [esp+20h+var_1D], cl", "mov     ptr_0, esi", "jmp     loc_10A68"], ["mov     eax, [esp+20h+var_14]", "cmp     [eax+4], ptr_0", "jz      short loc_10E6B"], ["cmp     [esp+20h+var_1D], 20h ; ' '", "jz      short loc_10E8B"], ["mov     eax, [esp+20h+var_14]", "mov     edi, 2", "mov     byte ptr [eax+0Ch], 0", "mov     al, [ptr_0+3]", "mov     dl, [ptr_0+2]", "mov     [esp+20h+var_1D], dl", "mov     edx, [esp+20h+var_18]", "jmp     loc_10A68"], ["mov     al, [ptr_0+3]", "mov     cl, [ptr_0+2]", "mov     [esp+20h+var_1D], cl", "test    al, al", "jnz     short loc_10EBA"], ["cmp     cl, 20h ; ' '", "jz      short loc_10E6B"], ["and     ecx, 0FFh", "mov     esi, [esp+20h+enc]", "mov     edi, ecx", "xor     ecx, ecx", "mov     cl, [esi+edi+48h]", "mov     esi, ecx"], ["cmp     [esp+20h+open], esi", "jz      short loc_10E6B"], ["jmp     short loc_10EC2"], ["cmp     al, 0DFh", "ja      short loc_10ED0"], ["cmp     al, 0DBh", "ja      short loc_10EFA"], ["mov     ptr_0, [esp+20h+var_18]", "mov     edi, 2", "jmp     loc_10A68"], ["cmp     al, 0FFh", "jnz     short loc_10EC2"], ["movzx   edi, [esp+20h+var_1D]", "and     edi, 0FFh", "xor     esi, esi", "sub     edi, 0FEh", "cmp     edi, 1", "jbe     short loc_10EB2"], ["mov     ptr_0, [esp+20h+var_18]", "mov     edi, 2", "jmp     loc_10AC0"], ["mov     esi, 8", "jmp     short loc_10EB2"]], "little2_charRefNumber": [["push    esi", "mov     enc, ptr", "push    ebx", "lea     ecx, [ptr+4]", "mov     dl, [edx+5]", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "test    dl, dl", "jnz     short loc_10F33"], ["cmp     byte ptr [eax+4], 78h ; 'x'", "jz      loc_10FB8"], ["xor     eax, eax", "jmp     short loc_10F56"], ["movsx   edx, byte ptr [ptr]", "cmp     dl, 3Bh ; ';'", "jz      short loc_10F78"], ["sub     edx, 30h ; '0'", "lea     result, [result+result*4]", "lea     eax, [edx+eax*2]", "cmp     result, 10FFFFh", "jg      short loc_10F6C"], ["add     ptr, 2", "mov     dl, [ptr+1]"], ["test    dl, dl", "jz      short loc_10F38"], ["mov     edx, 0FFFFFFCFh", "lea     result, [result+result*4]", "lea     eax, [edx+eax*2]", "cmp     result, 10FFFFh", "jle     short loc_10F50"], ["or      result, 0FFFFFFFFh"], ["pop     ebx", "pop     esi", "retn"], ["mov     edx, result", "sar     edx, 8", "cmp     result, 0DFFFh", "jg      short loc_10FA0"], ["cmp     edx, 0D7h", "jg      short loc_10F6C"], ["test    edx, edx", "jnz     short loc_10F6F"], ["cmp     ds:(latin1_encoding.type - 2DF78h)[ebx+result], 0", "jnz     short loc_10F6F"], ["jmp     short loc_10F6C"], ["cmp     edx, 0FFh", "jnz     short loc_10F6F"], ["lea     edx, [result-0FFFEh]", "cmp     edx, 1", "ja      short loc_10F6F"], ["jmp     short loc_10F6C"], ["lea     edx, [eax+6]", "xor     eax, eax", "jmp     short loc_10FE3"], ["cmp     cl, 40h ; '@'", "jg      short loc_11010"], ["sub     ecx, 30h ; '0'", "cmp     cl, 9", "ja      short loc_10FE0"], ["shl     result, 4", "sub     c, 30h ; '0'", "or      result, esi"], ["cmp     result, 10FFFFh", "jg      short loc_10F6C"], ["lea     esi, [esi+0]"], ["add     ptr, 2"], ["cmp     byte ptr [ptr+1], 0", "jnz     short loc_10FE0"], ["mov     cl, [ptr]", "cmp     cl, 3Bh ; ';'", "jz      short loc_10F78"], ["movsx   esi, cl", "cmp     cl, 46h ; 'F'", "jle     short loc_10FC0"], ["sub     ecx, 61h ; 'a'", "cmp     cl, 5", "ja      short loc_10FE0"], ["shl     result, 4", "lea     result, [c+result-57h]", "jmp     short loc_10FD5"], ["shl     result, 4", "lea     result, [c+result-37h]", "jmp     short loc_10FD5"]], "little2_predefinedEntityName": [["mov     ecx, [esp+ptr]", "mov     edx, [esp+end]", "sub     edx, ecx", "mov     eax, edx", "shr     eax, 1Fh", "add     eax, edx", "xor     edx, edx", "sar     eax, 1", "cmp     eax, 3", "jz      short loc_11048"], ["cmp     eax, 4", "jz      short loc_110A8"], ["cmp     eax, 2", "jz      short loc_11078"], ["mov     eax, edx", "retn"], ["cmp     byte ptr [ecx+1], 0", "jnz     short loc_11044"], ["cmp     byte ptr [ecx], 61h ; 'a'", "jnz     short loc_11044"], ["cmp     byte ptr [ecx+3], 0", "jnz     short loc_11044"], ["cmp     byte ptr [ecx+2], 6Dh ; 'm'", "jnz     short loc_11044"], ["cmp     byte ptr [ecx+5], 0", "jnz     short loc_11044"], ["xor     edx, edx", "cmp     byte ptr [ecx+4], 70h ; 'p'", "setnz   dl", "dec     edx", "and     edx, 26h", "jmp     short loc_11044"], ["cmp     byte ptr [ptr_0+3], 0", "jnz     short loc_11044"], ["cmp     byte ptr [ptr_0+2], 74h ; 't'", "jnz     short loc_11044"], ["cmp     byte ptr [ptr_0+1], 0", "jnz     short loc_11044"], ["mov     al, [ptr_0]", "cmp     al, 67h ; 'g'", "jz      loc_11140"], ["xor     edx, edx", "cmp     al, 6Ch ; 'l'", "setnz   dl", "dec     edx", "and     edx, 3Ch", "jmp     short loc_11044"], ["cmp     byte ptr [ptr_0+1], 0", "jnz     short loc_11044"], ["mov     al, [ptr_0]", "cmp     al, 61h ; 'a'", "jz      short loc_110F8"], ["cmp     al, 71h ; 'q'", "jnz     short loc_11044"], ["cmp     byte ptr [ecx+3], 0", "jnz     short loc_11044"], ["cmp     byte ptr [ecx+2], 75h ; 'u'", "jnz     short loc_11044"], ["cmp     byte ptr [ecx+5], 0", "jnz     loc_11044"], ["cmp     byte ptr [ecx+4], 6Fh ; 'o'", "jnz     loc_11044"], ["cmp     byte ptr [ecx+7], 0", "jnz     loc_11044"], ["xor     edx, edx", "cmp     byte ptr [ecx+6], 74h ; 't'", "setnz   dl", "dec     edx", "and     edx, 22h", "jmp     loc_11044"], ["cmp     byte ptr [ecx+3], 0", "jnz     loc_11044"], ["cmp     byte ptr [ecx+2], 70h ; 'p'", "jnz     loc_11044"], ["cmp     byte ptr [ecx+5], 0", "jnz     loc_11044"], ["cmp     byte ptr [ecx+4], 6Fh ; 'o'", "jnz     loc_11044"], ["cmp     byte ptr [ecx+7], 0", "jnz     loc_11044"], ["xor     edx, edx", "cmp     byte ptr [ecx+6], 73h ; 's'", "setnz   dl", "dec     edx", "and     edx, 27h", "jmp     loc_11044"], ["mov     edx, 3Eh ; '>'", "jmp     loc_11044"]], "little2_nameMatchesAscii": [["push    esi", "push    ebx", "mov     ecx, [esp+8+ptr2]", "mov     eax, [esp+8+ptr1]", "mov     esi, [esp+8+end1]", "mov     dl, [ecx]", "test    dl, dl", "jnz     short loc_1117D"], ["jmp     short loc_11190"], ["cmp     byte ptr [ptr1_0+1], 0", "jnz     short loc_11184"], ["cmp     [ptr1_0], dl", "jnz     short loc_11184"], ["mov     dl, [ptr2_0+1]", "inc     ptr2_0", "add     ptr1_0, 2", "test    dl, dl", "jz      short loc_11190"], ["mov     ebx, end1_0", "sub     ebx, ptr1_0", "dec     ebx", "jg      short loc_11168"], ["pop     ebx", "xor     ptr1_0, ptr1_0", "pop     end1_0", "retn"], ["cmp     end1_0, ptr1_0", "pop     ebx", "setz    al", "and     eax, 0FFh", "pop     end1_0", "retn"]], "little2_nameLength": [["push    edi", "mov     edi, enc", "push    esi", "mov     enc, start", "push    ebx", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)"], ["mov     cl, [ptr+1]", "mov     bl, [ptr]", "test    cl, cl", "jnz     short loc_11204"], ["and     ebx, 0FFh", "mov     cl, [enc+ebx+48h]", "sub     ecx, 5; switch 25 cases", "cmp     cl, 18h", "ja      short _L961; jumptable 000111DC default case, cases 8-21,28"], ["and     ecx, 0FFh", "mov     ebx, ds:(jpt_111DC - 2DF78h)[esi+ecx*4]", "add     ebx, esi", "jmp     ebx; switch jump"], ["inc     cl", "jnz     short _L962; jumptable 000111DC cases 5,22-27,29"], ["and     ebx, 0FFh", "sub     ebx, 0FEh", "cmp     ebx, 1", "jbe     short _L961; jumptable 000111DC default case, cases 8-21,28"], ["lea     esi, [esi+0]"], ["mov     cl, [ptr+3]; jumptable 000111DC cases 5,22-27,29", "add     ptr, 2", "test    cl, cl", "mov     bl, [ptr]", "jz      short loc_111BB"], ["cmp     cl, 0DFh", "ja      short loc_111E0"], ["cmp     cl, 0DBh", "ja      short _L961; jumptable 000111DC default case, cases 8-21,28"], ["add     ecx, 28h ; '('", "cmp     cl, 3", "ja      short _L962; jumptable 000111DC cases 5,22-27,29"], ["add     ptr, 4; jumptable 000111DC case 7", "jmp     short loc_111B2"], ["pop     ebx; jumptable 000111DC default case, cases 8-21,28", "sub     ptr, start", "pop     esi", "pop     enc", "retn"], ["add     ptr, 3; jumptable 000111DC case 6", "jmp     short loc_111B2"]], "little2_skipS": [["mov     ecx, enc", "mov     enc, ptr", "cmp     byte ptr [ptr+1], 0", "jnz     short locret_11252"], ["lea     esi, [esi+0]"], ["xor     edx, edx", "mov     dl, [ptr]", "mov     dl, [enc+edx+48h]", "cmp     dl, 0Ah", "ja      short loc_11258"], ["cmp     dl, 8", "ja      short loc_1125D"], ["retn"], ["cmp     dl, 15h", "jnz     short locret_11252"], ["add     ptr, 2", "cmp     byte ptr [ptr+1], 0", "jz      short loc_11240"], ["retn"]], "little2_updatePosition": [["push    ebp", "push    edi", "push    esi", "push    ebx", "push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     ebx, [esp+14h+end]", "mov     eax, [esp+14h+ptr]", "mov     ecx, ebx", "mov     ebp, [esp+14h+enc]", "sub     ecx, ptr_0", "mov     edx, [esp+14h+pos]", "dec     ecx", "jle     short loc_112DD"], ["nop"], ["mov     cl, [ptr_0+1]", "test    cl, cl", "jnz     short loc_112C0"], ["xor     ecx, ecx", "mov     cl, [ptr_0]", "mov     cl, [ebp+ecx+48h]", "sub     ecx, 5; switch 6 cases", "cmp     cl, 5", "ja      short _L980; jumptable 000112BE default case, cases 5,8"], ["and     ecx, 0FFh", "mov     ebx, ds:(jpt_112BE - 2DF78h)[esi+ecx*4]", "add     ebx, esi", "jmp     ebx; switch jump"], ["add     ecx, 28h ; '('", "cmp     cl, 3", "jbe     short _L984; jumptable 000112BE case 7"], ["add     ptr_0, 2; jumptable 000112BE default case, cases 5,8"], ["mov     ebx, [esp+14h+end]", "mov     edi, [edx+4]", "sub     ebx, ptr_0", "inc     edi", "mov     ecx, ebx"], ["mov     [edx+4], edi", "dec     ecx", "jg      short loc_11298"], ["pop     ptr_0", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     ptr_0, 4; jumptable 000112BE case 7", "jmp     short loc_112CB"], ["mov     ecx, [edx]; jumptable 000112BE case 9", "lea     edi, [ptr_0+2]", "mov     ebx, [esp+14h+end]", "inc     ecx", "sub     ebx, edi", "mov     [edx], ecx", "cmp     ebx, 1", "mov     ecx, ebx", "jle     short loc_1132A"], ["mov     bl, [eax+2]", "cmp     byte ptr [eax+3], 0", "mov     [esp+14h+var_11], bl", "jnz     short loc_1132A"], ["and     ebx, 0FFh", "cmp     byte ptr [ebp+ebx+48h], 0Ah", "jnz     short loc_1132A"], ["lea     ptr_0, [eax+4]", "mov     ebx, [esp+14h+end]", "sub     ebx, ptr_0", "mov     ecx, ebx"], ["mov     eax, ptr_0", "xor     ptr_0, ptr_0", "jmp     short loc_112D7"], ["add     ptr_0, 3; jumptable 000112BE case 6", "jmp     short loc_112CB"], ["mov     ebx, [edx]; jumptable 000112BE case 10", "add     ptr_0, 2", "inc     ebx", "xor     edi, edi", "mov     [edx], ebx", "mov     ebx, [esp+14h+end]", "sub     ebx, ptr_0", "mov     ecx, ebx", "jmp     short loc_112D7"]], "big2_cdataSectionTok": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "push    eax", "mov     ecx, [esp+14h+ptr]", "cmp     ecx, [esp+14h+end]", "jnb     loc_11592"], ["mov     eax, [esp+14h+end]", "sub     eax, ecx", "test    al, 1", "jz      short loc_11387"], ["and     eax, 0FFFFFFFEh", "jz      loc_1159C"], ["add     n, ecx", "mov     [esp+14h+end], eax"], ["mov     al, [ecx]", "mov     dl, [ecx+1]", "test    al, al", "jz      short loc_113B8"], ["cmp     al, 0DFh", "ja      short loc_113E0"], ["cmp     al, 0DBh", "ja      short _L1002; jumptable 000113DA cases 0,1,8"], ["add     eax, 28h ; '('", "cmp     al, 3", "ja      short _L998; jumptable 000113DA cases 2,3"], ["mov     eax, [esp+14h+end]; jumptable 000113DA case 7", "sub     eax, ecx", "cmp     eax, 3", "jle     loc_11588"], ["lea     edx, [ecx+4]", "jmp     short loc_11420"], ["and     edx, 0FFh", "mov     eax, [esp+14h+enc]", "cmp     byte ptr [eax+edx+48h], 0Ah", "ja      short _L998; jumptable 000113DA cases 2,3"], ["mov     esi, eax", "xor     eax, eax", "mov     al, [esi+edx+48h]", "mov     ebx, ds:(jpt_113DA - 2DF78h)[edi+eax*4]; switch 11 cases", "add     ebx, edi", "jmp     ebx; switch jump"], ["inc     al", "jnz     short _L998; jumptable 000113DA cases 2,3"], ["and     edx, 0FFh", "sub     edx, 0FEh", "cmp     edx, 1", "ja      short _L998; jumptable 000113DA cases 2,3"], ["mov     eax, [esp+14h+nextTokPtr]; jumptable 000113DA cases 0,1,8", "mov     [eax], ecx", "xor     eax, eax"], ["pop     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esp+14h+end]; jumptable 000113DA case 5", "sub     eax, ecx", "dec     eax", "jle     loc_11588"], ["lea     esi, [esi+0]"], ["lea     edx, [ecx+2]; jumptable 000113DA cases 2,3", "lea     esi, [esi+0]", "nop"], ["mov     ebp, [esp+14h+end]", "sub     ebp, ptr_0", "cmp     ebp, 1", "jle     short _L1011; jumptable 00011456 cases 0,1,4,8-10"], ["mov     al, [ptr_0]", "mov     bl, [ptr_0+1]"], ["test    al, al", "jnz     short loc_114A0"], ["and     ebx, 0FFh", "mov     eax, [esp+14h+enc]", "cmp     byte ptr [eax+ebx+48h], 0Ah", "ja      short _L1013; jumptable 00011456 cases 2,3,5"], ["mov     esi, eax", "xor     eax, eax", "mov     al, [esi+ebx+48h]", "mov     ebx, ds:(jpt_11456 - 2DF78h)[edi+eax*4]; switch 11 cases", "add     ebx, edi", "jmp     ebx; switch jump"], ["inc     al", "jnz     short _L1013; jumptable 00011456 cases 2,3,5"], ["and     ebx, 0FFh", "sub     ebx, 0FEh", "cmp     ebx, 1", "ja      short _L1013; jumptable 00011456 cases 2,3,5"], ["mov     eax, [esp+14h+nextTokPtr]; jumptable 00011456 cases 0,1,4,8-10", "mov     [eax], ptr_0", "mov     eax, 6", "pop     ptr_0", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     edx, [ecx+2]; jumptable 000113DA case 4", "mov     ebp, [esp+14h+end]", "sub     ebp, ptr_0", "cmp     ebp, 1", "jle     loc_1159C"], ["mov     al, [ecx+2]", "mov     bl, [ecx+3]", "test    al, al", "jz      loc_11548"], ["cmp     al, 0DFh", "ja      short loc_11458"], ["cmp     al, 0DBh", "ja      short _L1011; jumptable 00011456 cases 0,1,4,8-10"], ["add     eax, 28h ; '('", "cmp     al, 3", "jbe     short _L1016; jumptable 00011456 case 7"], ["add     ptr_0, 2; jumptable 00011456 cases 2,3,5", "jmp     loc_11420"], ["cmp     ebp, 3; jumptable 00011456 case 7", "jle     short _L1011; jumptable 00011456 cases 0,1,4,8-10"], ["add     ptr_0, 4", "jmp     loc_11420"], ["cmp     ebp, 2; jumptable 00011456 case 6", "jz      short _L1011; jumptable 00011456 cases 0,1,4,8-10"], ["add     ptr_0, 3", "jmp     loc_11420"], ["mov     eax, [esp+14h+nextTokPtr]; jumptable 000113DA case 10", "add     ecx, 2", "mov     [eax], ecx", "mov     eax, 7", "jmp     loc_113FD"], ["lea     eax, [ecx+2]; jumptable 000113DA case 9", "mov     edx, [esp+14h+end]", "sub     edx, ptr_0", "dec     edx", "jle     loc_1159C"], ["cmp     byte ptr [ecx+2], 0", "mov     dl, [ecx+3]", "jnz     short loc_1151D"], ["and     edx, 0FFh", "mov     esi, [esp+14h+enc]", "cmp     byte ptr [esi+edx+48h], 0Ah", "jnz     short loc_1151D"], ["lea     ptr_0, [ecx+4]"], ["mov     edi, [esp+14h+nextTokPtr]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], ptr_0", "mov     ptr_0, 7", "jmp     loc_113FD"], ["mov     eax, [esp+14h+end]; jumptable 000113DA case 6", "sub     eax, ecx", "cmp     eax, 2", "jle     short loc_11588"], ["lea     edx, [ecx+3]", "jmp     loc_11420"], ["cmp     bl, 5Dh ; ']'", "jnz     loc_11430"], ["lea     esi, [ecx+4]", "mov     [esp+14h+var_14], ptr_0", "mov     ptr_0, [esp+14h+end]", "sub     esi, [esp+14h+var_14]", "dec     esi", "jle     short loc_1159C"], ["cmp     byte ptr [ecx+4], 0", "jnz     loc_11430"], ["cmp     byte ptr [ecx+5], 3Eh ; '>'", "jnz     loc_11430"], ["mov     eax, [esp+14h+nextTokPtr]", "add     ecx, 6", "mov     [eax], ecx", "mov     eax, 28h ; '('", "jmp     loc_113FD"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_113FD"], ["mov     eax, 0FFFFFFFCh", "jmp     loc_113FD"], ["or      eax, 0FFFFFFFFh", "jmp     loc_113FD"]], "big2_scanRef": [["push    ebp", "push    edi", "mov     edi, end", "push    esi", "sub     edi, ptr", "push    ebx", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "cmp     edi, 1", "mov     [esp+20h+enc], enc_0", "jle     loc_11770"], ["mov     bl, [ptr]", "mov     ebp, end", "test    bl, bl", "mov     cl, [ptr+1]", "jz      short loc_11610"], ["cmp     bl, 0DFh", "ja      loc_116D0"], ["cmp     bl, 0DBh", "ja      short _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["lea     enc_0, [ebx+28h]", "cmp     al, 3", "ja      short loc_11640"], ["cmp     edi, 3; jumptable 0001162F case 7", "jle     loc_1184B"], ["lea     esi, [esi+0]", "nop"], ["mov     eax, [esp+20h+nextTokPtr]; jumptable 0001162F default case, cases 8-18,20,21,23,25-28", "mov     [eax], edx", "xor     eax, eax"], ["add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     ebx, ebx", "mov     bl, cl", "mov     bl, [enc_0+ebx+48h]", "sub     ebx, 6; switch 24 cases", "cmp     bl, 17h", "ja      short _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["and     ebx, 0FFh", "mov     enc_0, ds:(jpt_1162F - 2DF78h)[esi+ebx*4]", "add     eax, esi", "jmp     eax; switch jump"], ["xor     ebx, ebx; jumptable 0001162F case 29", "lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["and     ebx, 0FFh", "movzx   edi, ds:(nmstrtPages - 2DF78h)[esi+ebx]", "mov     bl, cl", "and     edi, 0FFh", "shr     bl, 5", "and     ebx, 0FFh", "lea     ebx, [ebx+edi*8]", "mov     ebx, ds:(namingBitmap - 2DF78h)[esi+ebx*4]", "shr     ebx, cl", "and     ebx, 1", "jz      short _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["add     ptr, 2; jumptable 0001162F cases 22,24", "mov     eax, end", "sub     eax, ptr", "mov     [esp+20h+var_1C], eax", "dec     eax", "jle     loc_11770"], ["lea     eax, (namePages - 2DF78h)[esi]", "mov     [esp+20h+var_18], eax", "lea     eax, (namingBitmap - 2DF78h)[esi]", "mov     [esp+20h+var_14], eax"], ["mov     bl, [ptr]", "mov     cl, [ptr+1]", "test    bl, bl", "jz      short loc_116F8"], ["cmp     bl, 0DFh", "ja      loc_117F8"], ["cmp     bl, 0DBh", "ja      _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["lea     edi, [ebx+28h]", "mov     eax, edi", "cmp     al, 3", "ja      short loc_11728"], ["cmp     [esp+20h+var_1C], 3; jumptable 0001171E case 7", "jg      _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["jmp     loc_1184B"], ["cmp     bl, 0FFh", "jnz     loc_11640"], ["mov     edi, ecx", "and     edi, 0FFh", "sub     edi, 0FEh", "cmp     edi, 1", "jbe     _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["jmp     loc_11640"], ["xor     ebx, ebx", "mov     eax, [esp+20h+enc]", "mov     bl, cl", "mov     bl, [eax+ebx+48h]", "sub     ebx, 5; switch 25 cases", "cmp     bl, 18h", "ja      _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["and     ebx, 0FFh", "mov     eax, ds:(jpt_1171E - 2DF78h)[esi+ebx*4]", "add     eax, esi", "jmp     eax; switch jump"], ["xor     ebx, ebx; jumptable 0001171E case 29", "lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["and     ebx, 0FFh", "mov     eax, [esp+20h+var_18]", "movzx   edi, byte ptr [eax+ebx]", "mov     bl, cl", "and     edi, 0FFh", "shr     bl, 5", "mov     eax, [esp+20h+var_14]", "and     ebx, 0FFh", "lea     ebx, [ebx+edi*8]", "mov     ebx, [eax+ebx*4]", "shr     ebx, cl", "and     ebx, 1", "jz      _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["add     ptr, 2; jumptable 0001171E cases 22,24-27", "mov     eax, end", "sub     eax, ptr", "mov     [esp+20h+var_1C], eax", "dec     eax", "jg      loc_11696"], ["xchg    ax, ax"], ["or      eax, 0FFFFFFFFh", "jmp     loc_11608"], ["lea     ebx, [ptr+2]; jumptable 0001162F case 19", "mov     ecx, end", "sub     ecx, ebx", "dec     ecx", "jle     short loc_11770"], ["cmp     byte ptr [ptr+2], 0", "jnz     loc_11820"], ["mov     cl, [ptr+3]", "cmp     cl, 78h ; 'x'", "jz      loc_118CB"], ["and     ecx, 0FFh", "mov     eax, [esp+20h+enc]", "cmp     byte ptr [eax+ecx+48h], 19h", "jnz     short loc_11820"], ["add     ptr, 4", "mov     ecx, end", "sub     ecx, edx", "dec     ecx", "jle     short loc_11770"], ["mov     eax, [esp+20h+enc]"], ["cmp     byte ptr [edx], 0", "jnz     _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["xor     ecx, ecx", "mov     cl, [edx+1]", "mov     cl, [eax+ecx+48h]", "cmp     cl, 12h", "jz      loc_118B8"], ["cmp     cl, 19h", "jnz     _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["add     edx, 2", "mov     ecx, end", "sub     ecx, edx", "dec     ecx", "jg      short loc_117B5"], ["jmp     short loc_11770"], ["cmp     edi, 2; jumptable 0001162F case 6", "jnz     _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["jmp     short loc_1184B"], ["cmp     bl, 0FFh", "jnz     loc_11728"], ["mov     edi, ecx", "and     edi, 0FFh", "sub     edi, 0FEh", "cmp     edi, 1", "jbe     _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["jmp     loc_11728"], ["mov     eax, [esp+20h+nextTokPtr]", "mov     [eax], ebx", "xor     eax, eax", "jmp     loc_11608"], ["mov     eax, [esp+20h+nextTokPtr]; jumptable 0001171E case 18", "add     ptr, 2", "mov     [eax], edx", "mov     eax, 9", "jmp     loc_11608"], ["cmp     [esp+20h+var_1C], 2; jumptable 0001171E case 6", "jnz     _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_11608"], ["xor     ebx, ebx", "mov     esi, [esp+20h+enc]", "mov     bl, [ptr+5]", "xor     eax, eax", "mov     al, [esi+ebx+48h]", "mov     ebx, eax", "sub     ebx, 18h", "cmp     ebx, 1", "ja      short loc_118E3"], ["add     ptr, 6", "mov     ecx, end", "sub     ecx, edx", "dec     ecx", "jle     loc_11770"], ["mov     eax, [esp+20h+enc]", "jmp     short loc_1189A"], ["sub     ecx, 18h", "cmp     cl, 1", "ja      _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["add     edx, 2", "mov     ecx, end", "sub     ecx, edx", "dec     ecx", "jle     loc_11770"], ["cmp     byte ptr [edx], 0", "jnz     _L1070; jumptable 0001162F default case, cases 8-18,20,21,23,25-28"], ["xor     ecx, ecx", "mov     cl, [edx+1]", "mov     cl, [eax+ecx+48h]", "cmp     cl, 12h", "jnz     short loc_11880"], ["lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["mov     eax, [esp+20h+nextTokPtr]", "add     edx, 2", "mov     [eax], edx", "mov     eax, 0Ah", "jmp     loc_11608"], ["lea     ecx, [ptr+4]", "mov     ebx, end", "sub     ebx, ecx", "dec     ebx", "jle     loc_11770"], ["cmp     byte ptr [ptr+4], 0", "jz      loc_11855"], ["mov     eax, [esp+20h+nextTokPtr]", "mov     [eax], ecx", "xor     eax, eax", "jmp     loc_11608"]], "big2_scanPercent": [["push    ebp", "push    edi", "mov     edi, end_0", "push    esi", "sub     edi, ptr", "push    ebx", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "cmp     edi, 1", "jle     loc_11AB8"], ["mov     ebp, enc", "mov     ebx, end_0", "mov     al, [ptr]", "mov     cl, [ptr+1]", "mov     byte ptr [esp+20h+var_20], cl", "test    al, al", "jz      short loc_11950"], ["cmp     al, 0DFh", "ja      loc_11A08"], ["cmp     al, 0DBh", "ja      short _L1120; jumptable 0001196D default case, cases 8,11-20,23,25-28"], ["lea     ecx, [eax+28h]", "cmp     cl, 3", "ja      short loc_11978"], ["cmp     edi, 3; jumptable 0001196D case 7", "jle     loc_11B0A"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+20h+nextTokPtr]; jumptable 0001196D default case, cases 8,11-20,23,25-28", "mov     [eax], ptr", "xor     eax, eax"], ["add     esp, 10h", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     eax, eax", "mov     al, cl", "mov     al, [enc+eax+48h]", "sub     eax, 6; switch 25 cases", "cmp     al, 18h", "ja      short _L1120; jumptable 0001196D default case, cases 8,11-20,23,25-28"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_1196D - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["xor     eax, eax; jumptable 0001196D case 29", "lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["and     eax, 0FFh", "mov     cl, byte ptr [esp+20h+var_20]", "movzx   edi, ds:(nmstrtPages - 2DF78h)[esi+eax]", "mov     al, cl", "and     edi, 0FFh", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edi*8]", "mov     eax, ds:(namingBitmap - 2DF78h)[esi+eax*4]", "shr     eax, cl", "test    al, 1", "jz      short _L1120; jumptable 0001196D default case, cases 8,11-20,23,25-28"], ["add     ptr, 2; jumptable 0001196D cases 22,24", "mov     eax, end_0", "sub     eax, ptr", "mov     [esp+20h+var_20], eax", "dec     eax", "jle     loc_11AB8"], ["lea     eax, (namePages - 2DF78h)[esi]", "mov     [esp+20h+end], end_0", "mov     [esp+20h+var_18], eax", "lea     eax, (namingBitmap - 2DF78h)[esi]", "mov     [esp+20h+var_14], eax"], ["mov     al, [ptr]", "mov     cl, [ptr+1]", "test    al, al", "jz      short loc_11A30"], ["cmp     al, 0DFh", "ja      loc_11AD0"], ["cmp     al, 0DBh", "ja      _L1120; jumptable 0001196D default case, cases 8,11-20,23,25-28"], ["lea     edi, [eax+28h]", "mov     ebx, edi", "cmp     bl, 3", "ja      short loc_11A70"], ["cmp     [esp+20h+var_20], 3; jumptable 00011A51 case 7", "jg      _L1120; jumptable 0001196D default case, cases 8,11-20,23,25-28"], ["jmp     loc_11B0A"], ["cmp     al, 0FFh", "jnz     loc_11978"], ["movzx   edi, byte ptr [esp+20h+var_20]", "and     edi, 0FFh", "sub     edi, 0FEh", "cmp     edi, 1", "jbe     _L1120; jumptable 0001196D default case, cases 8,11-20,23,25-28"], ["jmp     loc_11978"], ["xor     eax, eax", "mov     al, cl", "mov     al, [enc+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      _L1120; jumptable 0001196D default case, cases 8,11-20,23,25-28"], ["and     eax, 0FFh", "mov     ebx, ds:(jpt_11A51 - 2DF78h)[esi+eax*4]", "add     ebx, esi", "jmp     ebx; switch jump"], ["mov     eax, [esp+20h+nextTokPtr]; jumptable 0001196D cases 9,10,21,30", "mov     [eax], ptr", "mov     eax, 16h", "jmp     loc_11948"], ["xor     eax, eax; jumptable 00011A51 case 29", "lea     esi, (_GLOBAL_OFFSET_TABLE_ - 2DF78h)[esi]"], ["and     eax, 0FFh", "mov     ebx, [esp+20h+var_18]", "movzx   edi, byte ptr [ebx+eax]", "mov     al, cl", "and     edi, 0FFh", "shr     al, 5", "mov     ebx, [esp+20h+var_14]", "and     eax, 0FFh", "lea     eax, [eax+edi*8]", "mov     eax, [ebx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      _L1120; jumptable 0001196D default case, cases 8,11-20,23,25-28"], ["add     ptr, 2; jumptable 00011A51 cases 22,24-27", "mov     ebx, [esp+20h+end]", "sub     ebx, ptr", "mov     [esp+20h+var_20], ebx", "dec     ebx", "jg      loc_119D1"], ["lea     esi, [esi+0]"], ["or      eax, 0FFFFFFFFh", "jmp     loc_11948"], ["cmp     edi, 2; jumptable 0001196D case 6", "jnz     _L1120; jumptable 0001196D default case, cases 8,11-20,23,25-28"], ["jmp     short loc_11B0A"], ["cmp     al, 0FFh", "jnz     short loc_11A70"], ["mov     edi, ecx", "and     edi, 0FFh", "sub     edi, 0FEh", "cmp     edi, 1", "jbe     _L1120; jumptable 0001196D default case, cases 8,11-20,23,25-28"], ["jmp     short loc_11A70"], ["mov     eax, [esp+20h+nextTokPtr]; jumptable 00011A51 case 18", "add     ptr, 2", "mov     [eax], edx", "mov     eax, 1Ch", "jmp     loc_11948"], ["cmp     [esp+20h+var_20], 2; jumptable 00011A51 case 6", "jnz     _L1120; jumptable 0001196D default case, cases 8,11-20,23,25-28"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_11948"]], "big2_scanLit": [["push    ebp", "push    edi", "push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "sub     esp, 8", "mov     ebp, [esp+18h+end]", "mov     [esp+18h+open], open_0", "mov     edi, ebp", "sub     edi, ptr_0", "cmp     edi, 1", "jle     short loc_11B9C"], ["mov     [esp+18h+enc], enc_0", "xchg    ax, ax"], ["mov     al, [ptr_0]", "mov     bl, [ptr_0+1]", "test    al, al", "jnz     short loc_11BD0"], ["and     ebx, 0FFh", "mov     eax, [esp+18h+enc]", "mov     al, [eax+ebx+48h]", "cmp     al, 0Dh; switch 14 cases", "ja      short _L1147_0; jumptable 00011B6F default case, cases 2-5,9-11"], ["xor     ebx, ebx", "mov     bl, al", "mov     edx, ds:(jpt_11B6F - 2DF78h)[esi+ebx*4]", "add     edx, esi", "jmp     edx; switch jump"], ["inc     al", "jnz     short _L1147_0; jumptable 00011B6F default case, cases 2-5,9-11"], ["and     ebx, 0FFh", "sub     ebx, 0FEh", "cmp     ebx, 1", "jbe     short _L1150_0; jumptable 00011B6F cases 0,1,8"], ["lea     esi, [esi+0]"], ["add     ptr_0, 2; jumptable 00011B6F default case, cases 2-5,9-11"], ["mov     edi, ebp", "sub     edi, ptr_0", "cmp     edi, 1", "jg      short loc_11B48"], ["add     esp, 8", "or      eax, 0FFFFFFFFh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esp+18h+nextTokPtr]; jumptable 00011B6F cases 0,1,8", "mov     [eax], ptr_0", "xor     eax, eax"], ["add     esp, 8", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["and     eax, 0FFh; jumptable 00011B6F cases 12,13", "lea     ebx, [ptr_0+2]", "cmp     eax, [esp+18h+open]", "jz      short loc_11C01"], ["mov     ecx, ptr_0", "jmp     short loc_11B93"], ["cmp     al, 0DFh", "ja      short loc_11B78"], ["cmp     al, 0DBh", "ja      short _L1150_0; jumptable 00011B6F cases 0,1,8"], ["add     eax, 28h ; '('", "cmp     al, 3", "ja      short _L1147_0; jumptable 00011B6F default case, cases 2-5,9-11"], ["cmp     edi, 3; jumptable 00011B6F case 7", "jle     short loc_11BFA"], ["add     ptr_0, 4", "jmp     short loc_11B93"], ["cmp     edi, 2; jumptable 00011B6F case 6", "jz      short loc_11BFA"], ["add     ptr_0, 3", "jmp     short loc_11B93"], ["mov     eax, 0FFFFFFFEh", "jmp     short loc_11BB0"], ["sub     ebp, ptr_0", "mov     edx, [esp+18h+enc]", "dec     ebp", "jle     short loc_11C46"], ["mov     eax, [esp+18h+nextTokPtr]", "mov     [eax], ptr_0", "xor     eax, eax", "cmp     byte ptr [ecx+2], 0", "jnz     short loc_11BB0"], ["xor     ptr_0, ptr_0", "mov     bl, [ecx+3]", "mov     ecx, ebx", "mov     cl, [edx+ecx+48h]", "cmp     cl, 1Eh", "ja      short loc_11BB0"], ["mov     eax, 1", "shl     eax, cl", "and     eax, 40300E00h", "cmp     eax, 1", "sbb     eax, eax", "add     esp, 8", "xor     eax, 0FFFFFFFFh", "pop     ebx", "and     eax, 1Bh", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, 0FFFFFFE5h", "jmp     loc_11BB0"]], "big2_ignoreSectionTok": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "sub     esp, 8", "mov     ebp, [esp+18h+end]", "mov     edx, [esp+18h+ptr]", "mov     ebx, ebp", "mov     esi, [esp+18h+enc]", "sub     ebx, edx", "test    bl, 1", "jz      short loc_11C7D"], ["and     n, 0FFFFFFFEh", "lea     ebp, [edx+n]"], ["cmp     n, 1", "jle     loc_11DC0"], ["mov     al, [ptr_0]", "mov     cl, [ptr_0+1]", "mov     [esp+18h+var_18], 0"], ["test    al, al", "jz      short loc_11CC7"], ["cmp     al, 0DFh", "ja      short loc_11CE8"], ["cmp     al, 0DBh", "ja      short _L1173; jumptable 00011CE3 cases 0,1,8"], ["add     eax, 28h ; '('", "cmp     al, 3", "ja      short _L1172; jumptable 00011CE3 default case, cases 3,5"], ["cmp     ebx, 3; jumptable 00011CE3 case 7", "jle     loc_11DF6"], ["add     edx, 4"], ["mov     ebx, end_0", "sub     ebx, ptr_0", "cmp     ebx, 1", "jle     loc_11DC0"], ["mov     al, [ptr_0]", "mov     cl, [ptr_0+1]", "test    al, al", "jnz     short loc_11C96"], ["and     ecx, 0FFh", "cmp     byte ptr [esi+ecx+48h], 8; switch 9 cases", "ja      short _L1172; jumptable 00011CE3 default case, cases 3,5"], ["xor     eax, eax", "mov     al, [esi+ecx+48h]", "mov     ecx, ds:(jpt_11CE3 - 2DF78h)[edi+eax*4]", "add     ecx, edi", "jmp     ecx; switch jump"], ["inc     al", "jnz     short _L1172; jumptable 00011CE3 default case, cases 3,5"], ["and     ecx, 0FFh", "sub     ecx, 0FEh", "cmp     ecx, 1", "ja      short _L1172; jumptable 00011CE3 default case, cases 3,5"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+18h+nextTokPtr]; jumptable 00011CE3 cases 0,1,8", "mov     [eax], edx", "xor     eax, eax"], ["add     esp, 8", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     edx, 2; jumptable 00011CE3 default case, cases 3,5", "jmp     short loc_11CB1"], ["cmp     ebx, 2; jumptable 00011CE3 case 6", "jz      loc_11DF6"], ["add     edx, 3", "jmp     short loc_11CB1"], ["lea     eax, [edx+2]; jumptable 00011CE3 case 4", "mov     ebx, ebp", "sub     ebx, eax", "mov     [esp+18h+var_14], eax", "cmp     ebx, 1", "jle     loc_11DC0"], ["mov     al, [edx+2]", "mov     cl, [edx+3]", "test    al, al", "jnz     short loc_11DB0"], ["cmp     cl, 5Dh ; ']'", "jnz     short loc_11DA7"], ["lea     eax, [edx+4]", "mov     ebx, ebp", "sub     ebx, eax", "mov     [esp+18h+var_14], eax", "cmp     ebx, 1", "jle     short loc_11DC0"], ["mov     al, [edx+4]", "mov     cl, [edx+5]", "test    al, al", "jnz     short loc_11DB0"], ["cmp     cl, 3Eh ; '>'", "jnz     short loc_11DA7"], ["mov     eax, [esp+18h+var_18]", "add     edx, 6", "test    eax, eax", "jz      loc_11E00"], ["mov     ebx, [esp+18h+var_18]", "dec     ebx", "mov     [esp+18h+var_18], ebx", "jmp     loc_11CB1"], ["lea     eax, [edx+2]; jumptable 00011CE3 case 2", "mov     ebx, ebp", "sub     ebx, eax", "mov     [esp+18h+var_14], eax", "cmp     ebx, 1", "jle     short loc_11DC0"], ["mov     al, [edx+2]", "mov     cl, [edx+3]", "test    al, al", "jnz     short loc_11DB0"], ["cmp     cl, 21h ; '!'", "jz      short loc_11DC8"], ["mov     edx, [esp+18h+var_14]", "jmp     loc_11CC7"], ["mov     edx, [esp+18h+var_14]", "jmp     loc_11C92"], ["or      eax, 0FFFFFFFFh", "jmp     loc_11D08"], ["lea     eax, [edx+4]", "mov     ebx, ebp", "sub     ebx, eax", "mov     [esp+18h+var_14], eax", "cmp     ebx, 1", "jle     short loc_11DC0"], ["mov     al, [edx+4]", "mov     cl, [edx+5]", "test    al, al", "jnz     short loc_11DB0"], ["cmp     cl, 5Bh ; '['", "jnz     short loc_11DA7"], ["mov     eax, [esp+18h+var_18]", "add     edx, 6", "inc     eax", "mov     [esp+18h+var_18], eax", "jmp     loc_11CB1"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_11D08"], ["mov     eax, [esp+18h+nextTokPtr]", "mov     [eax], ptr_0", "mov     eax, 2Ah ; '*'", "jmp     loc_11D08"]], "big2_isPublicId": [["push    ebp", "push    edi", "push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "mov     ebx, [esp+10h+end]", "mov     eax, [esp+10h+ptr]", "sub     ebx, 2", "add     eax, 2", "mov     edx, end_0", "mov     edi, [esp+10h+enc]", "sub     edx, ptr_0", "dec     edx", "jle     short loc_11E8A"], ["cmp     byte ptr [ptr_0], 0", "jz      short loc_11E50"], ["mov     edi, [esp+10h+badPtr]", "mov     [edi], ptr_0", "xor     ptr_0, ptr_0", "pop     end_0", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["xor     edx, edx", "mov     cl, [ptr_0+1]", "mov     dl, cl", "mov     dl, [enc_0+edx+48h]", "sub     edx, 9; switch 27 cases", "cmp     dl, 1Ah", "ja      short _L1222_0; jumptable 00011E72 default case, cases 11,12,20,28,29"], ["and     edx, 0FFh", "mov     ebp, ds:(jpt_11E72 - 2DF78h)[esi+edx*4]", "add     ebp, esi", "jmp     ebp; switch jump"], ["cmp     cl, 9; jumptable 00011E72 case 21", "jz      short loc_11E3D"], ["lea     esi, [esi+0]"], ["add     ptr_0, 2; jumptable 00011E72 cases 9,10,13-19,23-25,27,30-35", "mov     edx, end_0", "sub     edx, ptr_0", "dec     edx", "jg      short loc_11E38"], ["pop     end_0", "mov     ptr_0, 1", "pop     esi", "pop     enc_0", "pop     ebp", "retn"], ["cmp     cl, 24h ; '$'; jumptable 00011E72 default case, cases 11,12,20,28,29", "jz      short _L1223_0; jumptable 00011E72 cases 9,10,13-19,23-25,27,30-35"], ["cmp     cl, 40h ; '@'", "jnz     short loc_11E3D"], ["add     ptr_0, 2", "mov     edx, end_0", "sub     edx, ptr_0", "dec     edx", "jg      short loc_11E38"], ["jmp     short loc_11E8A"], ["test    cl, cl; jumptable 00011E72 cases 22,26", "js      short loc_11E9D"], ["add     ptr_0, 2", "mov     edx, end_0", "sub     edx, ptr_0", "dec     edx", "jg      loc_11E38"], ["jmp     short loc_11E8A"]], "big2_getAtts": [["push    ebp", "xor     ebp, ebp", "push    edi", "mov     edi, 1", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "mov     ecx, [esp+20h+ptr]", "mov     [esp+20h+open], 0", "lea     edx, [ecx+2]", "mov     al, [ecx+2]", "mov     cl, [ecx+3]", "mov     [esp+20h+var_1D], cl", "lea     esi, [esi+0]"], ["test    al, al", "jnz     short loc_11F60"], ["xor     eax, eax", "mov     ecx, [esp+20h+enc]", "mov     al, [esp+20h+var_1D]", "mov     al, [ecx+eax+48h]", "sub     eax, 3; switch 27 cases", "cmp     al, 1Ah", "ja      short _L1243; jumptable 00011F2F default case, cases 4,8,14-16,18-20,23,25-28"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_11F2F - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["cmp     state, 2; jumptable 00011F2F cases 11,17", "jnz     loc_121A2"], ["lea     esi, [esi+0]"], ["mov     cl, [ptr_0+3]; jumptable 00011F2F default case, cases 4,8,14-16,18-20,23,25-28", "mov     al, [ptr_0+2]", "mov     [esp+20h+var_1D], cl", "add     ptr_0, 2", "test    al, al", "jz      short loc_11F0C"], ["lea     esi, [esi+0]"], ["lea     esi, [edx+2]", "cmp     al, 0DFh", "ja      loc_121B0"], ["cmp     al, 0DBh", "ja      loc_120C0"], ["add     eax, 28h ; '('", "cmp     al, 3", "jbe     loc_12078"], ["test    edi, edi", "jz      short loc_11FA4"], ["mov     cl, [edx+3]", "mov     al, [edx+2]", "mov     [esp+20h+var_1D], cl", "mov     edx, esi", "jmp     loc_11F08"], ["lea     esi, [ptr_0+2]; jumptable 00011F2F cases 22,24,29", "lea     esi, [esi+0]", "nop"], ["test    edi, edi", "jnz     short loc_11F82"], ["cmp     nAtts, [esp+20h+attsMax]", "jl      loc_121D8"], ["mov     al, [edx+2]", "mov     dl, [edx+3]", "mov     [esp+20h+var_1D], dl", "mov     edi, 1", "mov     edx, esi", "jmp     loc_11F08"], ["lea     esi, [ptr_0+2]; jumptable 00011F2F cases 9,10", "cmp     state, 1", "jz      loc_1221F"], ["cmp     state, 2", "jnz     loc_120C0"], ["cmp     nAtts, [esp+20h+attsMax]", "jge     loc_120C0"], ["mov     eax, nAtts", "mov     state, [esp+20h+atts]", "shl     eax, 4", "mov     byte ptr [edi+eax+0Ch], 0", "mov     edi, 2", "mov     al, [ptr_0+2]", "mov     dl, [ptr_0+3]", "mov     [esp+20h+var_1D], dl", "mov     edx, esi", "jmp     loc_11F08"], ["lea     eax, [ptr_0+2]; jumptable 00011F2F case 21", "cmp     state, 1", "mov     [esp+20h+var_18], eax", "jz      loc_12270"], ["cmp     state, 2", "jnz     loc_12288"], ["cmp     nAtts, [esp+20h+attsMax]", "jge     loc_12288"], ["mov     eax, nAtts", "mov     state, [esp+20h+atts]", "shl     eax, 4", "mov     ecx, [esp+20h+atts]", "add     edi, eax", "mov     [esp+20h+var_14], edi", "cmp     byte ptr [ecx+eax+0Ch], 0", "jnz     loc_122FB"], ["mov     cl, [ptr_0+3]", "mov     al, [ptr_0+2]", "mov     [esp+20h+var_1D], cl", "mov     ptr_0, [esp+20h+var_18]", "mov     edi, 2", "jmp     loc_11F08"], ["lea     esi, [ptr_0+2]; jumptable 00011F2F case 7", "lea     esi, [esi+0]", "nop"], ["test    edi, edi", "jnz     short loc_12098"], ["cmp     nAtts, [esp+20h+attsMax]", "mov     edi, 1", "jge     short loc_12098"], ["mov     eax, nAtts", "mov     ecx, [esp+20h+atts]", "shl     eax, 4", "add     eax, ecx", "mov     [eax], edx", "mov     byte ptr [eax+0Ch], 1"], ["mov     cl, [edx+5]", "mov     al, [edx+4]", "mov     [esp+20h+var_1D], cl", "lea     edx, [esi+2]", "jmp     loc_11F08"], ["lea     esi, [ptr_0+2]; jumptable 00011F2F case 5", "test    state, state", "jz      loc_11FA4"], ["lea     esi, [esi+0]", "nop"], ["mov     al, [edx+2]", "mov     dl, [edx+3]", "mov     [esp+20h+var_1D], dl", "mov     edx, esi", "jmp     loc_11F08"], ["cmp     nAtts, [esp+20h+attsMax]; jumptable 00011F2F case 3", "lea     esi, [ptr_0+2]", "jge     short loc_120C0"], ["mov     eax, nAtts", "mov     ecx, [esp+20h+atts]", "shl     eax, 4", "mov     byte ptr [ecx+eax+0Ch], 0", "mov     al, [ptr_0+2]", "mov     dl, [ptr_0+3]", "mov     [esp+20h+var_1D], dl", "mov     edx, esi", "jmp     loc_11F08"], ["lea     esi, [ptr_0+2]; jumptable 00011F2F case 13", "cmp     state, 2", "jz      loc_12238"], ["cmp     nAtts, [esp+20h+attsMax]", "jl      loc_122D0"], ["mov     al, [ptr_0+2]", "mov     dl, [ptr_0+3]", "mov     [esp+20h+var_1D], dl", "mov     [esp+20h+open], 0Dh", "mov     edx, esi", "mov     state, 2", "jmp     loc_11F08"], ["lea     esi, [ptr_0+2]; jumptable 00011F2F case 12", "cmp     state, 2", "jz      loc_12200"], ["cmp     nAtts, [esp+20h+attsMax]", "jl      loc_122A0"], ["mov     al, [ptr_0+2]", "mov     dl, [ptr_0+3]", "mov     [esp+20h+var_1D], dl", "mov     [esp+20h+open], 0Ch", "mov     edx, esi", "mov     state, 2", "jmp     loc_11F08"], ["test    state, state; jumptable 00011F2F case 6", "jnz     short loc_12190"], ["cmp     nAtts, [esp+20h+attsMax]", "mov     state, 1", "jge     short loc_12190"], ["mov     eax, nAtts", "mov     esi, [esp+20h+atts]", "shl     eax, 4", "add     eax, esi", "mov     [eax], ptr_0", "mov     byte ptr [eax+0Ch], 1"], ["mov     cl, [edx+4]", "mov     al, [edx+3]", "mov     [esp+20h+var_1D], cl", "add     edx, 3", "jmp     loc_11F08"], ["add     esp, 10h", "mov     eax, nAtts", "pop     ebx", "pop     esi", "pop     state", "pop     nAtts", "retn"], ["inc     al", "jnz     loc_11FA0"], ["xor     ecx, ecx", "mov     cl, [esp+20h+var_1D]", "sub     ecx, 0FEh", "cmp     ecx, 1", "jbe     loc_120C0"], ["jmp     loc_11FA0"], ["mov     eax, nAtts", "mov     ecx, [esp+20h+atts]", "shl     eax, 4", "mov     edi, 1", "add     eax, ecx", "mov     [eax], edx", "mov     byte ptr [eax+0Ch], 1", "mov     cl, [edx+3]", "mov     al, [edx+2]", "mov     [esp+20h+var_1D], cl", "mov     edx, esi", "jmp     loc_11F08"], ["cmp     [esp+20h+open], 0Ch", "jnz     loc_120C0"], ["cmp     nAtts, [esp+20h+attsMax]", "jge     short loc_1221E"], ["mov     eax, nAtts", "mov     edi, [esp+20h+atts]", "shl     eax, 4", "mov     [edi+eax+8], ptr_0"], ["inc     nAtts"], ["mov     al, [ptr_0+2]", "mov     dl, [ptr_0+3]", "mov     [esp+20h+var_1D], dl", "xor     edi, edi", "mov     edx, esi", "jmp     loc_11F08"], ["cmp     [esp+20h+open], 0Dh", "jnz     loc_11F82"], ["cmp     nAtts, [esp+20h+attsMax]", "jge     short loc_12256"], ["mov     eax, nAtts", "mov     edi, [esp+20h+atts]", "shl     eax, 4", "mov     [edi+eax+8], ptr_0"], ["mov     cl, [ptr_0+3]", "mov     al, [ptr_0+2]", "inc     nAtts", "mov     [esp+20h+var_1D], cl", "mov     ptr_0, esi", "xor     edi, edi", "jmp     loc_11F08"], ["mov     al, [ptr_0+2]", "mov     dl, [ptr_0+3]", "mov     [esp+20h+var_1D], dl", "xor     state, state", "mov     edx, [esp+20h+var_18]", "jmp     loc_11F08"], ["mov     cl, [ptr_0+3]", "mov     al, [ptr_0+2]", "mov     [esp+20h+var_1D], cl", "mov     ptr_0, [esp+20h+var_18]", "jmp     loc_11F08"], ["mov     eax, nAtts", "mov     state, [esp+20h+atts]", "shl     eax, 4", "mov     [esp+20h+open], 0Ch", "mov     [edi+eax+4], esi", "mov     edi, 2", "mov     cl, [ptr_0+3]", "mov     al, [ptr_0+2]", "mov     [esp+20h+var_1D], cl", "mov     ptr_0, esi", "jmp     loc_11F08"], ["mov     eax, nAtts", "mov     state, [esp+20h+atts]", "shl     eax, 4", "mov     [esp+20h+open], 0Dh", "mov     [edi+eax+4], esi", "mov     edi, 2", "mov     cl, [ptr_0+3]", "mov     al, [ptr_0+2]", "mov     [esp+20h+var_1D], cl", "mov     ptr_0, esi", "jmp     loc_11F08"], ["mov     eax, [esp+20h+var_14]", "cmp     [eax+4], ptr_0", "jz      short loc_1230B"], ["cmp     [esp+20h+var_1D], 20h ; ' '", "jz      short loc_1232B"], ["mov     eax, [esp+20h+var_14]", "mov     edi, 2", "mov     byte ptr [eax+0Ch], 0", "mov     al, [ptr_0+2]", "mov     dl, [ptr_0+3]", "mov     [esp+20h+var_1D], dl", "mov     edx, [esp+20h+var_18]", "jmp     loc_11F08"], ["mov     al, [ptr_0+2]", "mov     cl, [ptr_0+3]", "mov     [esp+20h+var_1D], cl", "test    al, al", "jnz     short loc_1235A"], ["cmp     cl, 20h ; ' '", "jz      short loc_1230B"], ["and     ecx, 0FFh", "mov     esi, [esp+20h+enc]", "mov     edi, ecx", "xor     ecx, ecx", "mov     cl, [esi+edi+48h]", "mov     esi, ecx"], ["cmp     [esp+20h+open], esi", "jz      short loc_1230B"], ["jmp     short loc_12362"], ["cmp     al, 0DFh", "ja      short loc_12370"], ["cmp     al, 0DBh", "ja      short loc_1239A"], ["mov     ptr_0, [esp+20h+var_18]", "mov     edi, 2", "jmp     loc_11F08"], ["cmp     al, 0FFh", "jnz     short loc_12362"], ["movzx   edi, [esp+20h+var_1D]", "and     edi, 0FFh", "xor     esi, esi", "sub     edi, 0FEh", "cmp     edi, 1", "jbe     short loc_12352"], ["mov     ptr_0, [esp+20h+var_18]", "mov     edi, 2", "jmp     loc_11F60"], ["mov     esi, 8", "jmp     short loc_12352"]], "big2_charRefNumber": [["push    esi", "mov     enc, ptr", "push    ebx", "lea     ecx, [ptr+4]", "mov     dl, [edx+4]", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "test    dl, dl", "jnz     short loc_123D3"], ["cmp     byte ptr [eax+5], 78h ; 'x'", "jz      loc_12458"], ["xor     eax, eax", "jmp     short loc_123F6"], ["movsx   edx, byte ptr [ptr+1]", "cmp     dl, 3Bh ; ';'", "jz      short loc_12418"], ["sub     edx, 30h ; '0'", "lea     result, [result+result*4]", "lea     eax, [edx+eax*2]", "cmp     result, 10FFFFh", "jg      short loc_1240C"], ["add     ptr, 2", "mov     dl, [ptr]"], ["test    dl, dl", "jz      short loc_123D8"], ["mov     edx, 0FFFFFFCFh", "lea     result, [result+result*4]", "lea     eax, [edx+eax*2]", "cmp     result, 10FFFFh", "jle     short loc_123F1"], ["or      result, 0FFFFFFFFh"], ["pop     ebx", "pop     esi", "retn"], ["mov     edx, result", "sar     edx, 8", "cmp     result, 0DFFFh", "jg      short loc_12440"], ["cmp     edx, 0D7h", "jg      short loc_1240C"], ["test    edx, edx", "jnz     short loc_1240F"], ["cmp     ds:(latin1_encoding.type - 2DF78h)[ebx+result], 0", "jnz     short loc_1240F"], ["jmp     short loc_1240C"], ["cmp     edx, 0FFh", "jnz     short loc_1240F"], ["lea     edx, [result-0FFFEh]", "cmp     edx, 1", "ja      short loc_1240F"], ["jmp     short loc_1240C"], ["lea     edx, [eax+6]", "xor     eax, eax", "jmp     short loc_12483"], ["cmp     cl, 40h ; '@'", "jg      short loc_124B0"], ["sub     ecx, 30h ; '0'", "cmp     cl, 9", "ja      short loc_12480"], ["shl     result, 4", "sub     c, 30h ; '0'", "or      result, esi"], ["cmp     result, 10FFFFh", "jg      short loc_1240C"], ["lea     esi, [esi+0]"], ["add     ptr, 2"], ["cmp     byte ptr [ptr], 0", "jnz     short loc_12480"], ["mov     cl, [ptr+1]", "cmp     cl, 3Bh ; ';'", "jz      short loc_12418"], ["movsx   esi, cl", "cmp     cl, 46h ; 'F'", "jle     short loc_12460"], ["sub     ecx, 61h ; 'a'", "cmp     cl, 5", "ja      short loc_12480"], ["shl     result, 4", "lea     result, [c+result-57h]", "jmp     short loc_12475"], ["shl     result, 4", "lea     result, [c+result-37h]", "jmp     short loc_12475"]], "big2_predefinedEntityName": [["mov     ecx, [esp+ptr]", "mov     edx, [esp+end]", "sub     edx, ecx", "mov     eax, edx", "shr     eax, 1Fh", "add     eax, edx", "xor     edx, edx", "sar     eax, 1", "cmp     eax, 3", "jz      short loc_124E8"], ["cmp     eax, 4", "jz      short loc_12548"], ["cmp     eax, 2", "jz      short loc_12518"], ["mov     eax, edx", "retn"], ["cmp     byte ptr [ecx], 0", "jnz     short loc_124E4"], ["cmp     byte ptr [ecx+1], 61h ; 'a'", "jnz     short loc_124E4"], ["cmp     byte ptr [ecx+2], 0", "jnz     short loc_124E4"], ["cmp     byte ptr [ecx+3], 6Dh ; 'm'", "jnz     short loc_124E4"], ["cmp     byte ptr [ecx+4], 0", "jnz     short loc_124E4"], ["xor     edx, edx", "cmp     byte ptr [ecx+5], 70h ; 'p'", "setnz   dl", "dec     edx", "and     edx, 26h", "jmp     short loc_124E4"], ["cmp     byte ptr [ptr_0+2], 0", "jnz     short loc_124E4"], ["cmp     byte ptr [ptr_0+3], 74h ; 't'", "jnz     short loc_124E4"], ["cmp     byte ptr [ptr_0], 0", "jnz     short loc_124E4"], ["mov     al, [ptr_0+1]", "cmp     al, 67h ; 'g'", "jz      loc_125E0"], ["xor     edx, edx", "cmp     al, 6Ch ; 'l'", "setnz   dl", "dec     edx", "and     edx, 3Ch", "jmp     short loc_124E4"], ["cmp     byte ptr [ptr_0], 0", "jnz     short loc_124E4"], ["mov     al, [ptr_0+1]", "cmp     al, 61h ; 'a'", "jz      short loc_12598"], ["cmp     al, 71h ; 'q'", "jnz     short loc_124E4"], ["cmp     byte ptr [ecx+2], 0", "jnz     short loc_124E4"], ["cmp     byte ptr [ecx+3], 75h ; 'u'", "jnz     short loc_124E4"], ["cmp     byte ptr [ecx+4], 0", "jnz     loc_124E4"], ["cmp     byte ptr [ecx+5], 6Fh ; 'o'", "jnz     loc_124E4"], ["cmp     byte ptr [ecx+6], 0", "jnz     loc_124E4"], ["xor     edx, edx", "cmp     byte ptr [ecx+7], 74h ; 't'", "setnz   dl", "dec     edx", "and     edx, 22h", "jmp     loc_124E4"], ["cmp     byte ptr [ecx+2], 0", "jnz     loc_124E4"], ["cmp     byte ptr [ecx+3], 70h ; 'p'", "jnz     loc_124E4"], ["cmp     byte ptr [ecx+4], 0", "jnz     loc_124E4"], ["cmp     byte ptr [ecx+5], 6Fh ; 'o'", "jnz     loc_124E4"], ["cmp     byte ptr [ecx+6], 0", "jnz     loc_124E4"], ["xor     edx, edx", "cmp     byte ptr [ecx+7], 73h ; 's'", "setnz   dl", "dec     edx", "and     edx, 27h", "jmp     loc_124E4"], ["mov     edx, 3Eh ; '>'", "jmp     loc_124E4"]], "big2_nameMatchesAscii": [["push    esi", "push    ebx", "mov     ecx, [esp+8+ptr2]", "mov     eax, [esp+8+ptr1]", "mov     esi, [esp+8+end1]", "mov     dl, [ecx]", "test    dl, dl", "jnz     short loc_1261D"], ["jmp     short loc_12630"], ["cmp     byte ptr [ptr1_0], 0", "jnz     short loc_12624"], ["cmp     [ptr1_0+1], dl", "jnz     short loc_12624"], ["mov     dl, [ptr2_0+1]", "inc     ptr2_0", "add     ptr1_0, 2", "test    dl, dl", "jz      short loc_12630"], ["mov     ebx, end1_0", "sub     ebx, ptr1_0", "dec     ebx", "jg      short loc_12608"], ["pop     ebx", "xor     ptr1_0, ptr1_0", "pop     end1_0", "retn"], ["cmp     end1_0, ptr1_0", "pop     ebx", "setz    al", "and     eax, 0FFh", "pop     end1_0", "retn"]], "big2_nameLength": [["push    edi", "mov     edi, enc", "push    esi", "mov     enc, start", "push    ebx", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)"], ["mov     cl, [ptr]", "mov     bl, [ptr+1]", "test    cl, cl", "jnz     short loc_126A5"], ["and     ebx, 0FFh", "mov     cl, [enc+ebx+48h]", "sub     ecx, 5; switch 25 cases", "cmp     cl, 18h", "ja      short _L1395; jumptable 0001267C default case, cases 8-21,28"], ["and     ecx, 0FFh", "mov     ebx, ds:(jpt_1267C - 2DF78h)[esi+ecx*4]", "add     ebx, esi", "jmp     ebx; switch jump"], ["inc     cl", "jnz     short _L1396; jumptable 0001267C cases 5,22-27,29"], ["and     ebx, 0FFh", "sub     ebx, 0FEh", "cmp     ebx, 1", "jbe     short _L1395; jumptable 0001267C default case, cases 8-21,28"], ["lea     esi, [esi+0]"], ["mov     cl, [ptr+2]; jumptable 0001267C cases 5,22-27,29", "add     ptr, 2", "test    cl, cl", "mov     bl, [ptr+1]", "jz      short loc_1265B"], ["cmp     cl, 0DFh", "ja      short loc_12680"], ["cmp     cl, 0DBh", "ja      short _L1395; jumptable 0001267C default case, cases 8-21,28"], ["add     ecx, 28h ; '('", "cmp     cl, 3", "ja      short _L1396; jumptable 0001267C cases 5,22-27,29"], ["add     ptr, 4; jumptable 0001267C case 7", "jmp     short loc_12652"], ["pop     ebx; jumptable 0001267C default case, cases 8-21,28", "sub     ptr, start", "pop     esi", "pop     enc", "retn"], ["add     ptr, 3; jumptable 0001267C case 6", "jmp     short loc_12652"]], "big2_skipS": [["mov     ecx, enc", "cmp     byte ptr [ptr], 0", "mov     enc, ptr", "jnz     short locret_126F3"], ["lea     esi, [esi+0]"], ["xor     edx, edx", "mov     dl, [ptr+1]", "mov     dl, [enc+edx+48h]", "cmp     dl, 0Ah", "ja      short loc_126F8"], ["cmp     dl, 8", "ja      short loc_126FD"], ["retn"], ["cmp     dl, 15h", "jnz     short locret_126F3"], ["add     ptr, 2", "cmp     byte ptr [ptr], 0", "jz      short loc_126E0"], ["retn"]], "big2_updatePosition": [["push    ebp", "push    edi", "push    esi", "push    ebx", "push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     ebx, [esp+14h+end]", "mov     eax, [esp+14h+ptr]", "mov     ecx, ebx", "mov     ebp, [esp+14h+enc]", "sub     ecx, ptr_0", "mov     edx, [esp+14h+pos]", "dec     ecx", "jle     short loc_1277D"], ["nop"], ["mov     cl, [ptr_0]", "test    cl, cl", "jnz     short loc_12760"], ["xor     ecx, ecx", "mov     cl, [ptr_0+1]", "mov     cl, [ebp+ecx+48h]", "sub     ecx, 5; switch 6 cases", "cmp     cl, 5", "ja      short _L1414; jumptable 0001275E default case, cases 5,8"], ["and     ecx, 0FFh", "mov     ebx, ds:(jpt_1275E - 2DF78h)[esi+ecx*4]", "add     ebx, esi", "jmp     ebx; switch jump"], ["add     ecx, 28h ; '('", "cmp     cl, 3", "jbe     short _L1418; jumptable 0001275E case 7"], ["add     ptr_0, 2; jumptable 0001275E default case, cases 5,8"], ["mov     ebx, [esp+14h+end]", "mov     edi, [edx+4]", "sub     ebx, ptr_0", "inc     edi", "mov     ecx, ebx"], ["mov     [edx+4], edi", "dec     ecx", "jg      short loc_12738"], ["pop     ptr_0", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     ptr_0, 4; jumptable 0001275E case 7", "jmp     short loc_1276B"], ["mov     ecx, [edx]; jumptable 0001275E case 9", "lea     edi, [ptr_0+2]", "mov     ebx, [esp+14h+end]", "inc     ecx", "sub     ebx, edi", "mov     [edx], ecx", "cmp     ebx, 1", "mov     ecx, ebx", "jle     short loc_127CA"], ["mov     bl, [eax+3]", "cmp     byte ptr [eax+2], 0", "mov     [esp+14h+var_11], bl", "jnz     short loc_127CA"], ["and     ebx, 0FFh", "cmp     byte ptr [ebp+ebx+48h], 0Ah", "jnz     short loc_127CA"], ["lea     ptr_0, [eax+4]", "mov     ebx, [esp+14h+end]", "sub     ebx, ptr_0", "mov     ecx, ebx"], ["mov     eax, ptr_0", "xor     ptr_0, ptr_0", "jmp     short loc_12777"], ["add     ptr_0, 3; jumptable 0001275E case 6", "jmp     short loc_1276B"], ["mov     ebx, [edx]; jumptable 0001275E case 10", "add     ptr_0, 2", "inc     ebx", "xor     edi, edi", "mov     [edx], ebx", "mov     ebx, [esp+14h+end]", "sub     ebx, ptr_0", "mov     ecx, ebx", "jmp     short loc_12777"]], "unknown_isInvalid": [["push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 10h", "push    p_0", "mov     p_0, [uenc+170h]", "push    edx", "call    dword ptr [uenc+16Ch]", "mov     edx, c", "add     esp, 10h", "and     edx, 0FFFF0000h", "jnz     short loc_12948"], ["mov     ecx, c", "sar     ecx, 8", "cmp     c, 0DFFFh", "jg      short loc_12928"], ["cmp     ecx, 0D7h", "jg      short loc_12948"], ["test    ecx, ecx", "jnz     short loc_1291F"], ["xor     edx, edx", "cmp     ds:(latin1_encoding.type - 2DF78h)[ebx+c], 0", "setz    dl"], ["add     esp, 8", "mov     c, edx", "pop     ebx", "retn"], ["cmp     ecx, 0FFh", "jnz     short loc_1291F"], ["sub     c, 0FFFEh", "xor     edx, edx", "cmp     eax, 1", "setbe   dl", "add     esp, 8", "mov     eax, edx", "pop     ebx", "retn"], ["add     esp, 8", "mov     edx, 1", "mov     c, edx", "pop     ebx", "retn"]], "unknown_toUtf16": [["push    ebp", "push    edi", "push    esi", "push    ebx", "sub     esp, 1Ch", "mov     edi, [esp+2Ch+fromP]", "mov     ebp, [esp+2Ch+uenc]", "mov     ebx, [esp+2Ch+toP]", "mov     esi, [esp+2Ch+toLim]", "mov     edx, [edi]", "cmp     [esp+2Ch+fromLim], edx", "ja      short loc_129C9"], ["jmp     short loc_129EA"], ["push    eax", "push    eax", "push    edx", "mov     edx, [uenc_0+170h]", "push    edx", "call    dword ptr [uenc_0+16Ch]", "mov     edx, [edi]", "xor     ecx, ecx", "mov     [esp+3Ch+var_20], edx", "mov     cl, [edx]", "xor     edx, edx", "mov     dl, [uenc_0+ecx+48h]", "mov     ecx, edx", "mov     edx, [esp+3Ch+var_20]", "add     esp, 10h", "lea     edx, [edx+ecx-3]", "mov     [edi], edx"], ["mov     edx, [ebx]", "lea     ecx, [edx+2]", "mov     [ebx], ecx", "mov     [edx], ax", "mov     edx, [edi]", "cmp     edx, [esp+2Ch+fromLim]", "jnb     short loc_129EA"], ["cmp     [ebx], esi", "jnb     short loc_129E8"], ["xor     eax, eax", "mov     al, [edx]", "mov     ax, [uenc_0+eax*2+174h]", "test    ax, ax", "jz      short loc_12988"], ["inc     edx", "mov     [edi], edx", "jmp     short loc_129B7"], ["jz      short loc_129F8"], ["add     esp, 1Ch", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     uenc_0", "retn"], ["add     esp, 1Ch", "mov     eax, 2", "pop     ebx", "pop     esi", "pop     edi", "pop     uenc_0", "retn"]], "utf8_isInvalid4": [["mov     al, [p+3]", "mov     ecx, 1", "test    al, al", "js      short loc_12A50"], ["mov     eax, ecx", "retn"], ["and     eax, 0FFFFFFC0h", "cmp     al, 0C0h", "jz      short loc_12A4C"], ["mov     al, [p+2]", "test    al, al", "jns     short loc_12A4C"], ["and     eax, 0FFFFFFC0h", "cmp     al, 0C0h", "jz      short loc_12A4C"], ["push    ebx", "mov     bl, [p]", "mov     al, [p+1]", "cmp     bl, 0F0h", "jz      short loc_12A78"], ["test    al, al", "js      short loc_12A88"], ["mov     eax, ecx", "pop     ebx", "retn"], ["cmp     al, 8Fh", "jbe     short loc_12A74"], ["xor     ecx, ecx", "and     eax, 0FFFFFFC0h", "cmp     al, 0C0h", "setz    cl", "jmp     short loc_12A74"], ["cmp     bl, 0F4h", "jnz     short loc_12A7C"], ["xor     ecx, ecx", "cmp     al, 8Fh", "setnbe  cl", "jmp     short loc_12A74"]], "normal_scanComment": [["push    ebp", "lea     ebp, [ptr+1]", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "mov     esi, end", "push    ebx", "sub     end, ptr", "sub     esp, 0Ch", "test    ecx, ecx", "jle     loc_12B68"], ["mov     ebx, enc", "mov     al, [edx+1]"], ["and     eax, 0FFh", "cmp     byte ptr [enc+eax+48h], 1Bh; switch 28 cases", "ja      short _L1486; jumptable 00012AE3 default case, cases 2-4,9-26"], ["xor     edx, edx", "mov     dl, [enc+eax+48h]", "mov     eax, edx", "mov     edx, ds:(jpt_12AE3 - 2DF78h)[edi+eax*4]", "add     edx, edi", "jmp     edx; switch jump"], ["inc     ptr; jumptable 00012AE3 default case, cases 2-4,9-26"], ["mov     ecx, end", "sub     ecx, ptr", "test    ecx, ecx", "jle     short loc_12B68"], ["mov     al, [ptr+0]", "jmp     short loc_12AC6"], ["mov     eax, [esp+1Ch+nextTokPtr]; jumptable 00012AE3 cases 0,1,8", "mov     [eax], ptr", "xor     eax, eax"], ["add     esp, 0Ch", "pop     enc", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     edx, [ptr+1]; jumptable 00012AE3 case 27", "mov     ecx, end", "sub     ecx, ptr", "test    ecx, ecx", "jle     short loc_12B68"], ["mov     al, [ebp+1]", "cmp     al, 2Dh ; '-'", "jz      short loc_12B7A"], ["mov     ebp, ptr", "jmp     short loc_12AC6"], ["dec     ecx; jumptable 00012AE3 case 5", "jz      short loc_12B73"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+160h]", "test    eax, eax", "jnz     short _L1489; jumptable 00012AE3 cases 0,1,8"], ["add     ptr, 2", "jmp     short loc_12AE9"], ["cmp     ecx, 3; jumptable 00012AE3 case 7", "jle     short loc_12B73"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+168h]", "test    eax, eax", "jnz     short _L1489; jumptable 00012AE3 cases 0,1,8"], ["add     ptr, 4", "jmp     short loc_12AE9"], ["cmp     ecx, 2; jumptable 00012AE3 case 6", "jle     short loc_12B73"], ["mov     edx, ptr", "mov     eax, enc", "call    dword ptr [enc+164h]", "test    eax, eax", "jnz     short _L1489; jumptable 00012AE3 cases 0,1,8"], ["add     ptr, 3", "jmp     short loc_12AE9"], ["add     esp, 0Ch", "or      eax, 0FFFFFFFFh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, 0FFFFFFFEh", "jmp     short loc_12B00"], ["lea     eax, [ebp+2]", "sub     end, ptr", "test    esi, esi", "jle     short loc_12B68"], ["cmp     byte ptr [ebp+2], 3Eh ; '>'", "jz      short loc_12B96"], ["mov     esi, [esp+1Ch+nextTokPtr]", "mov     [esi], ptr", "xor     ptr, ptr", "jmp     loc_12B00"], ["mov     ptr, [esp+1Ch+nextTokPtr]", "add     ebp, 3", "mov     [eax], ebp", "mov     eax, 0Dh", "jmp     loc_12B00"]], "normal_checkPiTarget": [["push    esi", "push    ebx", "mov     cl, [ptr]", "cmp     cl, 58h ; 'X'", "jz      short loc_12C10"], ["xor     esi, esi", "mov     ebx, 1", "cmp     cl, 78h ; 'x'", "jnz     short loc_12BD7"], ["mov     cl, [eax+1]", "cmp     cl, 4Dh ; 'M'", "jz      short loc_12BF8"], ["mov     ebx, 1", "cmp     cl, 6Dh ; 'm'", "jz      short loc_12BE0"], ["mov     eax, ebx", "pop     ebx", "pop     esi", "retn"], ["mov     al, [eax+2]", "cmp     al, 4Ch ; 'L'", "jz      short loc_12C18"], ["cmp     al, 6Ch ; 'l'", "jnz     short loc_12BD7"], ["test    upper, upper", "jnz     short loc_12C18"], ["mov     dword ptr [tokPtr], 0Ch", "jmp     short loc_12BD7"], ["mov     al, [eax+2]", "xor     ebx, ebx", "and     eax, 0FFFFFFDFh", "cmp     al, 4Ch ; 'L'", "setnz   bl", "mov     eax, ebx", "pop     ebx", "pop     esi", "retn"], ["mov     esi, 1", "jmp     short loc_12BC5"], ["xor     ebx, ebx", "jmp     short loc_12BD7"]], "normal_scanPi": [["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "mov     esi, ptr_0", "push    ebx", "mov     ptr_0, end", "sub     esp, 2Ch", "mov     ebx, enc", "sub     edx, ptr_0", "mov     enc, [esp+3Ch+nextTokPtr]", "mov     [esp+3Ch+var_34], eax; end", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "test    edx, edx", "jle     loc_12CE9"], ["xor     eax, eax", "mov     al, [target_0]", "mov     al, [enc+eax+48h]", "sub     eax, 5; switch 20 cases", "cmp     al, 13h", "ja      short _L1557; jumptable 00012C75 default case, cases 8-21,23"], ["and     eax, 0FFh", "mov     edi, end", "mov     end, ss:(jpt_12C75 - 2DF78h)[ebp+eax*4]", "add     ecx, ebp", "jmp     ecx; switch jump"], ["mov     eax, [esp+3Ch+var_34]; jumptable 00012C75 default case, cases 8-21,23", "mov     [eax], ptr_0", "xor     eax, eax"], ["mov     edi, [esp+3Ch+var_20]", "xor     edi, large gs:14h", "jnz     loc_12FFC"], ["add     esp, 2Ch", "pop     enc", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     ecx, [target_0+1]; jumptable 00012C75 cases 22,24"], ["mov     edx, end", "sub     edx, ptr_0", "test    edx, edx", "jle     short loc_12CE9"], ["mov     [esp+3Ch+target], target_0", "mov     target_0, ptr_0"], ["xor     eax, eax", "mov     al, [ptr_0]", "mov     al, [enc+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      short _L1599; jumptable 00012CCE default case, cases 8,11-14,16-20,23,28,29"], ["and     eax, 0FFh", "mov     ecx, ss:(jpt_12CCE - 2DF78h)[ebp+eax*4]", "add     ecx, ebp", "jmp     ecx; switch jump"], ["mov     ecx, ptr_0; jumptable 00012CCE default case, cases 8,11-14,16-20,23,28,29"], ["mov     eax, [esp+3Ch+var_34]", "mov     [eax], ptr_0", "xor     eax, eax", "jmp     short loc_12C80"], ["inc     ptr_0; jumptable 00012CCE cases 22,24-27"], ["mov     edx, end", "sub     edx, ptr_0", "test    edx, edx", "jg      short loc_12CB1"], ["or      eax, 0FFFFFFFFh", "jmp     short loc_12C80"], ["mov     ecx, ptr_0; jumptable 00012CCE cases 9,10,21", "mov     ptr_0, [esp+3Ch+target]", "mov     eax, ptr_0", "mov     [esp+3Ch+tok], 0Bh", "sub     eax, esi", "cmp     eax, 3", "jz      loc_12FA8"], ["lea     esi, [ecx+1]", "mov     edx, end", "sub     edx, ptr_0", "test    edx, edx", "jle     short loc_12CE9"], ["mov     al, [ecx+1]"], ["and     eax, 0FFh", "cmp     byte ptr [enc+eax+48h], 0Fh; switch 16 cases", "ja      _L1554; jumptable 00012D3A default case, cases 2-4,9-14"], ["xor     ecx, ecx", "mov     cl, [enc+eax+48h]", "mov     eax, ecx", "mov     ecx, ss:(jpt_12D3A - 2DF78h)[ebp+eax*4]", "add     ecx, ebp", "jmp     ecx; switch jump"], ["dec     edx; jumptable 00012C75 case 5", "jz      loc_12FE0"], ["mov     edx, target_0", "mov     eax, enc", "call    dword ptr [enc+160h]", "test    eax, eax", "jnz     _L1557; jumptable 00012C75 default case, cases 8-21,23"], ["mov     edx, target_0", "mov     eax, enc", "call    dword ptr [enc+154h]", "test    eax, eax", "jz      _L1557; jumptable 00012C75 default case, cases 8-21,23"], ["lea     ecx, [target_0+2]", "jmp     loc_12CA3"], ["cmp     edx, 2; jumptable 00012C75 case 6", "jle     loc_12FE0"], ["mov     edx, target_0", "mov     eax, enc", "call    dword ptr [enc+164h]", "test    eax, eax", "jnz     _L1557; jumptable 00012C75 default case, cases 8-21,23"], ["mov     edx, target_0", "mov     eax, enc", "call    dword ptr [enc+158h]", "test    eax, eax", "jz      _L1557; jumptable 00012C75 default case, cases 8-21,23"], ["lea     ecx, [target_0+3]", "jmp     loc_12CA3"], ["cmp     edx, 3; jumptable 00012C75 case 7", "jle     loc_12FE0"], ["mov     edx, target_0", "mov     eax, enc", "call    dword ptr [enc+168h]", "test    eax, eax", "jnz     _L1557; jumptable 00012C75 default case, cases 8-21,23"], ["mov     edx, target_0", "mov     eax, enc", "call    dword ptr [enc+15Ch]", "test    eax, eax", "jz      _L1557; jumptable 00012C75 default case, cases 8-21,23"], ["lea     ecx, [target_0+4]", "jmp     loc_12CA3"], ["inc     ptr_0; jumptable 00012D3A default case, cases 2-4,9-14"], ["mov     edx, end", "sub     edx, ptr_0", "test    edx, edx", "jle     loc_12CE9"], ["mov     al, [ptr_0]", "jmp     loc_12D19"], ["cmp     edx, 3; jumptable 00012CCE case 7", "jle     loc_12FE0"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+168h]", "test    eax, eax", "jnz     _L1599; jumptable 00012CCE default case, cases 8,11-14,16-20,23,28,29"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+150h]", "test    eax, eax", "jz      _L1599; jumptable 00012CCE default case, cases 8,11-14,16-20,23,28,29"], ["add     ptr_0, 4", "jmp     loc_12CE1"], ["mov     ecx, ptr_0; jumptable 00012CCE case 15", "mov     ptr_0, [esp+3Ch+target]", "mov     eax, ptr_0", "mov     [esp+3Ch+tok], 0Bh", "sub     eax, esi", "cmp     eax, 3", "jz      loc_12F80"], ["lea     eax, [ecx+1]", "sub     end, ptr_0", "test    edi, edi", "jle     loc_12CE9"], ["cmp     byte ptr [ecx+1], 3Eh ; '>'", "jz      loc_12FC8"], ["mov     ecx, ptr_0", "jmp     loc_12CD2"], ["cmp     edx, 2; jumptable 00012CCE case 6", "jle     loc_12FE0"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+164h]", "test    eax, eax", "jnz     _L1599; jumptable 00012CCE default case, cases 8,11-14,16-20,23,28,29"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+14Ch]", "test    eax, eax", "jz      _L1599; jumptable 00012CCE default case, cases 8,11-14,16-20,23,28,29"], ["add     ptr_0, 3", "jmp     loc_12CE1"], ["dec     edx; jumptable 00012CCE case 5", "jz      loc_12FE0"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+160h]", "test    eax, eax", "jnz     _L1599; jumptable 00012CCE default case, cases 8,11-14,16-20,23,28,29"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+148h]", "test    eax, eax", "jz      _L1599; jumptable 00012CCE default case, cases 8,11-14,16-20,23,28,29"], ["add     ptr_0, 2", "jmp     loc_12CE1"], ["lea     ecx, [ptr_0+1]; jumptable 00012D3A case 15", "mov     edx, end", "sub     edx, ptr_0", "test    edx, edx", "jle     loc_12CE9"], ["mov     al, [esi+1]", "cmp     al, 3Eh ; '>'", "jz      loc_12FEA"], ["mov     esi, ptr_0", "jmp     loc_12D19"], ["cmp     edx, 3; jumptable 00012D3A case 7", "jle     loc_12FE0"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+168h]", "test    eax, eax", "jnz     _L1557; jumptable 00012C75 default case, cases 8-21,23"], ["add     ptr_0, 4", "jmp     loc_12DE9"], ["cmp     edx, 2; jumptable 00012D3A case 6", "jle     loc_12FE0"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+164h]", "test    eax, eax", "jnz     _L1557; jumptable 00012C75 default case, cases 8-21,23"], ["add     ptr_0, 3", "jmp     loc_12DE9"], ["dec     edx; jumptable 00012D3A case 5", "jz      short loc_12FE0"], ["mov     edx, ptr_0", "mov     eax, enc", "call    dword ptr [enc+160h]", "test    eax, eax", "jnz     _L1557; jumptable 00012C75 default case, cases 8-21,23"], ["add     ptr_0, 2", "jmp     loc_12DE9"], ["lea     edx, [esp+3Ch+tok]", "mov     eax, esi", "mov     [esp+3Ch+target], ptr_0; tokPtr", "call    normal_checkPiTarget", "mov     ecx, [esp+3Ch+target]", "test    eax, eax", "jnz     loc_12E53"], ["mov     end, [esp+3Ch+var_34]", "mov     [edi], ecx", "jmp     loc_12C80"], ["lea     edx, [esp+3Ch+tok]", "mov     eax, esi", "mov     [esp+3Ch+target], ptr_0; tokPtr", "call    normal_checkPiTarget", "mov     ecx, [esp+3Ch+target]", "test    eax, eax", "jnz     loc_12D0B"], ["jmp     short loc_12F9B"], ["mov     ptr_0, [esp+3Ch+var_34]", "add     ecx, 2", "mov     [eax], ecx", "mov     eax, [esp+3Ch+tok]", "jmp     loc_12C80"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_12C80"], ["mov     eax, [esp+3Ch+var_34]", "add     esi, 2", "mov     [eax], esi", "mov     eax, [esp+3Ch+tok]", "jmp     loc_12C80"], ["call    __stack_chk_fail_local"]], "normal_contentTok": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, [esp+3Ch+nextTokPtr]", "mov     ebp, [esp+3Ch+ptr]", "mov     ecx, [esp+3Ch+end]; end", "mov     [esp+3Ch+var_3C], eax", "mov     eax, large gs:14h", "mov     [esp+3Ch+var_20], eax", "xor     eax, eax", "mov     esi, [esp+3Ch+enc]", "cmp     ebp, ecx", "jnb     loc_13B8D"], ["xor     eax, eax", "mov     al, [ebp+0]", "cmp     byte ptr [esi+eax+48h], 0Ah; switch 11 cases", "ja      def_1306A; jumptable 0001306A default case"], ["xor     edx, edx", "mov     dl, [esi+eax+48h]", "mov     eax, edx", "mov     edx, ds:(jpt_1306A - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["mov     ecx, edi; jumptable 0001363E cases 9,10,21"], ["inc     ebp", "mov     eax, ecx", "sub     eax, ebp", "test    eax, eax", "jle     loc_13333"], ["xor     eax, eax", "mov     al, [ebp+0]", "mov     al, [esi+eax+48h]", "cmp     al, 0Bh", "jz      _L1668; jumptable 0001363E case 11"], ["ja      loc_13C22"], ["sub     eax, 9", "cmp     al, 1", "jbe     short loc_1306E"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+3Ch+var_3C]; jumptable 0001306A cases 0,1,8", "xor     edi, edi", "mov     [eax], ebp"], ["mov     eax, [esp+3Ch+var_20]", "xor     eax, large gs:14h", "jnz     loc_13C43"], ["add     esp, 2Ch", "mov     eax, edi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esp+3Ch+var_3C]; jumptable 0001306A case 10", "inc     ebp", "mov     edi, 7", "mov     [eax], ebp", "jmp     short loc_130A7"], ["lea     edi, [ebp+1]; jumptable 0001306A case 2", "mov     edx, ecx", "sub     edx, edi", "mov     [esp+3Ch+var_38], edx", "test    edx, edx", "jle     loc_13333"], ["xor     eax, eax", "mov     al, [ebp+1]", "mov     al, [esi+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1310D - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["sub     esp, 0Ch; jumptable 0001306A case 3", "lea     edx, [ebp+1]; ptr", "mov     eax, [esp+48h+var_3C]", "push    eax; nextTokPtr", "mov     eax, esi; enc", "call    normal_scanRef", "add     esp, 10h", "mov     edi, eax", "jmp     loc_130A7"], ["lea     edi, [ebp+1]; jumptable 0001306A case 4", "mov     edx, ecx", "sub     edx, ptr_0", "mov     [esp+3Ch+var_38], edx", "test    edx, edx", "jle     loc_13C39"], ["mov     al, [ebp+1]", "mov     byte ptr [esp+3Ch+var_34], al", "cmp     al, 5Dh ; ']'", "jz      loc_13B60"], ["mov     edx, [esp+3Ch+var_38]", "mov     al, byte ptr [esp+3Ch+var_34]", "mov     ebp, ecx", "lea     esi, [esi+0]"], ["and     eax, 0FFh", "cmp     byte ptr [esi+eax+48h], 0Ah; switch 11 cases", "ja      def_13181; jumptable 00013181 default case"], ["xor     ecx, ecx", "mov     cl, [esi+eax+48h]", "mov     eax, ecx", "mov     ecx, ds:(jpt_13181 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["mov     eax, [esp+3Ch+var_3C]; jumptable 00013181 cases 0-3,8-10", "mov     [eax], ptr_0", "mov     ptr_0, 6", "jmp     loc_130A7"], ["cmp     edx, 3; jumptable 00013181 case 7", "jle     short _L1815; jumptable 00013181 cases 0-3,8-10"], ["mov     edx, ptr_0", "mov     eax, esi", "call    dword ptr [esi+168h]", "test    eax, eax", "jnz     short _L1815; jumptable 00013181 cases 0-3,8-10"], ["add     ptr_0, 4", "xchg    ax, ax"], ["mov     edx, ebp", "sub     edx, ptr_0", "test    edx, edx", "jle     short _L1815; jumptable 00013181 cases 0-3,8-10"], ["mov     al, [ptr_0]", "jmp     short loc_13160"], ["cmp     edx, 2; jumptable 00013181 case 6", "jle     short _L1815; jumptable 00013181 cases 0-3,8-10"], ["mov     edx, ptr_0", "mov     eax, esi", "call    dword ptr [esi+164h]", "test    eax, eax", "jnz     short _L1815; jumptable 00013181 cases 0-3,8-10"], ["add     ptr_0, 3", "jmp     short loc_131B0"], ["dec     edx; jumptable 00013181 case 5", "jz      short _L1815; jumptable 00013181 cases 0-3,8-10"], ["mov     edx, ptr_0", "mov     eax, esi", "call    dword ptr [esi+160h]", "test    eax, eax", "jnz     short _L1815; jumptable 00013181 cases 0-3,8-10"], ["add     ptr_0, 2", "jmp     short loc_131B0"], ["cmp     edx, 1; jumptable 00013181 case 4", "jz      short _L1815; jumptable 00013181 cases 0-3,8-10"], ["cmp     byte ptr [ptr_0+1], 5Dh ; ']'", "jz      short loc_13200"], ["inc     ptr_0; jumptable 00013181 default case", "jmp     short loc_131B0"], ["cmp     edx, 2", "jz      short _L1815; jumptable 00013181 cases 0-3,8-10"], ["cmp     byte ptr [ptr_0+2], 3Eh ; '>'", "jnz     short def_13181; jumptable 00013181 default case"], ["add     ptr_0, 2", "xchg    ax, ax"], ["mov     eax, [esp+3Ch+var_3C]; jumptable 0001310D default case, cases 8-14,18-21,23,25-29", "mov     [eax], edi", "xor     edi, edi", "jmp     loc_130A7"], ["mov     eax, ecx; jumptable 0001306A case 5", "mov     [esp+3Ch+var_38], ecx", "sub     eax, ebp", "dec     eax", "jle     loc_13BD7"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+160h]", "lea     edi, [ebp+2]", "test    eax, eax", "mov     ecx, [esp+3Ch+var_38]", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["mov     edx, ecx", "sub     edx, ptr_0", "test    edx, edx", "jle     _L1815; jumptable 00013181 cases 0-3,8-10"], ["mov     al, [edi]", "mov     ebp, ecx", "jmp     loc_13160"], ["mov     eax, ecx; jumptable 0001306A case 6", "mov     [esp+3Ch+var_38], ecx", "sub     eax, ebp", "cmp     eax, 2", "jle     loc_13BD7"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+164h]", "test    eax, eax", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["lea     edi, [ebp+3]", "mov     ecx, [esp+3Ch+var_38]", "jmp     short loc_13248"], ["mov     eax, ecx; jumptable 0001306A case 7", "mov     [esp+3Ch+var_38], ecx", "sub     eax, ebp", "cmp     eax, 3", "jle     loc_13BD7"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+168h]", "test    eax, eax", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["lea     edi, [ebp+4]", "mov     ecx, [esp+3Ch+var_38]", "jmp     short loc_13248"], ["lea     eax, [ebp+1]; jumptable 0001306A case 9", "sub     ecx, ptr_0", "test    ecx, ecx", "jle     loc_13C2F"], ["xor     edx, edx", "mov     dl, [ebp+1]", "cmp     byte ptr [esi+edx+48h], 0Ah", "jnz     short loc_132DC"], ["lea     ptr_0, [ebp+2]"], ["mov     ebx, [esp+3Ch+var_3C]", "mov     edi, 7", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[ebx], ptr_0", "jmp     loc_130A7"], ["lea     edi, [ebp+1]; jumptable 0001306A default case", "jmp     loc_13248"], ["add     ebp, 2; jumptable 0001310D cases 22,24"], ["mov     edx, ecx", "sub     edx, ebp", "test    edx, edx", "jle     short loc_13333"], ["xor     edi, edi", "mov     [esp+3Ch+var_38], edi", "mov     edi, ecx"], ["xor     eax, eax", "mov     al, [ebp+0]", "mov     al, [esi+eax+48h]", "sub     eax, 5; switch 23 cases", "cmp     al, 16h", "ja      _L1614; jumptable 0001306A cases 0,1,8"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_13328 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["inc     ebp; jumptable 00013328 cases 22,24-27"], ["mov     edx, edi", "sub     edx, ebp", "test    edx, edx", "jg      short loc_13306"], ["or      edi, 0FFFFFFFFh", "jmp     loc_130A7"], ["mov     ecx, edi; jumptable 00013328 cases 9,10,21"], ["inc     ebp; jumptable 00013368 cases 9,10,21", "mov     edx, ecx", "sub     edx, ebp", "test    edx, edx", "jle     short loc_13333"], ["xor     eax, eax", "mov     al, [ebp+0]", "mov     al, [esi+eax+48h]", "sub     eax, 5; switch 20 cases", "cmp     al, 13h", "ja      _L1614; jumptable 0001306A cases 0,1,8"], ["and     eax, 0FFh", "mov     edi, ds:(jpt_13368 - 2DF78h)[ebx+eax*4]", "add     edi, ebx", "jmp     edi; switch jump"], ["lea     edi, [ebp+2]; jumptable 0001310D case 17", "mov     edx, ecx", "sub     edx, edi", "mov     [esp+3Ch+var_38], edx", "test    edx, edx", "jle     short loc_13333"], ["xor     eax, eax", "mov     al, [ebp+2]", "mov     al, [esi+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1339B - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["cmp     [esp+3Ch+var_38], 2; jumptable 0001310D case 6", "mov     [esp+3Ch+var_34], ecx", "jle     loc_13BD7"], ["mov     edx, edi", "mov     eax, esi", "call    dword ptr [esi+164h]", "mov     ecx, [esp+3Ch+var_34]", "test    eax, eax", "jnz     _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["mov     edx, edi", "mov     eax, esi", "mov     [esp+3Ch+var_38], ecx", "call    dword ptr [esi+158h]", "test    eax, eax", "jz      _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["add     ebp, 4", "mov     ecx, [esp+3Ch+var_38]", "jmp     loc_132F6"], ["cmp     [esp+3Ch+var_38], 1; jumptable 0001310D case 5", "jz      loc_13BD7"], ["mov     edx, edi", "mov     eax, esi", "mov     [esp+3Ch+var_38], ecx", "call    dword ptr [esi+160h]", "mov     ecx, [esp+3Ch+var_38]", "test    eax, eax", "jnz     _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["mov     edx, edi", "mov     eax, esi", "mov     [esp+3Ch+var_38], ecx", "call    dword ptr [esi+154h]", "test    eax, eax", "jz      _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["add     ebp, 3", "mov     ecx, [esp+3Ch+var_38]", "jmp     loc_132F6"], ["sub     esp, 0Ch; jumptable 0001310D case 15", "lea     edx, [ebp+2]; ptr", "mov     eax, esi; enc", "mov     ebx, [esp+48h+var_3C]", "push    ebx; nextTokPtr", "call    normal_scanPi", "add     esp, 10h", "mov     edi, eax", "jmp     loc_130A7"], ["cmp     [esp+3Ch+var_38], 3; jumptable 0001310D case 7", "mov     [esp+3Ch+var_34], ecx", "jle     loc_13BD7"], ["mov     edx, edi", "mov     eax, esi", "call    dword ptr [esi+168h]", "mov     ecx, [esp+3Ch+var_34]", "test    eax, eax", "jnz     _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["mov     edx, edi", "mov     eax, esi", "mov     [esp+3Ch+var_38], ecx", "call    dword ptr [esi+15Ch]", "test    eax, eax", "jz      _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["add     ebp, 5", "mov     ecx, [esp+3Ch+var_38]", "jmp     loc_132F6"], ["lea     edx, [ebp+2]; jumptable 0001310D case 16", "mov     eax, ecx", "sub     eax, edx", "test    eax, eax", "jle     loc_13333"], ["xor     eax, eax", "mov     al, [ebp+2]", "mov     al, [esi+eax+48h]", "cmp     al, 14h", "jz      loc_13BA3"], ["cmp     al, 1Bh", "jnz     _L1795_0; jumptable 00013C8B cases 0-2,8"], ["lea     edx, [ebp+3]; ptr", "mov     eax, ecx", "sub     eax, edx", "test    eax, eax", "jle     loc_13333"], ["cmp     byte ptr [ebp+3], 2Dh ; '-'", "jnz     _L1795_0; jumptable 00013C8B cases 0-2,8"], ["sub     esp, 0Ch", "mov     eax, esi; enc", "mov     edi, [esp+48h+var_3C]", "push    edi; nextTokPtr", "call    normal_scanComment", "add     esp, 10h", "mov     edi, eax", "jmp     loc_130A7"], ["mov     eax, [esp+3Ch+var_3C]; jumptable 00013328 case 11", "inc     ebp", "mov     edi, 2", "mov     [eax], ebp", "jmp     loc_130A7"], ["cmp     edx, 3; jumptable 00013328 case 7", "jle     loc_13BD7"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+168h]", "test    eax, eax", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+150h]", "test    eax, eax", "jz      _L1614; jumptable 0001306A cases 0,1,8"], ["add     ebp, 4", "jmp     loc_1332B"], ["cmp     edx, 2; jumptable 00013328 case 6", "jle     loc_13BD7"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+164h]", "test    eax, eax", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+14Ch]", "test    eax, eax", "jz      _L1614; jumptable 0001306A cases 0,1,8"], ["add     ebp, 3", "jmp     loc_1332B"], ["dec     edx; jumptable 00013328 case 5", "jz      loc_13BD7"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+160h]", "test    eax, eax", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+148h]", "test    eax, eax", "jz      _L1614; jumptable 0001306A cases 0,1,8"], ["add     ebp, 2", "jmp     loc_1332B"], ["mov     edx, [esp+3Ch+var_38]; jumptable 00013328 case 23", "test    edx, edx", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["lea     eax, [ebp+1]", "mov     edx, edi", "sub     edx, eax", "mov     [esp+3Ch+var_34], eax", "test    edx, edx", "jle     loc_13333"], ["xor     eax, eax", "mov     al, [ebp+1]", "mov     al, [esi+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      short _L1702_0; jumptable 000135D2 default case, cases 8-21,23,25-29"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_135D2 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["mov     ecx, edi; jumptable 00013328 case 17"], ["lea     eax, [ebp+1]; jumptable 00013368 case 17", "sub     ecx, eax", "test    ecx, ecx", "jle     loc_13333"], ["cmp     byte ptr [ebp+1], 3Eh ; '>'", "jz      loc_13C10"], ["mov     esi, [esp+3Ch+var_3C]", "xor     edi, edi", "mov     [esi], eax", "jmp     loc_130A7"], ["mov     eax, [esp+3Ch+var_3C]; jumptable 000135D2 default case, cases 8-21,23,25-29", "mov     esi, [esp+3Ch+var_34]", "mov     edi, [esp+3Ch+var_38]", "mov     [eax], esi", "jmp     loc_130A7"], ["add     ebp, 3; jumptable 0001339B cases 22,24"], ["mov     edx, ecx", "sub     edx, ebp", "test    edx, edx", "jle     loc_13333"], ["mov     edi, ecx"], ["xor     eax, eax", "mov     al, [ebp+0]", "mov     al, [esi+eax+48h]", "sub     eax, 5; switch 23 cases", "cmp     al, 16h", "ja      _L1614; jumptable 0001306A cases 0,1,8"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_1363E - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["inc     ebp; jumptable 0001363E cases 22-27"], ["mov     edx, edi", "sub     edx, ebp", "test    edx, edx", "jg      short loc_1361C"], ["jmp     loc_13333"], ["inc     ebp; jumptable 00013368 cases 22,24"], ["mov     edx, ecx", "mov     [esp+3Ch+var_24], ebp", "sub     edx, ebp", "test    edx, edx", "jle     loc_13333"], ["lea     eax, [esp+3Ch+var_24]", "mov     [esp+3Ch+var_38], edx", "xor     edi, edi", "mov     edx, ebp", "mov     [esp+3Ch+var_30], eax", "mov     ebp, ecx"], ["xor     eax, eax", "mov     al, [edx]", "mov     al, [esi+eax+48h]", "sub     eax, 5; switch 23 cases", "cmp     al, 16h", "ja      short _L1732; jumptable 0001368E default case, cases 8,11-13,15-20"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_1368E - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["mov     eax, [esp+3Ch+var_3C]; jumptable 0001368E default case, cases 8,11-13,15-20", "xor     edi, edi", "mov     [eax], edx", "jmp     loc_130A7"], ["inc     edx; jumptable 0001368E cases 22,24-27", "mov     [esp+3Ch+var_24], edx"], ["mov     edx, [esp+3Ch+var_24]", "mov     ecx, ebp", "sub     ecx, edx", "mov     [esp+3Ch+var_38], ecx", "test    ecx, ecx", "jg      short loc_13671"], ["jmp     loc_13333"], ["cmp     [esp+3Ch+var_38], 3; jumptable 0001339B case 7", "mov     [esp+3Ch+var_34], ecx", "jle     loc_13BD7"], ["mov     edx, edi", "mov     eax, esi", "call    dword ptr [esi+168h]", "mov     ecx, [esp+3Ch+var_34]", "test    eax, eax", "jnz     _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["mov     edx, edi", "mov     eax, esi", "mov     [esp+3Ch+var_38], ecx", "call    dword ptr [esi+15Ch]", "test    eax, eax", "jz      _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["add     ebp, 6", "mov     ecx, [esp+3Ch+var_38]", "jmp     loc_1360E"], ["cmp     [esp+3Ch+var_38], 2; jumptable 0001339B case 6", "mov     [esp+3Ch+var_34], ecx", "jle     loc_13BD7"], ["mov     edx, edi", "mov     eax, esi", "call    dword ptr [esi+164h]", "mov     ecx, [esp+3Ch+var_34]", "test    eax, eax", "jnz     _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["mov     edx, edi", "mov     eax, esi", "mov     [esp+3Ch+var_38], ecx", "call    dword ptr [esi+158h]", "test    eax, eax", "jz      _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["add     ebp, 5", "mov     ecx, [esp+3Ch+var_38]", "jmp     loc_1360E"], ["cmp     [esp+3Ch+var_38], 1; jumptable 0001339B case 5", "mov     [esp+3Ch+var_34], ecx", "jz      loc_13BD7"], ["mov     edx, edi", "mov     eax, esi", "call    dword ptr [esi+160h]", "mov     ecx, [esp+3Ch+var_34]", "test    eax, eax", "jnz     _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["mov     edx, edi", "mov     eax, esi", "mov     [esp+3Ch+var_38], ecx", "call    dword ptr [esi+154h]", "test    eax, eax", "jz      _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["add     ebp, 4", "mov     ecx, [esp+3Ch+var_38]", "jmp     loc_1360E"], ["mov     eax, [esp+3Ch+var_3C]; jumptable 0001363E case 11", "inc     ebp", "mov     edi, 5", "mov     [eax], ebp", "jmp     loc_130A7"], ["cmp     edx, 3; jumptable 0001363E case 7", "jle     loc_13BD7"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+168h]", "test    eax, eax", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+150h]", "test    eax, eax", "jz      _L1614; jumptable 0001306A cases 0,1,8"], ["add     ebp, 4", "jmp     loc_13641"], ["cmp     edx, 2; jumptable 0001363E case 6", "jle     loc_13BD7"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+164h]", "test    eax, eax", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+14Ch]", "test    eax, eax", "jz      _L1614; jumptable 0001306A cases 0,1,8"], ["add     ebp, 3", "jmp     loc_13641"], ["dec     edx; jumptable 0001363E case 5", "jz      loc_13BD7"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+160h]", "test    eax, eax", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+148h]", "test    eax, eax", "jz      _L1614; jumptable 0001306A cases 0,1,8"], ["add     ebp, 2", "jmp     loc_13641"], ["add     ebp, 2; jumptable 000135D2 cases 22,24", "mov     [esp+3Ch+var_38], 1", "jmp     loc_1332B"], ["mov     eax, [esp+3Ch+var_24]; jumptable 0001368E cases 9,10,21"], ["inc     eax", "mov     edx, ebp", "sub     edx, eax", "mov     [esp+3Ch+var_24], eax", "test    edx, edx", "jle     loc_13333"], ["xor     edx, edx", "mov     dl, [eax]", "mov     dl, [esi+edx+48h]", "cmp     dl, 0Eh", "jz      _L1737; jumptable 0001368E case 14"], ["cmp     dl, 0Ah", "ja      loc_13C00"], ["cmp     dl, 8", "jbe     loc_135ED"], ["jmp     short loc_1384E"], ["cmp     edx, 3; jumptable 000135D2 case 7", "jle     loc_13BD7"], ["mov     edx, [esp+3Ch+var_34]", "mov     eax, esi", "call    dword ptr [esi+168h]", "test    eax, eax", "jnz     _L1702_0; jumptable 000135D2 default case, cases 8-21,23,25-29"], ["mov     edx, [esp+3Ch+var_34]", "mov     eax, esi", "call    dword ptr [esi+15Ch]", "test    eax, eax", "jz      _L1702_0; jumptable 000135D2 default case, cases 8-21,23,25-29"], ["add     ebp, 5", "mov     [esp+3Ch+var_38], 1", "jmp     loc_1332B"], ["dec     edx; jumptable 000135D2 case 5", "jz      loc_13BD7"], ["mov     edx, [esp+3Ch+var_34]", "mov     eax, esi", "call    dword ptr [esi+160h]", "test    eax, eax", "jnz     _L1702_0; jumptable 000135D2 default case, cases 8-21,23,25-29"], ["mov     edx, [esp+3Ch+var_34]", "mov     eax, esi", "call    dword ptr [esi+154h]", "test    eax, eax", "jz      _L1702_0; jumptable 000135D2 default case, cases 8-21,23,25-29"], ["add     ebp, 3", "mov     [esp+3Ch+var_38], 1", "jmp     loc_1332B"], ["cmp     edx, 2; jumptable 000135D2 case 6", "jle     loc_13BD7"], ["mov     edx, [esp+3Ch+var_34]", "mov     eax, esi", "call    dword ptr [esi+164h]", "test    eax, eax", "jnz     _L1702_0; jumptable 000135D2 default case, cases 8-21,23,25-29"], ["mov     edx, [esp+3Ch+var_34]", "mov     eax, esi", "call    dword ptr [esi+158h]", "test    eax, eax", "jz      _L1702_0; jumptable 000135D2 default case, cases 8-21,23,25-29"], ["add     ebp, 4", "mov     [esp+3Ch+var_38], 1", "jmp     loc_1332B"], ["mov     [esp+3Ch+var_38], ecx; jumptable 00013368 case 7", "cmp     edx, 3", "jle     loc_13BD7"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+168h]", "mov     ecx, [esp+3Ch+var_38]", "test    eax, eax", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["mov     edx, ebp", "mov     eax, esi", "mov     [esp+3Ch+var_38], ecx", "call    dword ptr [esi+15Ch]", "test    eax, eax", "jz      _L1614; jumptable 0001306A cases 0,1,8"], ["add     ebp, 4", "mov     ecx, [esp+3Ch+var_38]", "jmp     loc_1364F"], ["mov     [esp+3Ch+var_38], ecx; jumptable 00013368 case 6", "cmp     edx, 2", "jle     loc_13BD7"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+164h]", "mov     ecx, [esp+3Ch+var_38]", "test    eax, eax", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["mov     edx, ebp", "mov     eax, esi", "mov     [esp+3Ch+var_38], ecx", "call    dword ptr [esi+158h]", "test    eax, eax", "jz      _L1614; jumptable 0001306A cases 0,1,8"], ["add     ebp, 3", "mov     ecx, [esp+3Ch+var_38]", "jmp     loc_1364F"], ["mov     [esp+3Ch+var_38], ecx; jumptable 00013368 case 5", "dec     edx", "jz      loc_13BD7"], ["mov     edx, ebp", "mov     eax, esi", "call    dword ptr [esi+160h]", "mov     ecx, [esp+3Ch+var_38]", "test    eax, eax", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["mov     edx, ebp", "mov     eax, esi", "mov     [esp+3Ch+var_38], ecx", "call    dword ptr [esi+154h]", "test    eax, eax", "jz      _L1614; jumptable 0001306A cases 0,1,8"], ["add     ebp, 2", "mov     ecx, [esp+3Ch+var_38]", "jmp     loc_1364F"], ["mov     eax, [esp+3Ch+var_24]; jumptable 0001368E case 14"], ["lea     edi, [eax+1]", "mov     edx, ebp", "sub     edx, edi", "mov     [esp+3Ch+var_24], edi", "test    edx, edx", "jle     loc_13333"], ["xor     edx, edx", "xor     ecx, ecx", "mov     dl, [eax+1]", "mov     dl, [esi+edx+48h]", "mov     cl, dl", "sub     ecx, 0Ch", "cmp     ecx, 1", "jbe     loc_13C48"], ["cmp     dl, 0Ah", "ja      loc_13BE1"], ["cmp     dl, 8", "jbe     _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["mov     eax, edi", "jmp     short loc_13A16"], ["test    edi, edi; jumptable 0001368E case 23", "jnz     _L1732; jumptable 0001368E default case, cases 8,11-13,15-20"], ["lea     eax, [edx+1]", "mov     ecx, ebp", "sub     ecx, eax", "mov     [esp+3Ch+var_38], eax", "mov     [esp+3Ch+var_24], eax", "mov     [esp+3Ch+var_34], ecx", "test    ecx, ecx", "jle     loc_13333"], ["xor     ecx, ecx", "mov     cl, [edx+1]", "mov     cl, [esi+ecx+48h]", "sub     ecx, 5; switch 25 cases", "cmp     cl, 18h", "ja      _L1752_0; jumptable 00013A9F default case, cases 8-21,23,25-29"], ["and     ecx, 0FFh", "mov     eax, ds:(jpt_13A9F - 2DF78h)[ebx+ecx*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["cmp     [esp+3Ch+var_38], 2; jumptable 0001368E case 6", "jle     loc_13BD7"], ["mov     eax, esi", "call    dword ptr [esi+164h]", "test    eax, eax", "jnz     loc_13DA4"], ["mov     edx, [esp+3Ch+var_24]", "mov     eax, esi", "call    dword ptr [esi+14Ch]", "test    eax, eax", "jz      loc_13DA4"], ["add     [esp+3Ch+var_24], 3", "jmp     loc_136A1"], ["cmp     [esp+3Ch+var_38], 3; jumptable 0001368E case 7", "jle     loc_13BD7"], ["mov     eax, esi", "call    dword ptr [esi+168h]", "test    eax, eax", "jnz     loc_13DA4"], ["mov     edx, [esp+3Ch+var_24]", "mov     eax, esi", "call    dword ptr [esi+150h]", "test    eax, eax", "jz      loc_13DA4"], ["add     [esp+3Ch+var_24], 4", "jmp     loc_136A1"], ["cmp     [esp+3Ch+var_38], 1; jumptable 0001368E case 5", "jz      loc_13BD7"], ["mov     eax, esi", "call    dword ptr [esi+160h]", "test    eax, eax", "jnz     loc_13DA4"], ["mov     edx, [esp+3Ch+var_24]", "mov     eax, esi", "call    dword ptr [esi+148h]", "test    eax, eax", "jz      loc_13DA4"], ["add     [esp+3Ch+var_24], 2", "jmp     loc_136A1"], ["mov     eax, [esp+3Ch+var_3C]; jumptable 00013A9F default case, cases 8-21,23,25-29", "mov     edx, [esp+3Ch+var_38]", "mov     [eax], edx", "jmp     loc_130A7"], ["lea     eax, [ebp+2]", "mov     edx, ecx", "sub     edx, eax", "mov     [esp+3Ch+var_30], eax", "test    edx, edx", "jle     loc_13C39"], ["cmp     byte ptr [ebp+2], 3Eh ; '>'", "jnz     loc_13152"], ["mov     ptr_0, [esp+3Ch+var_3C]", "mov     esi, [esp+3Ch+var_30]", "xor     edi, edi", "mov     [eax], esi", "jmp     loc_130A7"], ["mov     edi, 0FFFFFFFCh", "jmp     loc_130A7"], ["mov     eax, [esp+3Ch+var_3C]; jumptable 00013C8B cases 0-2,8", "xor     edi, edi", "mov     [eax], edx", "jmp     loc_130A7"], ["add     ebp, 3", "sub     ecx, ebp", "cmp     ecx, 5", "jle     loc_13333"], ["lea     eax, (CDATA_LSQB_4052 - 2DF78h)[ebx]; \"CDATA[\"", "mov     dl, 43h ; 'C'", "cmp     [ebp+0], dl", "lea     ecx, [eax+6]", "jnz     _L1614; jumptable 0001306A cases 0,1,8"], ["inc     eax", "inc     ebp", "cmp     eax, ecx", "jz      short loc_13BF1"], ["mov     dl, [eax]", "cmp     [ebp+0], dl", "jz      short loc_13BC5"], ["jmp     _L1614; jumptable 0001306A cases 0,1,8"], ["mov     edi, 0FFFFFFFEh", "jmp     loc_130A7"], ["cmp     dl, 15h", "jnz     _L2000; jumptable 0001310D default case, cases 8-14,18-21,23,25-29"], ["mov     eax, edi", "jmp     loc_13A16"], ["mov     eax, [esp+3Ch+var_3C]", "mov     edi, 8", "mov     [eax], ebp", "jmp     loc_130A7"], ["cmp     dl, 15h", "jz      loc_1384E"], ["jmp     loc_135ED"], ["mov     eax, [esp+3Ch+var_3C]", "add     ebp, 2", "mov     edi, 4", "mov     [eax], ebp", "jmp     loc_130A7"], ["cmp     al, 15h", "jz      loc_1306E"], ["jmp     _L1614; jumptable 0001306A cases 0,1,8"], ["mov     edi, 0FFFFFFFDh", "jmp     loc_130A7"], ["mov     edi, 0FFFFFFFBh", "jmp     loc_130A7"], ["call    __stack_chk_fail_local"], ["add     eax, 2", "mov     byte ptr [esp+3Ch+var_38], dl", "mov     [esp+3Ch+var_24], eax"], ["mov     edx, [esp+3Ch+var_24]", "mov     ecx, ebp", "sub     ecx, edx", "test    ecx, ecx", "jle     loc_13333"], ["xor     eax, eax", "mov     al, [edx]", "mov     al, [esi+eax+48h]", "cmp     byte ptr [esp+3Ch+var_38], al", "jz      loc_13D2A"], ["cmp     al, 8; switch 9 cases", "ja      _L1776_0; jumptable 00013C8B default case, case 4"], ["and     eax, 0FFh", "mov     edi, ds:(jpt_13C8B - 2DF78h)[ebx+eax*4]", "add     edi, ebx", "jmp     edi; switch jump"], ["cmp     ecx, 2; jumptable 00013C8B case 6", "jle     loc_13BD7"], ["mov     eax, esi", "call    dword ptr [esi+164h]", "test    eax, eax", "jnz     loc_13DA4"], ["add     [esp+3Ch+var_24], 3", "jmp     short loc_13C53"], ["dec     ecx; jumptable 00013C8B case 5", "jz      loc_13BD7"], ["mov     eax, esi", "call    dword ptr [esi+160h]", "test    eax, eax", "jnz     loc_13DA4"], ["add     [esp+3Ch+var_24], 2", "jmp     short loc_13C53"], ["sub     esp, 0Ch; jumptable 00013C8B case 3", "inc     edx; ptr", "mov     ecx, ebp; end", "mov     eax, esi; enc", "push    [esp+48h+var_30]; nextTokPtr", "call    normal_scanRef", "add     esp, 10h", "mov     edi, eax", "test    eax, eax", "jg      loc_13C53"], ["jnz     loc_130A7"], ["mov     esi, [esp+3Ch+var_3C]", "mov     eax, [esp+3Ch+var_24]", "mov     [esi], eax", "jmp     loc_130A7"], ["cmp     ecx, 3; jumptable 00013C8B case 7", "jle     loc_13BD7"], ["mov     eax, esi", "call    dword ptr [esi+168h]", "test    eax, eax", "jnz     loc_13DA4"], ["add     [esp+3Ch+var_24], 4", "jmp     loc_13C53"], ["inc     edx; jumptable 00013C8B default case, case 4", "mov     [esp+3Ch+var_24], edx", "jmp     loc_13C53"], ["lea     eax, [edx+1]", "mov     ecx, ebp", "sub     ecx, eax", "mov     [esp+3Ch+var_24], eax", "test    ecx, ecx", "jle     loc_13333"], ["xor     ecx, ecx", "mov     cl, [edx+1]", "mov     edx, ecx", "mov     dl, [esi+edx+48h]", "cmp     dl, 11h", "jz      _L1990; jumptable 00013DFC case 17"], ["ja      loc_13DFE"], ["cmp     dl, 0Ah", "jbe     short loc_13DB4"], ["cmp     dl, 0Bh", "jnz     loc_135ED"], ["mov     eax, [esp+3Ch+var_24]; jumptable 00013DFC case 11", "mov     esi, [esp+3Ch+var_3C]", "inc     eax", "mov     edi, 1", "mov     [esi], eax", "jmp     loc_130A7"], ["cmp     edi, 3; jumptable 00013DFC case 7", "jle     loc_13BD7"], ["mov     eax, esi", "call    dword ptr [esi+168h]", "mov     edi, eax", "test    eax, eax", "jnz     short loc_13DA4"], ["mov     edx, [esp+3Ch+var_24]", "mov     eax, esi", "call    dword ptr [esi+15Ch]", "test    eax, eax", "jnz     loc_13B09"], ["mov     esi, [esp+3Ch+var_3C]", "mov     eax, [esp+3Ch+var_24]", "xor     edi, edi", "mov     [esi], eax", "jmp     loc_130A7"], ["cmp     dl, 8", "jbe     loc_135ED"], ["mov     eax, [esp+3Ch+var_24]; jumptable 00013DFC cases 9,10,21", "mov     edi, ebp", "mov     [esp+3Ch+var_38], eax", "lea     edx, [eax+1]", "sub     edi, edx", "mov     [esp+3Ch+var_24], edx", "test    edi, edi", "jle     loc_13333"], ["mov     ecx, eax", "xor     eax, eax", "mov     al, [ecx+1]", "mov     al, [esi+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      _L1795_0; jumptable 00013C8B cases 0-2,8"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_13DFC - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["cmp     dl, 15h", "jz      short _L1794; jumptable 00013DFC cases 9,10,21"], ["jmp     loc_135ED"], ["mov     eax, [esp+3Ch+var_24]; jumptable 00013DFC case 17", "mov     ecx, ebp", "lea     edx, [eax+1]", "sub     ecx, edx", "mov     [esp+3Ch+var_24], edx", "test    ecx, ecx", "jle     loc_13333"], ["cmp     byte ptr [eax+1], 3Eh ; '>'", "jnz     _L1795_0; jumptable 00013C8B cases 0-2,8"], ["mov     esi, [esp+3Ch+var_3C]", "add     eax, 2", "mov     edi, 3", "mov     [esi], eax", "jmp     loc_130A7"], ["mov     ecx, [esp+3Ch+var_38]; jumptable 00013DFC cases 22,24", "xor     edi, edi", "add     ecx, 2", "mov     [esp+3Ch+var_24], ecx", "jmp     loc_136A1"], ["cmp     edi, 2; jumptable 00013DFC case 6", "jle     loc_13BD7"], ["mov     eax, esi", "call    dword ptr [esi+164h]", "mov     edi, eax", "test    eax, eax", "jnz     loc_13DA4"], ["mov     edx, [esp+3Ch+var_24]", "mov     eax, esi", "call    dword ptr [esi+158h]", "test    eax, eax", "jnz     loc_13AD0"], ["jmp     loc_13DA4"], ["dec     edi; jumptable 00013DFC case 5", "jz      loc_13BD7"], ["mov     eax, esi", "call    dword ptr [esi+160h]", "mov     edi, eax", "test    eax, eax", "jnz     loc_13DA4"], ["mov     edx, [esp+3Ch+var_24]", "mov     eax, esi", "call    dword ptr [esi+154h]", "test    eax, eax", "jnz     loc_13B42"], ["jmp     loc_13DA4"], ["add     edx, 2; jumptable 00013A9F cases 22,24", "mov     edi, 1", "mov     [esp+3Ch+var_24], edx", "jmp     loc_136A1"], ["cmp     [esp+3Ch+var_34], 1; jumptable 00013A9F case 5", "jz      loc_13BD7"], ["mov     edx, [esp+3Ch+var_38]", "mov     eax, esi", "call    dword ptr [esi+160h]", "test    eax, eax", "jnz     loc_13CEF"], ["mov     edx, [esp+3Ch+var_24]", "mov     eax, esi", "call    dword ptr [esi+154h]", "test    eax, eax", "jz      loc_13CEF"], ["add     [esp+3Ch+var_24], 2", "mov     edi, 1", "jmp     loc_136A1"], ["cmp     [esp+3Ch+var_34], 3; jumptable 00013A9F case 7", "jle     loc_13BD7"], ["mov     edx, [esp+3Ch+var_38]", "mov     eax, esi", "call    dword ptr [esi+168h]", "test    eax, eax", "jnz     loc_13CEF"], ["mov     edx, [esp+3Ch+var_24]", "mov     eax, esi", "call    dword ptr [esi+15Ch]", "test    eax, eax", "jz      loc_13CEF"], ["add     [esp+3Ch+var_24], 4", "mov     edi, 1", "jmp     loc_136A1"], ["cmp     [esp+3Ch+var_34], 2; jumptable 00013A9F case 6", "jle     loc_13BD7"], ["mov     edx, [esp+3Ch+var_38]", "mov     eax, esi", "call    dword ptr [esi+164h]", "test    eax, eax", "jnz     loc_13CEF"], ["mov     edx, [esp+3Ch+var_24]", "mov     eax, esi", "call    dword ptr [esi+158h]", "test    eax, eax", "jz      loc_13CEF"], ["add     [esp+3Ch+var_24], 3", "mov     edi, 1", "jmp     loc_136A1"]], "normal_prologTok": [["push    ebp", "push    edi", "push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "sub     esp, 1Ch", "mov     ebx, [esp+2Ch+ptr]", "mov     ebp, [esp+2Ch+end]", "mov     eax, [esp+2Ch+nextTokPtr]", "mov     edi, [esp+2Ch+enc]", "mov     [esp+2Ch+var_28], eax", "cmp     ebx, ebp", "jnb     loc_14A58"], ["xor     eax, eax", "mov     al, [ebx]", "cmp     byte ptr [edi+eax+48h], 24h; switch 37 cases", "ja      short _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["xor     ecx, ecx", "mov     cl, [edi+eax+48h]", "mov     eax, ecx", "mov     edx, ds:(jpt_13FDA - 2DF78h)[esi+eax*4]", "add     edx, esi", "jmp     edx; switch jump"], ["dec     edx; jumptable 000149FB case 30", "jz      loc_14A16"], ["xor     eax, eax", "mov     al, [ebx+1]", "mov     cl, [edi+eax+48h]", "cmp     cl, 1Eh", "ja      _L2047; jumptable 000149FB cases 9,10,21"], ["mov     eax, 1", "shl     eax, cl", "test    eax, 40200600h", "jz      _L2047; jumptable 000149FB cases 9,10,21"], ["mov     eax, [esp+2Ch+var_28]; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34", "mov     [eax], ebx", "xor     ebx, ebx"], ["add     esp, 1Ch", "mov     eax, ebx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     ecx, [ebx+1]; jumptable 00013FDA cases 23,25-27", "mov     ebx, 13h"], ["mov     edx, ebp", "sub     edx, ptr_0", "test    edx, edx", "jle     loc_140EF"], ["mov     [esp+2Ch+var_20], ebp", "mov     ebp, ptr_0"], ["xor     eax, eax", "mov     al, [ptr_0+0]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      short _L2476; jumptable 00014058 default case, cases 8,12-14,16-19,28,29,31"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14058 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["mov     [esp+2Ch+var_24], ptr_0; jumptable 00014058 cases 9-11,20,21,30,32,35,36"], ["mov     eax, [esp+2Ch+var_28]", "mov     edi, [esp+2Ch+var_24]", "mov     [eax], edi", "jmp     short loc_1400F"], ["lea     esi, [ebx+1]; jumptable 00013FDA cases 10,21"], ["mov     eax, ebp", "sub     eax, esi", "test    eax, eax", "jle     loc_14A62"], ["xor     eax, eax", "mov     al, [ebx+1]", "mov     al, [edi+eax+48h]", "cmp     al, 0Ah", "jz      loc_1494B"], ["cmp     al, 15h", "jz      loc_1494B"], ["cmp     al, 9", "jz      loc_14940"], ["mov     eax, [esp+2Ch+var_28]", "mov     ebx, 0Fh", "mov     [eax], ptr_0", "jmp     loc_1400F"], ["lea     ecx, [ebx+1]; jumptable 00013FDA cases 22,24", "mov     ebx, 12h", "jmp     loc_14028"], ["mov     ecx, ptr_0; jumptable 00014058 default case, cases 8,12-14,16-19,28,29,31"], ["mov     [esp+2Ch+var_24], ptr_0"], ["mov     eax, [esp+2Ch+var_28]; ju", "mov     edi, [esp+2Ch+var_24]", "xor     ebx, ebx", "mov     [eax], edi", "jmp     loc_1400F"], ["mov     ebp, [esp+2Ch+var_24]; jumptable 00014E1E cases 22,24-27", "mov     ebx, 29h ; ')'"], ["inc     ebp; jumptable 00014058 cases 22,24-27", "mov     edx, [esp+2Ch+var_20]", "sub     edx, ptr_0"], ["test    edx, edx", "jg      loc_1403A"], ["neg     tok", "jmp     loc_1400F"], ["mov     eax, [esp+2Ch+var_28]; jumptable 00013FDA case 12", "lea     ecx, [ebx+1]; ptr", "mov     [esp+2Ch+ptr], eax; nextTokPtr", "mov     [esp+2Ch+enc], ebp; end", "mov     edx, edi; enc", "mov     eax, 0Ch; open"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "jmp     normal_scanLit"], ["mov     eax, [esp+2Ch+var_28]; jumptable 00013FDA case 11", "inc     ebx", "mov     [eax], ebx", "mov     ebx, 11h", "jmp     loc_1400F"], ["mov     eax, ebp; jumptable 00013FDA case 6", "sub     eax, ebx", "cmp     eax, 2", "jle     loc_14EE3"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+164h]", "test    eax, eax", "jnz     _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+158h]", "test    eax, eax", "jz      loc_14968"], ["lea     ecx, [ebx+3]", "mov     ebx, 12h", "jmp     loc_14028"], ["mov     eax, ebp; jumptable 00013FDA case 5", "sub     eax, ebx", "dec     eax", "jle     loc_14EE3"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+160h]", "test    eax, eax", "jnz     _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+154h]", "test    eax, eax", "jz      loc_14988"], ["lea     ecx, [ebx+2]", "mov     ebx, 12h", "jmp     loc_14028"], ["lea     eax, [ebx+1]; jumptable 00013FDA case 4", "sub     ebp, ptr_0", "test    ebp, ebp", "jle     loc_14F10"], ["cmp     byte ptr [ebx+1], 5Dh ; ']'", "jnz     short loc_141DC"], ["dec     ebp", "jz      loc_14A16"], ["cmp     byte ptr [ebx+2], 3Eh ; '>'", "jz      loc_14ED0"], ["mov     edi, [esp+2Ch+var_28]", "mov     ebx, 1Ah", "mov     [edi], ptr_0", "jmp     loc_1400F"], ["lea     esi, [ebx+1]; jumptable 00013FDA case 9", "cmp     esi, ebp", "jnz     loc_14073"], ["mov     eax, [esp+2Ch+var_28]", "mov     ebx, 0FFFFFFF1h", "mov     [eax], ebp", "jmp     loc_1400F"], ["mov     eax, ebp; jumptable 00013FDA case 7", "sub     eax, ebx", "cmp     eax, 3", "jle     loc_14EE3"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+168h]", "test    eax, eax", "jnz     _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+15Ch]", "test    eax, eax", "jz      loc_149A8"], ["lea     ecx, [ebx+4]", "mov     ebx, 12h", "jmp     loc_14028"], ["lea     edx, [ebx+1]; jumptable 00013FDA case 19", "mov     ecx, ebp", "sub     ecx, edx", "mov     [esp+2Ch+var_24], ecx", "test    ecx, ecx", "jle     loc_14A16"], ["xor     eax, eax", "mov     al, [ebx+1]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      _L2040; jumptable 00014285 default case, cases 8-21,23,25-29"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14285 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["mov     eax, [esp+2Ch+var_28]; jumptable 00013FDA case 13", "lea     ecx, [ebx+1]", "mov     [esp+2Ch+ptr], eax", "mov     [esp+2Ch+enc], ebp", "mov     edx, edi", "mov     eax, 0Dh", "jmp     loc_1410E"], ["lea     edx, [ebx+1]; jumptable 00013FDA case 32", "sub     ebp, ptr_0", "test    ebp, ebp", "jle     loc_14F06"], ["xor     eax, eax", "mov     al, [ebx+1]", "mov     al, [edi+eax+48h]", "sub     eax, 9; switch 28 cases", "cmp     al, 1Bh", "ja      _L2040; jumptable 00014285 default case, cases 8-21,23,25-29"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_142D7 - 2DF78h)[esi+eax*4]", "add     esi, ecx", "jmp     esi; switch jump"], ["mov     eax, [esp+2Ch+var_28]; jumptable 00013FDA case 20", "inc     ebx", "mov     [eax], ebx", "mov     ebx, 19h", "jmp     loc_1400F"], ["mov     eax, [esp+2Ch+var_28]; jumptable 00013FDA case 36", "inc     ebx", "mov     [eax], ebx", "mov     ebx, 15h", "jmp     loc_1400F"], ["mov     eax, [esp+2Ch+var_28]; jumptable 00013FDA case 35", "inc     ebx", "mov     [eax], ebx", "mov     ebx, 26h ; '&'", "jmp     loc_1400F"], ["lea     edx, [ebx+1]; jumptable 00013FDA case 2", "mov     eax, ebp", "sub     eax, ptr_0", "test    eax, eax", "jle     loc_14A16"], ["xor     eax, eax", "mov     al, [ebx+1]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      short _L2040; jumptable 00014285 default case, cases 8-21,23,25-29"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14355 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["mov     eax, [esp+2Ch+var_28]; jumptable 00013FDA case 31", "inc     ebx", "mov     [eax], ebx", "mov     ebx, 17h", "jmp     loc_1400F"], ["mov     eax, [esp+2Ch+var_28]; jumptable 00013FDA case 30", "lea     edx, [ebx+1]; ptr", "mov     [esp+2Ch+enc], eax; nextTokPtr", "add     esp, 1Ch", "mov     ecx, ebp; end", "mov     eax, edi; enc", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "jmp     normal_scanPercent"], ["mov     eax, [esp+2Ch+var_28]; jumptable 00014285 default case, cases 8-21,23,25-29"], ["mov     [eax], edx", "xor     ebx, ebx", "jmp     loc_1400F"], ["mov     eax, [esp+2Ch+var_28]; jumptable 000142D7 cases 9-11,21,32,35,36", "mov     ebx, 18h", "mov     [eax], ptr_0", "jmp     loc_1400F"], ["mov     eax, [esp+2Ch+var_28]; jumptable 00014355 cases 5-7,22,24,29", "mov     [eax], ebx", "mov     ebx, 1Dh", "jmp     loc_1400F"], ["mov     ebp, [esp+2Ch+var_24]; jumptable 00014E1E case 6", "mov     ebx, 29h ; ')'"], ["cmp     edx, 2; jumptable 00014058 case 6", "jle     loc_14EE3"], ["mov     edx, ebp", "mov     eax, edi", "call    dword ptr [edi+164h]", "test    eax, eax", "jnz     loc_14EED"], ["mov     edx, ebp", "mov     eax, edi", "call    dword ptr [edi+14Ch]", "test    eax, eax", "jz      loc_14EED"], ["add     ebp, 3", "mov     edx, [esp+2Ch+var_20]", "sub     edx, ptr_0", "jmp     loc_140E7"], ["mov     ebp, [esp+2Ch+var_24]; jumptable 00014E1E case 5", "mov     ebx, 29h ; ')'"], ["dec     edx; jumptable 00014058 case 5", "jz      loc_14EE3"], ["mov     edx, ebp", "mov     eax, edi", "call    dword ptr [edi+160h]", "test    eax, eax", "jnz     loc_14EED"], ["mov     edx, ebp", "mov     eax, edi", "call    dword ptr [edi+148h]", "test    eax, eax", "jz      loc_14EED"], ["add     ebp, 2", "mov     edx, [esp+2Ch+var_20]", "sub     edx, ptr_0", "jmp     loc_140E7"], ["mov     ebp, [esp+2Ch+var_24]; jumptable 00014E1E case 7", "mov     ebx, 29h ; ')'"], ["cmp     edx, 3; jumptable 00014058 case 7", "jle     loc_14EE3"], ["mov     edx, ebp", "mov     eax, edi", "call    dword ptr [edi+168h]", "test    eax, eax", "jnz     loc_14EED"], ["mov     edx, ebp", "mov     eax, edi", "call    dword ptr [edi+150h]", "test    eax, eax", "jz      loc_14EED"], ["add     ebp, 4", "mov     edx, [esp+2Ch+var_20]", "sub     edx, ptr_0", "jmp     loc_140E7"], ["mov     ecx, ptr_0; jumptable 00014058 case 15", "cmp     tok, 13h", "jz      loc_140C2"], ["mov     eax, [esp+2Ch+var_28]", "lea     ebx, [ecx+1]", "mov     [eax], ebx", "mov     ebx, 1Eh", "jmp     loc_1400F"], ["mov     ecx, ptr_0; jumptable 00014058 case 34", "cmp     tok, 13h", "jz      loc_140C2"], ["mov     eax, [esp+2Ch+var_28]", "lea     ebx, [ecx+1]", "mov     [eax], ebx", "mov     ebx, 20h ; ' '", "jmp     loc_1400F"], ["lea     eax, [ptr_0+1]; jumptable 00014058 case 23", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "cmp     tok, 12h", "jz      loc_14A74"], ["mov     ebp, ptr_0", "cmp     tok, 29h ; ')'", "jnz     loc_140E7"], ["test    edx, edx", "jle     loc_14F23"], ["mov     ecx, [esp+2Ch+var_24]", "xor     eax, eax", "mov     al, [ecx]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14514 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["mov     ebx, 13h; jumptable 00014514 cases 9-11,20,21,30,32,35,36", "jmp     loc_14064"], ["mov     ecx, ptr_0; jumptable 00014058 case 33", "cmp     tok, 13h", "jz      loc_140C2"], ["mov     eax, [esp+2Ch+var_28]", "lea     ebx, [ecx+1]", "mov     [eax], ebx", "mov     ebx, 1Fh", "jmp     loc_1400F"], ["dec     edx; jumptable 00014599 case 5", "jz      loc_14EE3"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+160h]", "test    eax, eax", "jnz     _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+148h]", "test    eax, eax", "jz      _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["add     ebx, 2; jumptable 00014285 cases 22,24"], ["mov     edx, ebp", "sub     edx, ebx", "test    edx, edx", "jle     loc_14EFC"], ["xor     eax, eax", "mov     al, [ebx]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14599 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["mov     eax, [esp+2Ch+var_28]; jumptable 00014599 cases 9-11,21,30,32,36", "mov     [eax], ebx", "mov     ebx, 14h", "jmp     loc_1400F"], ["inc     ebx; jumptable 00014599 cases 22,24-27", "jmp     short loc_1456C"], ["mov     eax, [esp+2Ch+var_28]; jumptable 00014355 case 15", "lea     ptr_0, [ebx+2]; ptr", "mov     [esp+2Ch+enc], eax; nextTokPtr", "add     esp, 1Ch", "mov     ecx, ebp; end", "mov     eax, edi; enc", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "jmp     normal_scanPi"], ["lea     ptr_0, [ebx+2]; jumptable 00014355 case 16", "mov     eax, ebp", "sub     eax, edx", "test    eax, eax", "jle     loc_14A16"], ["xor     eax, eax", "mov     al, [ebx+2]", "mov     al, [edi+eax+48h]", "cmp     al, 18h", "jz      loc_149CF"], ["ja      loc_14A1E"], ["cmp     al, 14h", "jnz     loc_149C7"], ["mov     eax, [esp+2Ch+var_28]", "add     ebx, 3", "mov     [eax], ebx", "mov     ebx, 21h ; '!'", "jmp     loc_1400F"], ["cmp     [esp+2Ch+var_24], 3; jumptable 00014285 case 7", "jle     loc_14EE3"], ["mov     eax, edi", "mov     [esp+2Ch+var_24], edx", "call    dword ptr [edi+168h]", "mov     edx, [esp+2Ch+var_24]", "test    eax, eax", "jnz     _L2040; jumptable 00014285 default case, cases 8-21,23,25-29"], ["mov     eax, edi", "mov     [esp+2Ch+var_24], edx", "call    dword ptr [edi+15Ch]", "mov     edx, [esp+2Ch+var_24]", "test    eax, eax", "jz      _L2040; jumptable 00014285 default case, cases 8-21,23,25-29"], ["add     ebx, 5", "jmp     loc_1456C"], ["cmp     [esp+2Ch+var_24], 1; jumptable 00014285 case 5", "jz      loc_14EE3"], ["mov     eax, edi", "mov     [esp+2Ch+var_24], edx", "call    dword ptr [edi+160h]", "mov     edx, [esp+2Ch+var_24]", "test    eax, eax", "jnz     _L2040; jumptable 00014285 default case, cases 8-21,23,25-29"], ["mov     eax, edi", "mov     [esp+2Ch+var_24], edx", "call    dword ptr [edi+154h]", "mov     edx, [esp+2Ch+var_24]", "test    eax, eax", "jz      _L2040; jumptable 00014285 default case, cases 8-21,23,25-29"], ["add     ebx, 3", "jmp     loc_1456C"], ["cmp     [esp+2Ch+var_24], 2; jumptable 00014285 case 6", "jle     loc_14EE3"], ["mov     eax, edi", "mov     [esp+2Ch+var_24], edx", "call    dword ptr [edi+164h]", "mov     edx, [esp+2Ch+var_24]", "test    eax, eax", "jnz     _L2040; jumptable 00014285 default case, cases 8-21,23,25-29"], ["mov     eax, edi", "mov     [esp+2Ch+var_24], edx", "call    dword ptr [edi+158h]", "mov     edx, [esp+2Ch+var_24]", "test    eax, eax", "jz      _L2040; jumptable 00014285 default case, cases 8-21,23,25-29"], ["add     ebx, 4", "jmp     loc_1456C"], ["mov     eax, [esp+2Ch+var_28]; jumptable 000142D7 case 33", "add     ebx, 2", "mov     [eax], ebx", "mov     ebx, 24h ; '$'", "jmp     loc_1400F"], ["mov     eax, [esp+2Ch+var_28]; jumptable 000142D7 case 15", "add     ebx, 2", "mov     [eax], ebx", "mov     ebx, 23h ; '#'", "jmp     loc_1400F"], ["mov     eax, [esp+2Ch+var_28]; jumptable 000142D7 case 34", "add     ebx, 2", "mov     [eax], ebx", "mov     ebx, 25h ; '%'", "jmp     loc_1400F"], ["mov     eax, [esp+2Ch+var_24]; jumptable 00014514 cases 22,24-27", "mov     edx, [esp+2Ch+var_20]", "lea     ebp, [eax+1]", "sub     edx, ptr_0", "test    edx, edx", "jle     loc_14F23"], ["mov     ecx, [esp+2Ch+var_24]", "xor     eax, eax", "mov     al, [ecx+1]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2476; jumptable 00014058 default case, cases 8,12-14,16-19,28,29,31"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14747 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     edx, 3; jumptable 00014599 case 7", "jle     loc_14EE3"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+168h]", "test    eax, eax", "jnz     _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+150h]", "test    eax, eax", "jnz     loc_146CB"], ["jmp     _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["cmp     edx, 2; jumptable 00014599 case 6", "jle     loc_14EE3"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+164h]", "test    eax, eax", "jnz     _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+14Ch]", "test    eax, eax", "jnz     loc_14688"], ["jmp     _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["mov     eax, [esp+2Ch+var_24]; jumptable 00014514 case 23", "mov     edx, [esp+2Ch+var_20]", "lea     ebp, [eax+1]", "sub     edx, ptr_0", "test    edx, edx", "jle     loc_14F23"], ["mov     ecx, eax", "xor     eax, eax", "mov     al, [ecx+1]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2476; jumptable 00014058 default case, cases 8,12-14,16-19,28,29,31"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_147EB - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     edx, 2; jumptable 00014514 case 6", "jle     loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+164h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+14Ch]", "test    eax, eax", "jz      loc_14F7D"], ["lea     ebp, [ebx+3]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, ptr_0", "test    edx, edx", "jle     loc_14F23"], ["xor     eax, eax", "mov     al, [ebx+3]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2476; jumptable 00014058 default case, cases 8,12-14,16-19,28,29,31"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14851 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["dec     edx; jumptable 00014514 case 5", "jz      loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+160h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+148h]", "test    eax, eax", "jz      loc_14F7D"], ["lea     ebp, [ebx+2]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, ptr_0", "test    edx, edx", "jle     loc_14F23"], ["xor     eax, eax", "mov     al, [ebx+2]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2476; jumptable 00014058 default case, cases 8,12-14,16-19,28,29,31"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_148B5 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     edx, 3; jumptable 00014514 case 7", "jle     loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+168h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+150h]", "test    eax, eax", "jz      loc_14F7D"], ["lea     ebp, [ebx+4]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, ptr_0", "test    edx, edx", "jle     loc_14F23"], ["xor     eax, eax", "mov     al, [ebx+4]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2476; jumptable 00014058 default case, cases 8,12-14,16-19,28,29,31"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_1491B - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["mov     [esp+2Ch+var_24], ptr_0; jumptable 00014747 cases 9-11,20,21,30,32,35,36", "mov     ebx, 13h", "jmp     loc_14064"], ["mov     ebp, [esp+2Ch+var_24]; jumptable 00014AEC cases 22,24-27"], ["mov     ebx, 13h; jumptable 00014747 cases 22,24-27", "jmp     _L2104; jumptable 00014058 cases 22,24-27"], ["add     ebx, 2", "cmp     ebp, ebx", "jz      loc_140A0"], ["lea     eax, [ptr_0+1]", "mov     edx, ebp", "sub     edx, ptr_0", "mov     ebx, esi", "test    edx, edx", "jle     loc_14A64"], ["mov     esi, ptr_0", "jmp     loc_1407F"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+14Ch]", "test    eax, eax", "jz      _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["lea     ecx, [ebx+3]", "mov     ebx, 13h", "jmp     loc_14028"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+148h]", "test    eax, eax", "jz      _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["lea     ecx, [ebx+2]", "mov     ebx, 13h", "jmp     loc_14028"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+150h]", "test    eax, eax", "jz      _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["lea     ecx, [ebx+4]", "mov     ebx, 13h", "jmp     loc_14028"], ["cmp     al, 16h", "jnz     _L2040; jumptable 00014285 default case, cases 8-21,23,25-29"], ["add     ebx, 3", "mov     edx, ebp", "sub     edx, ebx", "test    edx, edx", "jle     short loc_14A16"], ["xor     eax, eax", "mov     al, [ebx]", "mov     al, [edi+eax+48h]", "sub     eax, 9; switch 22 cases", "cmp     al, 15h", "ja      _L2009; jumptable 00013FDA default case, cases 0,1,3,8,14-18,28,29,33,34"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_149FB - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["mov     eax, [esp+2Ch+var_28]; jumptable 000149FB cases 9,10,21", "mov     [eax], ebx", "mov     ebx, 10h", "jmp     loc_1400F"], ["inc     ebx; jumptable 000149FB cases 22,24", "mov     edx, ebp", "sub     edx, ebx", "test    edx, edx", "jg      short loc_149DA"], ["or      ebx, 0FFFFFFFFh", "jmp     loc_1400F"], ["cmp     al, 1Bh", "jnz     _L2040; jumptable 00014285 default case, cases 8-21,23,25-29"], ["lea     edx, [ebx+3]; ptr", "mov     eax, ebp", "sub     eax, edx", "test    eax, eax", "jle     short loc_14A16"], ["cmp     byte ptr [ebx+3], 2Dh ; '-'", "mov     eax, [esp+2Ch+var_28]", "jnz     loc_14394"], ["mov     [esp+2Ch+enc], eax; nextTokPtr", "add     esp, 1Ch", "mov     ecx, ebp; end", "mov     eax, edi; enc", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "jmp     normal_scanComment"], ["mov     ebx, 0FFFFFFFCh", "jmp     loc_1400F"], ["mov     eax, esi"], ["mov     edi, [esp+2Ch+var_28]", "mov     ebx, 0Fh", "mov     [edi], eax", "jmp     loc_1400F"], ["test    edx, edx", "jle     short loc_14A16"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+1]", "mov     al, [edi+eax+48h]", "lea     ebx, [eax-5]; switch 25 cases", "cmp     bl, 18h", "ja      short _L2201; jumptable 00014A98 default case, cases 8-21,23,28"], ["and     ebx, 0FFh", "mov     ecx, ds:(jpt_14A98 - 2DF78h)[esi+ebx*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["sub     eax, 5; jumptable 00014A98 default case, cases 8-21,23,28", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14AB3 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["lea     eax, [ebp+2]; jumptable 00014AB3 cases 24-27", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_14F23"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+2]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14AEC - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["lea     eax, [ebp+2]; jumptable 00014AB3 case 23", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_14F23"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+2]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14B25 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     edx, 3; jumptable 00014AB3 case 7", "jle     loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+168h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+150h]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+5]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_14F23"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+5]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14B8F - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     edx, 2; jumptable 00014AB3 case 6", "jle     loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+164h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+14Ch]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+4]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_14F23"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+4]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14BF9 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["dec     edx; jumptable 00014AB3 case 5", "jz      loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+160h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+148h]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+3]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_14F23"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+3]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14C61 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["lea     eax, [ebp+2]; jumptable 00014A98 cases 22,24-27", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+2]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14C9F - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["mov     ebx, 29h ; ')'; jumptable 00014C9F cases 9-11,20,21,30,32,35,36", "jmp     loc_14064"], ["cmp     edx, 2; jumptable 00014A98 case 6", "jle     loc_14EE3"], ["mov     edx, [esp+2Ch+var_24]", "mov     eax, edi", "call    dword ptr [edi+164h]", "test    eax, eax", "jnz     _L2098; ju"], ["mov     edx, [esp+2Ch+var_24]", "mov     eax, edi", "call    dword ptr [edi+14Ch]", "test    eax, eax", "jz      _L2098; ju"], ["lea     eax, [ebp+4]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+4]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14D13 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["dec     edx; jumptable 00014A98 case 5", "jz      loc_14EE3"], ["mov     edx, [esp+2Ch+var_24]", "mov     eax, edi", "call    dword ptr [edi+160h]", "test    eax, eax", "jnz     _L2098; ju"], ["mov     edx, [esp+2Ch+var_24]", "mov     eax, edi", "call    dword ptr [edi+148h]", "test    eax, eax", "jz      _L2098; ju"], ["lea     eax, [ebp+3]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+3]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14D7B - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     edx, 3; jumptable 00014A98 case 7", "jle     loc_14EE3"], ["mov     edx, [esp+2Ch+var_24]", "mov     eax, edi", "call    dword ptr [edi+168h]", "test    eax, eax", "jnz     _L2098; ju"], ["mov     edx, [esp+2Ch+var_24]", "mov     eax, edi", "call    dword ptr [edi+150h]", "test    eax, eax", "jz      _L2098; ju"], ["lea     eax, [ebp+5]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+5]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14DE5 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["lea     eax, [ebp+6]; jumptable 00014DE5 cases 22,24-27", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+6]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14E1E - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["lea     eax, [ebp+5]; jumptable 00014D13 cases 22,24-27", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+5]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14E57 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["lea     eax, [ebp+3]; jumptable 00014C9F cases 22,24-27", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+3]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14E90 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["lea     eax, [ebp+4]; jumptable 00014D7B cases 22,24-27", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+4]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_14EC9 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["mov     ptr_0, [esp+2Ch+var_28]", "add     ebx, 3", "mov     [eax], ebx", "mov     ebx, 22h ; '\"'", "jmp     loc_1400F"], ["mov     ebx, 0FFFFFFFEh", "jmp     loc_1400F"], ["mov     ecx, ebp"], ["mov     eax, [esp+2Ch+var_28]", "xor     ebx, ebx", "mov     [eax], ecx", "jmp     loc_1400F"], ["mov     ebx, 0FFFFFFECh", "jmp     loc_1400F"], ["mov     ebx, 0FFFFFFE8h", "jmp     loc_1400F"], ["mov     ebx, 0FFFFFFE6h", "jmp     loc_1400F"], ["mov     ecx, [esp+2Ch+var_24]; jumptable 00014C9F case 15", "jmp     loc_14495"], ["mov     ebx, 13h", "neg     ebx", "jmp     loc_1400F"], ["mov     ecx, [esp+2Ch+var_24]; jumptable 00014C9F case 34", "jmp     loc_144B3"], ["mov     ecx, [esp+2Ch+var_24]; jumptable 00014C9F case 33", "jmp     loc_1452B"], ["lea     eax, [ebp+6]; jumptable 00014DE5 case 23", "mov     edx, [esp+2Ch+var_20]", "mov     [esp+2Ch+var_24], eax", "sub     edx, ptr_0", "jmp     loc_144E7"], ["mov     ebp, [esp+2Ch+var_24]; jumptable 00014AEC case 6"], ["mov     ebx, 13h; jumptable 00014747 case 6", "jmp     _L2108; jumptable 00014058 case 6"], ["mov     ebp, [esp+2Ch+var_24]; jumptable 00014AEC case 5"], ["mov     ebx, 13h; jumptable 00014747 case 5", "jmp     _L2109; jumptable 00014058 case 5"], ["mov     ebp, [esp+2Ch+var_24]; jumptable 00014AEC case 7"], ["mov     ebx, 13h; jumptable 00014747 case 7", "jmp     _L2107; jumptable 00014058 case 7"], ["mov     ecx, [esp+2Ch+var_24]", "jmp     loc_14EEF"], ["mov     ptr_0, [esp+2Ch+var_24]; jumptable 0001491B case 23"], ["add     ebp, 5; jumptable 00014BF9 case 23", "mov     edx, [esp+2Ch+var_20]", "sub     edx, ptr_0", "mov     ebx, 13h", "jmp     loc_140E7"], ["mov     ptr_0, [esp+2Ch+var_24]; jumptable 00014851 case 23"], ["add     ebp, 4; jumptable 00014C61 case 23", "mov     edx, [esp+2Ch+var_20]", "sub     edx, ptr_0", "mov     ebx, 13h", "jmp     loc_140E7"], ["lea     eax, [ebp+4]; jumptable 00014D7B case 23", "mov     edx, [esp+2Ch+var_20]", "mov     [esp+2Ch+var_24], eax", "sub     edx, ptr_0", "jmp     loc_144E7"], ["cmp     edx, 2; jumptable 00014D7B case 6", "jle     loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+164h]", "test    eax, eax", "jnz     short loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+14Ch]", "test    eax, eax", "jz      short loc_14F7D"], ["lea     eax, [ebp+6]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+6]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_15026 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["dec     edx; jumptable 00014D7B case 5", "jz      loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+160h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+148h]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+5]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+5]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_1508E - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     edx, 3; jumptable 00014D7B case 7", "jle     loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+168h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+150h]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+7]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+7]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_150F8 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     edx, 3; jumptable 00014C9F case 7", "jle     loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+168h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+150h]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+6]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     short loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+6]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_1515E - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["mov     ptr_0, [esp+2Ch+var_24]; jumptable 000148B5 case 23", "mov     edx, [esp+2Ch+var_20]", "add     ebp, 3", "mov     ebx, 13h", "sub     edx, ptr_0", "jmp     loc_140E7"], ["mov     ptr_0, [esp+2Ch+var_24]; jumptable 00014747 case 23", "mov     edx, [esp+2Ch+var_20]", "add     ebp, 2", "mov     ebx, 13h", "sub     edx, ptr_0", "jmp     loc_140E7"], ["lea     eax, [ebp+5]; jumptable 00014D13 case 23", "mov     edx, [esp+2Ch+var_20]", "mov     [esp+2Ch+var_24], eax", "sub     edx, ptr_0", "jmp     loc_144E7"], ["lea     eax, [ebp+3]; jumptable 00014C9F case 23", "mov     edx, [esp+2Ch+var_20]", "mov     [esp+2Ch+var_24], eax", "sub     edx, ptr_0", "jmp     loc_144E7"], ["mov     ebx, 29h ; ')'", "neg     ebx", "jmp     loc_1400F"], ["dec     edx; jumptable 00014DE5 case 5", "jz      loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+160h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+148h]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+7]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     short loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+7]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_15220 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     edx, 2; jumptable 00014C9F case 6", "jle     loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+164h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+14Ch]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+5]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+5]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_1528A - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["dec     edx; jumptable 00014C9F case 5", "jz      loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+160h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+148h]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+4]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+4]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_152F2 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     edx, 3; jumptable 00014DE5 case 7", "jle     loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+168h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+150h]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+9]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+9]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_1535C - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     edx, 2; jumptable 00014DE5 case 6", "jle     loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+164h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+14Ch]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+8]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+8]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_153C6 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     edx, 2; jumptable 00014D13 case 6", "jle     loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+164h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+14Ch]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+7]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+7]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_15430 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["dec     edx; jumptable 00014D13 case 5", "jz      loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+160h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+148h]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+6]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+6]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_15498 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["cmp     edx, 3; jumptable 00014D13 case 7", "jle     loc_14EE3"], ["mov     ebx, [esp+2Ch+var_24]", "mov     eax, edi", "mov     edx, ebx", "call    dword ptr [edi+168h]", "test    eax, eax", "jnz     loc_14F7D"], ["mov     edx, ebx", "mov     eax, edi", "call    dword ptr [edi+150h]", "test    eax, eax", "jz      loc_14F7D"], ["lea     eax, [ebp+8]", "mov     edx, [esp+2Ch+var_20]", "sub     edx, eax", "mov     [esp+2Ch+var_24], eax", "test    edx, edx", "jle     loc_151B2"], ["xor     ptr_0, ptr_0", "mov     al, [ebp+8]", "mov     al, [edi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L2098; ju"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_15502 - 2DF78h)[esi+eax*4]", "add     ecx, esi", "jmp     ecx; switch jump"], ["lea     eax, [ebp+9]; jumptable 000153C6 case 23", "mov     edx, [esp+2Ch+var_20]", "mov     [esp+2Ch+var_24], eax", "sub     edx, ptr_0", "jmp     loc_144E7"], ["lea     eax, [ebp+0Ah]; jumptable 0001535C case 23", "mov     edx, [esp+2Ch+var_20]", "mov     [esp+2Ch+var_24], eax", "sub     edx, ptr_0", "jmp     loc_144E7"], ["lea     eax, [ebp+7]; jumptable 00014E1E case 23", "mov     edx, [esp+2Ch+var_20]", "mov     [esp+2Ch+var_24], eax", "sub     edx, ptr_0", "jmp     loc_144E7"], ["add     ebp, 3; jumptable 00014AEC case 23", "mov     edx, [esp+2Ch+var_20]", "sub     edx, ptr_0", "mov     ebx, 13h", "jmp     loc_140E7"], ["add     ebp, 6; jumptable 00014B8F case 23", "mov     edx, [esp+2Ch+var_20]", "sub     edx, ptr_0", "mov     ebx, 13h", "jmp     loc_140E7"], ["lea     eax, [ebp+8]; jumptable 000150F8 case 23", "mov     edx, [esp+2Ch+var_20]", "mov     [esp+2Ch+var_24], eax", "sub     edx, ptr_0", "jmp     loc_144E7"]], "normal_attributeValueTok": [["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 1Ch", "mov     eax, [esp+2Ch+end]", "mov     edx, [esp+2Ch+ptr]", "mov     esi, [esp+2Ch+enc]", "mov     [esp+2Ch+var_20], eax", "mov     edi, [esp+2Ch+nextTokPtr]", "cmp     edx, eax", "jnb     loc_15690"], ["sub     eax, edx", "test    eax, eax", "jle     loc_1569A"], ["mov     eax, edx"], ["xor     ecx, ecx", "mov     cl, [eax]", "cmp     byte ptr [esi+ecx+48h], 15h; switch 22 cases", "ja      short _L2623; jumptable 000155D6 default case, cases 0,1,4,8,11-20"], ["xor     ebx, ebx", "mov     bl, [esi+ecx+48h]", "mov     ecx, ebx", "mov     ebx, ss:(jpt_155D6 - 2DF78h)[ebp+ecx*4]", "add     ebx, ebp", "jmp     ebx; switch jump"], ["inc     eax; jumptable 000155D6 default case, cases 0,1,4,8,11-20"], ["mov     ebx, [esp+2Ch+var_20]", "sub     ebx, eax", "test    ebx, ebx", "jg      short loc_155BA"], ["jmp     short loc_15604"], ["mov     [edi], eax; jumptable 000155D6 case 2", "xor     eax, eax"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     eax, 4; jumptable 000155D6 case 7", "jmp     short loc_155D9"], ["cmp     edx, eax; jumptable 000155D6 case 9", "jz      short loc_15668"], ["mov     [edi], eax", "add     esp, 1Ch", "mov     eax, 6", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     edx, eax; jumptable 000155D6 case 10", "jnz     short loc_15604"], ["inc     edx", "mov     eax, 7", "mov     [edi], edx", "jmp     short loc_155EC"], ["cmp     edx, eax; jumptable 000155D6 case 21", "jnz     short loc_15604"], ["inc     edx", "mov     eax, 27h ; '''", "mov     [edi], edx", "jmp     short loc_155EC"], ["add     eax, 2; jumptable 000155D6 case 5", "jmp     short loc_155D9"], ["cmp     edx, eax; jumptable 000155D6 case 3", "jnz     short loc_15604"], ["mov     [esp+2Ch+enc], edi", "mov     ecx, [esp+2Ch+var_20]", "add     esp, 1Ch", "mov     eax, esi", "inc     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "jmp     normal_scanRef"], ["add     eax, 3; jumptable 000155D6 case 6", "jmp     loc_155D9"], ["lea     eax, [edx+1]", "mov     ebx, [esp+2Ch+var_20]", "sub     ebx, eax", "test    ebx, ebx", "jle     short loc_156A2"], ["xor     ecx, ecx", "mov     cl, [edx+1]", "cmp     byte ptr [esi+ecx+48h], 0Ah", "jnz     short loc_15684"], ["lea     eax, [edx+2]"], ["mov     [edi], eax", "mov     eax, 7", "jmp     loc_155EC"], ["mov     eax, 0FFFFFFFCh", "jmp     loc_155EC"], ["or      eax, 0FFFFFFFFh", "jmp     loc_155EC"], ["mov     eax, 0FFFFFFFDh", "jmp     loc_155EC"]], "normal_entityValueTok": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "sub     esp, 1Ch", "mov     ebx, [esp+2Ch+ptr]", "mov     ecx, [esp+2Ch+end]; end", "mov     eax, [esp+2Ch+nextTokPtr]", "mov     esi, [esp+2Ch+enc]", "mov     [esp+2Ch+var_20], eax", "cmp     ebx, ecx", "jnb     loc_157E1"], ["mov     eax, ecx", "sub     eax, ebx", "test    eax, eax", "jle     loc_157EB"], ["mov     edx, ebx"], ["xor     eax, eax", "mov     al, [edx]", "mov     al, [esi+eax+48h]", "sub     eax, 3; switch 28 cases", "cmp     al, 1Bh", "ja      short _L2649; jumptable 00015709 default case, cases 4,8,11-29"], ["and     eax, 0FFh", "mov     ebp, ds:(jpt_15709 - 2DF78h)[edi+eax*4]", "add     ebp, edi", "jmp     ebp; switch jump"], ["inc     edx; jumptable 00015709 default case, cases 4,8,11-29"], ["mov     eax, ecx", "sub     eax, edx", "test    eax, eax", "jg      short loc_156EC"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+2Ch+var_20]", "mov     [eax], edx", "mov     eax, 6"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     ebx, edx; jumptable 00015709 case 30", "jnz     short loc_15720"], ["sub     esp, 0Ch", "lea     edx, [ebx+1]; ptr", "mov     eax, [esp+38h+var_20]", "push    eax; nextTokPtr", "mov     eax, esi; enc", "call    normal_scanPercent", "add     esp, 10h", "cmp     eax, 16h", "jnz     short loc_1572B"], ["xor     eax, eax", "jmp     short loc_1572B"], ["add     edx, 4; jumptable 00015709 case 7", "jmp     short loc_15711"], ["add     edx, 3; jumptable 00015709 case 6", "jmp     short loc_15711"], ["cmp     ebx, edx; jumptable 00015709 case 10", "jnz     short loc_15720"], ["mov     eax, [esp+2Ch+var_20]", "inc     ebx", "mov     [eax], ebx", "mov     eax, 7", "jmp     short loc_1572B"], ["cmp     ebx, edx; jumptable 00015709 case 9", "jnz     short loc_15720"], ["lea     eax, [ebx+1]", "sub     ecx, eax", "test    ecx, ecx", "jle     short loc_157F3"], ["xor     edx, edx", "mov     dl, [ebx+1]", "cmp     byte ptr [esi+edx+48h], 0Ah", "jnz     short loc_157A4"], ["lea     eax, [ebx+2]"], ["mov     esi, [esp+2Ch+var_20]", "mov     [esi], eax", "add     esp, 1Ch", "mov     eax, 7", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     edx, 2; jumptable 00015709 case 5", "jmp     loc_15711"], ["cmp     ebx, edx; jumptable 00015709 case 3", "jnz     loc_15720"], ["mov     eax, [esp+2Ch+var_20]", "lea     edx, [ebx+1]", "mov     [esp+2Ch+enc], eax", "add     esp, 1Ch", "mov     eax, esi", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "jmp     normal_scanRef"], ["mov     eax, 0FFFFFFFCh", "jmp     loc_1572B"], ["or      eax, 0FFFFFFFFh", "jmp     loc_1572B"], ["mov     eax, 0FFFFFFFDh", "jmp     loc_1572B"]], "normal_predefinedEntityName": [["mov     ecx, [esp+ptr]", "mov     eax, [esp+end]", "sub     eax, ecx", "cmp     eax, 3", "jz      short loc_15820"], ["cmp     eax, 4", "jz      short loc_15860"], ["xor     edx, edx", "cmp     eax, 2", "jz      short loc_15840"], ["mov     eax, edx", "retn"], ["xor     edx, edx", "cmp     byte ptr [ecx], 61h ; 'a'", "jnz     short loc_1581B"], ["cmp     byte ptr [ecx+1], 6Dh ; 'm'", "jnz     short loc_1581B"], ["xor     edx, edx", "cmp     byte ptr [ecx+2], 70h ; 'p'", "setnz   dl", "dec     edx", "and     edx, 26h", "jmp     short loc_1581B"], ["cmp     byte ptr [ptr_0+1], 74h ; 't'", "jnz     short loc_1581B"], ["mov     al, [ptr_0]", "cmp     al, 67h ; 'g'", "jz      short loc_158A8"], ["xor     edx, edx", "cmp     al, 6Ch ; 'l'", "setnz   dl", "dec     edx", "and     edx, 3Ch", "jmp     short loc_1581B"], ["mov     al, [ptr_0]", "xor     edx, edx", "cmp     al, 61h ; 'a'", "jz      short loc_15888"], ["cmp     al, 71h ; 'q'", "jnz     short loc_1581B"], ["cmp     byte ptr [ptr_0+1], 75h ; 'u'", "jnz     short loc_1581B"], ["cmp     byte ptr [ptr_0+2], 6Fh ; 'o'", "jnz     short loc_1581B"], ["xor     edx, edx", "cmp     byte ptr [ptr_0+3], 74h ; 't'", "setnz   dl", "dec     edx", "and     edx, 22h", "jmp     short loc_1581B"], ["cmp     byte ptr [ptr_0+1], 70h ; 'p'", "jnz     short loc_1581B"], ["cmp     byte ptr [ptr_0+2], 6Fh ; 'o'", "jnz     short loc_1581B"], ["xor     edx, edx", "cmp     byte ptr [ptr_0+3], 73h ; 's'", "setnz   dl", "dec     edx", "and     edx, 27h", "jmp     loc_1581B"], ["mov     edx, 3Eh ; '>'", "jmp     loc_1581B"]], "little2_scanComment": [["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "mov     edi, end", "push    esi", "lea     esi, [ptr+2]", "push    ebx", "sub     edi, ptr", "cmp     edi, 1", "push    ebx", "jle     loc_159B0"], ["mov     bl, [edx+3]", "mov     dl, [edx+2]"], ["test    bl, bl", "jnz     short loc_1593D"], ["and     edx, 0FFh", "cmp     byte ptr [enc+edx+48h], 1Bh; switch 28 cases", "ja      short _L2694; jumptable 00015908 default case, cases 2-5,9-26"], ["xor     ebx, ebx", "mov     bl, [enc+edx+48h]", "mov     edx, ebx", "mov     ebx, ss:(jpt_15908 - 2DF78h)[ebp+edx*4]", "add     ebx, ebp", "jmp     ebx; switch jump"], ["inc     bl", "jnz     short _L2694; jumptable 00015908 default case, cases 2-5,9-26"], ["and     edx, 0FFh", "sub     edx, 0FEh", "cmp     edx, 1", "jbe     short _L2697; jumptable 00015908 cases 0,1,8"], ["lea     esi, [esi+0]"], ["add     esi, 2; jumptable 00015908 default case, cases 2-5,9-26"], ["mov     edi, end", "sub     edi, ptr", "cmp     edi, 1", "jle     short loc_159B0"], ["mov     bl, [ptr+1]", "mov     dl, [ptr]", "test    bl, bl", "jz      short loc_158EA"], ["cmp     bl, 0DFh", "ja      short loc_15910"], ["cmp     bl, 0DBh", "ja      short _L2697; jumptable 00015908 cases 0,1,8"], ["add     ebx, 28h ; '('", "cmp     bl, 3", "ja      short _L2694; jumptable 00015908 default case, cases 2-5,9-26"], ["cmp     edi, 3; jumptable 00015908 case 7", "jle     short loc_159B5"], ["add     esi, 4", "jmp     short loc_1592B"], ["mov     enc, [esp+14h+nextTokPtr]; jumptable 00015908 cases 0,1,8", "mov     [eax], esi", "xor     eax, eax"], ["pop     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     edi, 2; jumptable 00015908 case 6", "jz      short loc_159B5"], ["add     esi, 3", "jmp     short loc_1592B"], ["lea     edi, [esi+2]; jumptable 00015908 case 27", "mov     ebx, edi", "mov     [esp+14h+var_14], edi", "mov     edi, end", "sub     edi, ptr", "cmp     edi, 1", "jle     short loc_159B0"], ["mov     bl, [esi+3]", "mov     dl, [esi+2]", "test    bl, bl", "jnz     short loc_159A8"], ["cmp     dl, 2Dh ; '-'", "jz      short loc_159BC"], ["mov     esi, [esp+14h+var_14]", "jmp     loc_158EA"], ["mov     esi, [esp+14h+var_14]", "jmp     loc_158E6"], ["or      eax, 0FFFFFFFFh", "jmp     short loc_15968"], ["mov     enc, 0FFFFFFFEh", "jmp     short loc_15968"], ["lea     enc, [esi+4]", "sub     end, ptr", "dec     ecx", "jle     short loc_159B0"], ["cmp     byte ptr [esi+5], 0", "jnz     short loc_159D0"], ["cmp     byte ptr [esi+4], 3Eh ; '>'", "jz      short loc_159DA"], ["mov     ecx, [esp+14h+nextTokPtr]", "mov     [ecx], ptr", "xor     ptr, ptr", "jmp     short loc_15968"], ["mov     ptr, [esp+14h+nextTokPtr]", "add     esi, 6", "mov     [eax], esi", "mov     eax, 0Dh", "jmp     loc_15968"]], "little2_checkPiTarget": [["push    esi", "push    ebx", "mov     cl, [ptr]", "cmp     cl, 58h ; 'X'", "jz      short loc_15A50"], ["xor     esi, esi", "mov     ebx, 1", "cmp     cl, 78h ; 'x'", "jnz     short loc_15A1D"], ["cmp     byte ptr [eax+3], 0", "mov     ebx, 1", "jnz     short loc_15A1D"], ["mov     cl, [eax+2]", "cmp     cl, 4Dh ; 'M'", "jz      short loc_15A28"], ["cmp     cl, 6Dh ; 'm'", "jz      short loc_15A2D"], ["mov     eax, ebx", "pop     ebx", "pop     esi", "retn"], ["mov     upper, 1"], ["cmp     byte ptr [eax+5], 0", "mov     ebx, 1", "jnz     short loc_15A1D"], ["mov     al, [eax+4]", "cmp     al, 4Ch ; 'L'", "jz      short loc_15A58"], ["cmp     al, 6Ch ; 'l'", "jnz     short loc_15A1D"], ["test    upper, upper", "jnz     short loc_15A58"], ["mov     dword ptr [tokPtr], 0Ch", "jmp     short loc_15A1D"], ["mov     esi, 1", "jmp     short loc_15A05"], ["xor     ebx, ebx", "jmp     short loc_15A1D"]], "little2_scanPi": [["push    ebp", "push    edi", "push    esi", "mov     esi, end_0", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "mov     [esp+4Ch+enc], enc_0; end", "mov     enc_0, ptr", "mov     [esp+4Ch+end], end_0", "sub     esi, eax", "mov     ptr, large gs:14h", "mov     [esp+4Ch+var_20], ptr", "xor     ptr, ptr", "mov     ebp, [esp+4Ch+nextTokPtr]", "cmp     esi, 1", "jle     loc_15C58"], ["mov     dl, [target_0+1]", "mov     cl, [target_0]", "mov     [esp+4Ch+var_3D], cl", "test    dl, dl", "jz      short loc_15AE8"], ["mov     edi, edx", "cmp     dl, 0DFh", "ja      loc_15BC0"], ["cmp     dl, 0DBh", "ja      short _L2742; jumptable 00015B12 default case, cases 8-21,23,25-28"], ["lea     ecx, [edx+28h]", "cmp     cl, 3", "ja      short loc_15B20"], ["cmp     esi, 3; jumptable 00015B12 case 7", "jle     loc_15D2A"], ["mov     [ebp+0], target_0; jumptable 00015B12 default case, cases 8-21,23,25-28", "xor     target_0, target_0"], ["mov     ebx, [esp+4Ch+var_20]", "xor     ebx, large gs:14h", "jnz     loc_15E27"], ["add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edi, ecx", "mov     ecx, [esp+4Ch+enc]", "and     edi, 0FFh", "movzx   edi, byte ptr [ecx+edi+48h]", "sub     edi, 6; switch 24 cases", "mov     ecx, edi", "cmp     cl, 17h", "ja      short _L2742; jumptable 00015B12 default case, cases 8-21,23,25-28"], ["and     edi, 0FFh", "mov     ecx, ds:(jpt_15B12 - 2DF78h)[ebx+edi*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["xor     edi, edi; jumptable 00015B12 case 29", "lea     esi, [esi+0]"], ["and     edi, 0FFh", "mov     cl, [esp+4Ch+var_3D]", "shr     cl, 5", "movzx   esi, ds:(nmstrtPages - 2DF78h)[ebx+edi]", "and     esi, 0FFh", "mov     edi, esi", "mov     esi, ecx", "and     esi, 0FFh", "mov     cl, [esp+4Ch+var_3D]", "lea     esi, [esi+edi*8]", "mov     esi, ds:(namingBitmap - 2DF78h)[ebx+esi*4]", "shr     esi, cl", "and     esi, 1", "jz      _L2742; jumptable 00015B12 default case, cases 8-21,23,25-28"], ["lea     esi, [target_0+2]; jumptable 00015B12 cases 22,24", "mov     edi, [esp+4Ch+end]", "sub     edi, ptr", "cmp     edi, 1", "jle     loc_15C58"], ["lea     ecx, (namePages - 2DF78h)[ebx]", "mov     [esp+4Ch+target], target_0", "mov     [esp+4Ch+var_38], ecx", "lea     ecx, (namingBitmap - 2DF78h)[ebx]", "mov     [esp+4Ch+var_34], ecx"], ["mov     al, [ptr+1]", "mov     cl, [ptr]", "mov     [esp+4Ch+var_3D], cl", "test    al, al", "jz      short loc_15BE8"], ["cmp     al, 0DFh", "ja      loc_15C70"], ["cmp     al, 0DBh", "ja      short _L2756; jumptable 00015C09 default case, cases 5,8,11-14,16-20,23,28"], ["lea     ecx, [eax+28h]", "cmp     cl, 3", "ja      short loc_15C10"], ["cmp     edi, 3; jumptable 00015C09 case 7", "jle     loc_15D2A"], ["mov     [ebp+0], ptr; jumptable 00015C09 default case, cases 5,8,11-14,16-20,23,28", "xor     eax, eax", "jmp     loc_15ACD"], ["cmp     dl, 0FFh", "jnz     loc_15B20"], ["movzx   esi, [esp+4Ch+var_3D]", "and     esi, 0FFh", "sub     esi, 0FEh", "cmp     esi, 1", "jbe     _L2742; jumptable 00015B12 default case, cases 8-21,23,25-28"], ["jmp     loc_15B20"], ["xor     eax, eax", "mov     al, cl", "mov     ecx, [esp+4Ch+enc]", "mov     al, [ecx+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      short _L2756; jumptable 00015C09 default case, cases 5,8,11-14,16-20,23,28"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_15C09 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["xor     eax, eax; jumptable 00015C09 case 29", "lea     ptr, [ptr+0]"], ["and     eax, 0FFh", "mov     edi, [esp+4Ch+var_38]", "xor     ecx, ecx", "mov     cl, [edi+eax]", "mov     al, [esp+4Ch+var_3D]", "shr     al, 5", "mov     edi, [esp+4Ch+var_34]", "and     eax, 0FFh", "lea     eax, [eax+ecx*8]", "mov     cl, [esp+4Ch+var_3D]", "mov     eax, [edi+eax*4]", "shr     eax, cl", "test    al, 1", "jz      _L2756; jumptable 00015C09 default case, cases 5,8,11-14,16-20,23,28"], ["add     ptr, 2; jumptable 00015C09 cases 22,24-27", "mov     edi, [esp+4Ch+end]", "sub     edi, ptr", "cmp     edi, 1", "jg      loc_15B88"], ["lea     esi, [esi+0]"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15ACD"], ["cmp     esi, 2; jumptable 00015B12 case 6", "jnz     _L2742; jumptable 00015B12 default case, cases 8-21,23,25-28"], ["jmp     loc_15D2A"], ["cmp     al, 0FFh", "jnz     short loc_15C10"], ["xor     ecx, ecx", "mov     cl, [esp+4Ch+var_3D]", "sub     ecx, 0FEh", "cmp     ecx, 1", "jbe     _L2756; jumptable 00015C09 default case, cases 5,8,11-14,16-20,23,28"], ["jmp     short loc_15C10"], ["mov     eax, [esp+4Ch+target]; jumptable 00015C09 cases 9,10,21", "mov     ecx, ptr", "sub     ecx, eax", "mov     [esp+4Ch+tok], 0Bh", "cmp     ecx, 6", "jnz     short loc_15CAD"], ["test    dl, dl", "jz      loc_15DF4"], ["lea     edx, [ptr+2]", "mov     edi, [esp+4Ch+end]", "sub     edi, ptr", "cmp     edi, 1", "jle     short loc_15C58"], ["mov     al, [esi+3]", "mov     cl, [esi+2]"], ["test    al, al", "jnz     loc_15D88"], ["and     ecx, 0FFh", "mov     eax, [esp+4Ch+enc]", "cmp     byte ptr [eax+ecx+48h], 0Fh", "ja      short _L2770; jumptable 00015CEB cases 2-5,9-14"], ["mov     esi, eax", "xor     eax, eax", "mov     al, [esi+ecx+48h]", "mov     esi, ds:(jpt_15CEB - 2DF78h)[ebx+eax*4]; switch 16 cases", "add     esi, ebx", "jmp     esi; switch jump"], ["inc     al", "jnz     short _L2770; jumptable 00015CEB cases 2-5,9-14"], ["xor     eax, eax", "mov     al, cl", "sub     eax, 0FEh", "cmp     eax, 1", "jbe     short _L2773; jumptable 00015CEB cases 0,1,8"], ["lea     esi, [esi+0]"], ["add     edx, 2; jumptable 00015CEB cases 2-5,9-14"], ["mov     edi, [esp+4Ch+end]", "sub     edi, ptr", "cmp     edi, 1", "jle     loc_15C58"], ["mov     al, [ptr+1]", "mov     cl, [ptr]", "jmp     short loc_15CC1"], ["cmp     edi, 2; jumptable 00015C09 case 6", "jnz     _L2756; jumptable 00015C09 default case, cases 5,8,11-14,16-20,23,28"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15ACD"], ["mov     eax, [esp+4Ch+target]; jumptable 00015C09 case 15", "mov     ecx, ptr", "sub     ecx, eax", "mov     [esp+4Ch+tok], 0Bh", "cmp     ecx, 6", "jnz     short loc_15D51"], ["test    dl, dl", "jz      loc_15E0D"], ["lea     eax, [ptr+2]", "mov     ecx, [esp+4Ch+end]", "sub     ecx, ptr", "dec     ecx", "jle     loc_15C58"], ["cmp     byte ptr [esi+3], 0", "jnz     short loc_15D6D"], ["cmp     byte ptr [esi+2], 3Eh ; '>'", "jz      short loc_15DE5"], ["mov     esi, ptr", "jmp     _L2756; jumptable 00015C09 default case, cases 5,8,11-14,16-20,23,28"], ["mov     [ebp+0], edx; jumptable 00015CEB cases 0,1,8", "xor     eax, eax", "jmp     loc_15ACD"], ["cmp     al, 0DFh", "ja      loc_15CF0"], ["cmp     al, 0DBh", "ja      short _L2773; jumptable 00015CEB cases 0,1,8"], ["add     eax, 28h ; '('", "cmp     al, 3", "ja      _L2770; jumptable 00015CEB cases 2-5,9-14"], ["cmp     edi, 3; jumptable 00015CEB case 7", "jle     short loc_15D2A"], ["add     edx, 4", "jmp     loc_15D0B"], ["cmp     edi, 2; jumptable 00015CEB case 6", "jz      loc_15D2A"], ["add     edx, 3", "jmp     loc_15D0B"], ["lea     esi, [edx+2]; jumptable 00015CEB case 15", "mov     edi, [esp+4Ch+end]", "sub     edi, ptr", "cmp     edi, 1", "jle     loc_15C58"], ["mov     al, [edx+3]", "mov     cl, [edx+2]", "test    al, al", "jnz     short loc_15E20"], ["cmp     cl, 3Eh ; '>'", "jz      short loc_15E2C"], ["mov     edx, ptr", "jmp     loc_15CC9"], ["add     esi, 4", "mov     ptr, [esp+4Ch+tok]", "mov     [ebp+0], esi", "jmp     loc_15ACD"], ["lea     edx, [esp+4Ch+tok]", "call    little2_checkPiTarget", "test    eax, eax", "jnz     loc_15CAD"], ["mov     [ebp+0], ptr", "jmp     loc_15ACD"], ["lea     edx, [esp+4Ch+tok]", "call    little2_checkPiTarget", "test    eax, eax", "jnz     loc_15D51"], ["jmp     short loc_15E05"], ["mov     edx, ptr", "jmp     loc_15CC1"], ["call    __stack_chk_fail_local"], ["add     edx, 4", "mov     eax, [esp+4Ch+tok]", "mov     [ebp+0], edx", "jmp     loc_15ACD"]], "little2_contentTok": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "mov     eax, [esp+4Ch+enc]", "mov     edi, [esp+4Ch+ptr]", "mov     [esp+4Ch+var_44], eax", "mov     eax, [esp+4Ch+nextTokPtr]", "mov     ebp, [esp+4Ch+end]", "mov     [esp+4Ch+var_3C], eax", "mov     eax, large gs:14h", "mov     [esp+4Ch+var_20], eax", "xor     eax, eax", "cmp     edi, ebp", "jnb     loc_16638"], ["mov     eax, ebp", "sub     eax, edi", "test    al, 1", "jz      short loc_15E92"], ["and     eax, 0FFFFFFFEh", "jz      loc_16652"], ["lea     ebp, [edi+n]"], ["mov     al, [edi+1]", "mov     dl, [edi]", "test    al, al", "jz      short loc_15EC0"], ["cmp     al, 0DFh", "ja      short loc_15EE8"], ["cmp     al, 0DBh", "ja      short _L2837; jumptable 00015EE0 cases 0,1,8"], ["add     eax, 28h ; '('", "cmp     al, 3", "ja      short def_15EE0; jumptable 00015EE0 default case"], ["mov     eax, end_0; jumptable 00015EE0 case 7", "sub     eax, edi", "cmp     eax, 3", "jle     loc_16227"], ["lea     eax, [edi+4]", "jmp     short loc_15F23"], ["and     edx, 0FFh", "mov     esi, [esp+4Ch+var_44]", "cmp     byte ptr [esi+edx+48h], 0Ah; switch 11 cases", "ja      short def_15EE0; jumptable 00015EE0 default case"], ["xor     eax, eax", "mov     al, [esi+edx+48h]", "mov     ecx, ds:(jpt_15EE0 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["inc     al", "jnz     short def_15EE0; jumptable 00015EE0 default case"], ["and     edx, 0FFh", "sub     edx, 0FEh", "cmp     edx, 1", "ja      short def_15EE0; jumptable 00015EE0 default case"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00015EE0 cases 0,1,8", "mov     [eax], edi", "xor     eax, eax"], ["mov     esi, [esp+4Ch+var_20]", "xor     esi, large gs:14h", "jnz     loc_167DA"], ["add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     eax, [edi+2]; jumptable 00015EE0 default case"], ["mov     edi, end_0", "sub     edi, ptr_0", "mov     [esp+4Ch+var_40], edi", "dec     edi", "jle     loc_15FBA"], ["mov     cl, [ptr_0]", "mov     dl, [ptr_0+1]", "mov     byte ptr [esp+4Ch+var_48], cl"], ["test    dl, dl", "jnz     loc_15FD0"], ["xor     ecx, ecx", "mov     esi, [esp+4Ch+var_44]", "mov     cl, byte ptr [esp+4Ch+var_48]", "cmp     byte ptr [esi+ecx+48h], 0Ah; switch 11 cases", "ja      short _L3008; jumptable 00015F63 default case, case 5"], ["xor     edx, edx", "mov     dl, [esi+ecx+48h]", "mov     edi, ds:(jpt_15F63 - 2DF78h)[ebx+edx*4]", "add     edi, ebx", "jmp     edi; switch jump"], ["inc     dl", "jnz     short _L3008; jumptable 00015F63 default case, case 5"], ["xor     ecx, ecx", "mov     cl, byte ptr [esp+4Ch+var_48]", "sub     ecx, 0FEh", "cmp     ecx, 1", "ja      short _L3008; jumptable 00015F63 default case, case 5"], ["lea     esi, [esi+0]"], ["mov     esi, [esp+4Ch+var_3C]; jumptable 00015F63 cases 0-3,8-10", "mov     [esi], ptr_0", "mov     ptr_0, 6", "jmp     loc_15F05"], ["cmp     [esp+4Ch+var_40], 3; jumptable 00015F63 case 4", "jle     short _L3009; jumptable 00015F63 cases 0-3,8-10"], ["cmp     byte ptr [ptr_0+3], 0", "jnz     short _L3008; jumptable 00015F63 default case, case 5"], ["cmp     byte ptr [ptr_0+2], 5Dh ; ']'", "jz      loc_16160"], ["nop"], ["add     ptr_0, 2; jumptable 00015F63 default case, case 5"], ["mov     ecx, end_0", "sub     ecx, ptr_0", "mov     [esp+4Ch+var_40], ecx", "dec     ecx", "jg      loc_15F32"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], ptr_0", "mov     ptr_0, 6", "jmp     loc_15F05"], ["cmp     dl, 0DFh", "ja      short loc_15F68"], ["cmp     dl, 0DBh", "ja      short _L3009; jumptable 00015F63 cases 0-3,8-10"], ["add     edx, 28h ; '('", "cmp     dl, 3", "ja      short _L3008; jumptable 00015F63 default case, case 5"], ["cmp     [esp+4Ch+var_40], 3; jumptable 00015F63 case 7", "jle     loc_16642"], ["add     ptr_0, 4", "jmp     short loc_15FAB"], ["cmp     [esp+4Ch+var_40], 2; jumptable 00015F63 case 6", "jz      loc_1665A"], ["add     ptr_0, 3", "jmp     short loc_15FAB"], ["lea     eax, [edi+2]; jumptable 00015EE0 case 9", "mov     edx, end_0", "sub     edx, ptr_0", "dec     edx", "jle     loc_166FB"], ["cmp     byte ptr [edi+3], 0", "mov     dl, [edi+2]", "jnz     short loc_16033"], ["and     edx, 0FFh", "mov     ebx, [esp+4Ch+var_44]", "cmp     byte ptr [ebx+edx+48h], 0Ah", "jnz     short loc_16033"], ["lea     ptr_0, [edi+4]"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], ptr_0", "mov     ptr_0, 7", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00015EE0 case 10", "add     edi, 2", "mov     [eax], edi", "mov     eax, 7", "jmp     loc_15F05"], ["lea     edx, [edi+2]; jumptable 00015EE0 case 2", "mov     eax, end_0", "sub     eax, edx", "mov     esi, eax", "dec     eax", "jle     loc_16872"], ["mov     al, [edi+3]", "mov     cl, [edi+2]", "mov     byte ptr [esp+4Ch+var_48], cl", "test    al, al", "jnz     loc_16278"], ["xor     eax, eax", "mov     al, cl", "mov     ecx, [esp+4Ch+var_44]", "mov     al, [ecx+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      _L2846; jumptable 000160A7 default case, cases 8-14,18-21,23,25-28"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_160A7 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["sub     esp, 0Ch; jumptable 00015EE0 case 3", "lea     edx, [edi+2]; ptr", "mov     ecx, end_0; end", "mov     eax, [esp+58h+var_3C]", "push    eax; nextTokPtr", "mov     eax, [esp+5Ch+var_44]; enc", "call    little2_scanRef", "add     esp, 10h", "jmp     loc_15F05"], ["mov     eax, end_0; jumptable 00015EE0 case 5", "sub     eax, edi", "dec     eax", "jg      def_15EE0; jumptable 00015EE0 default case"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["mov     eax, end_0; jumptable 00015EE0 case 6", "sub     eax, edi", "cmp     eax, 2", "jle     loc_16781"], ["lea     eax, [edi+3]", "jmp     loc_15F23"], ["lea     eax, [edi+2]; jumptable 00015EE0 case 4", "mov     ecx, end_0", "sub     ecx, ptr_0", "mov     [esp+4Ch+var_40], ecx", "dec     ecx", "jle     loc_1678B"], ["mov     dl, [edi+3]", "mov     cl, [edi+2]", "mov     byte ptr [esp+4Ch+var_48], cl", "test    dl, dl", "jnz     loc_15FD0"], ["cmp     cl, 5Dh ; ']'", "jnz     loc_15F3B"], ["lea     ecx, [edi+4]", "mov     esi, end_0", "sub     esi, ptr_0", "dec     esi", "jle     loc_16A26"], ["cmp     byte ptr [edi+5], 0", "jnz     loc_15F3B"], ["cmp     byte ptr [edi+4], 3Eh ; '>'", "jnz     loc_15F3B"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], ptr_0", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     [esp+4Ch+var_40], 5", "jle     _L3009; jumptable 00015F63 cases 0-3,8-10"], ["cmp     byte ptr [ptr_0+5], 0", "jnz     _L3008; jumptable 00015F63 default case, case 5"], ["cmp     byte ptr [ptr_0+4], 3Eh ; '>'", "jnz     _L3008; jumptable 00015F63 default case, case 5"], ["mov     esi, [esp+4Ch+var_3C]", "add     ptr_0, 4", "mov     [esi], eax", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     al, 0FFh", "jnz     loc_163B0"], ["mov     cl, byte ptr [esp+4Ch+var_48]", "and     ecx, 0FFh", "lea     esi, [ecx-0FEh]", "cmp     esi, 1", "ja      loc_163B0"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 000160A7 default case, cases 8-14,18-21,23,25-28", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["add     edi, 4; jumptable 000160A7 cases 22,24", "mov     eax, end_0", "sub     eax, edi", "mov     [esp+4Ch+var_40], eax", "dec     eax", "jle     loc_16887"], ["lea     esi, (namePages - 2DF78h)[ebx]", "xor     eax, eax", "mov     [esp+4Ch+var_34], esi", "lea     esi, (namingBitmap - 2DF78h)[ebx]", "mov     [esp+4Ch+var_38], esi", "mov     [esp+4Ch+var_48], eax", "mov     esi, [esp+4Ch+var_44]"], ["mov     dl, [edi+1]", "mov     cl, [edi]", "mov     byte ptr [esp+4Ch+var_44], cl", "test    dl, dl", "jnz     loc_16448"], ["xor     edx, edx", "mov     dl, cl", "mov     dl, [esi+edx+48h]", "sub     edx, 5; switch 25 cases", "cmp     dl, 18h", "ja      short _L2898; jumptable 00016225 default case, cases 8,12-16,18-20,28"], ["and     edx, 0FFh", "mov     ecx, ds:(jpt_16225 - 2DF78h)[ebx+edx*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["add     edi, 2; jumptable 00016225 cases 22,24-27"], ["mov     ecx, end_0", "sub     ecx, edi", "mov     [esp+4Ch+var_40], ecx", "dec     ecx", "jg      short loc_161F5"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["cmp     dl, 0FFh", "jnz     loc_1653F"], ["xor     ecx, ecx", "mov     cl, byte ptr [esp+4Ch+var_44]", "sub     ecx, 0FEh", "cmp     ecx, 1", "ja      loc_1653F"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00016225 default case, cases 8,12-16,18-20,28", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     al, 0DFh", "ja      loc_16190"], ["cmp     al, 0DBh", "ja      _L2846; jumptable 000160A7 default case, cases 8-14,18-21,23,25-28"], ["lea     ecx, [eax+28h]", "cmp     cl, 3", "ja      loc_163B0"], ["cmp     esi, 3; jumptable 000160A7 case 7", "jle     loc_168DC"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     esi, 2; jumptable 000160A7 case 6", "jz      loc_169F5"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["lea     edx, [edi+4]; jumptable 000160A7 case 16", "mov     eax, end_0", "sub     eax, edx", "dec     eax", "jle     loc_16A4B"], ["cmp     byte ptr [edi+5], 0", "jnz     loc_1666A"], ["xor     eax, eax", "mov     esi, [esp+4Ch+var_44]", "mov     al, [edi+4]", "mov     al, [esi+eax+48h]", "cmp     al, 14h", "jz      loc_16795"], ["cmp     al, 1Bh", "jnz     loc_1666A"], ["lea     edx, [edi+6]; ptr", "mov     eax, end_0", "sub     eax, edx", "dec     eax", "jle     loc_16A30"], ["cmp     byte ptr [edi+7], 0", "jnz     loc_1687A"], ["cmp     byte ptr [edi+6], 2Dh ; '-'", "jnz     loc_1687A"], ["push    [esp+4Ch+var_3C]; nextTokPtr", "mov     ecx, end_0; end", "mov     eax, [esp+50h+var_44]; enc", "call    little2_scanComment", "pop     ebx", "jmp     loc_15F05"], ["sub     esp, 0Ch; jumptable 000160A7 case 15", "lea     edx, [edi+4]; ptr", "mov     ecx, [esp+58h+var_3C]", "push    ecx; nextTokPtr", "mov     ecx, end_0; end", "mov     eax, [esp+5Ch+var_44]; enc", "call    little2_scanPi", "add     esp, 10h", "jmp     loc_15F05"], ["lea     eax, [edi+4]; jumptable 000160A7 case 17", "mov     esi, eax", "mov     [esp+4Ch+var_48], eax", "mov     eax, end_0", "sub     eax, esi", "mov     [esp+4Ch+var_40], eax", "dec     eax", "jle     loc_16952"], ["mov     al, [edi+5]", "mov     cl, [edi+4]", "test    al, al", "jnz     loc_16677"], ["xor     edx, edx", "mov     esi, [esp+4Ch+var_44]", "mov     dl, cl", "mov     dl, [esi+edx+48h]", "sub     edx, 5; switch 25 cases", "cmp     dl, 18h", "ja      _L2868; jumptable 0001639B default case, cases 8-21,23,25-28"], ["and     edx, 0FFh", "mov     esi, ds:(jpt_1639B - 2DF78h)[ebx+edx*4]", "add     esi, ebx", "jmp     esi; switch jump"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 000160A7 case 5", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["xor     eax, eax; jumptable 000160A7 case 29", "lea     esi, [esi+0]"], ["and     eax, 0FFh", "xor     ecx, ecx", "mov     cl, ds:(nmstrtPages - 2DF78h)[ebx+eax]", "mov     al, byte ptr [esp+4Ch+var_48]", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+ecx*8]", "mov     cl, byte ptr [esp+4Ch+var_48]", "mov     eax, ds:(namingBitmap - 2DF78h)[ebx+eax*4]", "shr     eax, cl", "test    al, 1", "jnz     _L2849; jumptable 000160A7 cases 22,24"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["add     edi, 2; jumptable 00016225 cases 9,10,21", "mov     eax, end_0", "sub     eax, edi", "mov     [esp+4Ch+var_48], eax", "dec     eax", "jle     loc_17094"], ["mov     al, [edi+1]", "mov     cl, [edi]", "mov     byte ptr [esp+4Ch+var_44], al", "test    al, al", "jnz     loc_1705C"], ["xor     edx, edx", "mov     dl, cl", "mov     dl, [esi+edx+48h]", "sub     edx, 5; switch 25 cases", "cmp     dl, 18h", "ja      _L2923; jumptable 00016435 default case, cases 8,12-16,18-20,23,25-28"], ["and     edx, 0FFh", "mov     eax, ds:(jpt_16435 - 2DF78h)[ebx+edx*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 0001639B default case, cases 8-21,23,25-28", "mov     esi, [esp+4Ch+var_48]", "mov     [eax], esi", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     dl, 0DFh", "ja      loc_16248"], ["cmp     dl, 0DBh", "ja      _L2898; jumptable 00016225 default case, cases 8,12-16,18-20,28"], ["lea     ecx, [edx+28h]", "cmp     cl, 3", "ja      loc_1653F"], ["cmp     [esp+4Ch+var_40], 3; jumptable 00016225 case 7", "jle     loc_16A1C"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     [esp+4Ch+var_40], 2; jumptable 00016225 case 6", "jz      loc_1696C"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00016225 case 11", "add     edi, 2", "mov     [eax], edi", "mov     eax, 2", "jmp     loc_15F05"], ["lea     eax, [edi+2]; jumptable 00016225 case 17", "mov     edx, end_0", "sub     edx, eax", "dec     edx", "jle     loc_16976"], ["cmp     byte ptr [edi+3], 0", "jnz     short loc_164C7"], ["cmp     byte ptr [edi+2], 3Eh ; '>'", "jz      loc_168A0"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], eax", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00016225 case 5", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     [esp+4Ch+var_48], 0; jumptable 00016225 case 23", "jnz     loc_169E8"], ["lea     ecx, [edi+2]", "mov     edx, ecx", "mov     [esp+4Ch+var_44], ecx", "mov     ecx, end_0", "sub     ecx, edx", "mov     [esp+4Ch+var_30], ecx", "dec     ecx", "jle     loc_169E0"], ["mov     dl, [edi+3]", "mov     cl, [edi+2]", "mov     byte ptr [esp+4Ch+var_40], cl", "test    dl, dl", "jnz     loc_167DF"], ["mov     al, cl", "xor     ecx, ecx", "mov     cl, al", "mov     cl, [esi+ecx+48h]", "sub     ecx, 5; switch 25 cases", "cmp     cl, 18h", "ja      _L2913; jumptable 0001653B default case, cases 8-21,23,25-28"], ["and     ecx, 0FFh", "mov     eax, ds:(jpt_1653B - 2DF78h)[ebx+ecx*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["xor     edx, edx; jumptable 00016225 case 29"], ["and     edx, 0FFh", "mov     eax, [esp+4Ch+var_34]", "xor     ecx, ecx", "mov     cl, [eax+edx]", "mov     dl, byte ptr [esp+4Ch+var_44]", "shr     dl, 5", "mov     eax, [esp+4Ch+var_38]", "and     edx, 0FFh", "lea     edx, [edx+ecx*8]", "mov     cl, byte ptr [esp+4Ch+var_44]", "mov     edx, [eax+edx*4]", "shr     edx, cl", "and     edx, 1", "jnz     _L2901; jumptable 00016225 cases 22,24-27"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["add     edi, 6; jumptable 0001639B cases 22,24", "mov     eax, end_0", "sub     eax, edi", "mov     [esp+4Ch+var_48], eax", "dec     eax", "jle     loc_16964"], ["lea     eax, (namePages - 2DF78h)[ebx]", "mov     [esp+4Ch+var_40], eax", "lea     eax, (namingBitmap - 2DF78h)[ebx]", "mov     [esp+4Ch+var_38], eax"], ["mov     al, [edi+1]", "mov     cl, [edi]", "test    al, al", "jnz     loc_16705"], ["xor     edx, edx", "mov     esi, [esp+4Ch+var_44]", "mov     dl, cl", "mov     dl, [esi+edx+48h]", "sub     edx, 5; switch 25 cases", "cmp     dl, 18h", "ja      short _L2878; jumptable 000165D7 default case, cases 8,12-20,28"], ["and     edx, 0FFh", "mov     esi, ds:(jpt_165D7 - 2DF78h)[ebx+edx*4]", "add     esi, ebx", "jmp     esi; switch jump"], ["add     edi, 2; jumptable 000165D7 cases 22-27", "mov     eax, end_0", "sub     eax, edi", "mov     [esp+4Ch+var_48], eax", "dec     eax", "jg      short loc_165A7"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 000165D7 default case, cases 8,12-20,28", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     al, 0FFh", "jnz     loc_16A5B"], ["xor     edx, edx", "mov     dl, cl", "sub     edx, 0FEh", "cmp     edx, 1", "ja      loc_16A5B"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00016435 default case, cases 8,12-16,18-20,23,25-28", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["mov     esi, [esp+4Ch+var_3C]; jumptable 0001653B default case, cases 8-21,23,25-28", "mov     ebx, [esp+4Ch+var_44]", "mov     eax, [esp+4Ch+var_48]", "mov     [esi], ebx", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFCh", "jmp     loc_15F05"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], ptr_0", "mov     ptr_0, 6", "jmp     loc_15F05"], ["or      n, 0FFFFFFFFh", "jmp     loc_15F05"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], ptr_0", "mov     ptr_0, 6", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     al, 0DFh", "ja      short loc_166A7"], ["cmp     al, 0DBh", "ja      _L2868; jumptable 0001639B default case, cases 8-21,23,25-28"], ["lea     edx, [eax+28h]", "cmp     dl, 3", "ja      short _L2869; jumptable 0001639B case 29"], ["cmp     [esp+4Ch+var_40], 3; jumptable 0001639B case 7", "jle     loc_1695A"], ["mov     eax, [esp+4Ch+var_3C]", "mov     esi, [esp+4Ch+var_48]", "mov     [eax], esi", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     al, 0FFh", "jnz     short _L2869; jumptable 0001639B case 29"], ["xor     edx, edx", "mov     dl, cl", "sub     edx, 0FEh", "cmp     edx, 1", "jbe     _L2868; jumptable 0001639B default case, cases 8-21,23,25-28"], ["and     eax, 0FFh; jumptable 0001639B case 29", "xor     edx, edx", "mov     dl, ds:(nmstrtPages - 2DF78h)[ebx+eax]", "mov     al, cl", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     eax, ds:(namingBitmap - 2DF78h)[ebx+eax*4]", "shr     eax, cl", "test    al, 1", "jnz     _L2871; jumptable 0001639B cases 22,24"], ["mov     eax, [esp+4Ch+var_3C]", "mov     esi, [esp+4Ch+var_48]", "mov     [eax], esi", "xor     eax, eax", "jmp     loc_15F05"], ["mov     ptr_0, 0FFFFFFFDh", "jmp     loc_15F05"], ["cmp     al, 0DFh", "ja      short loc_16731"], ["cmp     al, 0DBh", "ja      _L2878; jumptable 000165D7 default case, cases 8,12-20,28"], ["lea     edx, [eax+28h]", "cmp     dl, 3", "ja      short _L2879; jumptable 000165D7 case 29"], ["cmp     [esp+4Ch+var_48], 3; jumptable 000165D7 case 7", "jle     loc_16914"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     al, 0FFh", "jnz     short _L2879; jumptable 000165D7 case 29"], ["xor     edx, edx", "mov     dl, cl", "sub     edx, 0FEh", "cmp     edx, 1", "jbe     _L2878; jumptable 000165D7 default case, cases 8,12-20,28"], ["and     eax, 0FFh; jumptable 000165D7 case 29", "mov     esi, [esp+4Ch+var_40]", "xor     edx, edx", "mov     dl, [esi+eax]", "mov     al, cl", "shr     al, 5", "mov     esi, [esp+4Ch+var_38]", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     eax, [esi+eax*4]", "shr     eax, cl", "test    al, 1", "jnz     _L2882; jumptable 000165D7 cases 22-27"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["mov     ptr_0, 0FFFFFFFBh", "jmp     loc_15F05"], ["lea     edx, [edi+6]", "mov     eax, end_0", "sub     eax, edx", "cmp     eax, 0Bh", "jle     loc_1694A"], ["lea     eax, (CDATA_LSQB_4052 - 2DF78h)[ebx]; \"CDATA[\"", "add     edi, 12h"], ["cmp     byte ptr [edx+1], 0", "jnz     loc_168B3"], ["mov     cl, [eax]", "cmp     [edx], cl", "jnz     loc_168B3"], ["add     edx, 2", "inc     eax", "cmp     edi, edx", "jnz     short loc_167AE"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "mov     eax, 8", "jmp     loc_15F05"], ["call    __stack_chk_fail_local"], ["cmp     dl, 0DFh", "ja      short loc_16813"], ["cmp     dl, 0DBh", "ja      _L2913; jumptable 0001653B default case, cases 8-21,23,25-28"], ["lea     ecx, [edx+28h]", "cmp     cl, 3", "ja      short _L2914; jumptable 0001653B case 29"], ["cmp     [esp+4Ch+var_30], 3; jumptable 0001653B case 7", "mov     eax, [esp+4Ch+var_48]", "jle     loc_16A12"], ["mov     esi, [esp+4Ch+var_3C]", "mov     ebx, [esp+4Ch+var_44]", "mov     [esi], ebx", "jmp     loc_15F05"], ["cmp     dl, 0FFh", "jnz     short _L2914; jumptable 0001653B case 29"], ["xor     ecx, ecx", "mov     cl, byte ptr [esp+4Ch+var_40]", "sub     ecx, 0FEh", "cmp     ecx, 1", "jbe     _L2913; jumptable 0001653B default case, cases 8-21,23,25-28"], ["and     edx, 0FFh; jumptable 0001653B case 29", "xor     ecx, ecx", "mov     eax, [esp+4Ch+var_38]", "mov     cl, ds:(nmstrtPages - 2DF78h)[ebx+edx]", "mov     dl, byte ptr [esp+4Ch+var_40]", "shr     dl, 5", "and     edx, 0FFh", "lea     edx, [edx+ecx*8]", "mov     cl, byte ptr [esp+4Ch+var_40]", "mov     edx, [eax+edx*4]", "shr     edx, cl", "and     dl, 1", "jz      loc_169FF"], ["add     edi, 4; jumptable 0001653B cases 22,24", "mov     [esp+4Ch+var_48], 1", "jmp     loc_16234"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 0001639B case 5", "mov     esi, [esp+4Ch+var_48]", "mov     [eax], esi", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]", "add     edi, 4", "mov     [eax], edi", "mov     eax, 4", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     [esp+4Ch+var_40], 2; jumptable 0001639B case 6", "jz      loc_170B3"], ["mov     eax, [esp+4Ch+var_3C]", "mov     esi, [esp+4Ch+var_48]", "mov     [eax], esi", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["add     edi, 2; jumptable 000165D7 cases 9,10,21", "mov     esi, [esp+4Ch+var_44]"], ["mov     eax, end_0", "sub     eax, edi", "dec     eax", "jle     short loc_16942"], ["cmp     byte ptr [edi+1], 0", "jnz     short loc_16922"], ["xor     eax, eax", "mov     al, [edi]", "mov     al, [esi+eax+48h]", "cmp     al, 0Bh", "jz      short loc_1692F"], ["ja      short loc_1691E"], ["sub     eax, 9", "cmp     al, 1", "ja      short loc_16922"], ["add     edi, 2", "jmp     short loc_168ED"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["cmp     al, 15h", "jz      short loc_1690F"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]", "add     edi, 2", "mov     [eax], edi", "mov     eax, 5", "jmp     loc_15F05"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["cmp     [esp+4Ch+var_30], 2; jumptable 0001653B case 6", "mov     eax, [esp+4Ch+var_48]", "jz      short loc_169AB"], ["mov     esi, [esp+4Ch+var_3C]", "mov     ebx, [esp+4Ch+var_44]", "mov     [esi], ebx", "jmp     loc_15F05"], ["mov     esi, [esp+4Ch+var_3C]; jumptable 0001653B case 5", "mov     ebx, [esp+4Ch+var_44]", "mov     eax, [esp+4Ch+var_48]", "mov     [esi], ebx", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["cmp     [esp+4Ch+var_48], 2; jumptable 000165D7 case 6", "jz      short loc_169D6"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 000165D7 case 5", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["mov     esi, [esp+4Ch+var_3C]", "mov     ebx, [esp+4Ch+var_44]", "mov     eax, [esp+4Ch+var_48]", "mov     [esi], ebx", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFBh", "jmp     loc_15F05"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 000165D7 case 11", "add     edi, 2", "mov     [eax], edi", "mov     eax, 5", "jmp     loc_15F05"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["mov     al, byte ptr [esp+4Ch+var_44]; jumptable 00016435 case 29", "mov     [esp+4Ch+var_44], esi"], ["and     eax, 0FFh", "xor     edx, edx", "mov     dl, ds:(nmstrtPages - 2DF78h)[ebx+eax]", "mov     al, cl", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     eax, ds:(namingBitmap - 2DF78h)[ebx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      loc_16EC5"], ["lea     esi, (namePages - 2DF78h)[ebx]", "add     edi, 2", "xor     eax, eax", "mov     [esp+4Ch+var_34], esi", "mov     [esp+4Ch+var_24], edi", "mov     [esp+4Ch+var_48], eax", "mov     esi, [esp+4Ch+var_44]"], ["mov     edx, [esp+4Ch+var_24]", "mov     eax, end_0", "sub     eax, edx", "mov     [esp+4Ch+var_40], eax", "dec     eax", "jle     loc_16EB0"], ["mov     cl, [edx+1]", "mov     al, [edx]", "mov     byte ptr [esp+4Ch+var_44], al", "test    cl, cl", "jnz     short loc_16AE9"], ["mov     edi, eax", "and     edi, 0FFh", "movzx   edi, byte ptr [esi+edi+48h]", "sub     edi, 5; switch 25 cases", "mov     eax, edi", "cmp     al, 18h", "ja      short _L2934; jumptable 00016AE7 default case, cases 8,11-13,15-20,28"], ["and     edi, 0FFh", "mov     eax, ds:(jpt_16AE7 - 2DF78h)[ebx+edi*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["cmp     cl, 0DFh", "ja      short loc_16B18"], ["cmp     cl, 0DBh", "ja      short _L2934; jumptable 00016AE7 default case, cases 8,11-13,15-20,28"], ["lea     edi, [ecx+28h]", "mov     eax, edi", "cmp     al, 3", "ja      _L2935; jumptable 00016AE7 case 29"], ["cmp     [esp+4Ch+var_40], 3; jumptable 00016AE7 case 7", "jle     loc_16EE6"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     cl, 0FFh", "jnz     _L2935; jumptable 00016AE7 case 29"], ["movzx   edi, byte ptr [esp+4Ch+var_44]", "and     edi, 0FFh", "sub     edi, 0FEh", "cmp     edi, 1", "ja      _L2935; jumptable 00016AE7 case 29"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00016AE7 default case, cases 8,11-13,15-20,28", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["xor     ecx, ecx", "mov     cl, [edx+2]", "movzx   edi, byte ptr [esi+ecx+48h]", "and     edi, 0FFh", "lea     ecx, [edi-0Ch]", "cmp     ecx, 1", "jbe     short loc_16BCA"], ["cmp     edi, 0Ah", "jle     short loc_16BC1"], ["cmp     edi, 15h", "jnz     short loc_16B84"], ["mov     edx, eax"], ["lea     eax, [edx+2]; jumptable 00016AE7 case 14", "mov     ecx, end_0", "sub     ecx, eax", "mov     [esp+4Ch+var_24], eax", "dec     ecx", "jle     loc_16EB0"], ["cmp     byte ptr [edx+3], 0", "jz      short loc_16B48"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], eax", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     dl, 15h", "jnz     short loc_16BB4"], ["mov     edx, eax"], ["lea     eax, [edx+2]; jumptable 00016AE7 cases 9,10,21", "mov     ecx, end_0", "sub     ecx, eax", "mov     [esp+4Ch+var_24], eax", "dec     ecx", "jle     loc_16EB0"], ["cmp     byte ptr [edx+3], 0", "jz      loc_16D0B"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], eax", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     edi, 8", "jle     short loc_16B84"], ["mov     edx, eax", "jmp     short _L3085; jumptable 00016AE7 case 14"], ["add     edx, 4", "lea     eax, [esp+4Ch+var_24]", "mov     [esp+4Ch+var_24], edx", "mov     [esp+4Ch+var_44], eax"], ["mov     ecx, [esp+4Ch+var_24]", "mov     eax, end_0", "sub     eax, ecx", "mov     [esp+4Ch+var_48], eax", "dec     eax", "jle     loc_16EB0"], ["mov     al, [ecx+1]", "mov     dl, [ecx]", "test    al, al", "jnz     short loc_16C33"], ["and     edx, 0FFh", "xor     eax, eax", "mov     dl, [esi+edx+48h]", "mov     al, dl", "cmp     edi, eax", "jz      loc_16CC1"], ["cmp     dl, 8", "ja      _L2973; jumptable 00016C1D cases 4,5"], ["mov     edx, ds:(jpt_16C1D - 2DF78h)[ebx+eax*4]; switch 9 cases", "add     edx, ebx", "jmp     edx; switch jump"], ["cmp     [esp+4Ch+var_48], 2; jumptable 00016C1D case 6", "jz      loc_16EE6"], ["add     ecx, 3", "mov     [esp+4Ch+var_24], ecx", "jmp     short loc_16BD9"], ["cmp     al, 0DFh", "ja      short loc_16C96"], ["cmp     al, 0DBh", "ja      short _L2972; jumptable 00016C1D cases 0,1,8"], ["add     eax, 28h ; '('", "cmp     al, 3", "ja      short _L2973; jumptable 00016C1D cases 4,5"], ["cmp     [esp+4Ch+var_48], 3; jumptable 00016C1D case 7", "jle     loc_16EE6"], ["add     ecx, 4", "mov     [esp+4Ch+var_24], ecx", "jmp     short loc_16BD9"], ["sub     esp, 0Ch; jumptable 00016C1D case 3", "lea     edx, [ecx+2]; ptr", "mov     eax, esi; enc", "mov     ecx, end_0; end", "push    [esp+58h+var_44]; nextTokPtr", "call    little2_scanRef", "add     esp, 10h", "test    eax, eax", "jg      loc_16BD9"], ["jnz     loc_15F05"], ["mov     esi, [esp+4Ch+var_3C]", "mov     edx, [esp+4Ch+var_24]", "mov     [esi], edx", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00016C1D case 2", "mov     [eax], ecx", "xor     eax, eax", "jmp     loc_15F05"], ["inc     al", "jnz     short _L2973; jumptable 00016C1D cases 4,5"], ["xor     eax, eax", "mov     al, dl", "sub     eax, 0FEh", "cmp     eax, 1", "ja      short _L2973; jumptable 00016C1D cases 4,5"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00016C1D cases 0,1,8", "mov     [eax], ecx", "xor     eax, eax", "jmp     loc_15F05"], ["add     ecx, 2; jumptable 00016C1D cases 4,5", "mov     [esp+4Ch+var_24], ecx", "jmp     loc_16BD9"], ["lea     edx, [ecx+2]", "mov     eax, end_0", "sub     eax, edx", "mov     [esp+4Ch+var_24], edx", "dec     eax", "jle     loc_16EB0"], ["cmp     byte ptr [ecx+3], 0", "jnz     short loc_16D3C"], ["xor     eax, eax", "mov     al, [ecx+2]", "mov     al, [esi+eax+48h]", "cmp     al, 11h", "jz      _L2982; jumptable 00016DA2 case 17"], ["ja      short loc_16D49"], ["cmp     al, 0Ah", "jbe     short loc_16D38"], ["cmp     al, 0Bh", "jnz     short loc_16D3C"], ["mov     eax, [esp+4Ch+var_24]; jumptable 00016DA2 case 11", "mov     esi, [esp+4Ch+var_3C]", "add     eax, 2", "mov     [esi], eax", "mov     eax, 1", "jmp     loc_15F05"], ["xor     ecx, ecx", "mov     cl, [edx+2]", "mov     edx, ecx", "mov     dl, [esi+edx+48h]", "cmp     dl, 0Eh", "jz      loc_16B6A"], ["cmp     dl, 0Ah", "ja      loc_16B91"], ["cmp     dl, 8", "jbe     loc_16BB4"], ["mov     edx, eax", "jmp     _L3078; jumptable 00016AE7 cases 9,10,21"], ["cmp     al, 8", "ja      short _L2987; jumptable 00016DA2 cases 9,10,21"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     al, 15h", "jnz     short loc_16D3C"], ["mov     edi, [esp+4Ch+var_24]; jumptable 00016DA2 cases 9,10,21", "mov     eax, end_0", "lea     edx, [edi+2]", "sub     eax, edx", "mov     [esp+4Ch+var_24], edx", "mov     [esp+4Ch+var_44], eax", "dec     eax", "jle     loc_16EB0"], ["mov     al, [edi+3]", "mov     cl, [edi+2]", "mov     byte ptr [esp+4Ch+var_40], al", "mov     byte ptr [esp+4Ch+var_48], cl", "test    al, al", "jnz     loc_16E2C"], ["mov     al, cl", "xor     ecx, ecx", "mov     cl, al", "mov     cl, [esi+ecx+48h]", "sub     ecx, 5; switch 25 cases", "cmp     cl, 18h", "ja      _L2989; jumptable 00016DA2 default case, cases 8,12-16,18-20,23,25-28"], ["and     ecx, 0FFh", "mov     eax, ds:(jpt_16DA2 - 2DF78h)[ebx+ecx*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["mov     eax, [esp+4Ch+var_24]; jumptable 00016DA2 case 17", "mov     ecx, end_0", "lea     edx, [eax+2]", "sub     ecx, edx", "mov     [esp+4Ch+var_24], edx", "dec     ecx", "jle     loc_16EB0"], ["cmp     byte ptr [eax+3], 0", "jnz     short loc_16DC6"], ["cmp     byte ptr [eax+2], 3Eh ; '>'", "jz      short loc_16DD3"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["mov     esi, [esp+4Ch+var_3C]", "add     eax, 4", "mov     [esi], eax", "mov     eax, 3", "jmp     loc_15F05"], ["mov     al, byte ptr [esp+4Ch+var_40]; jumptable 00016DA2 case 29"], ["and     eax, 0FFh", "xor     ecx, ecx", "mov     cl, ds:(nmstrtPages - 2DF78h)[ebx+eax]", "mov     al, byte ptr [esp+4Ch+var_48]", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+ecx*8]", "mov     cl, byte ptr [esp+4Ch+var_48]", "mov     eax, ds:(namingBitmap - 2DF78h)[ebx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      short loc_16E58"], ["add     edi, 4; jumptable 00016DA2 cases 22,24", "mov     [esp+4Ch+var_48], 0", "mov     [esp+4Ch+var_24], edi", "jmp     loc_16AA2"], ["mov     al, byte ptr [esp+4Ch+var_40]", "cmp     al, 0DFh", "ja      short loc_16E86"], ["cmp     al, 0DBh", "ja      short _L2989; jumptable 00016DA2 default case, cases 8,12-16,18-20,23,25-28"], ["lea     ecx, [eax+28h]", "cmp     cl, 3", "ja      short loc_16DEA"], ["cmp     [esp+4Ch+var_44], 3; jumptable 00016DA2 case 7", "jle     loc_16EE6"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     [esp+4Ch+var_44], 2; jumptable 00016DA2 case 6", "jz      short loc_16EE6"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00016DA2 case 5", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     al, 0FFh", "jnz     loc_16DEA"], ["xor     ecx, ecx", "mov     cl, byte ptr [esp+4Ch+var_48]", "sub     ecx, 0FEh", "cmp     ecx, 1", "ja      loc_16DEA"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00016DA2 default case, cases 8,12-16,18-20,23,25-28", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00016AE7 case 5", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     [esp+4Ch+var_40], 2; jumptable 00016AE7 case 6", "jz      short loc_16EE6"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["cmp     [esp+4Ch+var_48], 0; jumptable 00016AE7 case 23", "jnz     loc_1704F"], ["lea     eax, [edx+2]", "mov     edi, end_0", "sub     edi, eax", "mov     [esp+4Ch+var_44], eax", "mov     [esp+4Ch+var_40], edi", "mov     [esp+4Ch+var_24], eax", "dec     edi", "jle     short loc_16EB0"], ["mov     cl, [edx+3]", "mov     al, [edx+2]", "mov     byte ptr [esp+4Ch+var_38], al", "test    cl, cl", "jnz     loc_16FD6"], ["mov     edi, eax", "and     edi, 0FFh", "movzx   edi, byte ptr [esi+edi+48h]", "sub     edi, 5; switch 25 cases", "mov     eax, edi", "cmp     al, 18h", "ja      _L2952; jumptable 00016F4C default case, cases 8-21,23,25-28"], ["and     edi, 0FFh", "mov     eax, ds:(jpt_16F4C - 2DF78h)[ebx+edi*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["add     edx, 2; jumptable 00016AE7 cases 22,24-27", "mov     [esp+4Ch+var_24], edx", "jmp     loc_16AA2"], ["cmp     cl, 0FFh", "jnz     short _L2953; jumptable 00016F4C case 29"], ["movzx   edi, byte ptr [esp+4Ch+var_38]", "and     edi, 0FFh", "sub     edi, 0FEh", "cmp     edi, 1", "jbe     _L2952; jumptable 00016F4C default case, cases 8-21,23,25-28"], ["and     ecx, 0FFh; jumptable 00016F4C case 29", "mov     al, byte ptr [esp+4Ch+var_38]", "movzx   edi, ds:(nmstrtPages - 2DF78h)[ebx+ecx]", "mov     cl, al", "and     edi, 0FFh", "shr     cl, 5", "and     ecx, 0FFh", "lea     ecx, [ecx+edi*8]", "mov     edi, ds:(namingBitmap - 2DF78h)[ebx+ecx*4]", "mov     cl, al", "shr     edi, cl", "and     edi, 1", "jz      short loc_16FC3"], ["add     edx, 4; jumptable 00016F4C cases 22,24", "mov     [esp+4Ch+var_48], 1", "mov     [esp+4Ch+var_24], edx", "jmp     loc_16AA2"], ["mov     esi, [esp+4Ch+var_3C]", "mov     ebx, [esp+4Ch+var_44]", "mov     eax, [esp+4Ch+var_48]", "mov     [esi], ebx", "jmp     loc_15F05"], ["cmp     cl, 0DFh", "ja      loc_16F5A"], ["cmp     cl, 0DBh", "ja      short _L2952; jumptable 00016F4C default case, cases 8-21,23,25-28"], ["lea     edi, [ecx+28h]", "mov     eax, edi", "cmp     al, 3", "ja      short _L2953; jumptable 00016F4C case 29"], ["cmp     [esp+4Ch+var_40], 3; jumptable 00016F4C case 7", "mov     eax, [esp+4Ch+var_48]", "jle     loc_16EE6"], ["mov     esi, [esp+4Ch+var_3C]", "mov     ebx, [esp+4Ch+var_44]", "mov     [esi], ebx", "jmp     loc_15F05"], ["cmp     [esp+4Ch+var_40], 2; jumptable 00016F4C case 6", "mov     eax, [esp+4Ch+var_48]", "jz      loc_16EE6"], ["mov     esi, [esp+4Ch+var_3C]", "mov     ebx, [esp+4Ch+var_44]", "mov     [esi], ebx", "jmp     loc_15F05"], ["mov     esi, [esp+4Ch+var_3C]; jumptable 00016F4C case 5", "mov     ebx, [esp+4Ch+var_44]", "mov     eax, [esp+4Ch+var_48]", "mov     [esi], ebx", "jmp     loc_15F05"], ["mov     esi, [esp+4Ch+var_3C]; jumptable 00016F4C default case, cases 8-21,23,25-28", "mov     ebx, [esp+4Ch+var_44]", "mov     eax, [esp+4Ch+var_48]", "mov     [esi], ebx", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["mov     al, byte ptr [esp+4Ch+var_44]", "mov     [esp+4Ch+var_44], esi", "cmp     al, 0DFh", "ja      loc_165FC"], ["cmp     al, 0DBh", "ja      _L2923; jumptable 00016435 default case, cases 8,12-16,18-20,23,25-28"], ["lea     edx, [eax+28h]", "cmp     dl, 3", "ja      loc_16A5B"], ["cmp     [esp+4Ch+var_48], 3; jumptable 00016435 case 7", "jle     short loc_1709C"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["or      eax, 0FFFFFFFFh", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00016435 case 5", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"], ["mov     [esp+4Ch+var_44], esi; jumptable 00016435 cases 22,24", "jmp     loc_16A87"], ["and     ecx, 0FFh; jumptable 00016AE7 case 29", "mov     eax, [esp+4Ch+var_34]", "movzx   edi, byte ptr [eax+ecx]", "mov     al, byte ptr [esp+4Ch+var_44]", "and     edi, 0FFh", "mov     cl, al", "shr     cl, 5", "and     ecx, 0FFh", "lea     ecx, [ecx+edi*8]", "mov     edi, ds:(namingBitmap - 2DF78h)[ebx+ecx*4]", "mov     cl, al", "shr     edi, cl", "and     edi, 1", "jnz     _L2937; jumptable 00016AE7 cases 22,24-27"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_15F05"], ["cmp     [esp+4Ch+var_48], 2; jumptable 00016435 case 6", "jz      short loc_17121"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_15F05"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_15F05"]], "little2_attributeValueTok": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "push    esi", "mov     ebx, [esp+14h+ptr]", "mov     ecx, [esp+14h+end]", "mov     esi, [esp+14h+enc]", "mov     [esp+14h+var_14], ebx", "mov     ebp, [esp+14h+nextTokPtr]", "cmp     ebx, ecx", "jnb     loc_17263"], ["mov     eax, ecx", "sub     eax, ebx", "dec     eax", "jle     loc_1726D"], ["mov     eax, ebx"], ["mov     dl, [eax+1]", "test    dl, dl", "jnz     short loc_17190"], ["xor     edx, edx", "mov     dl, [eax]", "cmp     byte ptr [esi+edx+48h], 15h; switch 22 cases", "ja      short _L3148; jumptable 0001718B default case, cases 0,1,4,5,8,11-20"], ["xor     ebx, ebx", "mov     bl, [esi+edx+48h]", "mov     edx, ebx", "mov     ebx, ds:(jpt_1718B - 2DF78h)[edi+edx*4]", "add     ebx, edi", "jmp     ebx; switch jump"], ["add     edx, 28h ; '('", "cmp     dl, 3", "jbe     short _L3153; jumptable 0001718B case 7"], ["add     eax, 2; jumptable 0001718B default case, cases 0,1,4,5,8,11-20"], ["mov     edx, ecx", "sub     edx, eax", "dec     edx", "jg      short loc_17168"], ["lea     esi, [esi+0]"], ["mov     [ebp+0], eax", "mov     eax, 6"], ["pop     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     eax, 4; jumptable 0001718B case 7", "jmp     short loc_1719B"], ["cmp     [esp+14h+var_14], eax; jumptable 0001718B case 10", "jnz     short loc_171A8"], ["mov     ebx, [esp+14h+var_14]", "mov     eax, 7", "add     ebx, 2", "mov     [ebp+0], ebx", "jmp     short loc_171B0"], ["mov     [ebp+0], eax; jumptable 0001718B case 2", "xor     eax, eax", "pop     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     [esp+14h+var_14], eax; jumptable 0001718B case 3", "jnz     short loc_171A8"], ["mov     edx, [esp+14h+var_14]", "mov     [esp+14h+enc], ebp", "pop     ebx", "mov     eax, esi", "pop     ebx", "add     edx, 2", "pop     esi", "pop     edi", "pop     ebp", "jmp     little2_scanRef"], ["cmp     [esp+14h+var_14], eax; jumptable 0001718B case 21", "jnz     short loc_171A8"], ["mov     ebx, [esp+14h+var_14]", "mov     eax, 27h ; '''", "add     ebx, 2", "mov     [ebp+0], ebx", "jmp     short loc_171B0"], ["add     eax, 3; jumptable 0001718B case 6", "jmp     loc_1719B"], ["mov     edi, [esp+14h+var_14]; jumptable 0001718B case 9", "cmp     edi, eax", "jnz     loc_171A8"], ["lea     eax, [edi+2]", "sub     ecx, eax", "dec     ecx", "jle     short loc_17275"], ["cmp     byte ptr [edi+3], 0", "mov     dl, [edi+2]", "jnz     short loc_17256"], ["and     edx, 0FFh", "cmp     byte ptr [esi+edx+48h], 0Ah", "jnz     short loc_17256"], ["add     edi, 4", "mov     eax, edi"], ["mov     [ebp+0], eax", "mov     eax, 7", "jmp     loc_171B0"], ["mov     eax, 0FFFFFFFCh", "jmp     loc_171B0"], ["or      eax, 0FFFFFFFFh", "jmp     loc_171B0"], ["mov     eax, 0FFFFFFFDh", "jmp     loc_171B0"]], "little2_entityValueTok": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "push    ebp", "mov     ebx, [esp+14h+ptr]", "mov     ecx, [esp+14h+end]; end", "mov     eax, [esp+14h+nextTokPtr]", "mov     esi, [esp+14h+enc]", "mov     [esp+14h+var_14], eax", "cmp     ebx, ecx", "jnb     loc_173BF"], ["mov     eax, ecx", "sub     eax, ebx", "dec     eax", "jle     loc_173C9"], ["mov     eax, ebx"], ["mov     dl, [eax+1]", "test    dl, dl", "jnz     short loc_172E0"], ["xor     edx, edx", "mov     dl, [eax]", "mov     dl, [esi+edx+48h]", "sub     edx, 3; switch 28 cases", "cmp     dl, 1Bh", "ja      short _L3174; jumptable 000172DE default case, cases 4,5,8,11-29"], ["and     edx, 0FFh", "mov     ebp, ds:(jpt_172DE - 2DF78h)[edi+edx*4]", "add     ebp, edi", "jmp     ebp; switch jump"], ["add     edx, 28h ; '('", "cmp     dl, 3", "jbe     short _L3179; jumptable 000172DE case 7"], ["add     eax, 2; jumptable 000172DE default case, cases 4,5,8,11-29"], ["mov     edx, ecx", "sub     edx, eax", "dec     edx", "jg      short loc_172B8"], ["lea     esi, [esi+0]"], ["mov     esi, [esp+14h+var_14]", "mov     [esi], eax", "mov     eax, 6"], ["pop     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     eax, 4; jumptable 000172DE case 7", "jmp     short loc_172EB"], ["cmp     ebx, eax; jumptable 000172DE case 10", "jnz     short loc_172F8"], ["mov     eax, [esp+14h+var_14]", "add     ebx, 2", "mov     [eax], ebx", "mov     eax, 7", "jmp     short loc_17302"], ["cmp     ebx, eax; jumptable 000172DE case 3", "jnz     short loc_172F8"], ["mov     eax, [esp+14h+var_14]", "lea     edx, [ebx+2]", "mov     [esp+14h+enc], eax", "pop     edi", "pop     ebx", "mov     eax, esi", "pop     esi", "pop     edi", "pop     ebp", "jmp     little2_scanRef"], ["add     eax, 3; jumptable 000172DE case 6", "jmp     short loc_172EB"], ["cmp     ebx, eax; jumptable 000172DE case 30", "jz      short loc_173A0"], ["mov     edi, [esp+14h+var_14]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], eax", "mov     eax, 6", "pop     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     ebx, eax; jumptable 000172DE case 9", "jnz     short loc_17354"], ["lea     eax, [ebx+2]", "sub     ecx, eax", "dec     ecx", "jle     short loc_173D1"], ["cmp     byte ptr [ebx+3], 0", "mov     dl, [ebx+2]", "jnz     short loc_1738D"], ["and     edx, 0FFh", "cmp     byte ptr [esi+edx+48h], 0Ah", "jnz     short loc_1738D"], ["lea     eax, [ebx+4]"], ["mov     esi, [esp+14h+var_14]", "mov     [esi], eax", "mov     eax, 7", "jmp     loc_17302"], ["lea     edx, [ebx+2]; ptr", "mov     eax, esi; enc", "mov     ebx, [esp+14h+var_14]", "push    ebx; nextTokPtr", "call    little2_scanPercent", "pop     esi", "cmp     eax, 16h", "jnz     loc_17302"], ["xor     eax, eax", "jmp     loc_17302"], ["mov     eax, 0FFFFFFFCh", "jmp     loc_17302"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17302"], ["mov     eax, 0FFFFFFFDh", "jmp     loc_17302"]], "big2_scanComment": [["push    ebp", "call    __x86_get_pc_thunk_bp", "add     ebp, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "mov     edi, end", "push    esi", "lea     esi, [ptr+2]", "push    ebx", "sub     edi, ptr", "cmp     edi, 1", "push    ebx", "jle     loc_174D0"], ["mov     bl, [edx+2]", "mov     dl, [edx+3]"], ["test    bl, bl", "jnz     short loc_1745D"], ["and     edx, 0FFh", "cmp     byte ptr [enc+edx+48h], 1Bh; switch 28 cases", "ja      short _L3200; jumptable 00017428 default case, cases 2-5,9-26"], ["xor     ebx, ebx", "mov     bl, [enc+edx+48h]", "mov     edx, ebx", "mov     ebx, ss:(jpt_17428 - 2DF78h)[ebp+edx*4]", "add     ebx, ebp", "jmp     ebx; switch jump"], ["inc     bl", "jnz     short _L3200; jumptable 00017428 default case, cases 2-5,9-26"], ["and     edx, 0FFh", "sub     edx, 0FEh", "cmp     edx, 1", "jbe     short _L3203; jumptable 00017428 cases 0,1,8"], ["lea     esi, [esi+0]"], ["add     esi, 2; jumptable 00017428 default case, cases 2-5,9-26"], ["mov     edi, end", "sub     edi, ptr", "cmp     edi, 1", "jle     short loc_174D0"], ["mov     bl, [ptr]", "mov     dl, [ptr+1]", "test    bl, bl", "jz      short loc_1740A"], ["cmp     bl, 0DFh", "ja      short loc_17430"], ["cmp     bl, 0DBh", "ja      short _L3203; jumptable 00017428 cases 0,1,8"], ["add     ebx, 28h ; '('", "cmp     bl, 3", "ja      short _L3200; jumptable 00017428 default case, cases 2-5,9-26"], ["cmp     edi, 3; jumptable 00017428 case 7", "jle     short loc_174D5"], ["add     esi, 4", "jmp     short loc_1744B"], ["mov     enc, [esp+14h+nextTokPtr]; jumptable 00017428 cases 0,1,8", "mov     [eax], esi", "xor     eax, eax"], ["pop     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     edi, 2; jumptable 00017428 case 6", "jz      short loc_174D5"], ["add     esi, 3", "jmp     short loc_1744B"], ["lea     edi, [esi+2]; jumptable 00017428 case 27", "mov     ebx, edi", "mov     [esp+14h+var_14], edi", "mov     edi, end", "sub     edi, ptr", "cmp     edi, 1", "jle     short loc_174D0"], ["mov     bl, [esi+2]", "mov     dl, [esi+3]", "test    bl, bl", "jnz     short loc_174C8"], ["cmp     dl, 2Dh ; '-'", "jz      short loc_174DC"], ["mov     esi, [esp+14h+var_14]", "jmp     loc_1740A"], ["mov     esi, [esp+14h+var_14]", "jmp     loc_17406"], ["or      eax, 0FFFFFFFFh", "jmp     short loc_17488"], ["mov     enc, 0FFFFFFFEh", "jmp     short loc_17488"], ["lea     enc, [esi+4]", "sub     end, ptr", "dec     ecx", "jle     short loc_174D0"], ["cmp     byte ptr [esi+4], 0", "jnz     short loc_174F0"], ["cmp     byte ptr [esi+5], 3Eh ; '>'", "jz      short loc_174FA"], ["mov     ecx, [esp+14h+nextTokPtr]", "mov     [ecx], ptr", "xor     ptr, ptr", "jmp     short loc_17488"], ["mov     ptr, [esp+14h+nextTokPtr]", "add     esi, 6", "mov     [eax], esi", "mov     eax, 0Dh", "jmp     loc_17488"]], "big2_checkPiTarget": [["push    esi", "push    ebx", "mov     cl, [ptr+1]", "cmp     cl, 58h ; 'X'", "jz      short loc_17570"], ["xor     esi, esi", "mov     ebx, 1", "cmp     cl, 78h ; 'x'", "jnz     short loc_1753E"], ["cmp     byte ptr [eax+2], 0", "mov     ebx, 1", "jnz     short loc_1753E"], ["mov     cl, [eax+3]", "cmp     cl, 4Dh ; 'M'", "jz      short loc_17548"], ["cmp     cl, 6Dh ; 'm'", "jz      short loc_1754D"], ["mov     eax, ebx", "pop     ebx", "pop     esi", "retn"], ["mov     upper, 1"], ["cmp     byte ptr [eax+4], 0", "mov     ebx, 1", "jnz     short loc_1753E"], ["mov     al, [eax+5]", "cmp     al, 4Ch ; 'L'", "jz      short loc_17578"], ["cmp     al, 6Ch ; 'l'", "jnz     short loc_1753E"], ["test    upper, upper", "jnz     short loc_17578"], ["mov     dword ptr [tokPtr], 0Ch", "jmp     short loc_1753E"], ["mov     esi, 1", "jmp     short loc_17526"], ["xor     ebx, ebx", "jmp     short loc_1753E"]], "big2_scanPi": [["push    ebp", "push    edi", "push    esi", "mov     esi, end_0", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "mov     [esp+4Ch+enc], enc_0; end", "mov     enc_0, ptr", "mov     [esp+4Ch+end], end_0", "sub     esi, eax", "mov     ptr, large gs:14h", "mov     [esp+4Ch+var_20], ptr", "xor     ptr, ptr", "mov     ebp, [esp+4Ch+nextTokPtr]", "cmp     esi, 1", "jle     loc_17778"], ["mov     dl, [target_0]", "mov     cl, [target_0+1]", "mov     [esp+4Ch+var_3D], cl", "test    dl, dl", "jz      short loc_17608"], ["mov     edi, edx", "cmp     dl, 0DFh", "ja      loc_176E0"], ["cmp     dl, 0DBh", "ja      short _L3248; jumptable 00017632 default case, cases 8-21,23,25-28"], ["lea     ecx, [edx+28h]", "cmp     cl, 3", "ja      short loc_17640"], ["cmp     esi, 3; jumptable 00017632 case 7", "jle     loc_1784A"], ["mov     [ebp+0], target_0; jumptable 00017632 default case, cases 8-21,23,25-28", "xor     target_0, target_0"], ["mov     ebx, [esp+4Ch+var_20]", "xor     ebx, large gs:14h", "jnz     loc_17947"], ["add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edi, ecx", "mov     ecx, [esp+4Ch+enc]", "and     edi, 0FFh", "movzx   edi, byte ptr [ecx+edi+48h]", "sub     edi, 6; switch 24 cases", "mov     ecx, edi", "cmp     cl, 17h", "ja      short _L3248; jumptable 00017632 default case, cases 8-21,23,25-28"], ["and     edi, 0FFh", "mov     ecx, ds:(jpt_17632 - 2DF78h)[ebx+edi*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["xor     edi, edi; jumptable 00017632 case 29", "lea     esi, [esi+0]"], ["and     edi, 0FFh", "mov     cl, [esp+4Ch+var_3D]", "shr     cl, 5", "movzx   esi, ds:(nmstrtPages - 2DF78h)[ebx+edi]", "and     esi, 0FFh", "mov     edi, esi", "mov     esi, ecx", "and     esi, 0FFh", "mov     cl, [esp+4Ch+var_3D]", "lea     esi, [esi+edi*8]", "mov     esi, ds:(namingBitmap - 2DF78h)[ebx+esi*4]", "shr     esi, cl", "and     esi, 1", "jz      _L3248; jumptable 00017632 default case, cases 8-21,23,25-28"], ["lea     esi, [target_0+2]; jumptable 00017632 cases 22,24", "mov     edi, [esp+4Ch+end]", "sub     edi, ptr", "cmp     edi, 1", "jle     loc_17778"], ["lea     ecx, (namePages - 2DF78h)[ebx]", "mov     [esp+4Ch+target], target_0", "mov     [esp+4Ch+var_38], ecx", "lea     ecx, (namingBitmap - 2DF78h)[ebx]", "mov     [esp+4Ch+var_34], ecx"], ["mov     al, [ptr]", "mov     cl, [ptr+1]", "mov     [esp+4Ch+var_3D], cl", "test    al, al", "jz      short loc_17708"], ["cmp     al, 0DFh", "ja      loc_17790"], ["cmp     al, 0DBh", "ja      short _L3262; jumptable 00017729 default case, cases 5,8,11-14,16-20,23,28"], ["lea     ecx, [eax+28h]", "cmp     cl, 3", "ja      short loc_17730"], ["cmp     edi, 3; jumptable 00017729 case 7", "jle     loc_1784A"], ["mov     [ebp+0], ptr; jumptable 00017729 default case, cases 5,8,11-14,16-20,23,28", "xor     eax, eax", "jmp     loc_175ED"], ["cmp     dl, 0FFh", "jnz     loc_17640"], ["movzx   esi, [esp+4Ch+var_3D]", "and     esi, 0FFh", "sub     esi, 0FEh", "cmp     esi, 1", "jbe     _L3248; jumptable 00017632 default case, cases 8-21,23,25-28"], ["jmp     loc_17640"], ["xor     eax, eax", "mov     al, cl", "mov     ecx, [esp+4Ch+enc]", "mov     al, [ecx+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      short _L3262; jumptable 00017729 default case, cases 5,8,11-14,16-20,23,28"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_17729 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["xor     eax, eax; jumptable 00017729 case 29", "lea     ptr, [ptr+0]"], ["and     eax, 0FFh", "mov     edi, [esp+4Ch+var_38]", "xor     ecx, ecx", "mov     cl, [edi+eax]", "mov     al, [esp+4Ch+var_3D]", "shr     al, 5", "mov     edi, [esp+4Ch+var_34]", "and     eax, 0FFh", "lea     eax, [eax+ecx*8]", "mov     cl, [esp+4Ch+var_3D]", "mov     eax, [edi+eax*4]", "shr     eax, cl", "test    al, 1", "jz      _L3262; jumptable 00017729 default case, cases 5,8,11-14,16-20,23,28"], ["add     ptr, 2; jumptable 00017729 cases 22,24-27", "mov     edi, [esp+4Ch+end]", "sub     edi, ptr", "cmp     edi, 1", "jg      loc_176A8"], ["lea     esi, [esi+0]"], ["or      eax, 0FFFFFFFFh", "jmp     loc_175ED"], ["cmp     esi, 2; jumptable 00017632 case 6", "jnz     _L3248; jumptable 00017632 default case, cases 8-21,23,25-28"], ["jmp     loc_1784A"], ["cmp     al, 0FFh", "jnz     short loc_17730"], ["xor     ecx, ecx", "mov     cl, [esp+4Ch+var_3D]", "sub     ecx, 0FEh", "cmp     ecx, 1", "jbe     _L3262; jumptable 00017729 default case, cases 5,8,11-14,16-20,23,28"], ["jmp     short loc_17730"], ["mov     eax, [esp+4Ch+target]; jumptable 00017729 cases 9,10,21", "mov     ecx, ptr", "sub     ecx, eax", "mov     [esp+4Ch+tok], 0Bh", "cmp     ecx, 6", "jnz     short loc_177CD"], ["test    dl, dl", "jz      loc_17914"], ["lea     edx, [ptr+2]", "mov     edi, [esp+4Ch+end]", "sub     edi, ptr", "cmp     edi, 1", "jle     short loc_17778"], ["mov     al, [esi+2]", "mov     cl, [esi+3]"], ["test    al, al", "jnz     loc_178A8"], ["and     ecx, 0FFh", "mov     eax, [esp+4Ch+enc]", "cmp     byte ptr [eax+ecx+48h], 0Fh", "ja      short _L3276; jumptable 0001780B cases 2-5,9-14"], ["mov     esi, eax", "xor     eax, eax", "mov     al, [esi+ecx+48h]", "mov     esi, ds:(jpt_1780B - 2DF78h)[ebx+eax*4]; switch 16 cases", "add     esi, ebx", "jmp     esi; switch jump"], ["inc     al", "jnz     short _L3276; jumptable 0001780B cases 2-5,9-14"], ["xor     eax, eax", "mov     al, cl", "sub     eax, 0FEh", "cmp     eax, 1", "jbe     short _L3279; jumptable 0001780B cases 0,1,8"], ["lea     esi, [esi+0]"], ["add     edx, 2; jumptable 0001780B cases 2-5,9-14"], ["mov     edi, [esp+4Ch+end]", "sub     edi, ptr", "cmp     edi, 1", "jle     loc_17778"], ["mov     al, [ptr]", "mov     cl, [ptr+1]", "jmp     short loc_177E1"], ["cmp     edi, 2; jumptable 00017729 case 6", "jnz     _L3262; jumptable 00017729 default case, cases 5,8,11-14,16-20,23,28"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_175ED"], ["mov     eax, [esp+4Ch+target]; jumptable 00017729 case 15", "mov     ecx, ptr", "sub     ecx, eax", "mov     [esp+4Ch+tok], 0Bh", "cmp     ecx, 6", "jnz     short loc_17871"], ["test    dl, dl", "jz      loc_1792D"], ["lea     eax, [ptr+2]", "mov     ecx, [esp+4Ch+end]", "sub     ecx, ptr", "dec     ecx", "jle     loc_17778"], ["cmp     byte ptr [esi+2], 0", "jnz     short loc_1788D"], ["cmp     byte ptr [esi+3], 3Eh ; '>'", "jz      short loc_17905"], ["mov     esi, ptr", "jmp     _L3262; jumptable 00017729 default case, cases 5,8,11-14,16-20,23,28"], ["mov     [ebp+0], edx; jumptable 0001780B cases 0,1,8", "xor     eax, eax", "jmp     loc_175ED"], ["cmp     al, 0DFh", "ja      loc_17810"], ["cmp     al, 0DBh", "ja      short _L3279; jumptable 0001780B cases 0,1,8"], ["add     eax, 28h ; '('", "cmp     al, 3", "ja      _L3276; jumptable 0001780B cases 2-5,9-14"], ["cmp     edi, 3; jumptable 0001780B case 7", "jle     short loc_1784A"], ["add     edx, 4", "jmp     loc_1782B"], ["cmp     edi, 2; jumptable 0001780B case 6", "jz      loc_1784A"], ["add     edx, 3", "jmp     loc_1782B"], ["lea     esi, [edx+2]; jumptable 0001780B case 15", "mov     edi, [esp+4Ch+end]", "sub     edi, ptr", "cmp     edi, 1", "jle     loc_17778"], ["mov     al, [edx+2]", "mov     cl, [edx+3]", "test    al, al", "jnz     short loc_17940"], ["cmp     cl, 3Eh ; '>'", "jz      short loc_1794C"], ["mov     edx, ptr", "jmp     loc_177E9"], ["add     esi, 4", "mov     ptr, [esp+4Ch+tok]", "mov     [ebp+0], esi", "jmp     loc_175ED"], ["lea     edx, [esp+4Ch+tok]", "call    big2_checkPiTarget", "test    eax, eax", "jnz     loc_177CD"], ["mov     [ebp+0], ptr", "jmp     loc_175ED"], ["lea     edx, [esp+4Ch+tok]", "call    big2_checkPiTarget", "test    eax, eax", "jnz     loc_17871"], ["jmp     short loc_17925"], ["mov     edx, ptr", "jmp     loc_177E1"], ["call    __stack_chk_fail_local"], ["add     edx, 4", "mov     eax, [esp+4Ch+tok]", "mov     [ebp+0], edx", "jmp     loc_175ED"]], "big2_contentTok": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "mov     eax, [esp+4Ch+enc]", "mov     edi, [esp+4Ch+ptr]", "mov     [esp+4Ch+var_44], eax", "mov     eax, [esp+4Ch+nextTokPtr]", "mov     ebp, [esp+4Ch+end]", "mov     [esp+4Ch+var_3C], eax", "mov     eax, large gs:14h", "mov     [esp+4Ch+var_20], eax", "xor     eax, eax", "cmp     edi, ebp", "jnb     loc_18158"], ["mov     eax, ebp", "sub     eax, edi", "test    al, 1", "jz      short loc_179B2"], ["and     eax, 0FFFFFFFEh", "jz      loc_18172"], ["lea     ebp, [edi+n]"], ["mov     al, [edi]", "mov     dl, [edi+1]", "test    al, al", "jz      short loc_179E0"], ["cmp     al, 0DFh", "ja      short loc_17A08"], ["cmp     al, 0DBh", "ja      short _L3343; jumptable 00017A00 cases 0,1,8"], ["add     eax, 28h ; '('", "cmp     al, 3", "ja      short def_17A00; jumptable 00017A00 default case"], ["mov     eax, end_0; jumptable 00017A00 case 7", "sub     eax, edi", "cmp     eax, 3", "jle     loc_17D47"], ["lea     eax, [edi+4]", "jmp     short loc_17A43"], ["and     edx, 0FFh", "mov     esi, [esp+4Ch+var_44]", "cmp     byte ptr [esi+edx+48h], 0Ah; switch 11 cases", "ja      short def_17A00; jumptable 00017A00 default case"], ["xor     eax, eax", "mov     al, [esi+edx+48h]", "mov     ecx, ds:(jpt_17A00 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["inc     al", "jnz     short def_17A00; jumptable 00017A00 default case"], ["and     edx, 0FFh", "sub     edx, 0FEh", "cmp     edx, 1", "ja      short def_17A00; jumptable 00017A00 default case"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00017A00 cases 0,1,8", "mov     [eax], edi", "xor     eax, eax"], ["mov     esi, [esp+4Ch+var_20]", "xor     esi, large gs:14h", "jnz     loc_182FA"], ["add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     eax, [edi+2]; jumptable 00017A00 default case"], ["mov     edi, end_0", "sub     edi, ptr_0", "mov     [esp+4Ch+var_40], edi", "dec     edi", "jle     loc_17ADA"], ["mov     cl, [ptr_0+1]", "mov     dl, [ptr_0]", "mov     byte ptr [esp+4Ch+var_48], cl"], ["test    dl, dl", "jnz     loc_17AF0"], ["xor     ecx, ecx", "mov     esi, [esp+4Ch+var_44]", "mov     cl, byte ptr [esp+4Ch+var_48]", "cmp     byte ptr [esi+ecx+48h], 0Ah; switch 11 cases", "ja      short _L3514; jumptable 00017A83 default case, case 5"], ["xor     edx, edx", "mov     dl, [esi+ecx+48h]", "mov     edi, ds:(jpt_17A83 - 2DF78h)[ebx+edx*4]", "add     edi, ebx", "jmp     edi; switch jump"], ["inc     dl", "jnz     short _L3514; jumptable 00017A83 default case, case 5"], ["xor     ecx, ecx", "mov     cl, byte ptr [esp+4Ch+var_48]", "sub     ecx, 0FEh", "cmp     ecx, 1", "ja      short _L3514; jumptable 00017A83 default case, case 5"], ["lea     esi, [esi+0]"], ["mov     esi, [esp+4Ch+var_3C]; jumptable 00017A83 cases 0-3,8-10", "mov     [esi], ptr_0", "mov     ptr_0, 6", "jmp     loc_17A25"], ["cmp     [esp+4Ch+var_40], 3; jumptable 00017A83 case 4", "jle     short _L3515; jumptable 00017A83 cases 0-3,8-10"], ["cmp     byte ptr [ptr_0+2], 0", "jnz     short _L3514; jumptable 00017A83 default case, case 5"], ["cmp     byte ptr [ptr_0+3], 5Dh ; ']'", "jz      loc_17C80"], ["nop"], ["add     ptr_0, 2; jumptable 00017A83 default case, case 5"], ["mov     ecx, end_0", "sub     ecx, ptr_0", "mov     [esp+4Ch+var_40], ecx", "dec     ecx", "jg      loc_17A52"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], ptr_0", "mov     ptr_0, 6", "jmp     loc_17A25"], ["cmp     dl, 0DFh", "ja      short loc_17A88"], ["cmp     dl, 0DBh", "ja      short _L3515; jumptable 00017A83 cases 0-3,8-10"], ["add     edx, 28h ; '('", "cmp     dl, 3", "ja      short _L3514; jumptable 00017A83 default case, case 5"], ["cmp     [esp+4Ch+var_40], 3; jumptable 00017A83 case 7", "jle     loc_18162"], ["add     ptr_0, 4", "jmp     short loc_17ACB"], ["cmp     [esp+4Ch+var_40], 2; jumptable 00017A83 case 6", "jz      loc_1817A"], ["add     ptr_0, 3", "jmp     short loc_17ACB"], ["lea     eax, [edi+2]; jumptable 00017A00 case 9", "mov     edx, end_0", "sub     edx, ptr_0", "dec     edx", "jle     loc_1821B"], ["cmp     byte ptr [edi+2], 0", "mov     dl, [edi+3]", "jnz     short loc_17B53"], ["and     edx, 0FFh", "mov     ebx, [esp+4Ch+var_44]", "cmp     byte ptr [ebx+edx+48h], 0Ah", "jnz     short loc_17B53"], ["lea     ptr_0, [edi+4]"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], ptr_0", "mov     ptr_0, 7", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00017A00 case 10", "add     edi, 2", "mov     [eax], edi", "mov     eax, 7", "jmp     loc_17A25"], ["lea     edx, [edi+2]; jumptable 00017A00 case 2", "mov     eax, end_0", "sub     eax, edx", "mov     esi, eax", "dec     eax", "jle     loc_18392"], ["mov     al, [edi+2]", "mov     cl, [edi+3]", "mov     byte ptr [esp+4Ch+var_48], cl", "test    al, al", "jnz     loc_17D98"], ["xor     eax, eax", "mov     al, cl", "mov     ecx, [esp+4Ch+var_44]", "mov     al, [ecx+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      _L3352; jumptable 00017BC7 default case, cases 8-14,18-21,23,25-28"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_17BC7 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["sub     esp, 0Ch; jumptable 00017A00 case 3", "lea     edx, [edi+2]; ptr", "mov     ecx, end_0; end", "mov     eax, [esp+58h+var_3C]", "push    eax; nextTokPtr", "mov     eax, [esp+5Ch+var_44]; enc", "call    big2_scanRef", "add     esp, 10h", "jmp     loc_17A25"], ["mov     eax, end_0; jumptable 00017A00 case 5", "sub     eax, edi", "dec     eax", "jg      def_17A00; jumptable 00017A00 default case"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["mov     eax, end_0; jumptable 00017A00 case 6", "sub     eax, edi", "cmp     eax, 2", "jle     loc_182A1"], ["lea     eax, [edi+3]", "jmp     loc_17A43"], ["lea     eax, [edi+2]; jumptable 00017A00 case 4", "mov     ecx, end_0", "sub     ecx, ptr_0", "mov     [esp+4Ch+var_40], ecx", "dec     ecx", "jle     loc_182AB"], ["mov     dl, [edi+2]", "mov     cl, [edi+3]", "mov     byte ptr [esp+4Ch+var_48], cl", "test    dl, dl", "jnz     loc_17AF0"], ["cmp     cl, 5Dh ; ']'", "jnz     loc_17A5B"], ["lea     ecx, [edi+4]", "mov     esi, end_0", "sub     esi, ptr_0", "dec     esi", "jle     loc_18546"], ["cmp     byte ptr [edi+4], 0", "jnz     loc_17A5B"], ["cmp     byte ptr [edi+5], 3Eh ; '>'", "jnz     loc_17A5B"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], ptr_0", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     [esp+4Ch+var_40], 5", "jle     _L3515; jumptable 00017A83 cases 0-3,8-10"], ["cmp     byte ptr [ptr_0+4], 0", "jnz     _L3514; jumptable 00017A83 default case, case 5"], ["cmp     byte ptr [ptr_0+5], 3Eh ; '>'", "jnz     _L3514; jumptable 00017A83 default case, case 5"], ["mov     esi, [esp+4Ch+var_3C]", "add     ptr_0, 4", "mov     [esi], eax", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     al, 0FFh", "jnz     loc_17ED0"], ["mov     cl, byte ptr [esp+4Ch+var_48]", "and     ecx, 0FFh", "lea     esi, [ecx-0FEh]", "cmp     esi, 1", "ja      loc_17ED0"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00017BC7 default case, cases 8-14,18-21,23,25-28", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["add     edi, 4; jumptable 00017BC7 cases 22,24", "mov     eax, end_0", "sub     eax, edi", "mov     [esp+4Ch+var_40], eax", "dec     eax", "jle     loc_183A7"], ["lea     esi, (namePages - 2DF78h)[ebx]", "xor     eax, eax", "mov     [esp+4Ch+var_34], esi", "lea     esi, (namingBitmap - 2DF78h)[ebx]", "mov     [esp+4Ch+var_38], esi", "mov     [esp+4Ch+var_48], eax", "mov     esi, [esp+4Ch+var_44]"], ["mov     dl, [edi]", "mov     cl, [edi+1]", "mov     byte ptr [esp+4Ch+var_44], cl", "test    dl, dl", "jnz     loc_17F68"], ["xor     edx, edx", "mov     dl, cl", "mov     dl, [esi+edx+48h]", "sub     edx, 5; switch 25 cases", "cmp     dl, 18h", "ja      short _L3404; jumptable 00017D45 default case, cases 8,12-16,18-20,28"], ["and     edx, 0FFh", "mov     ecx, ds:(jpt_17D45 - 2DF78h)[ebx+edx*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["add     edi, 2; jumptable 00017D45 cases 22,24-27"], ["mov     ecx, end_0", "sub     ecx, edi", "mov     [esp+4Ch+var_40], ecx", "dec     ecx", "jg      short loc_17D15"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["cmp     dl, 0FFh", "jnz     loc_1805F"], ["xor     ecx, ecx", "mov     cl, byte ptr [esp+4Ch+var_44]", "sub     ecx, 0FEh", "cmp     ecx, 1", "ja      loc_1805F"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00017D45 default case, cases 8,12-16,18-20,28", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     al, 0DFh", "ja      loc_17CB0"], ["cmp     al, 0DBh", "ja      _L3352; jumptable 00017BC7 default case, cases 8-14,18-21,23,25-28"], ["lea     ecx, [eax+28h]", "cmp     cl, 3", "ja      loc_17ED0"], ["cmp     esi, 3; jumptable 00017BC7 case 7", "jle     loc_183FC"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     esi, 2; jumptable 00017BC7 case 6", "jz      loc_18515"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["lea     edx, [edi+4]; jumptable 00017BC7 case 16", "mov     eax, end_0", "sub     eax, edx", "dec     eax", "jle     loc_1856B"], ["cmp     byte ptr [edi+4], 0", "jnz     loc_1818A"], ["xor     eax, eax", "mov     esi, [esp+4Ch+var_44]", "mov     al, [edi+5]", "mov     al, [esi+eax+48h]", "cmp     al, 14h", "jz      loc_182B5"], ["cmp     al, 1Bh", "jnz     loc_1818A"], ["lea     edx, [edi+6]; ptr", "mov     eax, end_0", "sub     eax, edx", "dec     eax", "jle     loc_18550"], ["cmp     byte ptr [edi+6], 0", "jnz     loc_1839A"], ["cmp     byte ptr [edi+7], 2Dh ; '-'", "jnz     loc_1839A"], ["push    [esp+4Ch+var_3C]; nextTokPtr", "mov     ecx, end_0; end", "mov     eax, [esp+50h+var_44]; enc", "call    big2_scanComment", "pop     ebx", "jmp     loc_17A25"], ["sub     esp, 0Ch; jumptable 00017BC7 case 15", "lea     edx, [edi+4]; ptr", "mov     ecx, [esp+58h+var_3C]", "push    ecx; nextTokPtr", "mov     ecx, end_0; end", "mov     eax, [esp+5Ch+var_44]; enc", "call    big2_scanPi", "add     esp, 10h", "jmp     loc_17A25"], ["lea     eax, [edi+4]; jumptable 00017BC7 case 17", "mov     esi, eax", "mov     [esp+4Ch+var_48], eax", "mov     eax, end_0", "sub     eax, esi", "mov     [esp+4Ch+var_40], eax", "dec     eax", "jle     loc_18472"], ["mov     al, [edi+4]", "mov     cl, [edi+5]", "test    al, al", "jnz     loc_18197"], ["xor     edx, edx", "mov     esi, [esp+4Ch+var_44]", "mov     dl, cl", "mov     dl, [esi+edx+48h]", "sub     edx, 5; switch 25 cases", "cmp     dl, 18h", "ja      _L3374; jumptable 00017EBB default case, cases 8-21,23,25-28"], ["and     edx, 0FFh", "mov     esi, ds:(jpt_17EBB - 2DF78h)[ebx+edx*4]", "add     esi, ebx", "jmp     esi; switch jump"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00017BC7 case 5", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["xor     eax, eax; jumptable 00017BC7 case 29", "lea     esi, [esi+0]"], ["and     eax, 0FFh", "xor     ecx, ecx", "mov     cl, ds:(nmstrtPages - 2DF78h)[ebx+eax]", "mov     al, byte ptr [esp+4Ch+var_48]", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+ecx*8]", "mov     cl, byte ptr [esp+4Ch+var_48]", "mov     eax, ds:(namingBitmap - 2DF78h)[ebx+eax*4]", "shr     eax, cl", "test    al, 1", "jnz     _L3355; jumptable 00017BC7 cases 22,24"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["add     edi, 2; jumptable 00017D45 cases 9,10,21", "mov     eax, end_0", "sub     eax, edi", "mov     [esp+4Ch+var_48], eax", "dec     eax", "jle     loc_18BB4"], ["mov     al, [edi]", "mov     cl, [edi+1]", "mov     byte ptr [esp+4Ch+var_44], al", "test    al, al", "jnz     loc_18B7C"], ["xor     edx, edx", "mov     dl, cl", "mov     dl, [esi+edx+48h]", "sub     edx, 5; switch 25 cases", "cmp     dl, 18h", "ja      _L3429; jumptable 00017F55 default case, cases 8,12-16,18-20,23,25-28"], ["and     edx, 0FFh", "mov     eax, ds:(jpt_17F55 - 2DF78h)[ebx+edx*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00017EBB default case, cases 8-21,23,25-28", "mov     esi, [esp+4Ch+var_48]", "mov     [eax], esi", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     dl, 0DFh", "ja      loc_17D68"], ["cmp     dl, 0DBh", "ja      _L3404; jumptable 00017D45 default case, cases 8,12-16,18-20,28"], ["lea     ecx, [edx+28h]", "cmp     cl, 3", "ja      loc_1805F"], ["cmp     [esp+4Ch+var_40], 3; jumptable 00017D45 case 7", "jle     loc_1853C"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     [esp+4Ch+var_40], 2; jumptable 00017D45 case 6", "jz      loc_1848C"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00017D45 case 11", "add     edi, 2", "mov     [eax], edi", "mov     eax, 2", "jmp     loc_17A25"], ["lea     eax, [edi+2]; jumptable 00017D45 case 17", "mov     edx, end_0", "sub     edx, eax", "dec     edx", "jle     loc_18496"], ["cmp     byte ptr [edi+2], 0", "jnz     short loc_17FE7"], ["cmp     byte ptr [edi+3], 3Eh ; '>'", "jz      loc_183C0"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], eax", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00017D45 case 5", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     [esp+4Ch+var_48], 0; jumptable 00017D45 case 23", "jnz     loc_18508"], ["lea     ecx, [edi+2]", "mov     edx, ecx", "mov     [esp+4Ch+var_44], ecx", "mov     ecx, end_0", "sub     ecx, edx", "mov     [esp+4Ch+var_30], ecx", "dec     ecx", "jle     loc_18500"], ["mov     dl, [edi+2]", "mov     cl, [edi+3]", "mov     byte ptr [esp+4Ch+var_40], cl", "test    dl, dl", "jnz     loc_182FF"], ["mov     al, cl", "xor     ecx, ecx", "mov     cl, al", "mov     cl, [esi+ecx+48h]", "sub     ecx, 5; switch 25 cases", "cmp     cl, 18h", "ja      _L3419; jumptable 0001805B default case, cases 8-21,23,25-28"], ["and     ecx, 0FFh", "mov     eax, ds:(jpt_1805B - 2DF78h)[ebx+ecx*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["xor     edx, edx; jumptable 00017D45 case 29"], ["and     edx, 0FFh", "mov     eax, [esp+4Ch+var_34]", "xor     ecx, ecx", "mov     cl, [eax+edx]", "mov     dl, byte ptr [esp+4Ch+var_44]", "shr     dl, 5", "mov     eax, [esp+4Ch+var_38]", "and     edx, 0FFh", "lea     edx, [edx+ecx*8]", "mov     cl, byte ptr [esp+4Ch+var_44]", "mov     edx, [eax+edx*4]", "shr     edx, cl", "and     edx, 1", "jnz     _L3407; jumptable 00017D45 cases 22,24-27"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["add     edi, 6; jumptable 00017EBB cases 22,24", "mov     eax, end_0", "sub     eax, edi", "mov     [esp+4Ch+var_48], eax", "dec     eax", "jle     loc_18484"], ["lea     eax, (namePages - 2DF78h)[ebx]", "mov     [esp+4Ch+var_40], eax", "lea     eax, (namingBitmap - 2DF78h)[ebx]", "mov     [esp+4Ch+var_38], eax"], ["mov     al, [edi]", "mov     cl, [edi+1]", "test    al, al", "jnz     loc_18225"], ["xor     edx, edx", "mov     esi, [esp+4Ch+var_44]", "mov     dl, cl", "mov     dl, [esi+edx+48h]", "sub     edx, 5; switch 25 cases", "cmp     dl, 18h", "ja      short _L3384; jumptable 000180F7 default case, cases 8,12-20,28"], ["and     edx, 0FFh", "mov     esi, ds:(jpt_180F7 - 2DF78h)[ebx+edx*4]", "add     esi, ebx", "jmp     esi; switch jump"], ["add     edi, 2; jumptable 000180F7 cases 22-27", "mov     eax, end_0", "sub     eax, edi", "mov     [esp+4Ch+var_48], eax", "dec     eax", "jg      short loc_180C7"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 000180F7 default case, cases 8,12-20,28", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     al, 0FFh", "jnz     loc_1857B"], ["xor     edx, edx", "mov     dl, cl", "sub     edx, 0FEh", "cmp     edx, 1", "ja      loc_1857B"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00017F55 default case, cases 8,12-16,18-20,23,25-28", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["mov     esi, [esp+4Ch+var_3C]; jumptable 0001805B default case, cases 8-21,23,25-28", "mov     ebx, [esp+4Ch+var_44]", "mov     eax, [esp+4Ch+var_48]", "mov     [esi], ebx", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFCh", "jmp     loc_17A25"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], ptr_0", "mov     ptr_0, 6", "jmp     loc_17A25"], ["or      n, 0FFFFFFFFh", "jmp     loc_17A25"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], ptr_0", "mov     ptr_0, 6", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     al, 0DFh", "ja      short loc_181C7"], ["cmp     al, 0DBh", "ja      _L3374; jumptable 00017EBB default case, cases 8-21,23,25-28"], ["lea     edx, [eax+28h]", "cmp     dl, 3", "ja      short _L3375; jumptable 00017EBB case 29"], ["cmp     [esp+4Ch+var_40], 3; jumptable 00017EBB case 7", "jle     loc_1847A"], ["mov     eax, [esp+4Ch+var_3C]", "mov     esi, [esp+4Ch+var_48]", "mov     [eax], esi", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     al, 0FFh", "jnz     short _L3375; jumptable 00017EBB case 29"], ["xor     edx, edx", "mov     dl, cl", "sub     edx, 0FEh", "cmp     edx, 1", "jbe     _L3374; jumptable 00017EBB default case, cases 8-21,23,25-28"], ["and     eax, 0FFh; jumptable 00017EBB case 29", "xor     edx, edx", "mov     dl, ds:(nmstrtPages - 2DF78h)[ebx+eax]", "mov     al, cl", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     eax, ds:(namingBitmap - 2DF78h)[ebx+eax*4]", "shr     eax, cl", "test    al, 1", "jnz     _L3377; jumptable 00017EBB cases 22,24"], ["mov     eax, [esp+4Ch+var_3C]", "mov     esi, [esp+4Ch+var_48]", "mov     [eax], esi", "xor     eax, eax", "jmp     loc_17A25"], ["mov     ptr_0, 0FFFFFFFDh", "jmp     loc_17A25"], ["cmp     al, 0DFh", "ja      short loc_18251"], ["cmp     al, 0DBh", "ja      _L3384; jumptable 000180F7 default case, cases 8,12-20,28"], ["lea     edx, [eax+28h]", "cmp     dl, 3", "ja      short _L3385; jumptable 000180F7 case 29"], ["cmp     [esp+4Ch+var_48], 3; jumptable 000180F7 case 7", "jle     loc_18434"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     al, 0FFh", "jnz     short _L3385; jumptable 000180F7 case 29"], ["xor     edx, edx", "mov     dl, cl", "sub     edx, 0FEh", "cmp     edx, 1", "jbe     _L3384; jumptable 000180F7 default case, cases 8,12-20,28"], ["and     eax, 0FFh; jumptable 000180F7 case 29", "mov     esi, [esp+4Ch+var_40]", "xor     edx, edx", "mov     dl, [esi+eax]", "mov     al, cl", "shr     al, 5", "mov     esi, [esp+4Ch+var_38]", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     eax, [esi+eax*4]", "shr     eax, cl", "test    al, 1", "jnz     _L3388; jumptable 000180F7 cases 22-27"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["mov     ptr_0, 0FFFFFFFBh", "jmp     loc_17A25"], ["lea     edx, [edi+6]", "mov     eax, end_0", "sub     eax, edx", "cmp     eax, 0Bh", "jle     loc_1846A"], ["lea     eax, (CDATA_LSQB_4052 - 2DF78h)[ebx]; \"CDATA[\"", "add     edi, 12h"], ["cmp     byte ptr [edx], 0", "jnz     loc_183D3"], ["mov     cl, [eax]", "cmp     [edx+1], cl", "jnz     loc_183D3"], ["add     edx, 2", "inc     eax", "cmp     edi, edx", "jnz     short loc_182CE"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "mov     eax, 8", "jmp     loc_17A25"], ["call    __stack_chk_fail_local"], ["cmp     dl, 0DFh", "ja      short loc_18333"], ["cmp     dl, 0DBh", "ja      _L3419; jumptable 0001805B default case, cases 8-21,23,25-28"], ["lea     ecx, [edx+28h]", "cmp     cl, 3", "ja      short _L3420; jumptable 0001805B case 29"], ["cmp     [esp+4Ch+var_30], 3; jumptable 0001805B case 7", "mov     eax, [esp+4Ch+var_48]", "jle     loc_18532"], ["mov     esi, [esp+4Ch+var_3C]", "mov     ebx, [esp+4Ch+var_44]", "mov     [esi], ebx", "jmp     loc_17A25"], ["cmp     dl, 0FFh", "jnz     short _L3420; jumptable 0001805B case 29"], ["xor     ecx, ecx", "mov     cl, byte ptr [esp+4Ch+var_40]", "sub     ecx, 0FEh", "cmp     ecx, 1", "jbe     _L3419; jumptable 0001805B default case, cases 8-21,23,25-28"], ["and     edx, 0FFh; jumptable 0001805B case 29", "xor     ecx, ecx", "mov     eax, [esp+4Ch+var_38]", "mov     cl, ds:(nmstrtPages - 2DF78h)[ebx+edx]", "mov     dl, byte ptr [esp+4Ch+var_40]", "shr     dl, 5", "and     edx, 0FFh", "lea     edx, [edx+ecx*8]", "mov     cl, byte ptr [esp+4Ch+var_40]", "mov     edx, [eax+edx*4]", "shr     edx, cl", "and     dl, 1", "jz      loc_1851F"], ["add     edi, 4; jumptable 0001805B cases 22,24", "mov     [esp+4Ch+var_48], 1", "jmp     loc_17D54"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00017EBB case 5", "mov     esi, [esp+4Ch+var_48]", "mov     [eax], esi", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]", "add     edi, 4", "mov     [eax], edi", "mov     eax, 4", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     [esp+4Ch+var_40], 2; jumptable 00017EBB case 6", "jz      loc_18BD3"], ["mov     eax, [esp+4Ch+var_3C]", "mov     esi, [esp+4Ch+var_48]", "mov     [eax], esi", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["add     edi, 2; jumptable 000180F7 cases 9,10,21", "mov     esi, [esp+4Ch+var_44]"], ["mov     eax, end_0", "sub     eax, edi", "dec     eax", "jle     short loc_18462"], ["cmp     byte ptr [edi], 0", "jnz     short loc_18442"], ["xor     eax, eax", "mov     al, [edi+1]", "mov     al, [esi+eax+48h]", "cmp     al, 0Bh", "jz      short loc_1844F"], ["ja      short loc_1843E"], ["sub     eax, 9", "cmp     al, 1", "ja      short loc_18442"], ["add     edi, 2", "jmp     short loc_1840D"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["cmp     al, 15h", "jz      short loc_1842F"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]", "add     edi, 2", "mov     [eax], edi", "mov     eax, 5", "jmp     loc_17A25"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["cmp     [esp+4Ch+var_30], 2; jumptable 0001805B case 6", "mov     eax, [esp+4Ch+var_48]", "jz      short loc_184CB"], ["mov     esi, [esp+4Ch+var_3C]", "mov     ebx, [esp+4Ch+var_44]", "mov     [esi], ebx", "jmp     loc_17A25"], ["mov     esi, [esp+4Ch+var_3C]; jumptable 0001805B case 5", "mov     ebx, [esp+4Ch+var_44]", "mov     eax, [esp+4Ch+var_48]", "mov     [esi], ebx", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["cmp     [esp+4Ch+var_48], 2; jumptable 000180F7 case 6", "jz      short loc_184F6"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 000180F7 case 5", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["mov     esi, [esp+4Ch+var_3C]", "mov     ebx, [esp+4Ch+var_44]", "mov     eax, [esp+4Ch+var_48]", "mov     [esi], ebx", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFBh", "jmp     loc_17A25"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 000180F7 case 11", "add     edi, 2", "mov     [eax], edi", "mov     eax, 5", "jmp     loc_17A25"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["mov     al, byte ptr [esp+4Ch+var_44]; jumptable 00017F55 case 29", "mov     [esp+4Ch+var_44], esi"], ["and     eax, 0FFh", "xor     edx, edx", "mov     dl, ds:(nmstrtPages - 2DF78h)[ebx+eax]", "mov     al, cl", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     eax, ds:(namingBitmap - 2DF78h)[ebx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      loc_189E5"], ["lea     esi, (namePages - 2DF78h)[ebx]", "add     edi, 2", "xor     eax, eax", "mov     [esp+4Ch+var_34], esi", "mov     [esp+4Ch+var_24], edi", "mov     [esp+4Ch+var_48], eax", "mov     esi, [esp+4Ch+var_44]"], ["mov     edx, [esp+4Ch+var_24]", "mov     eax, end_0", "sub     eax, edx", "mov     [esp+4Ch+var_40], eax", "dec     eax", "jle     loc_189D0"], ["mov     cl, [edx]", "mov     al, [edx+1]", "mov     byte ptr [esp+4Ch+var_44], al", "test    cl, cl", "jnz     short loc_18609"], ["mov     edi, eax", "and     edi, 0FFh", "movzx   edi, byte ptr [esi+edi+48h]", "sub     edi, 5; switch 25 cases", "mov     eax, edi", "cmp     al, 18h", "ja      short _L3440; jumptable 00018607 default case, cases 8,11-13,15-20,28"], ["and     edi, 0FFh", "mov     eax, ds:(jpt_18607 - 2DF78h)[ebx+edi*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["cmp     cl, 0DFh", "ja      short loc_18638"], ["cmp     cl, 0DBh", "ja      short _L3440; jumptable 00018607 default case, cases 8,11-13,15-20,28"], ["lea     edi, [ecx+28h]", "mov     eax, edi", "cmp     al, 3", "ja      _L3441; jumptable 00018607 case 29"], ["cmp     [esp+4Ch+var_40], 3; jumptable 00018607 case 7", "jle     loc_18A06"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     cl, 0FFh", "jnz     _L3441; jumptable 00018607 case 29"], ["movzx   edi, byte ptr [esp+4Ch+var_44]", "and     edi, 0FFh", "sub     edi, 0FEh", "cmp     edi, 1", "ja      _L3441; jumptable 00018607 case 29"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00018607 default case, cases 8,11-13,15-20,28", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["xor     ecx, ecx", "mov     cl, [edx+3]", "movzx   edi, byte ptr [esi+ecx+48h]", "and     edi, 0FFh", "lea     ecx, [edi-0Ch]", "cmp     ecx, 1", "jbe     short loc_186EA"], ["cmp     edi, 0Ah", "jle     short loc_186E1"], ["cmp     edi, 15h", "jnz     short loc_186A4"], ["mov     edx, eax"], ["lea     eax, [edx+2]; jumptable 00018607 case 14", "mov     ecx, end_0", "sub     ecx, eax", "mov     [esp+4Ch+var_24], eax", "dec     ecx", "jle     loc_189D0"], ["cmp     byte ptr [edx+2], 0", "jz      short loc_18668"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], eax", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     dl, 15h", "jnz     short loc_186D4"], ["mov     edx, eax"], ["lea     eax, [edx+2]; jumptable 00018607 cases 9,10,21", "mov     ecx, end_0", "sub     ecx, eax", "mov     [esp+4Ch+var_24], eax", "dec     ecx", "jle     loc_189D0"], ["cmp     byte ptr [edx+2], 0", "jz      loc_1882B"], ["mov     esi, [esp+4Ch+var_3C]", "mov     [esi], eax", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     edi, 8", "jle     short loc_186A4"], ["mov     edx, eax", "jmp     short _L3591; jumptable 00018607 case 14"], ["add     edx, 4", "lea     eax, [esp+4Ch+var_24]", "mov     [esp+4Ch+var_24], edx", "mov     [esp+4Ch+var_44], eax"], ["mov     ecx, [esp+4Ch+var_24]", "mov     eax, end_0", "sub     eax, ecx", "mov     [esp+4Ch+var_48], eax", "dec     eax", "jle     loc_189D0"], ["mov     al, [ecx]", "mov     dl, [ecx+1]", "test    al, al", "jnz     short loc_18753"], ["and     edx, 0FFh", "xor     eax, eax", "mov     dl, [esi+edx+48h]", "mov     al, dl", "cmp     edi, eax", "jz      loc_187E1"], ["cmp     dl, 8", "ja      _L3479; jumptable 0001873D cases 4,5"], ["mov     edx, ds:(jpt_1873D - 2DF78h)[ebx+eax*4]; switch 9 cases", "add     edx, ebx", "jmp     edx; switch jump"], ["cmp     [esp+4Ch+var_48], 2; jumptable 0001873D case 6", "jz      loc_18A06"], ["add     ecx, 3", "mov     [esp+4Ch+var_24], ecx", "jmp     short loc_186F9"], ["cmp     al, 0DFh", "ja      short loc_187B6"], ["cmp     al, 0DBh", "ja      short _L3478; jumptable 0001873D cases 0,1,8"], ["add     eax, 28h ; '('", "cmp     al, 3", "ja      short _L3479; jumptable 0001873D cases 4,5"], ["cmp     [esp+4Ch+var_48], 3; jumptable 0001873D case 7", "jle     loc_18A06"], ["add     ecx, 4", "mov     [esp+4Ch+var_24], ecx", "jmp     short loc_186F9"], ["sub     esp, 0Ch; jumptable 0001873D case 3", "lea     edx, [ecx+2]; ptr", "mov     eax, esi; enc", "mov     ecx, end_0; end", "push    [esp+58h+var_44]; nextTokPtr", "call    big2_scanRef", "add     esp, 10h", "test    eax, eax", "jg      loc_186F9"], ["jnz     loc_17A25"], ["mov     esi, [esp+4Ch+var_3C]", "mov     edx, [esp+4Ch+var_24]", "mov     [esi], edx", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 0001873D case 2", "mov     [eax], ecx", "xor     eax, eax", "jmp     loc_17A25"], ["inc     al", "jnz     short _L3479; jumptable 0001873D cases 4,5"], ["xor     eax, eax", "mov     al, dl", "sub     eax, 0FEh", "cmp     eax, 1", "ja      short _L3479; jumptable 0001873D cases 4,5"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 0001873D cases 0,1,8", "mov     [eax], ecx", "xor     eax, eax", "jmp     loc_17A25"], ["add     ecx, 2; jumptable 0001873D cases 4,5", "mov     [esp+4Ch+var_24], ecx", "jmp     loc_186F9"], ["lea     edx, [ecx+2]", "mov     eax, end_0", "sub     eax, edx", "mov     [esp+4Ch+var_24], edx", "dec     eax", "jle     loc_189D0"], ["cmp     byte ptr [ecx+2], 0", "jnz     short loc_1885C"], ["xor     eax, eax", "mov     al, [ecx+3]", "mov     al, [esi+eax+48h]", "cmp     al, 11h", "jz      _L3488; jumptable 000188C2 case 17"], ["ja      short loc_18869"], ["cmp     al, 0Ah", "jbe     short loc_18858"], ["cmp     al, 0Bh", "jnz     short loc_1885C"], ["mov     eax, [esp+4Ch+var_24]; jumptable 000188C2 case 11", "mov     esi, [esp+4Ch+var_3C]", "add     eax, 2", "mov     [esi], eax", "mov     eax, 1", "jmp     loc_17A25"], ["xor     ecx, ecx", "mov     cl, [edx+3]", "mov     edx, ecx", "mov     dl, [esi+edx+48h]", "cmp     dl, 0Eh", "jz      loc_1868A"], ["cmp     dl, 0Ah", "ja      loc_186B1"], ["cmp     dl, 8", "jbe     loc_186D4"], ["mov     edx, eax", "jmp     _L3584; jumptable 00018607 cases 9,10,21"], ["cmp     al, 8", "ja      short _L3493; jumptable 000188C2 cases 9,10,21"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     al, 15h", "jnz     short loc_1885C"], ["mov     edi, [esp+4Ch+var_24]; jumptable 000188C2 cases 9,10,21", "mov     eax, end_0", "lea     edx, [edi+2]", "sub     eax, edx", "mov     [esp+4Ch+var_24], edx", "mov     [esp+4Ch+var_44], eax", "dec     eax", "jle     loc_189D0"], ["mov     al, [edi+2]", "mov     cl, [edi+3]", "mov     byte ptr [esp+4Ch+var_40], al", "mov     byte ptr [esp+4Ch+var_48], cl", "test    al, al", "jnz     loc_1894C"], ["mov     al, cl", "xor     ecx, ecx", "mov     cl, al", "mov     cl, [esi+ecx+48h]", "sub     ecx, 5; switch 25 cases", "cmp     cl, 18h", "ja      _L3495; jumptable 000188C2 default case, cases 8,12-16,18-20,23,25-28"], ["and     ecx, 0FFh", "mov     eax, ds:(jpt_188C2 - 2DF78h)[ebx+ecx*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["mov     eax, [esp+4Ch+var_24]; jumptable 000188C2 case 17", "mov     ecx, end_0", "lea     edx, [eax+2]", "sub     ecx, edx", "mov     [esp+4Ch+var_24], edx", "dec     ecx", "jle     loc_189D0"], ["cmp     byte ptr [eax+2], 0", "jnz     short loc_188E6"], ["cmp     byte ptr [eax+3], 3Eh ; '>'", "jz      short loc_188F3"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["mov     esi, [esp+4Ch+var_3C]", "add     eax, 4", "mov     [esi], eax", "mov     eax, 3", "jmp     loc_17A25"], ["mov     al, byte ptr [esp+4Ch+var_40]; jumptable 000188C2 case 29"], ["and     eax, 0FFh", "xor     ecx, ecx", "mov     cl, ds:(nmstrtPages - 2DF78h)[ebx+eax]", "mov     al, byte ptr [esp+4Ch+var_48]", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+ecx*8]", "mov     cl, byte ptr [esp+4Ch+var_48]", "mov     eax, ds:(namingBitmap - 2DF78h)[ebx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      short loc_18978"], ["add     edi, 4; jumptable 000188C2 cases 22,24", "mov     [esp+4Ch+var_48], 0", "mov     [esp+4Ch+var_24], edi", "jmp     loc_185C2"], ["mov     al, byte ptr [esp+4Ch+var_40]", "cmp     al, 0DFh", "ja      short loc_189A6"], ["cmp     al, 0DBh", "ja      short _L3495; jumptable 000188C2 default case, cases 8,12-16,18-20,23,25-28"], ["lea     ecx, [eax+28h]", "cmp     cl, 3", "ja      short loc_1890A"], ["cmp     [esp+4Ch+var_44], 3; jumptable 000188C2 case 7", "jle     loc_18A06"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     [esp+4Ch+var_44], 2; jumptable 000188C2 case 6", "jz      short loc_18A06"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 000188C2 case 5", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     al, 0FFh", "jnz     loc_1890A"], ["xor     ecx, ecx", "mov     cl, byte ptr [esp+4Ch+var_48]", "sub     ecx, 0FEh", "cmp     ecx, 1", "ja      loc_1890A"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 000188C2 default case, cases 8,12-16,18-20,23,25-28", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00018607 case 5", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     [esp+4Ch+var_40], 2; jumptable 00018607 case 6", "jz      short loc_18A06"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["cmp     [esp+4Ch+var_48], 0; jumptable 00018607 case 23", "jnz     loc_18B6F"], ["lea     eax, [edx+2]", "mov     edi, end_0", "sub     edi, eax", "mov     [esp+4Ch+var_44], eax", "mov     [esp+4Ch+var_40], edi", "mov     [esp+4Ch+var_24], eax", "dec     edi", "jle     short loc_189D0"], ["mov     cl, [edx+2]", "mov     al, [edx+3]", "mov     byte ptr [esp+4Ch+var_38], al", "test    cl, cl", "jnz     loc_18AF6"], ["mov     edi, eax", "and     edi, 0FFh", "movzx   edi, byte ptr [esi+edi+48h]", "sub     edi, 5; switch 25 cases", "mov     eax, edi", "cmp     al, 18h", "ja      _L3458; jumptable 00018A6C default case, cases 8-21,23,25-28"], ["and     edi, 0FFh", "mov     eax, ds:(jpt_18A6C - 2DF78h)[ebx+edi*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["add     edx, 2; jumptable 00018607 cases 22,24-27", "mov     [esp+4Ch+var_24], edx", "jmp     loc_185C2"], ["cmp     cl, 0FFh", "jnz     short _L3459; jumptable 00018A6C case 29"], ["movzx   edi, byte ptr [esp+4Ch+var_38]", "and     edi, 0FFh", "sub     edi, 0FEh", "cmp     edi, 1", "jbe     _L3458; jumptable 00018A6C default case, cases 8-21,23,25-28"], ["and     ecx, 0FFh; jumptable 00018A6C case 29", "mov     al, byte ptr [esp+4Ch+var_38]", "movzx   edi, ds:(nmstrtPages - 2DF78h)[ebx+ecx]", "mov     cl, al", "and     edi, 0FFh", "shr     cl, 5", "and     ecx, 0FFh", "lea     ecx, [ecx+edi*8]", "mov     edi, ds:(namingBitmap - 2DF78h)[ebx+ecx*4]", "mov     cl, al", "shr     edi, cl", "and     edi, 1", "jz      short loc_18AE3"], ["add     edx, 4; jumptable 00018A6C cases 22,24", "mov     [esp+4Ch+var_48], 1", "mov     [esp+4Ch+var_24], edx", "jmp     loc_185C2"], ["mov     esi, [esp+4Ch+var_3C]", "mov     ebx, [esp+4Ch+var_44]", "mov     eax, [esp+4Ch+var_48]", "mov     [esi], ebx", "jmp     loc_17A25"], ["cmp     cl, 0DFh", "ja      loc_18A7A"], ["cmp     cl, 0DBh", "ja      short _L3458; jumptable 00018A6C default case, cases 8-21,23,25-28"], ["lea     edi, [ecx+28h]", "mov     eax, edi", "cmp     al, 3", "ja      short _L3459; jumptable 00018A6C case 29"], ["cmp     [esp+4Ch+var_40], 3; jumptable 00018A6C case 7", "mov     eax, [esp+4Ch+var_48]", "jle     loc_18A06"], ["mov     esi, [esp+4Ch+var_3C]", "mov     ebx, [esp+4Ch+var_44]", "mov     [esi], ebx", "jmp     loc_17A25"], ["cmp     [esp+4Ch+var_40], 2; jumptable 00018A6C case 6", "mov     eax, [esp+4Ch+var_48]", "jz      loc_18A06"], ["mov     esi, [esp+4Ch+var_3C]", "mov     ebx, [esp+4Ch+var_44]", "mov     [esi], ebx", "jmp     loc_17A25"], ["mov     esi, [esp+4Ch+var_3C]; jumptable 00018A6C case 5", "mov     ebx, [esp+4Ch+var_44]", "mov     eax, [esp+4Ch+var_48]", "mov     [esi], ebx", "jmp     loc_17A25"], ["mov     esi, [esp+4Ch+var_3C]; jumptable 00018A6C default case, cases 8-21,23,25-28", "mov     ebx, [esp+4Ch+var_44]", "mov     eax, [esp+4Ch+var_48]", "mov     [esi], ebx", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["mov     al, byte ptr [esp+4Ch+var_44]", "mov     [esp+4Ch+var_44], esi", "cmp     al, 0DFh", "ja      loc_1811C"], ["cmp     al, 0DBh", "ja      _L3429; jumptable 00017F55 default case, cases 8,12-16,18-20,23,25-28"], ["lea     edx, [eax+28h]", "cmp     dl, 3", "ja      loc_1857B"], ["cmp     [esp+4Ch+var_48], 3; jumptable 00017F55 case 7", "jle     short loc_18BBC"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["or      eax, 0FFFFFFFFh", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["mov     eax, [esp+4Ch+var_3C]; jumptable 00017F55 case 5", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"], ["mov     [esp+4Ch+var_44], esi; jumptable 00017F55 cases 22,24", "jmp     loc_185A7"], ["and     ecx, 0FFh; jumptable 00018607 case 29", "mov     eax, [esp+4Ch+var_34]", "movzx   edi, byte ptr [eax+ecx]", "mov     al, byte ptr [esp+4Ch+var_44]", "and     edi, 0FFh", "mov     cl, al", "shr     cl, 5", "and     ecx, 0FFh", "lea     ecx, [ecx+edi*8]", "mov     edi, ds:(namingBitmap - 2DF78h)[ebx+ecx*4]", "mov     cl, al", "shr     edi, cl", "and     edi, 1", "jnz     _L3443; jumptable 00018607 cases 22,24-27"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_17A25"], ["cmp     [esp+4Ch+var_48], 2; jumptable 00017F55 case 6", "jz      short loc_18C41"], ["mov     eax, [esp+4Ch+var_3C]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_17A25"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_17A25"]], "big2_attributeValueTok": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "push    esi", "mov     ebx, [esp+14h+ptr]", "mov     ecx, [esp+14h+end]", "mov     esi, [esp+14h+enc]", "mov     [esp+14h+var_14], ebx", "mov     ebp, [esp+14h+nextTokPtr]", "cmp     ebx, ecx", "jnb     loc_18D83"], ["mov     eax, ecx", "sub     eax, ebx", "dec     eax", "jle     loc_18D8D"], ["mov     eax, ebx"], ["mov     dl, [eax]", "test    dl, dl", "jnz     short loc_18CB0"], ["xor     edx, edx", "mov     dl, [eax+1]", "cmp     byte ptr [esi+edx+48h], 15h; switch 22 cases", "ja      short _L3654; jumptable 00018CAB default case, cases 0,1,4,5,8,11-20"], ["xor     ebx, ebx", "mov     bl, [esi+edx+48h]", "mov     edx, ebx", "mov     ebx, ds:(jpt_18CAB - 2DF78h)[edi+edx*4]", "add     ebx, edi", "jmp     ebx; switch jump"], ["add     edx, 28h ; '('", "cmp     dl, 3", "jbe     short _L3659; jumptable 00018CAB case 7"], ["add     eax, 2; jumptable 00018CAB default case, cases 0,1,4,5,8,11-20"], ["mov     edx, ecx", "sub     edx, eax", "dec     edx", "jg      short loc_18C88"], ["lea     esi, [esi+0]"], ["mov     [ebp+0], eax", "mov     eax, 6"], ["pop     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     eax, 4; jumptable 00018CAB case 7", "jmp     short loc_18CBB"], ["cmp     [esp+14h+var_14], eax; jumptable 00018CAB case 10", "jnz     short loc_18CC8"], ["mov     ebx, [esp+14h+var_14]", "mov     eax, 7", "add     ebx, 2", "mov     [ebp+0], ebx", "jmp     short loc_18CD0"], ["mov     [ebp+0], eax; jumptable 00018CAB case 2", "xor     eax, eax", "pop     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     [esp+14h+var_14], eax; jumptable 00018CAB case 3", "jnz     short loc_18CC8"], ["mov     edx, [esp+14h+var_14]", "mov     [esp+14h+enc], ebp", "pop     ebx", "mov     eax, esi", "pop     ebx", "add     edx, 2", "pop     esi", "pop     edi", "pop     ebp", "jmp     big2_scanRef"], ["cmp     [esp+14h+var_14], eax; jumptable 00018CAB case 21", "jnz     short loc_18CC8"], ["mov     ebx, [esp+14h+var_14]", "mov     eax, 27h ; '''", "add     ebx, 2", "mov     [ebp+0], ebx", "jmp     short loc_18CD0"], ["add     eax, 3; jumptable 00018CAB case 6", "jmp     loc_18CBB"], ["mov     edi, [esp+14h+var_14]; jumptable 00018CAB case 9", "cmp     edi, eax", "jnz     loc_18CC8"], ["lea     eax, [edi+2]", "sub     ecx, eax", "dec     ecx", "jle     short loc_18D95"], ["cmp     byte ptr [edi+2], 0", "mov     dl, [edi+3]", "jnz     short loc_18D76"], ["and     edx, 0FFh", "cmp     byte ptr [esi+edx+48h], 0Ah", "jnz     short loc_18D76"], ["add     edi, 4", "mov     eax, edi"], ["mov     [ebp+0], eax", "mov     eax, 7", "jmp     loc_18CD0"], ["mov     eax, 0FFFFFFFCh", "jmp     loc_18CD0"], ["or      eax, 0FFFFFFFFh", "jmp     loc_18CD0"], ["mov     eax, 0FFFFFFFDh", "jmp     loc_18CD0"]], "big2_entityValueTok": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "push    ebp", "mov     ebx, [esp+14h+ptr]", "mov     ecx, [esp+14h+end]; end", "mov     eax, [esp+14h+nextTokPtr]", "mov     esi, [esp+14h+enc]", "mov     [esp+14h+var_14], eax", "cmp     ebx, ecx", "jnb     loc_18EDF"], ["mov     eax, ecx", "sub     eax, ebx", "dec     eax", "jle     loc_18EE9"], ["mov     eax, ebx"], ["mov     dl, [eax]", "test    dl, dl", "jnz     short loc_18E00"], ["xor     edx, edx", "mov     dl, [eax+1]", "mov     dl, [esi+edx+48h]", "sub     edx, 3; switch 28 cases", "cmp     dl, 1Bh", "ja      short _L3680; jumptable 00018DFE default case, cases 4,5,8,11-29"], ["and     edx, 0FFh", "mov     ebp, ds:(jpt_18DFE - 2DF78h)[edi+edx*4]", "add     ebp, edi", "jmp     ebp; switch jump"], ["add     edx, 28h ; '('", "cmp     dl, 3", "jbe     short _L3685; jumptable 00018DFE case 7"], ["add     eax, 2; jumptable 00018DFE default case, cases 4,5,8,11-29"], ["mov     edx, ecx", "sub     edx, eax", "dec     edx", "jg      short loc_18DD8"], ["lea     esi, [esi+0]"], ["mov     esi, [esp+14h+var_14]", "mov     [esi], eax", "mov     eax, 6"], ["pop     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     eax, 4; jumptable 00018DFE case 7", "jmp     short loc_18E0B"], ["cmp     ebx, eax; jumptable 00018DFE case 10", "jnz     short loc_18E18"], ["mov     eax, [esp+14h+var_14]", "add     ebx, 2", "mov     [eax], ebx", "mov     eax, 7", "jmp     short loc_18E22"], ["cmp     ebx, eax; jumptable 00018DFE case 3", "jnz     short loc_18E18"], ["mov     eax, [esp+14h+var_14]", "lea     edx, [ebx+2]", "mov     [esp+14h+enc], eax", "pop     edi", "pop     ebx", "mov     eax, esi", "pop     esi", "pop     edi", "pop     ebp", "jmp     big2_scanRef"], ["add     eax, 3; jumptable 00018DFE case 6", "jmp     short loc_18E0B"], ["cmp     ebx, eax; jumptable 00018DFE case 30", "jz      short loc_18EC0"], ["mov     edi, [esp+14h+var_14]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], eax", "mov     eax, 6", "pop     edx", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     ebx, eax; jumptable 00018DFE case 9", "jnz     short loc_18E74"], ["lea     eax, [ebx+2]", "sub     ecx, eax", "dec     ecx", "jle     short loc_18EF1"], ["cmp     byte ptr [ebx+2], 0", "mov     dl, [ebx+3]", "jnz     short loc_18EAD"], ["and     edx, 0FFh", "cmp     byte ptr [esi+edx+48h], 0Ah", "jnz     short loc_18EAD"], ["lea     eax, [ebx+4]"], ["mov     esi, [esp+14h+var_14]", "mov     [esi], eax", "mov     eax, 7", "jmp     loc_18E22"], ["lea     edx, [ebx+2]; ptr", "mov     eax, esi; enc", "mov     ebx, [esp+14h+var_14]", "push    ebx; nextTokPtr", "call    big2_scanPercent", "pop     esi", "cmp     eax, 16h", "jnz     loc_18E22"], ["xor     eax, eax", "jmp     loc_18E22"], ["mov     eax, 0FFFFFFFCh", "jmp     loc_18E22"], ["or      eax, 0FFFFFFFFh", "jmp     loc_18E22"], ["mov     eax, 0FFFFFFFDh", "jmp     loc_18E22"]], "parsePseudoAttribute": [["push    ebp", "push    edi", "push    esi", "push    ebx", "mov     ebx, enc", "sub     esp, 4Ch", "mov     enc, [esp+5Ch+namePtr]", "mov     [esp+5Ch+var_40], eax", "mov     eax, [esp+5Ch+nameEndPtr]", "mov     [esp+5Ch+var_38], eax", "mov     eax, [esp+5Ch+valPtr]", "mov     [esp+5Ch+var_30], eax", "mov     eax, [esp+5Ch+nextTokPtr]", "mov     [esp+5Ch+var_3C], eax", "mov     eax, large gs:14h", "mov     [esp+5Ch+var_20], eax", "xor     eax, eax", "cmp     ptr, end", "jz      loc_19078"], ["lea     edi, [esp+5Ch+var_21]", "mov     [esp+5Ch+var_2C], ptr", "mov     [esp+5Ch+var_28], edi", "sub     esp, 0Ch", "mov     esi, ptr", "mov     ebp, end", "lea     eax, [esp+68h+var_20]", "mov     [esp+68h+var_48], eax", "push    eax", "lea     eax, [esp+6Ch+var_28]", "mov     [esp+6Ch+var_4C], eax", "push    eax", "push    end", "lea     eax, [esp+74h+var_2C]", "mov     [esp+74h+var_50], eax", "push    eax", "push    enc", "call    dword ptr [enc+38h]", "add     esp, 20h", "cmp     [esp+5Ch+var_28], edi", "jz      short loc_18F93"], ["mov     al, [esp+5Ch+var_21]", "lea     ecx, [eax-9]", "cmp     cl, 17h", "ja      short loc_18F93"], ["mov     eax, 1", "shl     eax, cl", "test    eax, 800013h", "jnz     short loc_18FB4"], ["mov     eax, [esp+5Ch+var_3C]", "mov     [eax], esi", "xor     eax, eax"], ["mov     edx, [esp+5Ch+var_20]", "xor     edx, large gs:14h", "jnz     loc_19295"], ["add     esp, 4Ch", "pop     enc", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edx, 1"], ["mov     eax, [enc+40h]", "mov     [esp+5Ch+var_44], edx", "add     esi, eax", "mov     [esp+5Ch+var_28], edi", "mov     [esp+5Ch+var_34], esi", "mov     [esp+5Ch+var_2C], esi", "sub     esp, 0Ch", "mov     eax, [esp+68h+var_48]", "push    eax", "mov     edx, [esp+6Ch+var_4C]", "push    edx", "push    end", "mov     ecx, [esp+74h+var_50]", "push    ecx", "push    enc", "call    dword ptr [enc+38h]", "add     esp, 20h", "cmp     [esp+5Ch+var_28], edi", "jz      short loc_19009"], ["mov     al, [esp+5Ch+var_21]", "lea     ecx, [eax-9]", "cmp     cl, 17h", "ja      short loc_19009"], ["mov     edx, [esp+5Ch+var_44]", "mov     eax, edx", "shl     eax, cl", "test    eax, 800013h", "jnz     short loc_18FB9"], ["mov     eax, [esp+5Ch+var_34]", "cmp     end, eax", "jz      short loc_19078"], ["mov     edx, [esp+5Ch+var_40]", "mov     [edx], eax"], ["mov     [esp+5Ch+var_2C], esi", "mov     [esp+5Ch+var_28], edi", "sub     esp, 0Ch", "mov     eax, [esp+68h+var_48]", "push    eax", "mov     eax, [esp+6Ch+var_4C]", "push    eax", "push    end", "mov     eax, [esp+74h+var_50]", "push    eax", "push    enc", "call    dword ptr [enc+38h]", "add     esp, 20h", "cmp     [esp+5Ch+var_28], edi", "jz      loc_18F93"], ["movsx   eax, [esp+5Ch+var_21]", "mov     ecx, eax", "cmp     al, 0FFh", "jz      loc_18F93"], ["cmp     eax, 3Dh ; '='", "jz      loc_19270"], ["sub     ecx, 9", "cmp     cl, 17h", "ja      short loc_19071"], ["mov     eax, 1", "shl     eax, cl", "test    eax, 800013h", "jnz     short loc_1908C"], ["mov     ecx, [enc+40h]", "add     esi, ecx", "jmp     short loc_19017"], ["mov     eax, [esp+5Ch+var_40]", "mov     dword ptr [eax], 0", "mov     eax, 1", "jmp     loc_18F9B"], ["mov     eax, [esp+5Ch+var_38]", "mov     edx, 1", "mov     [eax], esi"], ["mov     eax, [enc+40h]", "mov     [esp+5Ch+var_44], edx", "add     esi, eax", "mov     [esp+5Ch+var_28], edi", "mov     [esp+5Ch+var_34], esi", "mov     [esp+5Ch+var_2C], esi", "sub     esp, 0Ch", "mov     eax, [esp+68h+var_48]", "push    eax", "mov     eax, [esp+6Ch+var_4C]", "push    eax", "push    end", "mov     edx, [esp+74h+var_50]", "push    edx", "push    enc", "call    dword ptr [enc+38h]", "add     esp, 20h", "cmp     [esp+5Ch+var_28], edi", "jz      loc_19188"], ["mov     al, [esp+5Ch+var_21]", "mov     byte ptr [esp+5Ch+var_38], al", "lea     ecx, [eax-9]", "cmp     cl, 17h", "ja      short loc_190F2"], ["mov     edx, [esp+5Ch+var_44]", "mov     eax, edx", "shl     eax, cl", "mov     ecx, eax", "and     ecx, 800013h", "jnz     short loc_19097"], ["mov     al, byte ptr [esp+5Ch+var_38]", "cmp     al, 3Dh ; '='", "jnz     loc_19188"], ["mov     eax, [esp+5Ch+var_40]", "cmp     [eax], esi", "jz      loc_18F93"], ["mov     edx, [enc+40h]", "mov     [esp+5Ch+var_28], edi", "add     edx, esi", "sub     esp, 0Ch", "mov     [esp+68h+var_2C], edx", "mov     [esp+68h+var_44], edx", "mov     esi, [esp+68h+var_48]", "push    esi", "mov     eax, [esp+6Ch+var_4C]", "push    eax", "push    end", "mov     eax, [esp+74h+var_50]", "push    eax", "push    enc", "call    dword ptr [enc+38h]", "add     esp, 20h", "mov     edx, [esp+5Ch+var_44]", "cmp     [esp+5Ch+var_28], edi", "jz      loc_19288"], ["movsx   eax, [esp+5Ch+var_21]", "mov     [esp+5Ch+var_44], eax"], ["mov     esi, 1"], ["mov     eax, [esp+5Ch+var_44]", "lea     ecx, [eax-9]", "cmp     ecx, 17h", "ja      short loc_1916C"], ["mov     eax, esi", "shl     eax, cl", "test    eax, 800013h", "jnz     loc_19227"], ["mov     eax, [esp+5Ch+var_44]", "cmp     eax, 22h ; '\"'", "jz      short loc_191A0"], ["cmp     eax, 27h ; '''", "jz      short loc_191A0"], ["mov     eax, [esp+5Ch+var_3C]", "mov     [eax], edx", "xor     eax, eax", "jmp     loc_18F9B"], ["mov     eax, [esp+5Ch+var_3C]", "mov     edi, [esp+5Ch+var_34]", "mov     [eax], edi", "xor     eax, eax", "jmp     loc_18F9B"], ["mov     eax, [enc+40h]", "add     edx, eax", "mov     eax, [esp+5Ch+var_30]", "mov     esi, edx", "mov     [eax], edx", "jmp     short loc_191DD"], ["and     eax, 0FFFFFFDFh", "sub     eax, 41h ; 'A'", "cmp     al, 19h", "jbe     short loc_191D8"], ["lea     eax, [ecx-30h]", "cmp     eax, 9", "jbe     short loc_191D8"], ["lea     eax, [ecx-2Dh]", "cmp     eax, 1", "jbe     short loc_191D8"], ["cmp     ecx, 5Fh ; '_'", "jnz     loc_18F93"], ["lea     esi, [esi+0]", "nop"], ["mov     edx, [enc+40h]", "add     esi, edx"], ["mov     [esp+5Ch+var_2C], esi", "mov     [esp+5Ch+var_28], edi", "sub     esp, 0Ch", "mov     ecx, [esp+68h+var_48]", "push    ecx", "mov     eax, [esp+6Ch+var_4C]", "push    eax", "push    end", "mov     eax, [esp+74h+var_50]", "push    eax", "push    enc", "call    dword ptr [enc+38h]", "add     esp, 20h", "cmp     [esp+5Ch+var_28], edi", "jz      short loc_1927B"], ["movsx   ecx, [esp+5Ch+var_21]", "cmp     [esp+5Ch+var_44], ecx", "mov     eax, ecx", "jnz     short loc_191B0"], ["mov     eax, [enc+40h]", "add     esi, eax", "mov     eax, [esp+5Ch+var_3C]", "mov     [eax], esi", "mov     eax, 1", "jmp     loc_18F9B"], ["mov     eax, [enc+40h]", "mov     [esp+5Ch+var_28], edi", "add     edx, eax", "sub     esp, 0Ch", "mov     [esp+68h+var_2C], edx", "mov     [esp+68h+var_44], edx", "mov     eax, [esp+68h+var_48]", "push    eax", "mov     edx, [esp+6Ch+var_4C]", "push    edx", "push    end", "mov     ecx, [esp+74h+var_50]", "push    ecx", "push    enc", "call    dword ptr [enc+38h]", "add     esp, 20h", "mov     edx, [esp+5Ch+var_44]", "cmp     [esp+5Ch+var_28], edi", "jz      loc_1917A"], ["movsx   eax, [esp+5Ch+var_21]", "mov     [esp+5Ch+var_44], eax", "jmp     loc_19151"], ["mov     eax, [esp+5Ch+var_38]", "mov     [eax], esi", "jmp     loc_190FE"], ["cmp     [esp+5Ch+var_44], 0FFFFFFFFh", "jnz     loc_18F93"], ["jmp     short loc_19212"], ["mov     [esp+5Ch+var_44], 0FFFFFFFFh", "jmp     loc_1914C"], ["call    __stack_chk_fail_local"]], "doParseXmlDecl": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "mov     ebx, enc", "sub     esp, 5Ch", "mov     [esp+6Ch+encodingFinder], encodingFinder_0", "mov     encodingFinder_0, [esp+6Ch+badPtr]", "mov     [esp+6Ch+var_68], eax", "mov     eax, [esp+6Ch+versionPtr]", "mov     [esp+6Ch+var_58], eax", "mov     eax, [esp+6Ch+versionEndPtr]", "mov     [esp+6Ch+var_54], eax", "mov     eax, [esp+6Ch+encodingName]", "mov     [esp+6Ch+var_4C], eax", "mov     eax, [esp+6Ch+encoding]", "mov     [esp+6Ch+var_50], eax", "mov     eax, [esp+6Ch+standalone]", "mov     [esp+6Ch+var_6C], edi", "mov     [esp+6Ch+isGeneralTextEntity], isGeneralTextEntity_0", "mov     [esp+6Ch+var_48], eax", "mov     esi, [esp+6Ch+ptr]", "mov     eax, large gs:14h", "mov     [esp+6Ch+var_20], eax", "xor     eax, eax", "mov     eax, [enc+40h]", "mov     enc, [esp+6Ch+end]", "mov     [esp+6Ch+val], 0", "lea     isGeneralTextEntity_0, [eax+eax*4]", "add     eax, eax", "add     edx, esi; ptr", "sub     ecx, eax; end", "lea     eax, [esp+6Ch+nextTokPtr]", "mov     [esp+6Ch+nextTokPtr], edx", "mov     [esp+6Ch+var_64], ecx", "mov     [esp+6Ch+var_5C], eax", "mov     [esp+6Ch+name], 0", "mov     [esp+6Ch+nameEnd], 0", "push    eax; nextTokPtr", "mov     eax, enc; enc", "lea     esi, [esp+70h+val]", "push    esi; valPtr", "lea     edi, [esp+74h+nameEnd]", "push    edi; nameEndPtr", "lea     ebp, [esp+78h+name]", "push    ebp; namePtr", "call    parsePseudoAttribute", "add     esp, 10h", "test    eax, eax", "jz      loc_194D0"], ["mov     eax, [esp+6Ch+name]", "test    eax, eax", "jz      loc_194D0"], ["mov     ecx, [esp+6Ch+var_6C]", "lea     edx, [ecx-94C0h]", "push    edx", "mov     ecx, [esp+70h+nameEnd]", "push    ecx", "push    eax", "push    enc", "call    dword ptr [enc+18h]", "add     esp, 10h", "test    eax, eax", "jnz     loc_19480"], ["mov     edx, [esp+6Ch+isGeneralTextEntity]", "mov     eax, [esp+6Ch+name]", "test    edx, edx", "jz      loc_194D4"], ["mov     ecx, [esp+6Ch+var_6C]", "lea     edx, [ecx-94CCh]", "push    edx", "mov     edx, [esp+70h+nameEnd]", "push    edx", "push    eax", "push    enc", "call    dword ptr [enc+18h]", "add     esp, 10h", "test    eax, eax", "jz      loc_194F8"], ["mov     eax, [esp+6Ch+val]", "mov     [esp+6Ch+var_2C], eax", "lea     eax, [esp+6Ch+var_21]", "mov     [esp+6Ch+var_58], eax", "mov     [esp+6Ch+var_28], eax", "sub     esp, 0Ch", "lea     ecx, [esp+78h+var_20]", "push    ecx", "lea     edx, [esp+7Ch+var_28]", "push    edx", "mov     eax, [esp+80h+var_64]", "push    eax", "lea     ecx, [esp+84h+var_2C]", "push    ecx", "push    enc", "call    dword ptr [enc+38h]", "add     esp, 20h", "mov     eax, [esp+6Ch+var_58]", "cmp     [esp+6Ch+var_28], eax", "jz      loc_19620"], ["mov     al, [esp+6Ch+var_21]", "and     eax, 0FFFFFFDFh", "sub     eax, 41h ; 'A'", "cmp     al, 19h", "ja      loc_19620"], ["mov     ecx, [esp+6Ch+var_4C]", "test    ecx, ecx", "jz      short loc_1941F"], ["mov     eax, [esp+6Ch+val]", "mov     [ecx], eax"], ["mov     eax, [esp+6Ch+var_50]", "mov     edx, [esp+6Ch+nextTokPtr]", "test    eax, eax", "jz      short loc_1944B"], ["push    eax", "mov     eax, [enc+40h]", "sub     edx, eax", "push    edx", "mov     eax, [esp+74h+val]", "push    eax", "push    enc", "mov     edx, [esp+7Ch+encodingFinder]", "call    edx", "mov     ecx, [esp+7Ch+var_50]", "mov     edx, [esp+7Ch+nextTokPtr]; ptr", "add     esp, 10h", "mov     [ecx], eax"], ["mov     ecx, [esp+6Ch+var_5C]", "mov     eax, enc; enc", "push    ecx; nextTokPtr", "push    esi; valPtr", "push    edi; nameEndPtr", "push    ebp; namePtr", "mov     ecx, [esp+7Ch+var_64]; end", "call    parsePseudoAttribute", "add     esp, 10h", "test    eax, eax", "jz      loc_19660"], ["mov     eax, [esp+6Ch+name]", "test    eax, eax", "jnz     loc_194FC"], ["lea     esi, [esi+0]"], ["mov     eax, 1", "jmp     short loc_194DC"], ["mov     ecx, [esp+6Ch+var_58]", "test    ecx, ecx", "jz      short loc_1948E"], ["mov     eax, [esp+6Ch+val]", "mov     [ecx], eax"], ["mov     eax, [esp+6Ch+var_54]", "mov     edx, [esp+6Ch+nextTokPtr]; ptr", "test    eax, eax", "jz      short loc_1949C"], ["mov     [eax], edx"], ["mov     eax, [esp+6Ch+var_5C]", "push    eax; nextTokPtr", "mov     eax, enc; enc", "push    esi; valPtr", "push    edi; nameEndPtr", "push    ebp; namePtr", "mov     ecx, [esp+7Ch+var_64]; end", "call    parsePseudoAttribute", "add     esp, 10h", "test    eax, eax", "jz      short loc_194D0"], ["mov     eax, [esp+6Ch+name]", "test    eax, eax", "jnz     loc_193A0"], ["mov     ecx, [esp+6Ch+isGeneralTextEntity]", "test    ecx, ecx", "jz      short loc_19478"], ["lea     esi, [esi+0]"], ["mov     eax, [esp+6Ch+nextTokPtr]"], ["mov     esi, [esp+6Ch+var_68]", "mov     [esi], eax", "xor     eax, eax"], ["mov     esi, [esp+6Ch+var_20]", "xor     esi, large gs:14h", "jnz     loc_1967F"], ["add     esp, 5Ch", "pop     enc", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [esp+6Ch+name]"], ["mov     edi, [esp+6Ch+var_6C]", "lea     edx, (KW_standalone - 2DF78h)[edi]; \"standalone\"", "push    edx", "mov     ebp, [esp+70h+nameEnd]", "push    ebp", "push    eax", "push    enc", "call    dword ptr [enc+18h]", "mov     edx, [esp+7Ch+isGeneralTextEntity]", "add     esp, 10h", "test    edx, edx", "jnz     loc_19608"], ["test    eax, eax", "jz      loc_19608"], ["mov     eax, [esp+6Ch+var_6C]", "mov     esi, [enc+40h]", "lea     eax, [eax-94DCh]", "push    eax", "mov     eax, [esp+70h+nextTokPtr]", "sub     eax, esi", "push    eax", "mov     edi, [esp+74h+val]", "push    edi", "push    enc", "call    dword ptr [enc+18h]", "add     esp, 10h", "test    eax, eax", "jnz     loc_19638"], ["mov     eax, [esp+6Ch+var_6C]", "mov     edx, [enc+40h]", "lea     eax, [eax-94E1h]", "push    eax", "mov     eax, [esp+70h+nextTokPtr]", "sub     eax, edx", "push    eax", "mov     ecx, [esp+74h+val]", "push    ecx", "push    enc", "call    dword ptr [enc+18h]", "add     esp, 10h", "test    eax, eax", "jz      loc_19670"], ["mov     eax, [esp+6Ch+var_48]", "test    eax, eax", "jz      short loc_19585"], ["mov     dword ptr [eax], 0"], ["lea     esi, [esp+6Ch+var_20]", "lea     edx, [esp+6Ch+var_28]", "mov     [esp+6Ch+isGeneralTextEntity], esi", "lea     esi, [esp+6Ch+var_2C]", "mov     [esp+6Ch+var_6C], esi", "mov     eax, [esp+6Ch+nextTokPtr]", "lea     edi, [esp+6Ch+var_21]", "mov     esi, 1", "mov     ebp, edx"], ["mov     [esp+6Ch+var_2C], eax", "mov     [esp+6Ch+var_28], edi", "sub     esp, 0Ch", "mov     ecx, [esp+78h+isGeneralTextEntity]", "push    ecx", "push    ebp", "mov     eax, [esp+80h+var_64]", "push    eax", "mov     eax, [esp+84h+var_6C]", "push    eax", "push    enc", "call    dword ptr [enc+38h]", "add     esp, 20h", "mov     eax, [esp+6Ch+nextTokPtr]", "cmp     [esp+6Ch+var_28], edi", "jz      short loc_195EB"], ["mov     cl, [esp+6Ch+var_21]", "sub     ecx, 9", "cmp     cl, 17h", "ja      short loc_195EB"], ["mov     edx, esi", "shl     edx, cl", "and     edx, 800013h", "jnz     short loc_1964F"], ["cmp     [esp+6Ch+var_64], eax", "jz      loc_19478"], ["mov     edi, [esp+6Ch+var_68]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], eax", "xor     eax, eax", "jmp     loc_194DC"], ["mov     edi, [esp+6Ch+var_68]", "mov     eax, [esp+6Ch+name]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], eax", "xor     eax, eax", "jmp     loc_194DC"], ["mov     edi, [esp+6Ch+var_68]", "mov     eax, [esp+6Ch+val]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], eax", "xor     eax, eax", "jmp     loc_194DC"], ["mov     eax, [esp+6Ch+var_48]", "test    eax, eax", "jz      loc_19585"], ["mov     dword ptr [eax], 1", "jmp     loc_19585"], ["mov     edx, [enc+40h]", "add     eax, edx", "mov     [esp+6Ch+nextTokPtr], eax", "jmp     loc_195A7"], ["mov     esi, [esp+6Ch+var_68]", "mov     edx, [esp+6Ch+nextTokPtr]", "mov     [esi], edx", "jmp     loc_194DC"], ["mov     edi, [esp+6Ch+var_68]", "mov     edx, [esp+6Ch+val]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[edi], edx", "jmp     loc_194DC"], ["call    __stack_chk_fail_local"]], "getEncodingIndex": [["push    ebp", "xor     ebp, ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "lea     ebx, (KW_ISO_8859_1 - 2DF78h)[edi]; \"ISO-8859-1\"", "sub     esp, 8", "mov     [esp+18h+name], name_0", "mov     al, 49h ; 'I'"], ["mov     ecx, [esp+18h+name]", "mov     [esp+18h+var_18], ebx", "jmp     short loc_196C9"], ["test    al, al", "jz      short loc_1970B"], ["mov     eax, [esp+18h+var_18]", "mov     al, [eax]"], ["mov     dl, [ecx]", "mov     ebx, [esp+18h+var_18]", "inc     ebx", "inc     ecx", "lea     esi, [edx-61h]", "mov     [esp+18h+var_18], ebx", "mov     ebx, esi", "cmp     bl, 19h", "ja      short loc_196E0"], ["sub     edx, 20h ; ' '"], ["lea     esi, [eax-61h]", "mov     ebx, esi", "cmp     bl, 19h", "ja      short loc_196ED"], ["sub     eax, 20h ; ' '"], ["cmp     dl, al", "jz      short loc_196C0"], ["inc     i", "cmp     i, 6", "jz      short loc_19708"], ["mov     ebx, ds:(encodingNames_5005 - 2DF78h)[edi+i*4]", "mov     al, [ebx]", "jmp     short loc_196B0"], ["or      i, 0FFFFFFFFh"], ["add     esp, 8", "mov     eax, ebp", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "findEncoding": [["push    ebp", "call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 0ACh", "mov     [esp+0BCh+var_B4], eax", "mov     eax, [esp+0BCh+ptr]", "mov     [esp+0BCh+var_B0], eax", "lea     edi, [esp+0BCh+buf]", "mov     eax, large gs:14h", "mov     [esp+0BCh+var_20], eax", "xor     eax, eax", "mov     esi, [esp+0BCh+enc]", "mov     ebx, [esp+0BCh+end]", "mov     [esp+0BCh+p], edi", "sub     esp, 0Ch", "lea     eax, [esp+0C8h+buf+7Fh]", "push    eax", "lea     eax, [esp+0CCh+p]", "push    eax", "push    ebx", "lea     eax, [esp+0D4h+var_B0]", "push    eax", "push    esi", "call    dword ptr [esi+38h]", "add     esp, 20h", "cmp     [esp+0BCh+var_B0], ebx", "jnz     loc_19828"], ["mov     ecx, [esp+0BCh+var_B4]", "mov     eax, [esp+0BCh+p]", "lea     ebx, [ecx-9508h]", "mov     byte ptr ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax], 0", "mov     ecx, edi", "mov     al, 55h ; 'U'", "mov     [esp+0BCh+var_B8], ebx", "jmp     short loc_197BA"], ["test    al, al", "jz      short loc_19818"], ["mov     eax, [esp+0BCh+var_B8]", "mov     al, byte ptr ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax]"], ["mov     dl, [ecx]", "mov     ebx, [esp+0BCh+var_B8]", "inc     ebx", "inc     ecx", "lea     ebp, [edx-61h]", "mov     [esp+0BCh+var_B8], ebx", "mov     ebx, ebp", "cmp     bl, 19h", "ja      short loc_197D3"], ["sub     edx, 20h ; ' '"], ["lea     ebp, [eax-61h]", "mov     ebx, ebp", "cmp     bl, 19h", "ja      short loc_197E0"], ["sub     eax, 20h ; ' '"], ["cmp     dl, al", "jz      short loc_197B0"], ["mov     eax, edi; name", "call    getEncodingIndex", "cmp     i, 0FFFFFFFFh", "jz      short loc_19828"], ["mov     esi, [esp+0BCh+var_B4]", "mov     i, [esi+i*4-1644h]"], ["mov     edi, [esp+0BCh+var_20]", "xor     edi, large gs:14h", "jnz     short loc_1982C"], ["add     esp, 0ACh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     dword ptr [esi+40h], 2", "jnz     short loc_197E4"], ["mov     eax, esi", "jmp     short loc_197FB"], ["xor     eax, eax", "jmp     short loc_197FB"], ["call    __stack_chk_fail_local"]], "findEncodingNS": [["push    ebp", "call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 0ACh", "mov     [esp+0BCh+var_B4], eax", "mov     eax, [esp+0BCh+ptr]", "mov     [esp+0BCh+var_B0], eax", "lea     edi, [esp+0BCh+buf]", "mov     eax, large gs:14h", "mov     [esp+0BCh+var_20], eax", "xor     eax, eax", "mov     esi, [esp+0BCh+enc]", "mov     ebx, [esp+0BCh+end]", "mov     [esp+0BCh+p], edi", "sub     esp, 0Ch", "lea     eax, [esp+0C8h+buf+7Fh]", "push    eax", "lea     eax, [esp+0CCh+p]", "push    eax", "push    ebx", "lea     eax, [esp+0D4h+var_B0]", "push    eax", "push    esi", "call    dword ptr [esi+38h]", "add     esp, 20h", "cmp     [esp+0BCh+var_B0], ebx", "jnz     loc_19948"], ["mov     ecx, [esp+0BCh+var_B4]", "mov     eax, [esp+0BCh+p]", "lea     ebx, [ecx-9508h]", "mov     byte ptr ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax], 0", "mov     ecx, edi", "mov     al, 55h ; 'U'", "mov     [esp+0BCh+var_B8], ebx", "jmp     short loc_198DA"], ["test    al, al", "jz      short loc_19938"], ["mov     eax, [esp+0BCh+var_B8]", "mov     al, byte ptr ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[eax]"], ["mov     dl, [ecx]", "mov     ebx, [esp+0BCh+var_B8]", "inc     ebx", "inc     ecx", "lea     ebp, [edx-61h]", "mov     [esp+0BCh+var_B8], ebx", "mov     ebx, ebp", "cmp     bl, 19h", "ja      short loc_198F3"], ["sub     edx, 20h ; ' '"], ["lea     ebp, [eax-61h]", "mov     ebx, ebp", "cmp     bl, 19h", "ja      short loc_19900"], ["sub     eax, 20h ; ' '"], ["cmp     dl, al", "jz      short loc_198D0"], ["mov     eax, edi; name", "call    getEncodingIndex", "cmp     i, 0FFFFFFFFh", "jz      short loc_19948"], ["mov     esi, [esp+0BCh+var_B4]", "mov     i, [esi+i*4-1660h]"], ["mov     edi, [esp+0BCh+var_20]", "xor     edi, large gs:14h", "jnz     short loc_1994C"], ["add     esp, 0ACh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     dword ptr [esi+40h], 2", "jnz     short loc_19904"], ["mov     eax, esi", "jmp     short loc_1991B"], ["xor     eax, eax", "jmp     short loc_1991B"], ["call    __stack_chk_fail_local"]], "initScan": [["push    ebp", "push    edi", "push    esi", "push    ebx", "sub     esp, 1Ch", "mov     ebx, [esp+2Ch+ptr]", "mov     esi, [esp+2Ch+end]", "mov     ebp, [esp+2Ch+nextTokPtr]", "mov     edi, [esp+2Ch+state]", "mov     [esp+2Ch+var_28], ebp", "cmp     ebx, esi", "jnb     loc_19BA0"], ["mov     ecx, [ecx]", "mov     [esp+2Ch+encPtr], ecx", "lea     encPtr_0, [ebx+1]", "cmp     esi, ecx", "jz      loc_19A50"], ["mov     bp, [ebx]", "xor     ecx, ecx", "rol     bp, 8", "cmp     bp, 0FEFFh", "mov     cx, bp", "jz      loc_19AE8"], ["cmp     ecx, 0FEFFh", "jg      short loc_19A18"], ["cmp     ecx, 3C00h", "jz      loc_19AA0"], ["cmp     ecx, 0EFBBh", "jnz     loc_19AC0"], ["cmp     edi, 1", "jz      loc_19B58"], ["lea     ecx, [ebx+2]", "cmp     esi, ecx", "jz      loc_19A75"], ["cmp     byte ptr [ebx+2], 0BFh", "jz      loc_19B80"], ["movsx   ecx, byte ptr [edx]"], ["mov     encodingTable, [encodingTable+ecx*4]"], ["mov     edx, [esp+2Ch+encPtr]", "mov     [edx], eax", "mov     edx, [esp+2Ch+var_28]", "mov     [esp+2Ch+nextTokPtr], edx", "mov     [esp+2Ch+end], esi", "mov     [esp+2Ch+ptr], ebx", "mov     [esp+2Ch+state], eax", "mov     eax, [eax+edi*4]"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "jmp     eax"], ["cmp     ecx, 0FFFEh", "jnz     loc_19AC0"], ["cmp     byte ptr [edx], 0", "jnz     short loc_19A33"], ["xor     ecx, ecx", "test    edi, 1", "jnz     short loc_199EC"], ["mov     edi, [esp+2Ch+var_28]", "add     ebx, 2", "mov     [edi], ebx", "mov     edi, [esp+2Ch+encPtr]", "mov     encodingTable, [encodingTable+14h]", "mov     [edi], eax", "mov     eax, 0Eh", "jmp     short loc_19A78"], ["movsx   ecx, byte ptr [edx]", "mov     [esp+2Ch+var_1D], cl", "lea     edx, [ecx-3]", "cmp     edx, 2", "jbe     short loc_19A75"], ["mov     dl, [ebx]", "cmp     dl, 0EFh", "jz      short loc_19A89"], ["ja      short loc_19A80"], ["test    dl, dl", "jz      short loc_19A75"], ["cmp     dl, 3Ch ; '<'", "jnz     loc_199EC"], ["or      encodingTable, 0FFFFFFFFh"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["cmp     dl, 0FEh", "jb      loc_199EC"], ["cmp     [esp+2Ch+var_1D], 0", "jnz     short loc_19A75"], ["test    edi, 1", "jz      short loc_19A75"], ["xor     ecx, ecx", "jmp     loc_199EC"], ["movsx   ecx, byte ptr [edx]", "lea     edx, [ecx-3]", "cmp     dl, 1", "ja      short loc_19AB7"], ["test    edi, 1", "jnz     loc_199EC"], ["mov     encodingTable, [encodingTable+14h]", "jmp     loc_199EF"], ["cmp     byte ptr [ebx], 0", "jnz     short loc_19B18"], ["cmp     edi, 1", "jnz     short loc_19AE0"], ["cmp     byte ptr [edx], 5", "jnz     short loc_19AE0"], ["mov     ecx, 5", "jmp     loc_199EC"], ["mov     encodingTable, [encodingTable+10h]", "jmp     loc_199EF"], ["cmp     byte ptr [edx], 0", "jnz     short loc_19AFB"], ["xor     ecx, ecx", "test    edi, 1", "jnz     loc_199EC"], ["mov     edi, [esp+2Ch+var_28]", "add     ebx, 2", "mov     [edi], ebx", "mov     edi, [esp+2Ch+encPtr]", "mov     encodingTable, [encodingTable+10h]", "mov     [edi], eax", "mov     eax, 0Eh", "jmp     loc_19A78"], ["cmp     byte ptr [ebx+1], 0", "jnz     loc_199E9"], ["test    edi, 1", "jnz     loc_199E9"], ["mov     edi, [esp+2Ch+encPtr]", "mov     encodingTable, [encodingTable+14h]", "mov     [edi], eax", "mov     edi, [esp+2Ch+var_28]", "mov     [esp+2Ch+nextTokPtr], edi", "mov     [esp+2Ch+end], esi", "mov     [esp+2Ch+ptr], ebx", "mov     [esp+2Ch+state], eax", "mov     eax, [eax]", "jmp     loc_19A0C"], ["mov     cl, [edx]", "test    cl, cl", "jz      loc_19A98"], ["lea     ebp, [ecx-3]", "mov     [esp+2Ch+var_1D], cl", "mov     ecx, ebp", "cmp     cl, 2", "ja      loc_199D4"], ["movsx   ecx, [esp+2Ch+var_1D]", "jmp     loc_199EC"], ["mov     edi, [esp+2Ch+var_28]", "add     ebx, 3", "mov     [edi], ebx", "mov     edi, [esp+2Ch+encPtr]", "mov     encodingTable, [encodingTable+8]", "mov     [edi], eax", "mov     eax, 0Eh", "jmp     loc_19A78"], ["mov     encodingTable, 0FFFFFFFCh", "jmp     loc_19A78"]], "little2_prologTok": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, [esp+3Ch+enc]", "mov     edx, [esp+3Ch+ptr]", "mov     [esp+3Ch+var_34], eax", "mov     ebp, [esp+3Ch+end]", "mov     eax, [esp+3Ch+nextTokPtr]", "cmp     edx, ebp", "mov     [esp+3Ch+var_38], eax", "jnb     loc_1A668"], ["mov     eax, ebp", "sub     eax, edx", "test    al, 1", "jz      short loc_19CB6"], ["and     eax, 0FFFFFFFEh", "jz      loc_1A672"], ["lea     ebp, [edx+n]"], ["mov     al, [edx+1]", "movzx   edi, byte ptr [edx]", "test    al, al", "jz      short loc_19CF0"], ["cmp     al, 0DFh", "ja      short loc_19D18"], ["cmp     al, 0DBh", "ja      short _L3940; jumptable 00019D13 default case, cases 0,1,3,8,14-18,28,33,34"], ["lea     esi, [eax+28h]", "mov     ecx, esi", "cmp     cl, 3", "ja      short loc_19D30"], ["mov     eax, end_0; jumptable 00019D13 case 7", "sub     eax, edx", "cmp     eax, 3", "jle     loc_1A013"], ["mov     eax, [esp+3Ch+var_38]; jumptable 00019D13 default case, cases 0,1,3,8,14-18,28,33,34", "mov     [eax], edx", "xor     eax, eax"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, edi", "mov     esi, [esp+3Ch+var_34]", "and     eax, 0FFh", "cmp     byte ptr [esi+eax+48h], 24h; switch 37 cases", "ja      short _L3940; jumptable 00019D13 default case, cases 0,1,3,8,14-18,28,33,34"], ["xor     ecx, ecx", "mov     cl, [esi+eax+48h]", "mov     eax, ecx", "mov     ecx, ds:(jpt_19D13 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["cmp     al, 0FFh", "jnz     short loc_19D30"], ["mov     esi, edi", "and     esi, 0FFh", "sub     esi, 0FEh", "cmp     esi, 1", "jbe     short _L3940; jumptable 00019D13 default case, cases 0,1,3,8,14-18,28,33,34"], ["nop"], ["and     eax, 0FFh", "mov     ecx, edi", "shr     cl, 5", "mov     esi, ecx", "mov     ecx, edi", "movzx   edi, ds:(nmstrtPages - 2DF78h)[ebx+eax]", "and     esi, 0FFh", "and     edi, 0FFh", "and     ecx, 1Fh", "mov     byte ptr [esp+3Ch+var_30], cl", "lea     edi, [esi+edi*8]", "lea     ecx, (namingBitmap - 2DF78h)[ebx]", "mov     [esp+3Ch+var_2C], ecx", "mov     edi, [ecx+edi*4]", "mov     cl, byte ptr [esp+3Ch+var_30]", "shr     edi, cl", "and     edi, 1", "jz      short loc_19DD8"], ["lea     esi, [edx+2]; jumptable 00019D13 cases 22,24", "mov     eax, 12h"], ["mov     ecx, end_0", "sub     ecx, ptr_0", "mov     [esp+3Ch+var_30], ecx", "dec     ecx", "jle     loc_19E64"], ["lea     edx, (namingBitmap - 2DF78h)[ebx]", "mov     [esp+3Ch+tok], tok_0", "mov     [esp+3Ch+var_20], edx", "mov     [esp+3Ch+var_24], end_0"], ["mov     dl, [ptr_0+1]", "mov     cl, [ptr_0]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_19E78"], ["xor     edx, edx", "mov     eax, [esp+3Ch+var_34]", "mov     dl, cl", "mov     dl, [eax+edx+48h]", "sub     edx, 5; switch 32 cases", "cmp     dl, 1Fh", "ja      short _L4239; jumptable 00019DD1 default case, cases 5,8,12-14,16-19,28,31"], ["and     edx, 0FFh", "mov     eax, ds:(jpt_19DD1 - 2DF78h)[ebx+edx*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["xor     ecx, ecx", "mov     cl, ds:(namePages - 2DF78h)[ebx+eax]", "mov     eax, ecx", "mov     cl, byte ptr [esp+3Ch+var_30]", "lea     eax, [esi+eax*8]", "mov     esi, [esp+3Ch+var_2C]", "mov     eax, [esi+eax*4]", "shr     eax, cl", "test    al, 1", "jz      _L3940; jumptable 00019D13 default case, cases 0,1,3,8,14-18,28,33,34"], ["lea     esi, [edx+2]; jumptable 00019D13 cases 23,25-27", "mov     eax, 13h", "jmp     loc_19D7C"], ["cmp     dl, 0FFh", "jnz     loc_19EA0"], ["xor     ecx, ecx", "mov     cl, byte ptr [esp+3Ch+var_2C]", "sub     ecx, 0FEh", "cmp     ecx, 1", "ja      loc_19F58"], ["xchg    ax, ax"], ["mov     edi, esi; jumptable 00019DD1 default case, cases 5,8,12-14,16-19,28,31"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34", "mov     [eax], edi", "add     esp, 2Ch", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     esi, ptr_0; jumptable 0001A722 cases 22,24-27", "mov     [esp+3Ch+tok], 13h", "lea     esi, [esi+0]"], ["add     esi, 2; jumptable 00019DD1 cases 22,24-27", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax"], ["cmp     [esp+3Ch+var_30], 1", "jg      loc_19D9D"], ["mov     eax, [esp+3Ch+tok]"], ["neg     tok_0", "jmp     loc_19CE7"], ["mov     [esp+3Ch+tok], 13h", "lea     ptr_0, [ptr_0+0]", "nop"], ["cmp     dl, 0DFh", "ja      short loc_19E08"], ["cmp     dl, 0DBh", "ja      short _L4239; jumptable 00019DD1 default case, cases 5,8,12-14,16-19,28,31"], ["lea     edi, [edx+28h]", "mov     eax, edi", "cmp     al, 3", "ja      short loc_19EA0"], ["mov     edi, ptr_0; jumptable 00019DD1 case 7"], ["cmp     [esp+3Ch+var_30], 3; jumptable 0001A22F case 7", "jg      short _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["jmp     loc_1A013"], ["and     edx, 0FFh", "xor     eax, eax", "mov     cl, byte ptr [esp+3Ch+var_2C]", "mov     al, ds:(namePages - 2DF78h)[ebx+edx]", "mov     edx, eax", "lea     eax, (namingBitmap - 2DF78h)[ebx]", "shl     edx, 3", "mov     ebp, eax"], ["mov     al, cl", "shr     al, 5", "mov     edi, eax", "and     edi, 0FFh", "add     edx, edi", "mov     edx, [ebp+edx*4+0]", "shr     edx, cl", "and     edx, 1", "jnz     _L4031; jumptable 00019DD1 cases 22,24-27"], ["xchg    ax, ax"], ["mov     eax, [esp+3Ch+var_38]; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28", "mov     [eax], esi", "xor     eax, eax", "jmp     loc_19CE7"], ["mov     eax, [esp+3Ch+tok]; jumptable 00019DD1 cases 9-11,20,21,30,32,35,36", "mov     edi, ptr_0"], ["mov     ebx, [esp+3Ch+var_38]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[ebx], ptr_0", "jmp     loc_19CE7"], ["lea     ebx, [edx+2]; jumptable 00019D13 cases 10,21"], ["mov     eax, end_0", "mov     ecx, [esp+3Ch+var_34]", "sub     eax, ebx", "dec     eax", "jle     loc_1A900"], ["cmp     byte ptr [edx+3], 0", "jnz     short loc_19F41"], ["xor     eax, eax", "mov     al, [edx+2]", "mov     al, [ecx+eax+48h]", "cmp     al, 0Ah", "jz      loc_1A5EB"], ["cmp     al, 15h", "jz      loc_1A5EB"], ["cmp     al, 9", "jz      loc_1A5E0"], ["mov     eax, [esp+3Ch+var_38]", "mov     [eax], ptr_0", "mov     eax, 0Fh", "jmp     loc_19CE7"], ["xor     edx, edx", "lea     eax, (namingBitmap - 2DF78h)[ebx]", "mov     dl, ds:(namePages+0FFh - 2DF78h)[ebx]", "mov     cl, [esi]", "shl     edx, 3", "mov     ebp, eax", "jmp     loc_19EC0"], ["lea     esi, [edx+2]; jumptable 00019D13 case 2", "mov     eax, end_0", "sub     eax, ptr_0", "dec     eax", "jle     loc_1A672"], ["mov     al, [edx+3]", "mov     cl, [edx+2]", "test    al, al", "jnz     loc_1A2F0"], ["and     ecx, 0FFh", "mov     eax, [esp+3Ch+var_34]", "mov     al, [eax+ecx+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_19FBB - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["lea     eax, [edx+2]; jumptable 00019D13 case 4", "mov     ecx, end_0", "sub     ecx, ptr_0", "cmp     ecx, 1", "jle     loc_1AB8C"], ["cmp     byte ptr [edx+3], 0", "jnz     short loc_19FF8"], ["cmp     byte ptr [edx+2], 5Dh ; ']'", "jnz     short loc_19FF8"], ["cmp     ecx, 3", "jle     loc_1A672"], ["cmp     byte ptr [edx+5], 0", "jnz     short loc_19FF8"], ["cmp     byte ptr [edx+4], 3Eh ; '>'", "jz      loc_1AABD"], ["lea     esi, [esi+0]"], ["mov     ebx, [esp+3Ch+var_38]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[ebx], ptr_0", "mov     ptr_0, 1Ah", "jmp     loc_19CE7"], ["mov     eax, end_0; jumptable 00019D13 case 5", "sub     eax, edx", "dec     eax", "jg      _L3940; jumptable 00019D13 default case, cases 0,1,3,8,14-18,28,33,34"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_19CE7"], ["mov     eax, end_0; jumptable 00019D13 case 6", "sub     eax, edx", "cmp     eax, 2", "jg      _L3940; jumptable 00019D13 default case, cases 0,1,3,8,14-18,28,33,34"], ["jmp     short loc_1A013"], ["lea     ebx, [edx+2]; jumptable 00019D13 case 9", "cmp     ebx, end_0", "jnz     loc_19F0B"], ["mov     eax, [esp+3Ch+var_38]", "mov     [eax], end_0", "mov     eax, 0FFFFFFF1h", "jmp     loc_19CE7"], ["mov     eax, [esp+3Ch+var_38]; jumptable 00019D13 case 30", "mov     ecx, end_0; end", "mov     [esp+3Ch+enc], eax; nextTokPtr", "mov     eax, [esp+3Ch+var_34]; enc", "add     esp, 2Ch", "add     edx, 2; ptr", "pop     ebx", "pop     esi", "pop     edi", "pop     end_0", "jmp     little2_scanPercent"], ["mov     eax, [esp+3Ch+var_38]; jumptable 00019D13 case 31", "add     edx, 2", "mov     [eax], edx", "mov     eax, 17h", "jmp     loc_19CE7"], ["mov     eax, [esp+3Ch+var_38]; jumptable 00019D13 case 36", "add     edx, 2", "mov     [eax], edx", "mov     eax, 15h", "jmp     loc_19CE7"], ["mov     eax, [esp+3Ch+var_38]; jumptable 00019D13 case 11", "add     edx, 2", "mov     [eax], edx", "mov     eax, 11h", "jmp     loc_19CE7"], ["mov     eax, [esp+3Ch+var_38]; jumptable 00019D13 case 12", "lea     ecx, [edx+2]; ptr", "mov     [esp+3Ch+ptr], eax; nextTokPtr", "mov     [esp+3Ch+enc], end_0; end", "mov     edx, [esp+3Ch+var_34]; enc", "mov     eax, 0Ch; open"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     end_0", "jmp     little2_scanLit"], ["mov     eax, [esp+3Ch+var_38]; jumptable 00019D13 case 13", "lea     ecx, [edx+2]", "mov     [esp+3Ch+ptr], eax", "mov     [esp+3Ch+enc], end_0", "mov     edx, [esp+3Ch+var_34]", "mov     eax, 0Dh", "jmp     short loc_1A0D0"], ["lea     ecx, [edx+2]; jumptable 00019D13 case 32", "mov     eax, end_0", "sub     eax, ptr_0", "dec     eax", "jle     loc_1AB96"], ["cmp     byte ptr [edx+3], 0", "jnz     _L3991; jumptable 0001A13E default case, cases 12-14,16-20,22-31"], ["xor     eax, eax", "mov     esi, [esp+3Ch+var_34]", "mov     al, [edx+2]", "mov     al, [esi+eax+48h]", "sub     eax, 9; switch 28 cases", "cmp     al, 1Bh", "ja      _L3991; jumptable 0001A13E default case, cases 12-14,16-20,22-31"], ["and     eax, 0FFh", "mov     esi, ds:(jpt_1A13E - 2DF78h)[ebx+eax*4]", "add     ebx, esi", "jmp     ebx; switch jump"], ["mov     eax, [esp+3Ch+var_38]; jumptable 00019D13 case 35", "add     edx, 2", "mov     [eax], edx", "mov     eax, 26h ; '&'", "jmp     loc_19CE7"], ["lea     esi, [edx+2]; jumptable 00019D13 case 19", "mov     edi, end_0", "sub     edi, esi", "cmp     edi, 1", "jle     loc_1A672"], ["mov     al, [edx+3]", "mov     cl, [edx+2]", "mov     byte ptr [esp+3Ch+var_30], cl", "test    al, al", "jnz     loc_1A608"], ["xor     eax, eax", "mov     al, cl", "mov     ecx, [esp+3Ch+var_34]", "mov     al, [ecx+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_1A19F - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["mov     eax, [esp+3Ch+var_38]; jumptable 00019D13 case 20", "add     edx, 2", "mov     [eax], edx", "mov     eax, 19h", "jmp     loc_19CE7"], ["xor     eax, eax; jumptable 00019D13 case 29", "jmp     loc_19D30"], ["lea     edi, [ptr_0+2]; jumptable 00019DD1 case 23", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "mov     eax, [esp+3Ch+tok]", "cmp     eax, 12h", "jz      loc_1A67A"], ["mov     esi, ptr_0", "cmp     eax, 29h ; ')'", "jnz     loc_19E55"], ["cmp     [esp+3Ch+var_30], 1", "jle     loc_1ABB7"], ["mov     dl, [ptr_0+1]", "mov     al, [ptr_0]", "mov     byte ptr [esp+3Ch+var_2C], al", "test    dl, dl", "jnz     loc_1A934"], ["mov     dl, al", "xor     eax, eax", "mov     al, dl", "mov     esi, [esp+3Ch+var_34]", "mov     al, [esi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     esi, ds:(jpt_1A22F - 2DF78h)[ebx+eax*4]", "add     esi, ebx", "jmp     esi; switch jump"], ["mov     edi, ptr_0; jumptable 0001A51C cases 9-11,20,21,30,32,35,36"], ["mov     eax, 13h; jumptable 0001A22F cases 9-11,20,21,30,32,35,36", "jmp     loc_19EF6"], ["lea     eax, (namingBitmap - 2DF78h)[ebx]; jumptable 00019DD1 case 29", "mov     edx, 0C8h", "mov     ebp, eax", "jmp     loc_19EC0"], ["mov     edi, ptr_0; jumptable 00019DD1 case 6"], ["cmp     [esp+3Ch+var_30], 2; jumptable 0001A22F case 6", "jnz     _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["jmp     loc_1A013"], ["mov     eax, [esp+3Ch+tok]; jumptable 00019DD1 case 34", "mov     edi, ptr_0", "cmp     eax, 13h", "jz      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001A881 case 34", "add     ptr_0, 2", "mov     [eax], edi", "mov     eax, 20h ; ' '", "jmp     loc_19CE7"], ["mov     eax, [esp+3Ch+tok]; jumptable 00019DD1 case 15", "mov     edi, ptr_0", "cmp     eax, 13h", "jz      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001A881 case 15", "add     ptr_0, 2", "mov     [eax], edi", "mov     eax, 1Eh", "jmp     loc_19CE7"], ["mov     eax, [esp+3Ch+tok]; jumptable 00019DD1 case 33", "mov     edi, ptr_0", "cmp     eax, 13h", "jz      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001A881 case 33", "add     ptr_0, 2", "mov     [eax], edi", "mov     eax, 1Fh", "jmp     loc_19CE7"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001A13E default case, cases 12-14,16-20,22-31", "mov     [eax], ecx", "xor     eax, eax", "jmp     loc_19CE7"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001A13E cases 9-11,21,32,35,36", "mov     [eax], ptr_0", "mov     eax, 18h", "jmp     loc_19CE7"], ["cmp     al, 0DFh", "ja      loc_1A625"], ["cmp     al, 0DBh", "ja      _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["mov     eax, [esp+3Ch+var_38]; jumptable 00019FBB cases 5-7,22,24,29", "mov     [eax], edx", "mov     eax, 1Dh", "jmp     loc_19CE7"], ["xor     eax, eax; jumptable 0001A19F case 29"], ["and     eax, 0FFh", "xor     ecx, ecx", "mov     cl, ds:(nmstrtPages - 2DF78h)[ebx+eax]", "mov     al, byte ptr [esp+3Ch+var_30]", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+ecx*8]", "mov     cl, byte ptr [esp+3Ch+var_30]", "mov     eax, ds:(namingBitmap - 2DF78h)[ebx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["lea     esi, [edx+4]; jumptable 0001A19F cases 22,24", "mov     edi, end_0", "sub     edi, esi", "cmp     edi, 1", "jle     loc_1A3E2"], ["lea     eax, (namePages - 2DF78h)[ebx]", "mov     [esp+3Ch+var_30], eax", "lea     eax, (namingBitmap - 2DF78h)[ebx]", "mov     [esp+3Ch+var_2C], eax"], ["mov     al, [esi+1]", "mov     cl, [esi]", "test    al, al", "jnz     short loc_1A3F0"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1A396 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001A396 cases 9-11,21,30,32,36", "mov     [eax], esi", "mov     eax, 14h", "jmp     loc_19CE7"], ["xor     eax, eax; jumptable 0001A396 case 29"], ["and     eax, 0FFh", "mov     edi, [esp+3Ch+var_30]", "xor     edx, edx", "mov     dl, [edi+eax]", "mov     al, cl", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     edx, [esp+3Ch+var_2C]", "mov     eax, [edx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["add     esi, 2; jumptable 0001A396 cases 22,24-27", "mov     edi, end_0", "sub     edi, esi", "cmp     edi, 1", "jg      short loc_1A368"], ["mov     eax, 0FFFFFFECh", "jmp     loc_19CE7"], ["cmp     al, 0DFh", "ja      loc_1A8E0"], ["cmp     al, 0DBh", "ja      _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["lea     edx, [eax+28h]", "cmp     dl, 3", "ja      short loc_1A3AA"], ["cmp     edi, 3; jumptable 0001A19F case 7", "jg      _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["jmp     loc_1A013"], ["lea     ecx, [edx+4]; jumptable 00019FBB case 16", "mov     eax, end_0", "sub     eax, ecx", "dec     eax", "jle     loc_1A672"], ["cmp     byte ptr [edx+5], 0", "jnz     _L3991; jumptable 0001A13E default case, cases 12-14,16-20,22-31"], ["xor     eax, eax", "mov     ptr_0, [esp+3Ch+var_34]", "mov     al, [edx+4]", "mov     al, [esi+eax+48h]", "cmp     al, 18h", "jz      loc_1A9F3"], ["ja      loc_1AA77"], ["cmp     al, 14h", "jnz     loc_1A9EB"], ["mov     eax, [esp+3Ch+var_38]", "add     edx, 6", "mov     [eax], edx", "mov     eax, 21h ; '!'", "jmp     loc_19CE7"], ["mov     eax, [esp+3Ch+var_38]; jumptable 00019FBB case 15", "mov     ecx, end_0; end", "mov     [esp+3Ch+enc], eax; nextTokPtr", "mov     eax, [esp+3Ch+var_34]; enc", "add     esp, 2Ch", "add     edx, 4; ptr", "pop     ebx", "pop     ptr_0", "pop     edi", "pop     end_0", "jmp     little2_scanPi"], ["cmp     edi, 2; jumptable 0001A19F case 6", "jnz     _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["jmp     loc_1A013"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001A13E case 34", "add     edx, 4", "mov     [eax], edx", "mov     eax, 25h ; '%'", "jmp     loc_19CE7"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001A13E case 33", "add     edx, 4", "mov     [eax], edx", "mov     eax, 24h ; '$'", "jmp     loc_19CE7"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001A13E case 15", "add     edx, 4", "mov     [eax], edx", "mov     eax, 23h ; '#'", "jmp     loc_19CE7"], ["lea     esi, [ptr_0+2]; jumptable 0001A22F cases 22,24-27", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1ABB7"], ["mov     dl, [edi+3]", "mov     cl, [edi+2]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_19E6B"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4239; jumptable 00019DD1 default case, cases 5,8,12-14,16-19,28,31"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1A51C - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["mov     cl, byte ptr [esp+3Ch+var_2C]; jumptable 0001A22F case 29", "mov     esi, [esp+3Ch+var_20]", "mov     al, cl", "mov     ebp, esi", "shr     al, 5", "and     eax, 0FFh", "mov     eax, [esi+eax*4+320h]", "shr     eax, cl", "test    al, 1", "jz      loc_1AC76"], ["lea     esi, [ptr_0+2]", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1ABB7"], ["mov     dl, [edi+3]", "mov     cl, [edi+2]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_19E6B"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4239; jumptable 00019DD1 default case, cases 5,8,12-14,16-19,28,31"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1A58E - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["lea     esi, [ptr_0+2]; jumptable 0001A22F case 23", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1ABB7"], ["mov     dl, [edi+3]", "mov     cl, [edi+2]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_19E6B"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4239; jumptable 00019DD1 default case, cases 5,8,12-14,16-19,28,31"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1A5DB - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["add     edx, 4", "cmp     end_0, edx", "jz      loc_19F41"], ["lea     eax, [ptr_0+2]", "mov     edx, ebx", "mov     ebx, end_0", "sub     ebx, ptr_0", "dec     ebx", "jle     loc_1A902"], ["mov     ebx, ptr_0", "jmp     loc_19F1A"], ["cmp     al, 0DFh", "ja      short loc_1A644"], ["cmp     al, 0DBh", "ja      _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["lea     ecx, [eax+28h]", "cmp     cl, 3", "jbe     _L4015; jumptable 0001A19F case 7"], ["jmp     loc_1A312"], ["inc     al", "jnz     _L3969; jumptable 00019FBB cases 5-7,22,24,29"], ["xor     eax, eax", "mov     al, cl", "sub     eax, 0FEh", "cmp     eax, 1", "jbe     _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["jmp     _L3969; jumptable 00019FBB cases 5-7,22,24,29"], ["cmp     al, 0FFh", "jnz     loc_1A312"], ["xor     ecx, ecx", "mov     cl, byte ptr [esp+3Ch+var_30]", "sub     ecx, 0FEh", "cmp     ecx, 1", "jbe     _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["jmp     loc_1A312"], ["mov     eax, 0FFFFFFFCh", "jmp     loc_19CE7"], ["or      eax, 0FFFFFFFFh", "jmp     loc_19CE7"], ["cmp     [esp+3Ch+var_30], 1", "jle     short loc_1A672"], ["mov     dl, [esi+3]", "mov     cl, [esi+2]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1A912"], ["xor     eax, eax", "mov     al, cl", "mov     ecx, [esp+3Ch+var_34]", "mov     al, [ecx+eax+48h]", "lea     ecx, [eax-5]; switch 25 cases", "mov     byte ptr [esp+3Ch+tok], cl", "cmp     cl, 18h", "ja      short _L4062; jumptable 0001A6BA default case, cases 8-21,23,28"], ["and     ecx, 0FFh", "mov     ebp, ds:(jpt_1A6BA - 2DF78h)[ebx+ecx*4]", "add     ebp, ebx", "jmp     ebp; switch jump"], ["sub     eax, 5; jumptable 0001A6BA default case, cases 8-21,23,28", "cmp     al, 1Fh", "ja      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_1A6D5 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["lea     ptr_0, [esi+4]; jumptable 0001A6D5 cases 24-27", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1ABB7"], ["mov     dl, [esi+5]", "mov     cl, [esi+4]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1ACE1"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1A722 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["lea     ptr_0, [esi+4]; jumptable 0001A6D5 case 23", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1ABB7"], ["mov     dl, [esi+5]", "mov     cl, [esi+4]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1ACE1"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1A76F - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["mov     cl, byte ptr [esp+3Ch+var_2C]; jumptable 0001A6D5 case 29", "mov     edx, [esp+3Ch+var_20]", "mov     al, cl", "mov     ebp, edx", "shr     al, 5", "and     eax, 0FFh", "mov     eax, [edx+eax*4+320h]", "shr     eax, cl", "test    al, 1", "jz      loc_1AC76"], ["lea     ptr_0, [esi+4]", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1ABB7"], ["mov     dl, [esi+5]", "mov     cl, [esi+4]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1ACE1"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1A7E1 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["cmp     dl, 0FFh", "jnz     short _L4063; jumptable 0001A6BA case 29"], ["xor     eax, eax", "mov     al, byte ptr [esp+3Ch+var_2C]", "sub     eax, 0FEh", "cmp     eax, 1", "jbe     loc_1A9DC"], ["and     edx, 0FFh; jumptable 0001A6BA case 29", "xor     eax, eax", "mov     cl, byte ptr [esp+3Ch+var_2C]", "mov     al, ds:(namePages - 2DF78h)[ebx+edx]", "mov     edx, eax", "mov     al, cl", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     edx, [esp+3Ch+var_20]", "mov     eax, [edx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["lea     ptr_0, [esi+4]; jumptable 0001A6BA cases 22,24-27", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1AD47"], ["mov     dl, [esi+5]", "mov     al, [esi+4]", "mov     byte ptr [esp+3Ch+var_2C], al", "test    dl, dl", "jnz     loc_1AAD0"], ["mov     dl, al", "xor     eax, eax", "mov     al, dl", "mov     edx, [esp+3Ch+var_34]", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1A881 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["mov     eax, 29h ; ')'; jumptable 0001A881 cases 9-11,20,21,30,32,35,36", "jmp     loc_19EF6"], ["lea     ptr_0, [esi+6]; jumptable 0001A881 cases 22,24-27", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1AD47"], ["mov     dl, [esi+7]", "mov     cl, [esi+6]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1ABA0"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1A8D8 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["cmp     al, 0FFh", "jnz     loc_1A3AA"], ["xor     edx, edx", "mov     dl, cl", "sub     edx, 0FEh", "cmp     edx, 1", "jbe     _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["jmp     loc_1A3AA"], ["mov     eax, ebx"], ["mov     ebx, [esp+3Ch+var_38]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[ebx], eax", "mov     eax, 0Fh", "jmp     loc_19CE7"], ["cmp     dl, 0DFh", "ja      loc_1A7E8"], ["cmp     dl, 0DBh", "ja      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["lea     eax, [edx+28h]", "cmp     al, 3", "jbe     _L4066; jumptable 0001A22F case 7"], ["jmp     _L4063; jumptable 0001A6BA case 29"], ["cmp     dl, 0DFh", "ja      loc_1A9D3"], ["cmp     dl, 0DBh", "ja      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["lea     eax, [edx+28h]", "cmp     al, 3", "jbe     _L4066; jumptable 0001A22F case 7"], ["and     edx, 0FFh", "xor     eax, eax", "mov     cl, byte ptr [esp+3Ch+var_2C]", "mov     esi, [esp+3Ch+var_20]", "mov     al, ds:(namePages - 2DF78h)[ebx+edx]", "mov     ebp, esi", "mov     edx, eax", "mov     al, cl", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     eax, [esi+eax*4]", "shr     eax, cl", "test    al, 1", "jz      loc_1AC76"], ["lea     esi, [ptr_0+2]", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1ABB7"], ["mov     dl, [edi+3]", "mov     cl, [edi+2]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_19E6B"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4239; jumptable 00019DD1 default case, cases 5,8,12-14,16-19,28,31"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1A9D1 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["cmp     dl, 0FFh", "jnz     loc_1A951"], ["mov     esi, ptr_0", "mov     [esp+3Ch+tok], 13h", "jmp     loc_19E11"], ["cmp     al, 16h", "jnz     _L3991; jumptable 0001A13E default case, cases 12-14,16-20,22-31"], ["add     edx, 6"], ["mov     ecx, end_0", "sub     ecx, edx", "cmp     ecx, 1", "jle     loc_1A672"], ["cmp     byte ptr [edx+1], 0", "jnz     _L3940; jumptable 00019D13 default case, cases 0,1,3,8,14-18,28,33,34"], ["xor     eax, eax", "mov     esi, [esp+3Ch+var_34]", "mov     al, [edx]", "mov     al, [esi+eax+48h]", "sub     eax, 9; switch 22 cases", "cmp     al, 15h", "ja      _L3940; jumptable 00019D13 default case, cases 0,1,3,8,14-18,28,33,34"], ["and     eax, 0FFh", "mov     esi, ds:(jpt_1AA32 - 2DF78h)[ebx+eax*4]", "add     esi, ebx", "jmp     esi; switch jump"], ["cmp     ecx, 3; jumptable 0001AA32 case 30", "jle     loc_1A672"], ["cmp     byte ptr [edx+3], 0", "jnz     short _L3985; jumptable 0001AA32 cases 9,10,21"], ["xor     eax, eax", "mov     ebx, [esp+3Ch+var_34]", "mov     al, [edx+2]", "mov     cl, [ebx+eax+48h]", "cmp     cl, 1Eh", "ja      short _L3985; jumptable 0001AA32 cases 9,10,21"], ["mov     eax, 1", "shl     eax, cl", "test    eax, 40200600h", "jnz     _L3940; jumptable 00019D13 default case, cases 0,1,3,8,14-18,28,33,34"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001AA32 cases 9,10,21", "mov     [eax], edx", "mov     eax, 10h", "jmp     loc_19CE7"], ["cmp     al, 1Bh", "jnz     _L3991; jumptable 0001A13E default case, cases 12-14,16-20,22-31"], ["lea     eax, [edx+6]", "mov     ecx, end_0", "sub     ecx, eax", "dec     ecx", "jle     loc_1A672"], ["cmp     byte ptr [edx+7], 0", "mov     ebx, [esp+3Ch+var_38]", "jnz     loc_1AB83"], ["cmp     byte ptr [edx+6], 2Dh ; '-'", "jnz     loc_1AB83"], ["mov     [esp+3Ch+enc], ebx; nextTokPtr", "mov     edx, eax; ptr", "mov     eax, [esp+3Ch+var_34]; enc", "add     esp, 2Ch", "mov     ecx, end_0; end", "pop     ebx", "pop     esi", "pop     edi", "pop     end_0", "jmp     little2_scanComment"], ["mov     ptr_0, [esp+3Ch+var_38]", "add     edx, 6", "mov     [eax], edx", "mov     eax, 22h ; '\"'", "jmp     loc_19CE7"], ["cmp     dl, 0DFh", "ja      loc_1AB6B"], ["cmp     dl, 0DBh", "ja      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["lea     eax, [edx+28h]", "cmp     al, 3", "jbe     _L4066; jumptable 0001A22F case 7"], ["and     edx, 0FFh", "xor     eax, eax", "mov     cl, byte ptr [esp+3Ch+var_2C]", "mov     al, ds:(namePages - 2DF78h)[ebx+edx]", "mov     edx, eax", "mov     al, cl", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     edx, [esp+3Ch+var_20]", "mov     ebp, edx", "mov     eax, [edx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      loc_1AC76"], ["lea     ptr_0, [esi+6]", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1AD47"], ["mov     dl, [esi+7]", "mov     cl, [esi+6]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     short loc_1ABA0"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1AB69 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["cmp     dl, 0FFh", "jnz     loc_1AAED"], ["mov     esi, ptr_0", "mov     [esp+3Ch+tok], 29h ; ')'", "jmp     loc_19E11"], ["mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[ebx], eax", "xor     eax, eax", "jmp     loc_19CE7"], ["mov     ptr_0, 0FFFFFFE6h", "jmp     loc_19CE7"], ["mov     eax, 0FFFFFFE8h", "jmp     loc_19CE7"], ["mov     esi, ptr_0", "mov     [esp+3Ch+tok], 29h ; ')'", "jmp     loc_19E78"], ["add     edx, 2; jumptable 0001AA32 cases 22,24", "jmp     loc_1A9F6"], ["mov     eax, 13h", "neg     eax", "jmp     loc_19CE7"], ["mov     [esp+3Ch+tok], 13h; jumptable 0001A51C cases 22,24-27", "jmp     _L4031; jumptable 00019DD1 cases 22,24-27"], ["lea     ptr_0, [esi+6]; jumptable 0001A881 case 23", "mov     ebp, [esp+3Ch+var_24]", "sub     ebp, ptr_0", "mov     [esp+3Ch+var_30], ebp", "jmp     loc_1A1EC"], ["mov     cl, byte ptr [esp+3Ch+var_2C]; jumptable 0001A881 case 29", "mov     edx, [esp+3Ch+var_20]", "mov     al, cl", "mov     ebp, edx", "shr     al, 5", "and     eax, 0FFh", "mov     eax, [edx+eax*4+320h]", "shr     eax, cl", "test    al, 1", "jz      short loc_1AC76"], ["lea     ptr_0, [esi+6]", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1AD47"], ["mov     dl, [esi+7]", "mov     cl, [esi+6]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1ABA0"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4025; jumptable 0001A22F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1AC4E - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["mov     esi, ptr_0; jumptable 0001A7E1 case 29", "mov     edx, 0C8h", "mov     [esp+3Ch+tok], 13h", "jmp     loc_19EC0"], ["mov     edx, 0C8h; jumptable 0001A58E case 29", "mov     [esp+3Ch+tok], 13h", "jmp     loc_19EC0"], ["mov     esi, ptr_0", "jmp     _L4040; jumptable 00019FBB default case, cases 8-14,17-21,23,25-28"], ["mov     esi, ptr_0; jumptable 0001AB69 case 29", "mov     edx, 0C8h", "mov     [esp+3Ch+tok], 29h ; ')'", "jmp     loc_19EC0"], ["lea     eax, (namingBitmap - 2DF78h)[ebx]; jumptable 0001A51C case 29", "mov     edx, 0C8h", "mov     [esp+3Ch+tok], 13h", "mov     ebp, eax", "jmp     loc_19EC0"], ["add     esi, 6; jumptable 0001A722 case 23", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+tok], 13h", "mov     [esp+3Ch+var_30], eax", "jmp     loc_19E55"], ["lea     eax, (namingBitmap - 2DF78h)[ebx]; jumptable 0001A722 case 29", "mov     esi, ptr_0", "mov     edx, 0C8h", "mov     [esp+3Ch+tok], 13h", "mov     ebp, eax", "jmp     loc_19EC0"], ["mov     esi, ptr_0", "mov     [esp+3Ch+tok], 13h", "jmp     loc_19E78"], ["lea     ptr_0, [edi+4]; jumptable 0001A58E case 23", "mov     ebp, [esp+3Ch+var_24]", "sub     ebp, ptr_0", "mov     [esp+3Ch+tok], 13h", "mov     [esp+3Ch+var_30], ebp", "jmp     loc_19E55"], ["mov     esi, ptr_0; jumptable 0001A8D8 cases 22,24-27", "mov     [esp+3Ch+tok], 29h ; ')'", "jmp     _L4031; jumptable 00019DD1 cases 22,24-27"], ["lea     eax, (namingBitmap - 2DF78h)[ebx]; jumptable 0001A8D8 case 29", "mov     esi, ptr_0", "mov     edx, 0C8h", "mov     [esp+3Ch+tok], 29h ; ')'", "mov     ebp, eax", "jmp     loc_19EC0"], ["lea     ptr_0, [esi+8]; jumptable 0001A8D8 case 23", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "jmp     loc_1A1EC"], ["mov     eax, 29h ; ')'", "neg     eax", "jmp     loc_19CE7"], ["lea     ptr_0, [edi+4]; jumptable 0001A51C case 23", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+tok], 13h", "mov     [esp+3Ch+var_30], eax", "jmp     loc_19E55"], ["add     esi, 6; jumptable 0001A76F case 23", "mov     ebp, [esp+3Ch+var_24]", "sub     ebp, ptr_0", "mov     [esp+3Ch+tok], 13h", "mov     [esp+3Ch+var_30], ebp", "jmp     loc_19E55"], ["lea     ptr_0, [esi+8]; jumptable 0001AC4E case 23", "mov     ebp, [esp+3Ch+var_24]", "sub     ebp, ptr_0", "mov     [esp+3Ch+var_30], ebp", "jmp     loc_1A1EC"]], "big2_prologTok": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 2Ch", "mov     eax, [esp+3Ch+enc]", "mov     edx, [esp+3Ch+ptr]", "mov     [esp+3Ch+var_34], eax", "mov     ebp, [esp+3Ch+end]", "mov     eax, [esp+3Ch+nextTokPtr]", "cmp     edx, ebp", "mov     [esp+3Ch+var_38], eax", "jnb     loc_1B798"], ["mov     eax, ebp", "sub     eax, edx", "test    al, 1", "jz      short loc_1ADE6"], ["and     eax, 0FFFFFFFEh", "jz      loc_1B7A2"], ["lea     ebp, [edx+n]"], ["mov     al, [edx]", "movzx   edi, byte ptr [edx+1]", "test    al, al", "jz      short loc_1AE20"], ["cmp     al, 0DFh", "ja      short loc_1AE48"], ["cmp     al, 0DBh", "ja      short _L4387; jumptable 0001AE43 default case, cases 0,1,3,8,14-18,28,33,34"], ["lea     esi, [eax+28h]", "mov     ecx, esi", "cmp     cl, 3", "ja      short loc_1AE60"], ["mov     eax, end_0; jumptable 0001AE43 case 7", "sub     eax, edx", "cmp     eax, 3", "jle     loc_1B143"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001AE43 default case, cases 0,1,3,8,14-18,28,33,34", "mov     [eax], edx", "xor     eax, eax"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, edi", "mov     esi, [esp+3Ch+var_34]", "and     eax, 0FFh", "cmp     byte ptr [esi+eax+48h], 24h; switch 37 cases", "ja      short _L4387; jumptable 0001AE43 default case, cases 0,1,3,8,14-18,28,33,34"], ["xor     ecx, ecx", "mov     cl, [esi+eax+48h]", "mov     eax, ecx", "mov     ecx, ds:(jpt_1AE43 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["cmp     al, 0FFh", "jnz     short loc_1AE60"], ["mov     esi, edi", "and     esi, 0FFh", "sub     esi, 0FEh", "cmp     esi, 1", "jbe     short _L4387; jumptable 0001AE43 default case, cases 0,1,3,8,14-18,28,33,34"], ["nop"], ["and     eax, 0FFh", "mov     ecx, edi", "shr     cl, 5", "mov     esi, ecx", "mov     ecx, edi", "movzx   edi, ds:(nmstrtPages - 2DF78h)[ebx+eax]", "and     esi, 0FFh", "and     edi, 0FFh", "and     ecx, 1Fh", "mov     byte ptr [esp+3Ch+var_30], cl", "lea     edi, [esi+edi*8]", "lea     ecx, (namingBitmap - 2DF78h)[ebx]", "mov     [esp+3Ch+var_2C], ecx", "mov     edi, [ecx+edi*4]", "mov     cl, byte ptr [esp+3Ch+var_30]", "shr     edi, cl", "and     edi, 1", "jz      short loc_1AF08"], ["lea     esi, [edx+2]; jumptable 0001AE43 cases 22,24", "mov     eax, 12h"], ["mov     ecx, end_0", "sub     ecx, ptr_0", "mov     [esp+3Ch+var_30], ecx", "dec     ecx", "jle     loc_1AF94"], ["lea     edx, (namingBitmap - 2DF78h)[ebx]", "mov     [esp+3Ch+tok], tok_0", "mov     [esp+3Ch+var_20], edx", "mov     [esp+3Ch+var_24], end_0"], ["mov     dl, [ptr_0]", "mov     cl, [ptr_0+1]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1AFA8"], ["xor     edx, edx", "mov     eax, [esp+3Ch+var_34]", "mov     dl, cl", "mov     dl, [eax+edx+48h]", "sub     edx, 5; switch 32 cases", "cmp     dl, 1Fh", "ja      short _L4686; jumptable 0001AF01 default case, cases 5,8,12-14,16-19,28,31"], ["and     edx, 0FFh", "mov     eax, ds:(jpt_1AF01 - 2DF78h)[ebx+edx*4]", "add     eax, ebx", "jmp     eax; switch jump"], ["xor     ecx, ecx", "mov     cl, ds:(namePages - 2DF78h)[ebx+eax]", "mov     eax, ecx", "mov     cl, byte ptr [esp+3Ch+var_30]", "lea     eax, [esi+eax*8]", "mov     esi, [esp+3Ch+var_2C]", "mov     eax, [esi+eax*4]", "shr     eax, cl", "test    al, 1", "jz      _L4387; jumptable 0001AE43 default case, cases 0,1,3,8,14-18,28,33,34"], ["lea     esi, [edx+2]; jumptable 0001AE43 cases 23,25-27", "mov     eax, 13h", "jmp     loc_1AEAC"], ["cmp     dl, 0FFh", "jnz     loc_1AFD0"], ["xor     ecx, ecx", "mov     cl, byte ptr [esp+3Ch+var_2C]", "sub     ecx, 0FEh", "cmp     ecx, 1", "ja      loc_1B088"], ["xchg    ax, ax"], ["mov     edi, esi; jumptable 0001AF01 default case, cases 5,8,12-14,16-19,28,31"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34", "mov     [eax], edi", "add     esp, 2Ch", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     esi, ptr_0; jumptable 0001B852 cases 22,24-27", "mov     [esp+3Ch+tok], 13h", "lea     esi, [esi+0]"], ["add     esi, 2; jumptable 0001AF01 cases 22,24-27", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax"], ["cmp     [esp+3Ch+var_30], 1", "jg      loc_1AECD"], ["mov     eax, [esp+3Ch+tok]"], ["neg     tok_0", "jmp     loc_1AE17"], ["mov     [esp+3Ch+tok], 13h", "lea     ptr_0, [ptr_0+0]", "nop"], ["cmp     dl, 0DFh", "ja      short loc_1AF38"], ["cmp     dl, 0DBh", "ja      short _L4686; jumptable 0001AF01 default case, cases 5,8,12-14,16-19,28,31"], ["lea     edi, [edx+28h]", "mov     eax, edi", "cmp     al, 3", "ja      short loc_1AFD0"], ["mov     edi, ptr_0; jumptable 0001AF01 case 7"], ["cmp     [esp+3Ch+var_30], 3; jumptable 0001B35F case 7", "jg      short _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["jmp     loc_1B143"], ["and     edx, 0FFh", "xor     eax, eax", "mov     cl, byte ptr [esp+3Ch+var_2C]", "mov     al, ds:(namePages - 2DF78h)[ebx+edx]", "mov     edx, eax", "lea     eax, (namingBitmap - 2DF78h)[ebx]", "shl     edx, 3", "mov     ebp, eax"], ["mov     al, cl", "shr     al, 5", "mov     edi, eax", "and     edi, 0FFh", "add     edx, edi", "mov     edx, [ebp+edx*4+0]", "shr     edx, cl", "and     edx, 1", "jnz     _L4478; jumptable 0001AF01 cases 22,24-27"], ["xchg    ax, ax"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28", "mov     [eax], esi", "xor     eax, eax", "jmp     loc_1AE17"], ["mov     eax, [esp+3Ch+tok]; jumptable 0001AF01 cases 9-11,20,21,30,32,35,36", "mov     edi, ptr_0"], ["mov     ebx, [esp+3Ch+var_38]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[ebx], ptr_0", "jmp     loc_1AE17"], ["lea     ebx, [edx+2]; jumptable 0001AE43 cases 10,21"], ["mov     eax, end_0", "mov     ecx, [esp+3Ch+var_34]", "sub     eax, ebx", "dec     eax", "jle     loc_1BA30"], ["cmp     byte ptr [edx+2], 0", "jnz     short loc_1B071"], ["xor     eax, eax", "mov     al, [edx+3]", "mov     al, [ecx+eax+48h]", "cmp     al, 0Ah", "jz      loc_1B71B"], ["cmp     al, 15h", "jz      loc_1B71B"], ["cmp     al, 9", "jz      loc_1B710"], ["mov     eax, [esp+3Ch+var_38]", "mov     [eax], ptr_0", "mov     eax, 0Fh", "jmp     loc_1AE17"], ["xor     edx, edx", "lea     eax, (namingBitmap - 2DF78h)[ebx]", "mov     dl, ds:(namePages+0FFh - 2DF78h)[ebx]", "mov     cl, [esi+1]", "shl     edx, 3", "mov     ebp, eax", "jmp     loc_1AFF0"], ["lea     esi, [edx+2]; jumptable 0001AE43 case 2", "mov     eax, end_0", "sub     eax, ptr_0", "dec     eax", "jle     loc_1B7A2"], ["mov     al, [edx+2]", "mov     cl, [edx+3]", "test    al, al", "jnz     loc_1B420"], ["and     ecx, 0FFh", "mov     eax, [esp+3Ch+var_34]", "mov     al, [eax+ecx+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_1B0EB - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["lea     eax, [edx+2]; jumptable 0001AE43 case 4", "mov     ecx, end_0", "sub     ecx, ptr_0", "cmp     ecx, 1", "jle     loc_1BCBC"], ["cmp     byte ptr [edx+2], 0", "jnz     short loc_1B128"], ["cmp     byte ptr [edx+3], 5Dh ; ']'", "jnz     short loc_1B128"], ["cmp     ecx, 3", "jle     loc_1B7A2"], ["cmp     byte ptr [edx+4], 0", "jnz     short loc_1B128"], ["cmp     byte ptr [edx+5], 3Eh ; '>'", "jz      loc_1BBED"], ["lea     esi, [esi+0]"], ["mov     ebx, [esp+3Ch+var_38]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[ebx], ptr_0", "mov     ptr_0, 1Ah", "jmp     loc_1AE17"], ["mov     eax, end_0; jumptable 0001AE43 case 5", "sub     eax, edx", "dec     eax", "jg      _L4387; jumptable 0001AE43 default case, cases 0,1,3,8,14-18,28,33,34"], ["mov     eax, 0FFFFFFFEh", "jmp     loc_1AE17"], ["mov     eax, end_0; jumptable 0001AE43 case 6", "sub     eax, edx", "cmp     eax, 2", "jg      _L4387; jumptable 0001AE43 default case, cases 0,1,3,8,14-18,28,33,34"], ["jmp     short loc_1B143"], ["lea     ebx, [edx+2]; jumptable 0001AE43 case 9", "cmp     ebx, end_0", "jnz     loc_1B03B"], ["mov     eax, [esp+3Ch+var_38]", "mov     [eax], end_0", "mov     eax, 0FFFFFFF1h", "jmp     loc_1AE17"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001AE43 case 30", "mov     ecx, end_0; end", "mov     [esp+3Ch+enc], eax; nextTokPtr", "mov     eax, [esp+3Ch+var_34]; enc", "add     esp, 2Ch", "add     edx, 2; ptr", "pop     ebx", "pop     esi", "pop     edi", "pop     end_0", "jmp     big2_scanPercent"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001AE43 case 31", "add     edx, 2", "mov     [eax], edx", "mov     eax, 17h", "jmp     loc_1AE17"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001AE43 case 36", "add     edx, 2", "mov     [eax], edx", "mov     eax, 15h", "jmp     loc_1AE17"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001AE43 case 11", "add     edx, 2", "mov     [eax], edx", "mov     eax, 11h", "jmp     loc_1AE17"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001AE43 case 12", "lea     ecx, [edx+2]; ptr", "mov     [esp+3Ch+ptr], eax; nextTokPtr", "mov     [esp+3Ch+enc], end_0; end", "mov     edx, [esp+3Ch+var_34]; enc", "mov     eax, 0Ch; open"], ["add     esp, 2Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     end_0", "jmp     big2_scanLit"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001AE43 case 13", "lea     ecx, [edx+2]", "mov     [esp+3Ch+ptr], eax", "mov     [esp+3Ch+enc], end_0", "mov     edx, [esp+3Ch+var_34]", "mov     eax, 0Dh", "jmp     short loc_1B200"], ["lea     ecx, [edx+2]; jumptable 0001AE43 case 32", "mov     eax, end_0", "sub     eax, ptr_0", "dec     eax", "jle     loc_1BCC6"], ["cmp     byte ptr [edx+2], 0", "jnz     _L4438; jumptable 0001B26E default case, cases 12-14,16-20,22-31"], ["xor     eax, eax", "mov     esi, [esp+3Ch+var_34]", "mov     al, [edx+3]", "mov     al, [esi+eax+48h]", "sub     eax, 9; switch 28 cases", "cmp     al, 1Bh", "ja      _L4438; jumptable 0001B26E default case, cases 12-14,16-20,22-31"], ["and     eax, 0FFh", "mov     esi, ds:(jpt_1B26E - 2DF78h)[ebx+eax*4]", "add     ebx, esi", "jmp     ebx; switch jump"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001AE43 case 35", "add     edx, 2", "mov     [eax], edx", "mov     eax, 26h ; '&'", "jmp     loc_1AE17"], ["lea     esi, [edx+2]; jumptable 0001AE43 case 19", "mov     edi, end_0", "sub     edi, esi", "cmp     edi, 1", "jle     loc_1B7A2"], ["mov     al, [edx+2]", "mov     cl, [edx+3]", "mov     byte ptr [esp+3Ch+var_30], cl", "test    al, al", "jnz     loc_1B738"], ["xor     eax, eax", "mov     al, cl", "mov     ecx, [esp+3Ch+var_34]", "mov     al, [ecx+eax+48h]", "sub     eax, 5; switch 25 cases", "cmp     al, 18h", "ja      _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_1B2CF - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001AE43 case 20", "add     edx, 2", "mov     [eax], edx", "mov     eax, 19h", "jmp     loc_1AE17"], ["xor     eax, eax; jumptable 0001AE43 case 29", "jmp     loc_1AE60"], ["lea     edi, [ptr_0+2]; jumptable 0001AF01 case 23", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "mov     eax, [esp+3Ch+tok]", "cmp     eax, 12h", "jz      loc_1B7AA"], ["mov     esi, ptr_0", "cmp     eax, 29h ; ')'", "jnz     loc_1AF85"], ["cmp     [esp+3Ch+var_30], 1", "jle     loc_1BCE7"], ["mov     dl, [ptr_0]", "mov     al, [ptr_0+1]", "mov     byte ptr [esp+3Ch+var_2C], al", "test    dl, dl", "jnz     loc_1BA64"], ["mov     dl, al", "xor     eax, eax", "mov     al, dl", "mov     esi, [esp+3Ch+var_34]", "mov     al, [esi+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     esi, ds:(jpt_1B35F - 2DF78h)[ebx+eax*4]", "add     esi, ebx", "jmp     esi; switch jump"], ["mov     edi, ptr_0; jumptable 0001B64C cases 9-11,20,21,30,32,35,36"], ["mov     eax, 13h; jumptable 0001B35F cases 9-11,20,21,30,32,35,36", "jmp     loc_1B026"], ["lea     eax, (namingBitmap - 2DF78h)[ebx]; jumptable 0001AF01 case 29", "mov     edx, 0C8h", "mov     ebp, eax", "jmp     loc_1AFF0"], ["mov     edi, ptr_0; jumptable 0001AF01 case 6"], ["cmp     [esp+3Ch+var_30], 2; jumptable 0001B35F case 6", "jnz     _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["jmp     loc_1B143"], ["mov     eax, [esp+3Ch+tok]; jumptable 0001AF01 case 34", "mov     edi, ptr_0", "cmp     eax, 13h", "jz      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001B9B1 case 34", "add     ptr_0, 2", "mov     [eax], edi", "mov     eax, 20h ; ' '", "jmp     loc_1AE17"], ["mov     eax, [esp+3Ch+tok]; jumptable 0001AF01 case 15", "mov     edi, ptr_0", "cmp     eax, 13h", "jz      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001B9B1 case 15", "add     ptr_0, 2", "mov     [eax], edi", "mov     eax, 1Eh", "jmp     loc_1AE17"], ["mov     eax, [esp+3Ch+tok]; jumptable 0001AF01 case 33", "mov     edi, ptr_0", "cmp     eax, 13h", "jz      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001B9B1 case 33", "add     ptr_0, 2", "mov     [eax], edi", "mov     eax, 1Fh", "jmp     loc_1AE17"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001B26E default case, cases 12-14,16-20,22-31", "mov     [eax], ecx", "xor     eax, eax", "jmp     loc_1AE17"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001B26E cases 9-11,21,32,35,36", "mov     [eax], ptr_0", "mov     eax, 18h", "jmp     loc_1AE17"], ["cmp     al, 0DFh", "ja      loc_1B755"], ["cmp     al, 0DBh", "ja      _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001B0EB cases 5-7,22,24,29", "mov     [eax], edx", "mov     eax, 1Dh", "jmp     loc_1AE17"], ["xor     eax, eax; jumptable 0001B2CF case 29"], ["and     eax, 0FFh", "xor     ecx, ecx", "mov     cl, ds:(nmstrtPages - 2DF78h)[ebx+eax]", "mov     al, byte ptr [esp+3Ch+var_30]", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+ecx*8]", "mov     cl, byte ptr [esp+3Ch+var_30]", "mov     eax, ds:(namingBitmap - 2DF78h)[ebx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["lea     esi, [edx+4]; jumptable 0001B2CF cases 22,24", "mov     edi, end_0", "sub     edi, esi", "cmp     edi, 1", "jle     loc_1B512"], ["lea     eax, (namePages - 2DF78h)[ebx]", "mov     [esp+3Ch+var_30], eax", "lea     eax, (namingBitmap - 2DF78h)[ebx]", "mov     [esp+3Ch+var_2C], eax"], ["mov     al, [esi]", "mov     cl, [esi+1]", "test    al, al", "jnz     short loc_1B520"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1B4C6 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001B4C6 cases 9-11,21,30,32,36", "mov     [eax], esi", "mov     eax, 14h", "jmp     loc_1AE17"], ["xor     eax, eax; jumptable 0001B4C6 case 29"], ["and     eax, 0FFh", "mov     edi, [esp+3Ch+var_30]", "xor     edx, edx", "mov     dl, [edi+eax]", "mov     al, cl", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     edx, [esp+3Ch+var_2C]", "mov     eax, [edx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["add     esi, 2; jumptable 0001B4C6 cases 22,24-27", "mov     edi, end_0", "sub     edi, esi", "cmp     edi, 1", "jg      short loc_1B498"], ["mov     eax, 0FFFFFFECh", "jmp     loc_1AE17"], ["cmp     al, 0DFh", "ja      loc_1BA10"], ["cmp     al, 0DBh", "ja      _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["lea     edx, [eax+28h]", "cmp     dl, 3", "ja      short loc_1B4DA"], ["cmp     edi, 3; jumptable 0001B2CF case 7", "jg      _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["jmp     loc_1B143"], ["lea     ecx, [edx+4]; jumptable 0001B0EB case 16", "mov     eax, end_0", "sub     eax, ecx", "dec     eax", "jle     loc_1B7A2"], ["cmp     byte ptr [edx+4], 0", "jnz     _L4438; jumptable 0001B26E default case, cases 12-14,16-20,22-31"], ["xor     eax, eax", "mov     ptr_0, [esp+3Ch+var_34]", "mov     al, [edx+5]", "mov     al, [esi+eax+48h]", "cmp     al, 18h", "jz      loc_1BB23"], ["ja      loc_1BBA7"], ["cmp     al, 14h", "jnz     loc_1BB1B"], ["mov     eax, [esp+3Ch+var_38]", "add     edx, 6", "mov     [eax], edx", "mov     eax, 21h ; '!'", "jmp     loc_1AE17"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001B0EB case 15", "mov     ecx, end_0; end", "mov     [esp+3Ch+enc], eax; nextTokPtr", "mov     eax, [esp+3Ch+var_34]; enc", "add     esp, 2Ch", "add     edx, 4; ptr", "pop     ebx", "pop     ptr_0", "pop     edi", "pop     end_0", "jmp     big2_scanPi"], ["cmp     edi, 2; jumptable 0001B2CF case 6", "jnz     _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["jmp     loc_1B143"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001B26E case 34", "add     edx, 4", "mov     [eax], edx", "mov     eax, 25h ; '%'", "jmp     loc_1AE17"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001B26E case 33", "add     edx, 4", "mov     [eax], edx", "mov     eax, 24h ; '$'", "jmp     loc_1AE17"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001B26E case 15", "add     edx, 4", "mov     [eax], edx", "mov     eax, 23h ; '#'", "jmp     loc_1AE17"], ["lea     esi, [ptr_0+2]; jumptable 0001B35F cases 22,24-27", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1BCE7"], ["mov     dl, [edi+2]", "mov     cl, [edi+3]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1AF9B"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4686; jumptable 0001AF01 default case, cases 5,8,12-14,16-19,28,31"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1B64C - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["mov     cl, byte ptr [esp+3Ch+var_2C]; jumptable 0001B35F case 29", "mov     esi, [esp+3Ch+var_20]", "mov     al, cl", "mov     ebp, esi", "shr     al, 5", "and     eax, 0FFh", "mov     eax, [esi+eax*4+320h]", "shr     eax, cl", "test    al, 1", "jz      loc_1BDA6"], ["lea     esi, [ptr_0+2]", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1BCE7"], ["mov     dl, [edi+2]", "mov     cl, [edi+3]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1AF9B"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4686; jumptable 0001AF01 default case, cases 5,8,12-14,16-19,28,31"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1B6BE - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["lea     esi, [ptr_0+2]; jumptable 0001B35F case 23", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1BCE7"], ["mov     dl, [edi+2]", "mov     cl, [edi+3]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1AF9B"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4686; jumptable 0001AF01 default case, cases 5,8,12-14,16-19,28,31"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1B70B - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["add     edx, 4", "cmp     end_0, edx", "jz      loc_1B071"], ["lea     eax, [ptr_0+2]", "mov     edx, ebx", "mov     ebx, end_0", "sub     ebx, ptr_0", "dec     ebx", "jle     loc_1BA32"], ["mov     ebx, ptr_0", "jmp     loc_1B04A"], ["cmp     al, 0DFh", "ja      short loc_1B774"], ["cmp     al, 0DBh", "ja      _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["lea     ecx, [eax+28h]", "cmp     cl, 3", "jbe     _L4462; jumptable 0001B2CF case 7"], ["jmp     loc_1B442"], ["inc     al", "jnz     _L4416; jumptable 0001B0EB cases 5-7,22,24,29"], ["xor     eax, eax", "mov     al, cl", "sub     eax, 0FEh", "cmp     eax, 1", "jbe     _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["jmp     _L4416; jumptable 0001B0EB cases 5-7,22,24,29"], ["cmp     al, 0FFh", "jnz     loc_1B442"], ["xor     ecx, ecx", "mov     cl, byte ptr [esp+3Ch+var_30]", "sub     ecx, 0FEh", "cmp     ecx, 1", "jbe     _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["jmp     loc_1B442"], ["mov     eax, 0FFFFFFFCh", "jmp     loc_1AE17"], ["or      eax, 0FFFFFFFFh", "jmp     loc_1AE17"], ["cmp     [esp+3Ch+var_30], 1", "jle     short loc_1B7A2"], ["mov     dl, [esi+2]", "mov     cl, [esi+3]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1BA42"], ["xor     eax, eax", "mov     al, cl", "mov     ecx, [esp+3Ch+var_34]", "mov     al, [ecx+eax+48h]", "lea     ecx, [eax-5]; switch 25 cases", "mov     byte ptr [esp+3Ch+tok], cl", "cmp     cl, 18h", "ja      short _L4509; jumptable 0001B7EA default case, cases 8-21,23,28"], ["and     ecx, 0FFh", "mov     ebp, ds:(jpt_1B7EA - 2DF78h)[ebx+ecx*4]", "add     ebp, ebx", "jmp     ebp; switch jump"], ["sub     eax, 5; jumptable 0001B7EA default case, cases 8-21,23,28", "cmp     al, 1Fh", "ja      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     ecx, ds:(jpt_1B805 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["lea     ptr_0, [esi+4]; jumptable 0001B805 cases 24-27", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1BCE7"], ["mov     dl, [esi+4]", "mov     cl, [esi+5]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1BE11"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1B852 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["lea     ptr_0, [esi+4]; jumptable 0001B805 case 23", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1BCE7"], ["mov     dl, [esi+4]", "mov     cl, [esi+5]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1BE11"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1B89F - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["mov     cl, byte ptr [esp+3Ch+var_2C]; jumptable 0001B805 case 29", "mov     edx, [esp+3Ch+var_20]", "mov     al, cl", "mov     ebp, edx", "shr     al, 5", "and     eax, 0FFh", "mov     eax, [edx+eax*4+320h]", "shr     eax, cl", "test    al, 1", "jz      loc_1BDA6"], ["lea     ptr_0, [esi+4]", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1BCE7"], ["mov     dl, [esi+4]", "mov     cl, [esi+5]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1BE11"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1B911 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["cmp     dl, 0FFh", "jnz     short _L4510; jumptable 0001B7EA case 29"], ["xor     eax, eax", "mov     al, byte ptr [esp+3Ch+var_2C]", "sub     eax, 0FEh", "cmp     eax, 1", "jbe     loc_1BB0C"], ["and     edx, 0FFh; jumptable 0001B7EA case 29", "xor     eax, eax", "mov     cl, byte ptr [esp+3Ch+var_2C]", "mov     al, ds:(namePages - 2DF78h)[ebx+edx]", "mov     edx, eax", "mov     al, cl", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     edx, [esp+3Ch+var_20]", "mov     eax, [edx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["lea     ptr_0, [esi+4]; jumptable 0001B7EA cases 22,24-27", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1BE77"], ["mov     dl, [esi+4]", "mov     al, [esi+5]", "mov     byte ptr [esp+3Ch+var_2C], al", "test    dl, dl", "jnz     loc_1BC00"], ["mov     dl, al", "xor     eax, eax", "mov     al, dl", "mov     edx, [esp+3Ch+var_34]", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1B9B1 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["mov     eax, 29h ; ')'; jumptable 0001B9B1 cases 9-11,20,21,30,32,35,36", "jmp     loc_1B026"], ["lea     ptr_0, [esi+6]; jumptable 0001B9B1 cases 22,24-27", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1BE77"], ["mov     dl, [esi+6]", "mov     cl, [esi+7]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1BCD0"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1BA08 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["cmp     al, 0FFh", "jnz     loc_1B4DA"], ["xor     edx, edx", "mov     dl, cl", "sub     edx, 0FEh", "cmp     edx, 1", "jbe     _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["jmp     loc_1B4DA"], ["mov     eax, ebx"], ["mov     ebx, [esp+3Ch+var_38]", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[ebx], eax", "mov     eax, 0Fh", "jmp     loc_1AE17"], ["cmp     dl, 0DFh", "ja      loc_1B918"], ["cmp     dl, 0DBh", "ja      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["lea     eax, [edx+28h]", "cmp     al, 3", "jbe     _L4513; jumptable 0001B35F case 7"], ["jmp     _L4510; jumptable 0001B7EA case 29"], ["cmp     dl, 0DFh", "ja      loc_1BB03"], ["cmp     dl, 0DBh", "ja      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["lea     eax, [edx+28h]", "cmp     al, 3", "jbe     _L4513; jumptable 0001B35F case 7"], ["and     edx, 0FFh", "xor     eax, eax", "mov     cl, byte ptr [esp+3Ch+var_2C]", "mov     esi, [esp+3Ch+var_20]", "mov     al, ds:(namePages - 2DF78h)[ebx+edx]", "mov     ebp, esi", "mov     edx, eax", "mov     al, cl", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     eax, [esi+eax*4]", "shr     eax, cl", "test    al, 1", "jz      loc_1BDA6"], ["lea     esi, [ptr_0+2]", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1BCE7"], ["mov     dl, [edi+2]", "mov     cl, [edi+3]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1AF9B"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4686; jumptable 0001AF01 default case, cases 5,8,12-14,16-19,28,31"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1BB01 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["cmp     dl, 0FFh", "jnz     loc_1BA81"], ["mov     esi, ptr_0", "mov     [esp+3Ch+tok], 13h", "jmp     loc_1AF41"], ["cmp     al, 16h", "jnz     _L4438; jumptable 0001B26E default case, cases 12-14,16-20,22-31"], ["add     edx, 6"], ["mov     ecx, end_0", "sub     ecx, edx", "cmp     ecx, 1", "jle     loc_1B7A2"], ["cmp     byte ptr [edx], 0", "jnz     _L4387; jumptable 0001AE43 default case, cases 0,1,3,8,14-18,28,33,34"], ["xor     eax, eax", "mov     esi, [esp+3Ch+var_34]", "mov     al, [edx+1]", "mov     al, [esi+eax+48h]", "sub     eax, 9; switch 22 cases", "cmp     al, 15h", "ja      _L4387; jumptable 0001AE43 default case, cases 0,1,3,8,14-18,28,33,34"], ["and     eax, 0FFh", "mov     esi, ds:(jpt_1BB62 - 2DF78h)[ebx+eax*4]", "add     esi, ebx", "jmp     esi; switch jump"], ["cmp     ecx, 3; jumptable 0001BB62 case 30", "jle     loc_1B7A2"], ["cmp     byte ptr [edx+2], 0", "jnz     short _L4432; jumptable 0001BB62 cases 9,10,21"], ["xor     eax, eax", "mov     ebx, [esp+3Ch+var_34]", "mov     al, [edx+3]", "mov     cl, [ebx+eax+48h]", "cmp     cl, 1Eh", "ja      short _L4432; jumptable 0001BB62 cases 9,10,21"], ["mov     eax, 1", "shl     eax, cl", "test    eax, 40200600h", "jnz     _L4387; jumptable 0001AE43 default case, cases 0,1,3,8,14-18,28,33,34"], ["mov     eax, [esp+3Ch+var_38]; jumptable 0001BB62 cases 9,10,21", "mov     [eax], edx", "mov     eax, 10h", "jmp     loc_1AE17"], ["cmp     al, 1Bh", "jnz     _L4438; jumptable 0001B26E default case, cases 12-14,16-20,22-31"], ["lea     eax, [edx+6]", "mov     ecx, end_0", "sub     ecx, eax", "dec     ecx", "jle     loc_1B7A2"], ["cmp     byte ptr [edx+6], 0", "mov     ebx, [esp+3Ch+var_38]", "jnz     loc_1BCB3"], ["cmp     byte ptr [edx+7], 2Dh ; '-'", "jnz     loc_1BCB3"], ["mov     [esp+3Ch+enc], ebx; nextTokPtr", "mov     edx, eax; ptr", "mov     eax, [esp+3Ch+var_34]; enc", "add     esp, 2Ch", "mov     ecx, end_0; end", "pop     ebx", "pop     esi", "pop     edi", "pop     end_0", "jmp     big2_scanComment"], ["mov     ptr_0, [esp+3Ch+var_38]", "add     edx, 6", "mov     [eax], edx", "mov     eax, 22h ; '\"'", "jmp     loc_1AE17"], ["cmp     dl, 0DFh", "ja      loc_1BC9B"], ["cmp     dl, 0DBh", "ja      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["lea     eax, [edx+28h]", "cmp     al, 3", "jbe     _L4513; jumptable 0001B35F case 7"], ["and     edx, 0FFh", "xor     eax, eax", "mov     cl, byte ptr [esp+3Ch+var_2C]", "mov     al, ds:(namePages - 2DF78h)[ebx+edx]", "mov     edx, eax", "mov     al, cl", "shr     al, 5", "and     eax, 0FFh", "lea     eax, [eax+edx*8]", "mov     edx, [esp+3Ch+var_20]", "mov     ebp, edx", "mov     eax, [edx+eax*4]", "shr     eax, cl", "test    al, 1", "jz      loc_1BDA6"], ["lea     ptr_0, [esi+6]", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1BE77"], ["mov     dl, [esi+6]", "mov     cl, [esi+7]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     short loc_1BCD0"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1BC99 - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["cmp     dl, 0FFh", "jnz     loc_1BC1D"], ["mov     esi, ptr_0", "mov     [esp+3Ch+tok], 29h ; ')'", "jmp     loc_1AF41"], ["mov     ds:(_GLOBAL_OFFSET_TABLE_ - 2DF78h)[ebx], eax", "xor     eax, eax", "jmp     loc_1AE17"], ["mov     ptr_0, 0FFFFFFE6h", "jmp     loc_1AE17"], ["mov     eax, 0FFFFFFE8h", "jmp     loc_1AE17"], ["mov     esi, ptr_0", "mov     [esp+3Ch+tok], 29h ; ')'", "jmp     loc_1AFA8"], ["add     edx, 2; jumptable 0001BB62 cases 22,24", "jmp     loc_1BB26"], ["mov     eax, 13h", "neg     eax", "jmp     loc_1AE17"], ["mov     [esp+3Ch+tok], 13h; jumptable 0001B64C cases 22,24-27", "jmp     _L4478; jumptable 0001AF01 cases 22,24-27"], ["lea     ptr_0, [esi+6]; jumptable 0001B9B1 case 23", "mov     ebp, [esp+3Ch+var_24]", "sub     ebp, ptr_0", "mov     [esp+3Ch+var_30], ebp", "jmp     loc_1B31C"], ["mov     cl, byte ptr [esp+3Ch+var_2C]; jumptable 0001B9B1 case 29", "mov     edx, [esp+3Ch+var_20]", "mov     al, cl", "mov     ebp, edx", "shr     al, 5", "and     eax, 0FFh", "mov     eax, [edx+eax*4+320h]", "shr     eax, cl", "test    al, 1", "jz      short loc_1BDA6"], ["lea     ptr_0, [esi+6]", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "dec     eax", "jle     loc_1BE77"], ["mov     dl, [esi+6]", "mov     cl, [esi+7]", "mov     byte ptr [esp+3Ch+var_2C], cl", "test    dl, dl", "jnz     loc_1BCD0"], ["xor     eax, eax", "mov     edx, [esp+3Ch+var_34]", "mov     al, cl", "mov     al, [edx+eax+48h]", "sub     eax, 5; switch 32 cases", "cmp     al, 1Fh", "ja      _L4472; jumptable 0001B35F default case, cases 5,8,12-19,28,31,33,34"], ["and     eax, 0FFh", "mov     edx, ds:(jpt_1BD7E - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["mov     esi, ptr_0; jumptable 0001B911 case 29", "mov     edx, 0C8h", "mov     [esp+3Ch+tok], 13h", "jmp     loc_1AFF0"], ["mov     edx, 0C8h; jumptable 0001B6BE case 29", "mov     [esp+3Ch+tok], 13h", "jmp     loc_1AFF0"], ["mov     esi, ptr_0", "jmp     _L4487; jumptable 0001B0EB default case, cases 8-14,17-21,23,25-28"], ["mov     esi, ptr_0; jumptable 0001BC99 case 29", "mov     edx, 0C8h", "mov     [esp+3Ch+tok], 29h ; ')'", "jmp     loc_1AFF0"], ["lea     eax, (namingBitmap - 2DF78h)[ebx]; jumptable 0001B64C case 29", "mov     edx, 0C8h", "mov     [esp+3Ch+tok], 13h", "mov     ebp, eax", "jmp     loc_1AFF0"], ["add     esi, 6; jumptable 0001B852 case 23", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+tok], 13h", "mov     [esp+3Ch+var_30], eax", "jmp     loc_1AF85"], ["lea     eax, (namingBitmap - 2DF78h)[ebx]; jumptable 0001B852 case 29", "mov     esi, ptr_0", "mov     edx, 0C8h", "mov     [esp+3Ch+tok], 13h", "mov     ebp, eax", "jmp     loc_1AFF0"], ["mov     esi, ptr_0", "mov     [esp+3Ch+tok], 13h", "jmp     loc_1AFA8"], ["lea     ptr_0, [edi+4]; jumptable 0001B6BE case 23", "mov     ebp, [esp+3Ch+var_24]", "sub     ebp, ptr_0", "mov     [esp+3Ch+tok], 13h", "mov     [esp+3Ch+var_30], ebp", "jmp     loc_1AF85"], ["mov     esi, ptr_0; jumptable 0001BA08 cases 22,24-27", "mov     [esp+3Ch+tok], 29h ; ')'", "jmp     _L4478; jumptable 0001AF01 cases 22,24-27"], ["lea     eax, (namingBitmap - 2DF78h)[ebx]; jumptable 0001BA08 case 29", "mov     esi, ptr_0", "mov     edx, 0C8h", "mov     [esp+3Ch+tok], 29h ; ')'", "mov     ebp, eax", "jmp     loc_1AFF0"], ["lea     ptr_0, [esi+8]; jumptable 0001BA08 case 23", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+var_30], eax", "jmp     loc_1B31C"], ["mov     eax, 29h ; ')'", "neg     eax", "jmp     loc_1AE17"], ["lea     ptr_0, [edi+4]; jumptable 0001B64C case 23", "mov     eax, [esp+3Ch+var_24]", "sub     eax, ptr_0", "mov     [esp+3Ch+tok], 13h", "mov     [esp+3Ch+var_30], eax", "jmp     loc_1AF85"], ["add     esi, 6; jumptable 0001B89F case 23", "mov     ebp, [esp+3Ch+var_24]", "sub     ebp, ptr_0", "mov     [esp+3Ch+tok], 13h", "mov     [esp+3Ch+var_30], ebp", "jmp     loc_1AF85"], ["lea     ptr_0, [esi+8]; jumptable 0001BD7E case 23", "mov     ebp, [esp+3Ch+var_24]", "sub     ebp, ptr_0", "mov     [esp+3Ch+var_30], ebp", "jmp     loc_1B31C"]], "_INTERNAL_trim_to_complete_utf8_characters": [["push    edi", "push    esi", "push    ebx", "mov     edi, [esp+0Ch+fromLim]", "mov     esi, [esp+0Ch+from]", "mov     eax, [edi]", "cmp     fromLim_0, esi", "jbe     short loc_1BF54"], ["xor     edx, edx", "jmp     short loc_1BF06"], ["mov     bl, cl", "and     ebx, 0FFFFFFF0h", "cmp     bl, 0E0h", "jz      short loc_1BF30"], ["mov     bl, cl", "and     ebx, 0FFFFFFE0h", "cmp     bl, 0C0h", "jz      short loc_1BF40"], ["test    cl, cl", "jns     short loc_1BF54"], ["dec     fromLim_0", "inc     walked", "cmp     esi, fromLim_0", "jz      short loc_1BF23"], ["mov     cl, [fromLim_0-1]", "mov     bl, cl", "and     ebx, 0FFFFFFF8h", "cmp     bl, 0F0h", "jnz     short loc_1BEE8"], ["inc     walked", "cmp     edx, 3", "ja      short loc_1BF4B"], ["dec     fromLim_0", "mov     edx, 1", "cmp     from_0, fromLim_0", "jnz     short loc_1BF06"], ["mov     [edi], fromLim_0", "pop     ebx", "pop     fromLim_0", "pop     edi", "retn"], ["inc     walked", "cmp     edx, 2", "jbe     short loc_1BF19"], ["lea     from_0, [fromLim_0+2]", "mov     [fromLimRef_0], fromLim_0", "pop     ebx", "pop     fromLim_0", "pop     fromLimRef_0", "retn"], ["inc     walked", "cmp     edx, 1", "jbe     short loc_1BF19"], ["lea     from_0, [fromLim_0+1]", "jmp     short loc_1BF23"], ["lea     from_0, [fromLim_0+3]", "mov     [fromLimRef_0], fromLim_0", "pop     ebx", "pop     fromLim_0", "pop     fromLimRef_0", "retn"], ["mov     from_0, fromLim_0", "mov     [fromLimRef_0], fromLim_0", "pop     ebx", "pop     fromLim_0", "pop     fromLimRef_0", "retn"]], "XmlUtf8Encode": [["test    c, c", "js      short loc_1C068"], ["cmp     c, 7Fh", "jle     short loc_1C058"], ["cmp     c, 7FFh", "jle     short loc_1C070"], ["cmp     c, 0FFFFh", "jle     short loc_1C090"], ["xor     ecx, ecx", "cmp     c, 10FFFFh", "jle     short loc_1C0B8"], ["mov     eax, ecx", "retn"], ["mov     ecx, 1", "mov     [buf], al", "mov     c, ecx", "retn"], ["xor     ecx, ecx", "mov     c, ecx", "retn"], ["mov     ecx, c", "and     c, 3Fh", "sar     c, 6", "or      eax, 0FFFFFF80h", "or      ecx, 0FFFFFFC0h", "mov     [buf+1], al", "mov     [buf], cl", "mov     ecx, 2", "mov     eax, ecx", "retn"], ["mov     ecx, c", "sar     ecx, 0Ch", "or      ecx, 0FFFFFFE0h", "mov     [buf], cl", "mov     ecx, c", "sar     ecx, 6", "and     c, 3Fh", "and     ecx, 3Fh", "or      eax, 0FFFFFF80h", "or      ecx, 0FFFFFF80h", "mov     [buf+2], al", "mov     [buf+1], cl", "mov     ecx, 3", "jmp     short loc_1C050"], ["mov     ecx, c", "sar     ecx, 12h", "or      ecx, 0FFFFFFF0h", "mov     [buf], cl", "mov     ecx, c", "sar     ecx, 0Ch", "and     ecx, 3Fh", "or      ecx, 0FFFFFF80h", "mov     [buf+1], cl", "mov     ecx, c", "sar     ecx, 6", "and     c, 3Fh", "and     ecx, 3Fh", "or      eax, 0FFFFFF80h", "or      ecx, 0FFFFFF80h", "mov     [buf+3], al", "mov     [buf+2], cl", "mov     ecx, 4", "jmp     loc_1C050"]], "unknown_toUtf8": [["push    ebp", "push    edi", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 3Ch", "mov     eax, [esp+4Ch+uenc]", "mov     esi, [esp+4Ch+fromLim]", "mov     [esp+4Ch+var_40], eax", "mov     ebp, [esp+4Ch+fromP]", "mov     eax, [esp+4Ch+toLim]", "mov     [esp+4Ch+var_34], esi", "mov     [esp+4Ch+var_3C], eax", "mov     edi, [esp+4Ch+toP]", "mov     eax, large gs:14h", "mov     [esp+4Ch+var_20], eax", "xor     eax, eax", "mov     eax, [ebp+0]", "cmp     esi, eax", "jz      loc_1C1F8"], ["lea     esi, [esp+4Ch+buf]", "mov     [esp+4Ch+utf8], esi", "jmp     short loc_1C1C9"], ["push    edx", "push    edx", "push    eax", "mov     n, [ecx+170h]", "push    esi", "call    dword ptr [ecx+16Ch]", "mov     edx, [esp+5Ch+utf8]; buf", "call    XmlUtf8Encode", "mov     edx, [edi]", "mov     esi, eax", "mov     n, [esp+5Ch+var_3C]", "sub     eax, edx", "add     esp, 10h", "cmp     eax, n", "jl      loc_1C210"], ["mov     eax, [ebp+0]", "xor     edx, edx", "mov     [esp+4Ch+var_30], eax", "xor     ecx, ecx", "mov     dl, [eax]", "mov     eax, [esp+4Ch+var_40]", "mov     cl, [eax+edx+48h]", "mov     eax, [esp+4Ch+var_30]", "mov     edx, ecx", "lea     eax, [eax+edx-3]", "mov     edx, [esp+4Ch+utf8]", "mov     [ebp+0], eax"], ["push    eax", "push    n; n", "push    utf8_0; src", "mov     utf8_0, [edi]", "push    edx; dest", "call    _memcpy", "mov     ecx, [edi]", "add     esp, 10h", "add     ecx, n", "mov     [edi], ecx", "mov     eax, [ebp+0]", "cmp     eax, [esp+4Ch+var_34]", "jz      short loc_1C1F8"], ["xor     edx, edx", "mov     ecx, [esp+4Ch+var_40]", "mov     dl, [eax]", "lea     edx, [ecx+edx*4+374h]", "movsx   esi, byte ptr [edx]", "test    n, n", "jz      loc_1C158"], ["mov     ecx, [esp+4Ch+var_3C]", "sub     ecx, [edi]", "cmp     ecx, n", "jl      short loc_1C210"], ["inc     eax", "inc     edx", "mov     [ebp+0], eax", "jmp     short loc_1C1AC"], ["xor     eax, eax"], ["mov     ebx, [esp+4Ch+var_20]", "xor     ebx, large gs:14h", "jnz     short loc_1C217"], ["add     esp, 3Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, 2", "jmp     short loc_1C1FA"], ["call    __stack_chk_fail_local"]], "XmlUtf16Encode": [["test    charNum, charNum", "js      short loc_1C248"], ["cmp     charNum, 0FFFFh", "jle     short loc_1C238"], ["xor     ecx, ecx", "cmp     charNum, 10FFFFh", "jle     short loc_1C250"], ["mov     charNum, ecx", "retn"], ["mov     ecx, 1", "mov     [buf], ax", "mov     charNum, ecx", "retn"], ["xor     ecx, ecx", "mov     charNum, ecx", "retn"], ["sub     charNum, offset loc_10000", "mov     ecx, charNum", "and     charNum, 3FFh", "sar     charNum, 0Ah", "sub     eax, 2400h", "sub     ecx, 2800h", "mov     [buf+2], ax", "mov     [buf], cx", "mov     ecx, 2", "mov     eax, ecx", "retn"]], "XmlInitUnknownEncoding": [["push    ebp", "push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "lea     eax, (latin1_encoding.enc.scanners - 2DF78h)[edi]", "push    ebx", "mov     ebx, edi", "sub     esp, 20h", "mov     ebp, [esp+30h+e]", "push    16Ch; n", "push    eax; src", "push    e_0; dest", "call    _memcpy", "add     esp, 10h", "xor     eax, eax", "nop"], ["inc     eax", "cmp     i, 80h", "jz      short loc_1C2EB"], ["mov     dl, ds:(latin1_encoding.type - 2DF78h)[i+edi]", "cmp     dl, 1Ch", "jz      short loc_1C2C0"], ["test    dl, dl", "jz      short loc_1C2C0"], ["mov     ecx, [esp+2Ch+table]", "cmp     [ecx+i*4], i", "jz      short loc_1C2C0"], ["xor     eax, eax"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     e_0", "retn"], ["lea     i, (nmstrtPages - 2DF78h)[edi]", "xor     esi, esi", "mov     [esp+2Ch+var_20], eax", "jmp     short loc_1C35B"], ["test    ebx, ebx", "js      loc_1C388"], ["cmp     ebx, 7Fh", "jg      loc_1C3C0"], ["mov     al, ds:(latin1_encoding.type - 2DF78h)[edi+ebx]", "cmp     al, 1Ch", "setnz   cl", "test    al, al", "setnz   dl", "test    cl, dl", "jz      short loc_1C32A"], ["cmp     ebx, esi", "jnz     short loc_1C2E1"], ["mov     [e_0+esi+48h], al", "test    ebx, ebx", "mov     byte ptr [e_0+esi*4+374h], 1", "mov     [e_0+esi*4+375h], bl", "jnz     short loc_1C346"], ["mov     ebx, 0FFFFh"], ["mov     [e_0+esi*2+174h], bx"], ["inc     esi", "cmp     esi, 100h", "jz      loc_1C4BA"], ["mov     eax, [esp+2Ch+table]", "mov     ebx, [eax+esi*4]", "cmp     ebx, 0FFFFFFFFh", "jnz     short loc_1C300"], ["mov     byte ptr [e_0+esi+48h], 1", "mov     word ptr [e_0+esi*2+174h], 0FFFFh", "mov     byte ptr [e_0+esi*4+374h], 1", "mov     byte ptr [e_0+esi*4+375h], 0", "jmp     short loc_1C34E"], ["cmp     ebx, 0FFFFFFFCh", "jl      loc_1C2E1"], ["mov     eax, [esp+2Ch+convert]", "test    eax, eax", "jz      loc_1C2E1"], ["mov     al, 3", "sub     eax, ebx", "mov     [e_0+esi+48h], al", "mov     byte ptr [e_0+esi*4+374h], 0", "mov     word ptr [e_0+esi*2+174h], 0", "jmp     short loc_1C34E"], ["mov     edx, ebx", "sar     edx, 8", "cmp     ebx, 0DFFFh", "jg      short loc_1C440"], ["cmp     edx, 0D7h", "jg      loc_1C458"], ["test    edx, edx", "jnz     short loc_1C3E7"], ["cmp     ds:(latin1_encoding.type - 2DF78h)[edi+ebx], 0", "jz      short loc_1C458"], ["mov     eax, ebx", "mov     ecx, [esp+2Ch+var_20]", "sar     eax, 5", "and     eax, 7", "mov     [esp+2Ch+var_2C], eax", "mov     eax, ebx", "and     eax, 1Fh", "mov     [esp+2Ch+var_28], eax", "xor     eax, eax", "mov     al, [ecx+edx]", "mov     ecx, [esp+2Ch+var_2C]", "lea     eax, [ecx+eax*8]", "lea     ecx, (namingBitmap - 2DF78h)[edi]", "mov     [esp+2Ch+var_24], ecx", "mov     eax, [ecx+eax*4]", "mov     cl, bl", "shr     eax, cl", "test    al, 1", "jz      short loc_1C480"], ["mov     byte ptr [e_0+esi+48h], 16h"], ["lea     edx, [e_0+esi*4+375h]; buf", "mov     eax, ebx; c", "call    XmlUtf8Encode", "mov     [e_0+esi*4+374h], al", "jmp     loc_1C346"], ["cmp     edx, 0FFh", "jnz     loc_1C538"], ["lea     eax, [ebx-0FFFEh]", "cmp     eax, 1", "ja      short loc_1C3E7"], ["nop"], ["mov     byte ptr [e_0+esi+48h], 0", "mov     word ptr [e_0+esi*2+174h], 0FFFFh", "mov     byte ptr [e_0+esi*4+374h], 1", "mov     byte ptr [e_0+esi*4+375h], 0", "jmp     loc_1C34E"], ["xor     eax, eax", "mov     ecx, [esp+2Ch+var_2C]", "mov     al, ds:(namePages - 2DF78h)[edi+edx]", "lea     eax, [ecx+eax*8]", "mov     ecx, [esp+2Ch+var_24]", "mov     eax, [ecx+eax*4]", "mov     cl, byte ptr [esp+2Ch+var_28]", "shr     eax, cl", "test    al, 1", "jz      short loc_1C4B0"], ["mov     byte ptr [e_0+esi+48h], 1Ah", "jmp     loc_1C424"], ["mov     byte ptr [e_0+esi+48h], 1Ch", "jmp     loc_1C424"], ["mov     eax, [esp+2Ch+userData]", "mov     [e_0+170h], eax", "mov     eax, [esp+2Ch+convert]", "mov     [e_0+16Ch], eax", "test    eax, eax", "jz      short loc_1C51A"], ["lea     eax, (unknown_isName - 2DF78h)[edi]", "mov     [e_0+148h], eax", "mov     [e_0+14Ch], eax", "mov     [e_0+150h], eax", "lea     eax, (unknown_isNmstrt - 2DF78h)[edi]", "mov     [e_0+154h], eax", "mov     [e_0+158h], eax", "mov     [e_0+15Ch], eax", "lea     eax, (unknown_isInvalid - 2DF78h)[edi]", "mov     [e_0+160h], eax", "mov     [e_0+164h], eax", "mov     [e_0+168h], eax"], ["lea     eax, (unknown_toUtf8 - 2DF78h)[edi]", "mov     [e_0+38h], eax", "lea     eax, (unknown_toUtf16 - 2DF78h)[edi]", "mov     [e_0+3Ch], eax", "mov     eax, e_0", "jmp     loc_1C2E3"], ["cmp     ebx, 0FFFFh", "jg      loc_1C2E1"], ["jmp     loc_1C3E7"]], "prolog0": [["push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 8", "mov     edx, [esp+0Ch+tok]", "lea     eax, [edx-0Bh]; switch 19 cases", "cmp     eax, 12h", "ja      short _L2; jumptable 0001C824 default case, cases 17-28"], ["mov     ecx, ds:(jpt_1C824 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["mov     eax, [esp+0Ch+state]; jumptable 0001C824 default case, cases 17-28", "mov     eax, [eax+10h]", "test    eax, eax", "jnz     loc_1C8DE"], ["cmp     edx, 1Ch", "jnz     loc_1C8DE"], ["mov     eax, 3Bh ; ';'"], ["add     esp, 8", "pop     ebx", "retn"], ["mov     edx, [esp+0Ch+state]; jumptable 0001C824 case 11", "lea     eax, (prolog1 - 2DF78h)[ebx]", "mov     [edx], eax", "add     esp, 8", "mov     eax, 37h ; '7'", "pop     ebx", "retn"], ["mov     ecx, [esp+0Ch+state]; jumptable 0001C824 case 12", "lea     eax, (prolog1 - 2DF78h)[ebx]", "mov     [ecx], eax", "add     esp, 8", "mov     eax, 1", "pop     ebx", "retn"], ["mov     ecx, [esp+0Ch+state]; jumptable 0001C824 case 13", "lea     eax, (prolog1 - 2DF78h)[ebx]", "mov     [ecx], eax", "add     esp, 8", "mov     eax, 38h ; '8'", "pop     ebx", "retn"], ["mov     ecx, [esp+0Ch+state]; jumptable 0001C824 case 15", "lea     eax, (prolog1 - 2DF78h)[ebx]", "mov     [ecx], eax", "add     esp, 8", "xor     eax, eax", "pop     ebx", "retn"], ["lea     eax, (KW_DOCTYPE - 2DF78h)[ebx]; jumptable 0001C824 case 16", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+enc]", "mov     edx, [eax+40h]", "mov     eax, [esp+14h+ptr]", "lea     eax, [eax+edx*2]", "push    eax", "mov     eax, [esp+18h+enc]", "push    eax", "mov     eax, [esp+1Ch+enc]", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1C918"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (error - 2DF78h)[ebx]", "mov     [ecx], eax", "or      eax, 0FFFFFFFFh", "jmp     loc_1C845"], ["mov     edx, [esp+0Ch+state]; jumptable 0001C824 case 29", "lea     eax, (error - 2DF78h)[ebx]", "mov     [edx], eax", "add     esp, 8", "mov     eax, 2", "pop     ebx", "retn"], ["xor     eax, eax; jumptable 0001C824 case 14", "jmp     loc_1C845"], ["mov     edx, [esp+0Ch+state]", "lea     eax, (doctype0 - 2DF78h)[ebx]", "mov     [edx], eax", "mov     eax, 3", "jmp     loc_1C845"]], "doctype1": [["push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 8", "mov     edx, [esp+0Ch+tok]", "cmp     edx, 12h", "jz      short loc_1C9B8"], ["jg      short loc_1C978"], ["mov     eax, 3", "cmp     edx, 0Fh", "jz      short loc_1C96E"], ["cmp     edx, 11h", "jnz     loc_1CA00"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (prolog2 - 2DF78h)[ebx]", "mov     [ecx], eax", "mov     eax, 8"], ["add     esp, 8", "pop     ebx", "retn"], ["cmp     edx, 19h", "jnz     short loc_1C998"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (internalSubset - 2DF78h)[ebx]", "mov     [ecx], eax", "add     esp, 8", "mov     eax, 7", "pop     ebx", "retn"], ["mov     eax, [esp+0Ch+state]", "mov     eax, [eax+10h]", "test    eax, eax", "jnz     short loc_1CA00"], ["cmp     edx, 1Ch", "jnz     short loc_1CA00"], ["add     esp, 8", "mov     eax, 3Bh ; ';'", "pop     ebx", "retn"], ["lea     eax, (KW_SYSTEM - 2DF78h)[ebx]; \"SYSTEM\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     edx, [esp+14h+ptr]", "push    edx", "mov     ecx, [esp+18h+enc]", "push    ecx", "mov     eax, [esp+1Ch+enc]", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1CA18"], ["lea     eax, (KW_PUBLIC - 2DF78h)[ebx]; \"PUBLIC\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+ptr]", "push    eax", "mov     eax, [esp+18h+enc]", "push    eax", "mov     eax, [esp+1Ch+enc]", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1CA30"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (error - 2DF78h)[ebx]", "mov     [ecx], eax", "add     esp, 8", "or      eax, 0FFFFFFFFh", "pop     ebx", "retn"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (doctype3 - 2DF78h)[ebx]", "mov     [ecx], eax", "mov     eax, 3", "jmp     loc_1C96E"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (doctype2 - 2DF78h)[ebx]", "mov     [ecx], eax", "mov     eax, 3", "jmp     loc_1C96E"]], "internalSubset": [["push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    eax", "mov     eax, [esp+0Ch+tok]", "mov     esi, [esp+0Ch+enc]", "add     eax, 4; switch 33 cases", "cmp     eax, 20h", "ja      _L42; jumptable 0001CA7B default case, cases -3-10,12,14,17-25,27"], ["mov     edx, ds:(jpt_1CA7B - 2DF78h)[ebx+eax*4]", "add     edx, ebx", "jmp     edx; switch jump"], ["lea     eax, (KW_ENTITY - 2DF78h)[ebx]; jumptable 0001CA7B case 16", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     ecx, [esp+14h+ptr]", "mov     eax, [esi+40h]", "lea     eax, [ecx+eax*2]", "push    eax", "push    esi", "call    dword ptr [esi+18h]", "add     esp, 10h", "test    eax, eax", "jnz     loc_1CB90"], ["lea     eax, (KW_ATTLIST - 2DF78h)[ebx]; \"ATTLIST\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     ecx, [esp+14h+ptr]", "mov     eax, [esi+40h]", "lea     eax, [ecx+eax*2]", "push    eax", "push    esi", "call    dword ptr [esi+18h]", "add     esp, 10h", "test    eax, eax", "jnz     loc_1CBA8"], ["lea     eax, (KW_ELEMENT - 2DF78h)[ebx]; \"ELEMENT\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     ecx, [esp+14h+ptr]", "mov     eax, [esi+40h]", "lea     eax, [ecx+eax*2]", "push    eax", "push    esi", "call    dword ptr [esi+18h]", "add     esp, 10h", "test    eax, eax", "jnz     loc_1CBC0"], ["lea     eax, (KW_NOTATION - 2DF78h)[ebx]; \"NOTATION\"", "push    eax", "mov     ecx, [esp+10h+end]", "push    ecx", "mov     ecx, [esp+14h+ptr]", "mov     eax, [esi+40h]", "lea     eax, [ecx+eax*2]", "push    eax", "push    esi", "call    dword ptr [esi+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1CB78"], ["lea     esi, [esi+0]"], ["mov     ecx, [esp+0Ch+state]; jumptable 0001CA7B default case, cases -3-10,12,14,17-25,27", "lea     eax, (error - 2DF78h)[ebx]", "mov     [ecx], eax", "or      eax, 0FFFFFFFFh"], ["pop     edx", "pop     ebx", "pop     esi", "retn"], ["pop     edx; jumptable 0001CA7B cases -4,15", "xor     eax, eax", "pop     ebx", "pop     esi", "retn"], ["pop     edx; jumptable 0001CA7B case 28", "mov     eax, 3Ch ; '<'", "pop     ebx", "pop     esi", "retn"], ["pop     edx; jumptable 0001CA7B case 13", "mov     eax, 38h ; '8'", "pop     ebx", "pop     esi", "retn"], ["mov     ecx, [esp+0Ch+state]; jumptable 0001CA7B case 26", "lea     eax, (doctype5 - 2DF78h)[ebx]", "mov     [ecx], eax", "mov     eax, 3", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["mov     eax, 37h ; '7'; jumptable 0001CA7B case 11", "jmp     short loc_1CB27"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (notation0 - 2DF78h)[ebx]", "mov     [ecx], eax", "mov     eax, 11h", "jmp     short loc_1CB27"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (entity0 - 2DF78h)[ebx]", "mov     [ecx], eax", "mov     eax, 0Bh", "jmp     short loc_1CB27"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (attlist0 - 2DF78h)[ebx]", "mov     [ecx], eax", "mov     eax, 21h ; '!'", "jmp     loc_1CB27"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (element0 - 2DF78h)[ebx]", "mov     [ecx], eax", "mov     eax, 27h ; '''", "jmp     loc_1CB27"]], "attlist2": [["push    ebp", "push    edi", "push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "sub     esp, 0Ch", "mov     eax, [esp+1Ch+tok]", "mov     ebp, [esp+1Ch+end]", "mov     ebx, [esp+1Ch+enc]", "cmp     eax, 12h", "jz      short loc_1CC68"], ["cmp     eax, 17h", "jz      short loc_1CC48"], ["cmp     eax, 0Fh", "jz      short loc_1CC38"], ["mov     edx, [esp+1Ch+state]", "mov     edx, [edx+10h]", "test    edx, edx", "jnz     loc_1CCAF"], ["cmp     eax, 1Ch", "jnz     loc_1CCAF"], ["mov     eax, 3Bh ; ';'"], ["add     esp, 0Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["add     esp, 0Ch", "mov     eax, 21h ; '!'", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     ecx, [esp+1Ch+state]", "lea     eax, (attlist3 - 2DF78h)[esi]", "mov     [ecx], eax", "add     esp, 0Ch", "mov     eax, 21h ; '!'", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     eax, (KW_CDATA - 2DF78h)[esi]; \"CDATA\"", "xor     edi, edi", "jmp     short loc_1CC7F"], ["mov     eax, ds:(types_2127 - 2DF78h)[esi+i*4]"], ["push    eax", "push    ebp", "mov     eax, [esp+24h+ptr]", "push    eax", "push    ebx", "call    dword ptr [ebx+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1CCC8"], ["inc     i", "cmp     i, 8", "jnz     short loc_1CC78"], ["lea     eax, (KW_NOTATION - 2DF78h)[esi]; \"NOTATION\"", "push    eax", "push    ebp", "mov     ecx, [esp+24h+ptr]", "push    ecx", "push    ebx", "call    dword ptr [ebx+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1CCE0"], ["mov     ecx, [esp+1Ch+state]", "lea     eax, (error - 2DF78h)[esi]", "mov     [ecx], eax", "add     esp, 0Ch", "or      eax, 0FFFFFFFFh", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     edx, [esp+1Ch+state]", "lea     eax, (attlist8 - 2DF78h)[esi]", "mov     [edx], eax", "lea     eax, [i+17h]", "jmp     loc_1CC2A"], ["mov     ecx, [esp+1Ch+state]", "lea     eax, (attlist5 - 2DF78h)[esi]", "mov     [ecx], eax", "mov     eax, 21h ; '!'", "jmp     loc_1CC2A"]], "attlist8": [["push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "push    ecx", "mov     eax, [esp+0Ch+tok]", "mov     ebx, [esp+0Ch+enc]", "cmp     eax, 14h", "jz      short loc_1CD70"], ["cmp     eax, 1Bh", "jz      short loc_1CD58"], ["cmp     eax, 0Fh", "jz      short loc_1CD48"], ["mov     edx, [esp+0Ch+state]", "mov     ecx, [edx+10h]", "test    ecx, ecx", "jnz     loc_1CDD3"], ["cmp     eax, 1Ch", "jnz     loc_1CDD3"], ["mov     eax, 3Bh ; ';'"], ["pop     edx", "pop     ebx", "pop     esi", "retn"], ["pop     edx", "mov     eax, 21h ; '!'", "pop     ebx", "pop     esi", "retn"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (attlist1 - 2DF78h)[esi]", "mov     [ecx], eax", "mov     eax, 25h ; '%'", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (KW_IMPLIED - 2DF78h)[esi]; \"IMPLIED\"", "push    eax", "mov     ecx, [esp+10h+end]", "push    ecx", "mov     eax, [esp+14h+ptr]", "mov     edx, [ebx+40h]", "add     eax, edx", "push    eax", "push    ebx", "call    dword ptr [ebx+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1CDE8"], ["lea     eax, (KW_REQUIRED - 2DF78h)[esi]; \"REQUIRED\"", "push    eax", "mov     ecx, [esp+10h+end]", "push    ecx", "mov     eax, [esp+14h+ptr]", "mov     edx, [ebx+40h]", "add     eax, edx", "push    eax", "push    ebx", "call    dword ptr [ebx+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1CE00"], ["lea     eax, (KW_FIXED - 2DF78h)[esi]; \"FIXED\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+ptr]", "mov     edx, [ebx+40h]", "add     eax, edx", "push    eax", "push    ebx", "call    dword ptr [ebx+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1CE18"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (error - 2DF78h)[esi]", "mov     [ecx], eax", "or      eax, 0FFFFFFFFh", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["mov     edx, [esp+0Ch+state]", "lea     eax, (attlist1 - 2DF78h)[esi]", "mov     [edx], eax", "mov     eax, 23h ; '#'", "jmp     loc_1CD42"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (attlist1 - 2DF78h)[esi]", "mov     [ecx], eax", "mov     eax, 24h ; '$'", "jmp     loc_1CD42"], ["mov     edx, [esp+0Ch+state]", "lea     eax, (attlist9 - 2DF78h)[esi]", "mov     [edx], eax", "mov     eax, 21h ; '!'", "jmp     loc_1CD42"]], "element1": [["push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "push    ecx", "mov     eax, [esp+0Ch+tok]", "mov     ebx, [esp+0Ch+state]", "cmp     eax, 12h", "jz      short loc_1CE98"], ["cmp     eax, 17h", "jz      short loc_1CE80"], ["cmp     eax, 0Fh", "jz      short loc_1CE70"], ["mov     ecx, [ebx+10h]", "test    ecx, ecx", "jnz     loc_1CEE0"], ["cmp     eax, 1Ch", "jnz     short loc_1CEE0"], ["mov     eax, 3Bh ; ';'"], ["pop     edx", "pop     ebx", "pop     esi", "retn"], ["pop     edx", "mov     eax, 27h ; '''", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (element2 - 2DF78h)[esi]", "mov     dword ptr [ebx+4], 1", "mov     [ebx], eax", "mov     eax, 2Ch ; ','", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (KW_EMPTY - 2DF78h)[esi]; \"EMPTY\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+ptr]", "push    eax", "mov     edx, [esp+18h+enc]", "push    edx", "mov     eax, [esp+1Ch+enc]", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1CEF0"], ["lea     eax, (KW_ANY - 2DF78h)[esi]; \"ANY\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+ptr]", "push    eax", "mov     eax, [esp+18h+enc]", "push    eax", "mov     eax, [esp+1Ch+enc]", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1CF10"], ["lea     eax, (error - 2DF78h)[esi]", "mov     [ebx], eax", "or      eax, 0FFFFFFFFh", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (declClose - 2DF78h)[esi]", "mov     dword ptr [ebx+8], 27h ; '''", "mov     [ebx], eax", "mov     eax, 2Ah ; '*'", "jmp     loc_1CE6A"], ["lea     eax, (declClose - 2DF78h)[esi]", "mov     dword ptr [ebx+8], 27h ; '''", "mov     [ebx], eax", "mov     eax, 29h ; ')'", "jmp     loc_1CE6A"]], "element2": [["push    esi", "push    ebx", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edx, [esp+0Ch+tok]", "mov     esi, [esp+0Ch+state]", "lea     eax, [edx-0Fh]; switch 27 cases", "cmp     eax, 1Ah", "ja      short _L122; jumptable 0001CF57 default case, cases 16,17,19,21,22,24-29,33-40"], ["mov     ecx, ds:(jpt_1CF57 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["mov     ecx, [esi+10h]; jumptable 0001CF57 default case, cases 16,17,19,21,22,24-29,33-40", "test    ecx, ecx", "jnz     short loc_1CFC1"], ["cmp     edx, 1Ch", "jnz     short loc_1CFC1"], ["mov     eax, 3Bh ; ';'"], ["pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (element7 - 2DF78h)[ebx]; jumptable 0001CF57 cases 18,41", "mov     [esi], eax", "mov     eax, 33h ; '3'", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (KW_PCDATA - 2DF78h)[ebx]; jumptable 0001CF57 case 20", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     ecx, [esp+14h+enc]", "mov     eax, [esp+14h+ptr]", "mov     edx, [ecx+40h]", "add     eax, edx", "push    eax", "mov     ecx, [esp+18h+enc]", "push    ecx", "mov     eax, [esp+1Ch+enc]", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jnz     loc_1D040"], ["lea     eax, (error - 2DF78h)[ebx]", "mov     [esi], eax", "or      eax, 0FFFFFFFFh", "jmp     short loc_1CF71"], ["lea     eax, (element6 - 2DF78h)[ebx]; jumptable 0001CF57 case 23", "mov     dword ptr [esi+4], 2", "mov     [esi], eax", "mov     eax, 2Ch ; ','", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (element7 - 2DF78h)[ebx]; jumptable 0001CF57 case 32", "mov     [esi], eax", "mov     eax, 36h ; '6'", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (element7 - 2DF78h)[ebx]; jumptable 0001CF57 case 31", "mov     [esi], eax", "mov     eax, 34h ; '4'", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (element7 - 2DF78h)[ebx]; jumptable 0001CF57 case 30", "mov     [esi], eax", "mov     eax, 35h ; '5'", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["mov     eax, 27h ; '''; jumptable 0001CF57 case 15", "jmp     loc_1CF71"], ["lea     eax, (element3 - 2DF78h)[ebx]", "mov     [esi], eax", "mov     eax, 2Bh ; '+'", "jmp     loc_1CF71"]], "element7": [["push    esi", "call    __x86_get_pc_thunk_dx", "add     edx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "mov     ebx, [esp+8+tok]", "mov     esi, [esp+8+state]", "lea     ecx, [ebx-0Fh]; switch 24 cases", "cmp     ecx, 17h", "ja      short _L142; jumptable 0001D086 default case, cases 16-20,22,23,25-34"], ["mov     eax, ds:(jpt_1D086 - 2DF78h)[edx+ecx*4]", "add     eax, edx", "jmp     eax; switch jump"], ["mov     eax, [esi+10h]; jumptable 0001D086 default case, cases 16-20,22,23,25-34", "test    eax, eax", "jnz     loc_1D148"], ["mov     eax, 3Bh ; ';'", "cmp     ebx, 1Ch", "jnz     loc_1D148"], ["pop     ebx", "pop     state_0", "retn"], ["lea     edx, (element6 - 2DF78h)[edx]; jumptable 0001D086 case 21", "mov     eax, 31h ; '1'", "mov     [state_0], edx", "pop     tok_0", "pop     state_0", "retn"], ["mov     eax, [state_0+4]; jumptable 0001D086 case 24", "lea     tok_0, [eax-1]", "mov     eax, 2Dh ; '-'", "mov     [state_0+4], ebx", "test    ebx, ebx", "jnz     short loc_1D0A1"], ["lea     edx, (declClose - 2DF78h)[edx]", "mov     dword ptr [state_0+8], 27h ; '''", "mov     [state_0], edx", "pop     ebx", "pop     state_0", "retn"], ["mov     eax, [state_0+4]; jumptable 0001D086 case 35", "lea     tok_0, [eax-1]", "mov     eax, 2Fh ; '/'", "mov     [state_0+4], ebx", "test    ebx, ebx", "jnz     short loc_1D0A1"], ["jmp     short loc_1D0CA"], ["mov     eax, [state_0+4]; jumptable 0001D086 case 36", "lea     tok_0, [eax-1]", "mov     eax, 2Eh ; '.'", "mov     [state_0+4], ebx", "test    ebx, ebx", "jnz     short loc_1D0A1"], ["jmp     short loc_1D0CA"], ["mov     eax, [state_0+4]; jumptable 0001D086 case 37", "lea     tok_0, [eax-1]", "mov     eax, 30h ; '0'", "mov     [state_0+4], ebx", "test    ebx, ebx", "jnz     loc_1D0A1"], ["jmp     short loc_1D0CA"], ["lea     edx, (element6 - 2DF78h)[edx]; jumptable 0001D086 case 38", "mov     eax, 32h ; '2'", "mov     [state_0], edx", "pop     tok_0", "pop     state_0", "retn"], ["mov     eax, 27h ; '''; jumptable 0001D086 case 15", "jmp     loc_1D0A1"], ["lea     edx, (error - 2DF78h)[edx]", "or      eax, 0FFFFFFFFh", "mov     [state_0], edx", "jmp     loc_1D0A1"]], "doctype0": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+state]", "cmp     edx, 12h", "jz      short loc_1D1E0"], ["cmp     edx, 29h ; ')'", "jz      short loc_1D1E0"], ["cmp     edx, 0Fh", "jz      short loc_1D1D8"], ["jmp     short doctype0_0"], ["mov     state_0, 3", "retn"], ["lea     tok_0, (doctype1 - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 4", "retn"]], "doctype4": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+state]", "cmp     edx, 11h", "jz      short loc_1D2B0"], ["cmp     edx, 19h", "jz      short loc_1D2A0"], ["cmp     edx, 0Fh", "jz      short loc_1D298"], ["jmp     doctype0_0"], ["mov     state_0, 3", "retn"], ["lea     tok_0, (internalSubset - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 7", "retn"], ["lea     tok_0, (prolog2 - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 8", "retn"]], "prolog2": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+state]", "cmp     edx, 0Fh", "jz      short loc_1D310"], ["jg      short loc_1D2F0"], ["cmp     edx, 0Bh", "jz      short loc_1D308"], ["cmp     edx, 0Dh", "jnz     short loc_1D318"], ["mov     eax, 38h ; '8'", "retn"], ["cmp     edx, 1Dh", "jnz     short loc_1D318"], ["lea     edx, (error - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 2", "retn"], ["mov     state_0, 37h ; '7'", "retn"], ["xor     state_0, state_0", "retn"], ["jmp     doctype0_0"]], "prolog1": [["push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 8", "mov     edx, [esp+0Ch+tok]", "lea     eax, [edx-0Bh]; switch 19 cases", "cmp     eax, 12h", "ja      short _L221_0; jumptable 0001D3C4 default case, cases 12,17-28"], ["mov     ecx, ds:(jpt_1D3C4 - 2DF78h)[ebx+eax*4]", "add     ecx, ebx", "jmp     ecx; switch jump"], ["mov     eax, [esp+0Ch+state]; jumptable 0001D3C4 default case, cases 12,17-28", "mov     eax, [eax+10h]", "test    eax, eax", "jnz     short loc_1D42E"], ["cmp     edx, 1Ch", "jnz     short loc_1D42E"], ["mov     eax, 3Bh ; ';'"], ["add     esp, 8", "pop     ebx", "retn"], ["add     esp, 8; jumptable 0001D3C4 cases 14,15", "xor     eax, eax", "pop     ebx", "retn"], ["add     esp, 8; jumptable 0001D3C4 case 13", "mov     eax, 38h ; '8'", "pop     ebx", "retn"], ["lea     eax, (KW_DOCTYPE - 2DF78h)[ebx]; jumptable 0001D3C4 case 16", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+enc]", "mov     edx, [eax+40h]", "mov     eax, [esp+14h+ptr]", "lea     eax, [eax+edx*2]", "push    eax", "mov     eax, [esp+18h+enc]", "push    eax", "mov     eax, [esp+1Ch+enc]", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1D470"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (error - 2DF78h)[ebx]", "mov     [ecx], eax", "add     esp, 8", "or      eax, 0FFFFFFFFh", "pop     ebx", "retn"], ["mov     ecx, [esp+0Ch+state]; jumptable 0001D3C4 case 29", "lea     eax, (error - 2DF78h)[ebx]", "mov     [ecx], eax", "add     esp, 8", "mov     eax, 2", "pop     ebx", "retn"], ["mov     eax, 37h ; '7'; jumptable 0001D3C4 case 11", "jmp     loc_1D3DD"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (doctype0 - 2DF78h)[ebx]", "mov     [ecx], eax", "mov     eax, 3", "jmp     loc_1D3DD"]], "notation4": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+state]", "cmp     edx, 11h", "jz      short loc_1D518"], ["cmp     edx, 1Bh", "jz      short loc_1D500"], ["cmp     edx, 0Fh", "jz      short loc_1D4F8"], ["jmp     doctype0_0"], ["mov     state_0, 11h", "retn"], ["lea     tok_0, (declClose - 2DF78h)[ecx]", "mov     dword ptr [state_0+8], 11h", "mov     [state_0], edx", "mov     state_0, 13h", "retn"], ["mov     tok_0, [state_0+10h]", "test    edx, edx", "jnz     short loc_1D530"], ["lea     edx, (externalSubset1 - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 14h", "retn"], ["lea     edx, (internalSubset - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 14h", "retn"]], "declClose": [["push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     ecx, [esp+4+tok]", "mov     edx, [esp+4+state]", "cmp     ecx, 0Fh", "jz      short loc_1D5ED"], ["cmp     ecx, 11h", "jnz     short loc_1D5F8"], ["mov     ecx, [edx+10h]", "test    ecx, ecx", "jz      short loc_1D618"], ["lea     eax, (internalSubset - 2DF78h)[ebx]", "mov     [edx], eax"], ["mov     eax, [edx+8]"], ["pop     ebx", "retn"], ["mov     eax, [state_0+10h]", "test    eax, eax", "jnz     short loc_1D609"], ["mov     eax, 3Bh ; ';'", "cmp     tok_0, 1Ch", "jz      short loc_1D5F0"], ["lea     eax, (error - 2DF78h)[ebx]", "mov     [state_0], eax", "or      eax, 0FFFFFFFFh", "pop     ebx", "retn"], ["lea     eax, (externalSubset1 - 2DF78h)[ebx]", "mov     [state_0], eax", "jmp     short loc_1D5ED"]], "element0": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+state]", "cmp     edx, 12h", "jz      short loc_1D6B0"], ["cmp     edx, 29h ; ')'", "jz      short loc_1D6B0"], ["cmp     edx, 0Fh", "jz      short loc_1D6A8"], ["jmp     doctype0_0"], ["mov     state_0, 27h ; '''", "retn"], ["lea     tok_0, (element1 - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 28h ; '('", "retn"]], "element6": [["push    esi", "call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "mov     ecx, [esp+8+tok]", "mov     ebx, [esp+8+state]", "lea     edx, [ecx-0Fh]; switch 27 cases", "cmp     edx, 1Ah", "ja      short _L297_0; jumptable 0001D6E5 default case, cases 16,17,19-22,24-29,33-40"], ["mov     esi, ds:(jpt_1D6E5 - 2DF78h)[eax+edx*4]", "add     esi, eax", "jmp     esi; switch jump"], ["mov     eax, ebx; jumptable 0001D6E5 default case, cases 16,17,19-22,24-29,33-40", "mov     edx, ecx", "pop     ebx", "pop     esi", "jmp     doctype0_0"], ["lea     eax, (element7 - 2DF78h)[eax]; jumptable 0001D6E5 cases 18,41", "mov     [state_0], eax", "mov     eax, 33h ; '3'"], ["pop     state_0", "pop     esi", "retn"], ["lea     eax, (element7 - 2DF78h)[eax]; jumptable 0001D6E5 case 32", "mov     [state_0], eax", "mov     eax, 36h ; '6'", "pop     state_0", "pop     esi", "retn"], ["mov     eax, [state_0+4]; jumptable 0001D6E5 case 23", "inc     eax", "mov     [state_0+4], eax", "mov     eax, 2Ch ; ','", "pop     state_0", "pop     esi", "retn"], ["lea     eax, (element7 - 2DF78h)[eax]; jumptable 0001D6E5 case 30", "mov     [state_0], eax", "mov     eax, 35h ; '5'", "pop     state_0", "pop     esi", "retn"], ["lea     eax, (element7 - 2DF78h)[eax]; jumptable 0001D6E5 case 31", "mov     [state_0], eax", "mov     eax, 34h ; '4'", "pop     state_0", "pop     esi", "retn"], ["mov     eax, 27h ; '''; jumptable 0001D6E5 case 15", "jmp     short loc_1D705"]], "element3": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+state]", "cmp     edx, 18h", "jz      short loc_1D7B8"], ["jg      short loc_1D788"], ["cmp     edx, 0Fh", "jz      short loc_1D7A8"], ["cmp     edx, 15h", "jnz     short loc_1D7B0"], ["lea     edx, (element4 - 2DF78h)[ecx]", "mov     [eax], edx", "mov     eax, 27h ; '''", "retn"], ["cmp     tok_0, 24h ; '$'", "jnz     short loc_1D7B0"], ["lea     tok_0, (declClose - 2DF78h)[ecx]", "mov     dword ptr [state_0+8], 27h ; '''", "mov     [state_0], edx", "mov     state_0, 2Eh ; '.'", "retn"], ["mov     state_0, 27h ; '''", "retn"], ["jmp     doctype0_0"], ["lea     tok_0, (declClose - 2DF78h)[ecx]", "mov     dword ptr [state_0+8], 27h ; '''", "mov     [state_0], edx", "mov     state_0, 2Dh ; '-'", "retn"]], "element4": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+state]", "cmp     edx, 12h", "jz      short loc_1D800"], ["cmp     edx, 29h ; ')'", "jz      short loc_1D800"], ["cmp     edx, 0Fh", "jz      short loc_1D7F8"], ["jmp     doctype0_0"], ["mov     state_0, 27h ; '''", "retn"], ["lea     tok_0, (element5 - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 33h ; '3'", "retn"]], "element5": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+state]", "cmp     edx, 15h", "jz      short loc_1D858"], ["cmp     edx, 24h ; '$'", "jz      short loc_1D840"], ["cmp     edx, 0Fh", "jz      short loc_1D838"], ["jmp     doctype0_0"], ["mov     state_0, 27h ; '''", "retn"], ["lea     tok_0, (declClose - 2DF78h)[ecx]", "mov     dword ptr [state_0+8], 27h ; '''", "mov     [state_0], edx", "mov     state_0, 2Eh ; '.'", "retn"], ["lea     tok_0, (element4 - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 27h ; '''", "retn"]], "attlist0": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+state]", "cmp     edx, 12h", "jz      short loc_1D8A0"], ["cmp     edx, 29h ; ')'", "jz      short loc_1D8A0"], ["cmp     edx, 0Fh", "jz      short loc_1D898"], ["jmp     doctype0_0"], ["mov     state_0, 21h ; '!'", "retn"], ["lea     tok_0, (attlist1 - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 22h ; '\"'", "retn"]], "attlist1": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     ecx, [esp+state]", "cmp     edx, 11h", "jz      short loc_1D8F8"], ["jg      short loc_1D8D8"], ["mov     eax, 21h ; '!'", "cmp     edx, 0Fh", "jnz     short loc_1D8F0"], ["retn"], ["cmp     edx, 12h", "jz      short loc_1D8E2"], ["cmp     edx, 29h ; ')'", "jnz     short loc_1D8F0"], ["lea     eax, (attlist2 - 2DF78h)[eax]", "mov     [ecx], eax", "mov     eax, 16h", "retn"], ["mov     eax, state_0", "jmp     doctype0_0"], ["mov     tok_0, [state_0+10h]", "test    edx, edx", "jnz     short loc_1D910"], ["lea     eax, (externalSubset1 - 2DF78h)[eax]", "mov     [state_0], eax", "mov     eax, 21h ; '!'", "retn"], ["lea     eax, (internalSubset - 2DF78h)[eax]", "mov     [state_0], eax", "mov     eax, 21h ; '!'", "retn"]], "attlist3": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     ecx, [esp+state]", "cmp     edx, 13h", "jg      short loc_1D948"], ["cmp     edx, 11h", "jg      short loc_1D94D"], ["mov     eax, 21h ; '!'", "cmp     edx, 0Fh", "jnz     short loc_1D960"], ["retn"], ["cmp     edx, 29h ; ')'", "jnz     short loc_1D960"], ["lea     eax, (attlist4 - 2DF78h)[eax]", "mov     [ecx], eax", "mov     eax, 1Fh", "retn"], ["mov     eax, state_0", "jmp     doctype0_0"]], "attlist4": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+state]", "cmp     edx, 15h", "jz      short loc_1D9A8"], ["cmp     edx, 18h", "jz      short loc_1D998"], ["cmp     edx, 0Fh", "jz      short loc_1D9A0"], ["jmp     doctype0_0"], ["lea     tok_0, (attlist8 - 2DF78h)[ecx]", "mov     [state_0], edx"], ["mov     state_0, 21h ; '!'", "retn"], ["lea     tok_0, (attlist3 - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 21h ; '!'", "retn"]], "attlist7": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+state]", "cmp     edx, 15h", "jz      short loc_1DA78"], ["cmp     edx, 18h", "jz      short loc_1DA68"], ["cmp     edx, 0Fh", "jz      short loc_1DA70"], ["jmp     doctype0_0"], ["lea     tok_0, (attlist8 - 2DF78h)[ecx]", "mov     [state_0], edx"], ["mov     state_0, 21h ; '!'", "retn"], ["lea     tok_0, (attlist6 - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 21h ; '!'", "retn"]], "entity0": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+state]", "cmp     edx, 12h", "jz      short loc_1DB10"], ["cmp     edx, 16h", "jz      short loc_1DB00"], ["cmp     edx, 0Fh", "jz      short loc_1DAF8"], ["jmp     doctype0_0"], ["mov     state_0, 0Bh", "retn"], ["lea     tok_0, (entity1 - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 0Bh", "retn"], ["lea     tok_0, (entity2 - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 9", "retn"]], "entity5": [["push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "push    eax", "mov     eax, [esp+0Ch+tok]", "mov     ebx, [esp+0Ch+state]", "cmp     eax, 11h", "jz      short loc_1DC28"], ["cmp     eax, 12h", "jz      short loc_1DBF0"], ["cmp     eax, 0Fh", "jz      short loc_1DBE0"], ["mov     ecx, [ebx+10h]", "test    ecx, ecx", "jnz     short loc_1DC14"], ["cmp     eax, 1Ch", "jnz     short loc_1DC14"], ["mov     eax, 3Bh ; ';'"], ["pop     edx", "pop     ebx", "pop     esi", "retn"], ["pop     edx", "mov     eax, 0Bh", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (KW_NDATA - 2DF78h)[esi]; \"NDATA\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+ptr]", "push    eax", "mov     eax, [esp+18h+enc]", "push    eax", "mov     eax, [esp+1Ch+enc]", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1DC48"], ["lea     eax, (error - 2DF78h)[esi]", "mov     [ebx], eax", "or      eax, 0FFFFFFFFh", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["mov     eax, [ebx+10h]", "test    eax, eax", "jnz     short loc_1DC40"], ["lea     eax, (externalSubset1 - 2DF78h)[esi]"], ["mov     [ebx], eax", "mov     eax, 0Fh", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (internalSubset - 2DF78h)[esi]", "jmp     short loc_1DC35"], ["lea     eax, (entity6 - 2DF78h)[esi]", "mov     [ebx], eax", "mov     eax, 0Bh", "jmp     loc_1DBD6"]], "entity10": [["mov     edx, [esp+tok]", "call    __x86_get_pc_thunk_cx", "add     ecx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     eax, [esp+state]", "cmp     edx, 0Fh", "jz      short loc_1DDA8"], ["cmp     edx, 11h", "jnz     short loc_1DDB0"], ["mov     edx, [eax+10h]", "test    edx, edx", "jnz     short loc_1DDB8"], ["lea     edx, (externalSubset1 - 2DF78h)[ecx]", "mov     [eax], edx", "mov     eax, 0Fh", "retn"], ["mov     state_0, 0Bh", "retn"], ["jmp     doctype0_0"], ["lea     edx, (internalSubset - 2DF78h)[ecx]", "mov     [state_0], edx", "mov     state_0, 0Fh", "retn"]], "notation1": [["push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "push    eax", "mov     eax, [esp+0Ch+tok]", "mov     ebx, [esp+0Ch+enc]", "cmp     eax, 0Fh", "jz      short loc_1DE60"], ["cmp     eax, 12h", "jnz     short loc_1DE40"], ["lea     eax, (KW_SYSTEM - 2DF78h)[esi]; \"SYSTEM\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+ptr]", "push    eax", "push    ebx", "call    dword ptr [ebx+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1DE70"], ["lea     eax, (KW_PUBLIC - 2DF78h)[esi]; \"PUBLIC\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+ptr]", "push    eax", "push    ebx", "call    dword ptr [ebx+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1DE88"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (error - 2DF78h)[esi]", "mov     [ecx], eax", "or      eax, 0FFFFFFFFh"], ["pop     edx", "pop     ebx", "pop     esi", "retn"], ["mov     edx, [esp+0Ch+state]", "mov     ecx, [edx+10h]", "test    ecx, ecx", "jnz     short loc_1DE28"], ["cmp     eax, 1Ch", "jnz     short loc_1DE28"], ["pop     edx", "mov     eax, 3Bh ; ';'", "pop     ebx", "pop     esi", "retn"], ["pop     edx", "mov     eax, 11h", "pop     ebx", "pop     esi", "retn"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (notation3 - 2DF78h)[esi]", "mov     [ecx], eax", "mov     eax, 11h", "jmp     short loc_1DE37"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (notation2 - 2DF78h)[esi]", "mov     [ecx], eax", "mov     eax, 11h", "jmp     short loc_1DE37"]], "condSect0": [["push    edi", "call    __x86_get_pc_thunk_di", "add     edi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    esi", "push    ebx", "mov     eax, [esp+0Ch+tok]", "mov     esi, [esp+0Ch+enc]", "cmp     eax, 0Fh", "jz      short loc_1DF30"], ["cmp     eax, 12h", "jnz     short loc_1DF10"], ["lea     eax, (KW_INCLUDE - 2DF78h)[edi]; \"INCLUDE\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+ptr]", "push    eax", "push    esi", "call    dword ptr [esi+18h]", "add     esp, 10h", "mov     ebx, eax", "test    eax, eax", "jnz     short loc_1DF38"], ["lea     eax, (KW_IGNORE - 2DF78h)[edi]; \"IGNORE\"", "push    eax", "mov     ecx, [esp+10h+end]", "push    ecx", "mov     eax, [esp+14h+ptr]", "push    eax", "push    esi", "call    dword ptr [esi+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1DF50"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (error - 2DF78h)[edi]", "or      ebx, 0FFFFFFFFh", "mov     [ecx], eax", "mov     eax, ebx", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["mov     edx, [esp+0Ch+state]", "mov     edx, [edx+10h]", "test    edx, edx", "jnz     short loc_1DEFA"], ["cmp     tok_0, 1Ch", "jnz     short loc_1DEFA"], ["mov     ebx, 3Bh ; ';'"], ["mov     eax, ebx", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["xor     ebx, ebx", "mov     tok_0, ebx", "pop     ebx", "pop     enc_0", "pop     edi", "retn"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (condSect1 - 2DF78h)[edi]", "xor     ebx, ebx", "mov     [ecx], eax", "mov     eax, ebx", "pop     ebx", "pop     esi", "pop     edi", "retn"], ["mov     ecx, [esp+0Ch+state]", "lea     eax, (condSect2 - 2DF78h)[edi]", "mov     [ecx], eax", "jmp     short loc_1DF25"]], "entity7": [["push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "push    ecx", "mov     eax, [esp+0Ch+tok]", "mov     ebx, [esp+0Ch+state]", "cmp     eax, 12h", "jz      short loc_1DFC8"], ["cmp     eax, 1Bh", "jz      short loc_1DFB0"], ["cmp     eax, 0Fh", "jz      short loc_1DFA0"], ["mov     ecx, [ebx+10h]", "test    ecx, ecx", "jnz     loc_1E010"], ["cmp     eax, 1Ch", "jnz     short loc_1E010"], ["mov     eax, 3Bh ; ';'"], ["pop     edx", "pop     ebx", "pop     esi", "retn"], ["pop     edx", "mov     eax, 0Bh", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (declClose - 2DF78h)[esi]", "mov     dword ptr [ebx+8], 0Bh", "mov     [ebx], eax", "mov     eax, 0Ch", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (KW_SYSTEM - 2DF78h)[esi]; \"SYSTEM\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+ptr]", "push    eax", "mov     edx, [esp+18h+enc]", "push    edx", "mov     eax, [esp+1Ch+enc]", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1E020"], ["lea     eax, (KW_PUBLIC - 2DF78h)[esi]; \"PUBLIC\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+ptr]", "push    eax", "mov     eax, [esp+18h+enc]", "push    eax", "mov     eax, [esp+1Ch+enc]", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1E038"], ["lea     eax, (error - 2DF78h)[esi]", "mov     [ebx], eax", "or      eax, 0FFFFFFFFh", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (entity9 - 2DF78h)[esi]", "mov     [ebx], eax", "mov     eax, 0Bh", "jmp     loc_1DF9A"], ["lea     eax, (entity8 - 2DF78h)[esi]", "mov     [ebx], eax", "mov     eax, 0Bh", "jmp     loc_1DF9A"]], "entity2": [["push    esi", "call    __x86_get_pc_thunk_si", "add     esi, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    ebx", "push    ecx", "mov     eax, [esp+0Ch+tok]", "mov     ebx, [esp+0Ch+state]", "cmp     eax, 12h", "jz      short loc_1E0B8"], ["cmp     eax, 1Bh", "jz      short loc_1E0A0"], ["cmp     eax, 0Fh", "jz      short loc_1E090"], ["mov     ecx, [ebx+10h]", "test    ecx, ecx", "jnz     loc_1E100"], ["cmp     eax, 1Ch", "jnz     short loc_1E100"], ["mov     eax, 3Bh ; ';'"], ["pop     edx", "pop     ebx", "pop     esi", "retn"], ["pop     edx", "mov     eax, 0Bh", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (declClose - 2DF78h)[esi]", "mov     dword ptr [ebx+8], 0Bh", "mov     [ebx], eax", "mov     eax, 0Ch", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (KW_SYSTEM - 2DF78h)[esi]; \"SYSTEM\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+ptr]", "push    eax", "mov     edx, [esp+18h+enc]", "push    edx", "mov     eax, [esp+1Ch+enc]", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1E110"], ["lea     eax, (KW_PUBLIC - 2DF78h)[esi]; \"PUBLIC\"", "push    eax", "mov     eax, [esp+10h+end]", "push    eax", "mov     eax, [esp+14h+ptr]", "push    eax", "mov     eax, [esp+18h+enc]", "push    eax", "mov     eax, [esp+1Ch+enc]", "call    dword ptr [eax+18h]", "add     esp, 10h", "test    eax, eax", "jnz     short loc_1E128"], ["lea     eax, (error - 2DF78h)[esi]", "mov     [ebx], eax", "or      eax, 0FFFFFFFFh", "pop     edx", "pop     ebx", "pop     esi", "retn"], ["lea     eax, (entity4 - 2DF78h)[esi]", "mov     [ebx], eax", "mov     eax, 0Bh", "jmp     loc_1E08A"], ["lea     eax, (entity3 - 2DF78h)[esi]", "mov     [ebx], eax", "mov     eax, 0Bh", "jmp     loc_1E08A"]], "externalSubset1": [["push    ebp", "call    __x86_get_pc_thunk_dx", "add     edx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 1Ch", "mov     ecx, [esp+2Ch+tok]", "mov     eax, [esp+2Ch+ptr]", "mov     [esp+2Ch+var_20], eax", "mov     ebx, [esp+2Ch+state]", "lea     eax, [ecx+4]; switch 39 cases", "mov     edi, [esp+2Ch+end]", "mov     ebp, [esp+2Ch+enc]", "cmp     eax, 26h", "ja      short _L527; jumptable 0001E17B default case, cases -3-14,16-25,27-32"], ["mov     esi, ds:(jpt_1E17B - 2DF78h)[edx+eax*4]", "add     esi, edx", "jmp     esi; switch jump"], ["mov     eax, [esp+2Ch+var_20]; jumptable 0001E17B default case, cases -3-14,16-25,27-32", "mov     [esp+2Ch+enc], ebp", "mov     [esp+2Ch+end], edi", "mov     [esp+2Ch+state], ebx", "mov     [esp+2Ch+ptr], eax", "mov     [esp+2Ch+tok], ecx", "add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "jmp     internalSubset"], ["mov     eax, [ebx+0Ch]; jumptable 0001E17B case -4", "test    eax, eax", "jz      short _L534; jumptable 0001E17B case 15"], ["lea     eax, (error - 2DF78h)[edx]; jumptable 0001E17B case 26", "mov     [ebx], eax", "or      eax, 0FFFFFFFFh"], ["add     esp, 1Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["lea     eax, (condSect0 - 2DF78h)[edx]; jumptable 0001E17B case 33", "mov     [ebx], eax", "add     esp, 1Ch", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], ["mov     eax, [ebx+0Ch]; jumptable 0001E17B case 34", "test    eax, eax", "jz      short _L531; jumptable 0001E17B case 26"], ["dec     eax", "mov     [ebx+0Ch], eax", "xor     eax, eax", "jmp     short loc_1E1BA"], ["add     esp, 1Ch; jumptable 0001E17B case 15", "xor     eax, eax", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"]], "num": 186}