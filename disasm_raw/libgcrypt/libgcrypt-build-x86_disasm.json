{"arch": "metapc", "ghash_internal": {"101952": {"disasm": ["push    ebp", "call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "push    edi", "push    esi", "push    ebx", "sub     esp, 5Ch", "mov     edi, [esp+6Ch+buf]", "mov     ebx, [esp+6Ch+result]", "mov     [esp+6Ch+var_50], ebx", "mov     [esp+6Ch+buf_0], edi", "mov     esi, [esp+6Ch+nblocks]", "mov     edi, large gs:14h", "mov     [esp+6Ch+var_20], edi", "xor     edi, edi", "mov     edx, [esp+6Ch+c]", "test    nblocks_0, nblocks_0", "jz      loc_190D0"], "preds": [], "succs": [102014, 102608]}, "102014": {"disasm": ["lea     eax, (gcmR - 0E2E98h)[eax]", "lea     edi, [edx+0E4h]", "mov     [esp+6Ch+var_58], eax", "lea     eax, [esp+6Ch+var_23]", "mov     edx, [ebx]", "mov     [esp+6Ch+var_40], eax", "lea     ebx, [esp+6Ch+var_30]", "lea     eax, [esp+6Ch+var_31]", "mov     [esp+6Ch+var_44], ebx", "mov     [esp+6Ch+var_64], edi", "mov     [esp+6Ch+var_48], eax", "mov     ebx, edx", "xchg    ax, ax"], "preds": [101952], "succs": [102064]}, "102064": {"disasm": ["xor     edx, edx", "jmp     short loc_18EBF"], "preds": [102014, 102520], "succs": [102079]}, "102072": {"disasm": ["mov     eax, [esp+6Ch+var_50]", "mov     ebx, ds:(_GLOBAL_OFFSET_TABLE_ - 0E2E98h)[eax+edx]"], "preds": [102079], "succs": [102079]}, "102079": {"disasm": ["mov     eax, [esp+6Ch+buf_0]", "mov     ecx, ds:(_GLOBAL_OFFSET_TABLE_ - 0E2E98h)[eax+edx]", "mov     eax, [esp+6Ch+var_44]", "xor     ebx, ecx", "mov     ds:(_GLOBAL_OFFSET_TABLE_ - 0E2E98h)[eax+edx], ebx", "add     edx, 4", "cmp     edx, 10h", "jnz     short loc_18EB8"], "preds": [102064, 102072], "succs": [102072, 102103]}, "102103": {"disasm": ["mov     dl, [esp+6Ch+var_21]", "mov     eax, [esp+6Ch+var_64]", "mov     ecx, edx", "and     edx, 0F0h", "and     ecx, 0Fh", "add     edx, eax", "shl     ecx, 4", "mov     edi, [esp+6Ch+var_58]", "add     ecx, eax", "xor     eax, eax", "mov     al, [esp+6Ch+var_22]", "xor     ebx, ebx", "mov     esi, [ecx+0Ch]", "mov     [esp+6Ch+var_68], eax", "mov     eax, esi", "mov     ebp, [ecx]", "shl     eax, 4", "shr     esi, 4", "and     eax, 0FFh", "mov     bx, [edi+eax*2]", "mov     eax, ebx", "mov     ebx, [edx]", "shl     eax, 10h", "mov     edi, eax", "mov     eax, ebp", "shr     eax, 4", "shl     ebp, 1Ch", "xor     eax, ebx", "xor     edi, eax", "mov     eax, [ecx+4]", "mov     [esp+6Ch+var_6C], edi", "mov     edi, eax", "shr     edi, 4", "mov     ecx, [ecx+8]", "xor     ebp, edi", "mov     edi, [edx+4]", "xor     ebp, edi", "mov     edi, ecx", "shr     edi, 4", "mov     [esp+6Ch+var_60], ebp", "shl     eax, 1Ch", "mov     ebp, [edx+8]", "xor     eax, edi", "mov     ebx, [esp+6Ch+var_40]", "xor     eax, ebp", "mov     [esp+6Ch+var_54], ebx", "shl     ecx, 1Ch", "mov     [esp+6Ch+var_5C], eax", "xor     esi, ecx", "mov     eax, [edx+0Ch]", "xor     eax, esi", "mov     ecx, [esp+6Ch+var_68]", "jmp     short loc_18F7A"], "preds": [102079], "succs": [102266]}, "102256": {"disasm": ["xor     ecx, ecx", "dec     esi", "mov     cl, [esi+1]", "mov     [esp+6Ch+var_54], esi"], "preds": [102266], "succs": [102266]}, "102266": {"disasm": ["mov     edi, [esp+6Ch+var_60]", "mov     ebp, [esp+6Ch+var_64]", "mov     esi, ecx", "mov     edx, [esp+6Ch+var_6C]", "and     ecx, 0F0h", "mov     ebx, edi", "shr     ebx, 8", "and     esi, 0Fh", "shl     edx, 18h", "shl     esi, 4", "xor     edx, ebx", "mov     ebx, [ebp+ecx+4]", "add     esi, ebp", "xor     edx, ebx", "mov     ebx, edi", "mov     [esp+6Ch+var_60], edx", "mov     edx, [esp+6Ch+var_5C]", "mov     edi, edx", "mov     [esp+6Ch+var_68], esi", "shr     edi, 8", "mov     esi, ebp", "shl     ebx, 18h", "shl     edx, 18h", "xor     ebx, edi", "mov     edi, [ebp+ecx+8]", "mov     ebp, edx", "xor     ebx, edi", "mov     edi, eax", "shr     edi, 8", "mov     edx, [esi+ecx+0Ch]", "xor     ebp, edi", "mov     esi, [esp+6Ch+var_68]", "xor     ebp, edx", "and     eax, 0FFh", "mov     edx, [esp+6Ch+var_58]", "mov     edi, [esi+0Ch]", "xor     esi, esi", "mov     si, [edx+eax*2]", "mov     edx, [esp+6Ch+var_64]", "mov     eax, esi", "shl     eax, 10h", "mov     esi, [edx+ecx]", "xor     eax, esi", "mov     ecx, [esp+6Ch+var_6C]", "mov     esi, [esp+6Ch+var_68]", "mov     edx, [esp+6Ch+var_58]", "shr     ecx, 8", "xor     ecx, eax", "mov     eax, [esi]", "shr     eax, 4", "xor     esi, esi", "xor     ecx, eax", "mov     eax, edi", "shl     eax, 4", "and     eax, 0FFh", "mov     si, [edx+eax*2]", "mov     edx, [esp+6Ch+var_60]", "mov     eax, esi", "mov     esi, [esp+6Ch+var_68]", "shl     eax, 10h", "xor     ecx, eax", "mov     [esp+6Ch+var_6C], ecx", "mov     ecx, [esi+4]", "mov     eax, ecx", "shr     eax, 4", "xor     eax, edx", "mov     edx, [esi]", "shl     edx, 1Ch", "xor     eax, edx", "mov     edx, [esi+8]", "mov     [esp+6Ch+var_60], eax", "mov     eax, edx", "shr     eax, 4", "mov     esi, [esp+6Ch+var_54]", "shl     ecx, 1Ch", "xor     ebx, eax", "mov     eax, edi", "xor     ebx, ecx", "shr     eax, 4", "mov     [esp+6Ch+var_5C], ebx", "xor     ebp, eax", "mov     eax, edx", "shl     eax, 1Ch", "xor     eax, ebp", "cmp     [esp+6Ch+var_48], esi", "jnz     loc_18F70"], "preds": [102103, 102256], "succs": [102256, 102520]}, "102520": {"disasm": ["mov     esi, [esp+6Ch+var_50]", "mov     ebx, [esp+6Ch+var_6C]", "bswap   eax", "mov     [esi+0Ch], eax", "mov     eax, [esp+6Ch+buf_0]", "add     eax, 10h", "dec     [esp+6Ch+nblocks]", "mov     ebp, [esp+6Ch+var_60]", "mov     edi, [esp+6Ch+var_5C]", "bswap   ebx", "bswap   ebp", "bswap   edi", "mov     [esi], ebx", "mov     [esi+4], ebp", "mov     [esi+8], edi", "mov     [esp+6Ch+buf_0], eax", "jnz     loc_18EB0"], "preds": [102266], "succs": [102064, 102575]}, "102575": {"disasm": ["mov     eax, 60h ; '`'"], "preds": [102520], "succs": [102580]}, "102580": {"disasm": ["mov     ebx, [esp+6Ch+var_20]", "xor     ebx, large gs:14h", "jnz     short loc_190D4"], "preds": [102575, 102608], "succs": [102593, 102612]}, "102593": {"disasm": ["add     esp, 5Ch", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], "preds": [102580], "succs": []}, "102608": {"disasm": ["xor     eax, eax", "jmp     short loc_190B4"], "preds": [101952], "succs": [102580]}, "102612": {"disasm": ["call    __stack_chk_fail_local"], "preds": [102580], "succs": []}}, "do_encrypt": {"178720": {"disasm": ["push    ebp", "push    edi", "push    esi", "push    ebx", "mov     ebx, ret_xl", "sub     esp, 8", "mov     ret_xl, ret_xr_0", "mov     esi, [s0+1000h]", "lea     ret_xr_0, [s0+400h]", "mov     [esp+18h+var_18], ret_xl", "mov     ret_xl, [ret_xl]", "xor     ebx, esi", "mov     [esp+18h+ret_xr], ret_xr_0", "mov     edi, xl", "mov     esi, xl", "shr     edi, 10h", "shr     esi, 18h", "and     edi, 0FFh", "mov     ebp, [s1+edi*4]", "mov     edi, [s0+esi*4]", "movzx   esi, bh", "add     ebp, edi", "mov     edi, [s0+esi*4+800h]", "mov     esi, xl", "and     esi, 0FFh", "xor     ebp, edi", "mov     edi, [s0+esi*4+0C00h]", "mov     esi, [ret_xr_0]", "mov     ret_xr_0, [s0+1004h]", "add     ebp, edi", "xor     esi, edx", "xor     ebp, esi", "mov     esi, xr", "mov     edi, xr", "shr     esi, 10h", "shr     edi, 18h", "and     esi, 0FFh", "mov     edx, [s0+edi*4]", "mov     esi, [s1+esi*4]", "add     esi, edx", "mov     edx, xr", "movzx   edi, dh", "mov     edx, [s0+edi*4+800h]", "mov     edi, xr", "and     edi, 0FFh", "xor     esi, edx", "mov     edx, [s0+edi*4+0C00h]", "mov     edi, [s0+1008h]", "xor     ebx, edi", "add     esi, edx", "xor     esi, ebx", "mov     ebx, xl", "mov     edi, xl", "shr     ebx, 10h", "shr     edi, 18h", "and     ebx, 0FFh", "mov     edx, [s0+edi*4]", "mov     ebx, [s1+ebx*4]", "add     ebx, edx", "mov     edx, xl", "movzx   edi, dh", "mov     edx, [s0+edi*4+800h]", "mov     edi, xl", "and     edi, 0FFh", "xor     ebx, edx", "mov     edx, [s0+edi*4+0C00h]", "mov     edi, [s0+100Ch]", "xor     ebp, edi", "add     ebx, edx", "xor     ebx, ebp", "mov     ebp, xr", "mov     edi, xr", "shr     ebp, 18h", "shr     edi, 10h", "and     edi, 0FFh", "mov     edx, [s0+ebp*4]", "movzx   ebp, bh", "mov     edi, [s1+edi*4]", "add     edi, edx", "mov     edx, [s0+ebp*4+800h]", "mov     ebp, xr", "xor     edi, edx", "and     ebp, 0FFh", "mov     edx, [s0+ebp*4+0C00h]", "mov     ebp, [s0+1010h]", "xor     esi, ebp", "add     edi, edx", "xor     edi, esi", "mov     esi, xl", "mov     ebp, xl", "shr     esi, 10h", "shr     ebp, 18h", "and     esi, 0FFh", "mov     edx, [s0+ebp*4]", "mov     esi, [s1+esi*4]", "add     esi, edx", "mov     edx, xl", "movzx   ebp, dh", "mov     edx, [s0+ebp*4+800h]", "mov     ebp, xl", "and     ebp, 0FFh", "xor     esi, edx", "mov     edx, [s0+ebp*4+0C00h]", "mov     ebp, [s0+1014h]", "add     esi, edx", "xor     ebx, ebp", "xor     ebx, esi", "mov     esi, xr", "mov     ebp, xr", "shr     esi, 18h", "shr     ebp, 10h", "and     ebp, 0FFh", "mov     edx, [s0+esi*4]", "movzx   esi, bh", "mov     ebp, [s1+ebp*4]", "add     ebp, edx", "mov     edx, [s0+esi*4+800h]", "mov     esi, xr", "xor     ebp, edx", "and     esi, 0FFh", "mov     edx, [s0+esi*4+0C00h]", "mov     esi, [s0+1018h]", "xor     edi, esi", "add     ebp, edx", "xor     ebp, edi", "mov     esi, xl", "mov     edi, xl", "shr     esi, 10h", "shr     edi, 18h", "and     esi, 0FFh", "mov     edx, [s0+edi*4]", "mov     esi, [s1+esi*4]", "add     esi, edx", "mov     edx, xl", "movzx   edi, dh", "mov     edx, [s0+edi*4+800h]", "mov     edi, xl", "and     edi, 0FFh", "xor     esi, edx", "mov     edx, [s0+edi*4+0C00h]", "mov     edi, [s0+101Ch]", "xor     ebx, edi", "add     esi, edx", "xor     esi, ebx", "mov     ebx, xr", "mov     edi, xr", "shr     ebx, 10h", "shr     edi, 18h", "and     ebx, 0FFh", "mov     edx, [s0+edi*4]", "mov     ebx, [s1+ebx*4]", "add     ebx, edx", "mov     edx, xr", "movzx   edi, dh", "mov     edx, [s0+edi*4+800h]", "mov     edi, xr", "and     edi, 0FFh", "xor     ebx, edx", "mov     edx, [s0+edi*4+0C00h]", "mov     edi, [s0+1020h]", "xor     ebp, edi", "add     ebx, edx", "xor     ebx, ebp", "mov     ebp, xl", "mov     edi, xl", "shr     ebp, 18h", "shr     edi, 10h", "and     edi, 0FFh", "mov     edx, [s0+ebp*4]", "movzx   ebp, bh", "mov     edi, [s1+edi*4]", "add     edi, edx", "mov     edx, [s0+ebp*4+800h]", "mov     ebp, xl", "xor     edi, edx", "and     ebp, 0FFh", "mov     edx, [s0+ebp*4+0C00h]", "mov     ebp, [s0+1024h]", "xor     esi, ebp", "add     edi, edx", "xor     edi, esi", "mov     esi, xr", "mov     ebp, xr", "shr     esi, 10h", "shr     ebp, 18h", "and     esi, 0FFh", "mov     edx, [s0+ebp*4]", "mov     esi, [s1+esi*4]", "add     esi, edx", "mov     edx, xr", "movzx   ebp, dh", "mov     edx, [s0+ebp*4+800h]", "mov     ebp, xr", "and     ebp, 0FFh", "xor     esi, edx", "mov     edx, [s0+ebp*4+0C00h]", "mov     ebp, [s0+1028h]", "add     esi, edx", "xor     ebx, ebp", "xor     ebx, esi", "mov     esi, xl", "mov     ebp, xl", "shr     esi, 18h", "shr     ebp, 10h", "and     ebp, 0FFh", "mov     edx, [s0+esi*4]", "movzx   esi, bh", "mov     ebp, [s1+ebp*4]", "add     ebp, edx", "mov     edx, [s0+esi*4+800h]", "mov     esi, xl", "xor     ebp, edx", "and     esi, 0FFh", "mov     edx, [s0+esi*4+0C00h]", "mov     esi, [s0+102Ch]", "xor     edi, esi", "add     ebp, edx", "xor     ebp, edi", "mov     esi, xr", "mov     edi, xr", "shr     esi, 10h", "shr     edi, 18h", "and     esi, 0FFh", "mov     edx, [s0+edi*4]", "mov     esi, [s1+esi*4]", "add     esi, edx", "mov     edx, xr", "movzx   edi, dh", "mov     edx, [s0+edi*4+800h]", "mov     edi, xr", "and     edi, 0FFh", "xor     esi, edx", "mov     edx, [s0+edi*4+0C00h]", "mov     edi, [s0+1030h]", "xor     ebx, edi", "add     esi, edx", "xor     esi, ebx", "mov     ebx, xl", "mov     edi, xl", "shr     ebx, 10h", "shr     edi, 18h", "and     ebx, 0FFh", "mov     edx, [s0+edi*4]", "mov     ebx, [s1+ebx*4]", "add     ebx, edx", "mov     edx, xl", "movzx   edi, dh", "mov     edx, [s0+edi*4+800h]", "mov     edi, xl", "and     edi, 0FFh", "xor     ebx, edx", "mov     edx, [s0+edi*4+0C00h]", "mov     edi, [s0+1034h]", "xor     ebp, edi", "add     ebx, edx", "xor     ebx, ebp", "mov     ebp, xr", "mov     edi, xr", "shr     ebp, 18h", "shr     edi, 10h", "and     edi, 0FFh", "mov     edx, [s0+ebp*4]", "movzx   ebp, bh", "mov     edi, [s1+edi*4]", "add     edi, edx", "mov     edx, [s0+ebp*4+800h]", "mov     ebp, xr", "xor     edi, edx", "and     ebp, 0FFh", "mov     edx, [s0+ebp*4+0C00h]", "mov     ebp, [s0+1038h]", "xor     esi, ebp", "add     edi, edx", "xor     edi, esi", "mov     ebp, xl", "mov     esi, xl", "shr     ebp, 18h", "shr     esi, 10h", "and     esi, 0FFh", "mov     edx, [s0+ebp*4]", "mov     esi, [s1+esi*4]", "add     esi, edx", "mov     edx, xl", "movzx   ebp, dh", "mov     edx, [s0+ebp*4+800h]", "mov     ebp, xl", "and     ebp, 0FFh", "xor     esi, edx", "mov     edx, [s0+ebp*4+0C00h]", "mov     ebp, [s0+103Ch]", "add     esi, edx", "xor     ebx, ebp", "xor     ebx, esi", "mov     esi, xr", "mov     ebp, xr", "shr     esi, 10h", "shr     ebp, 18h", "and     esi, 0FFh", "mov     s1, [s1+esi*4]", "mov     edx, [s0+ebp*4]", "movzx   esi, bh", "add     ecx, edx", "mov     ebp, [s0+esi*4+800h]", "mov     esi, xr", "and     esi, 0FFh", "xor     ecx, ebp", "mov     ebp, [s0+1044h]", "mov     edx, [s0+esi*4+0C00h]", "mov     esi, [s0+1040h]", "add     ecx, edx", "mov     s0, [esp+18h+var_18]", "mov     edx, [esp+18h+ret_xr]", "xor     edi, esi", "xor     xr, ebp", "xor     edi, ecx", "mov     [eax], ebx", "mov     [edx], xl", "add     esp, 8", "pop     ebx", "pop     esi", "pop     edi", "pop     ebp", "retn"], "preds": [], "succs": []}}, "prefetch_table": {"203792": {"disasm": ["push    esi", "mov     esi, 0FFFFFFE0h", "push    ebx", "lea     ecx, [tab+20h]", "sub     esi, tab", "lea     esi, [esi+0]"], "preds": [], "succs": [203808]}, "203808": {"disasm": ["mov     bl, [ecx-20h]", "mov     bl, [ecx]", "mov     bl, [ecx+20h]", "mov     bl, [ecx+40h]", "mov     bl, [ecx+60h]", "mov     bl, [ecx+80h]", "mov     bl, [ecx+0A0h]", "mov     bl, [ecx+0C0h]", "add     ecx, 100h", "lea     ebx, [esi+ecx]", "cmp     len, ebx", "ja      short loc_31C20"], "preds": [203792, 203808], "succs": [203853, 203808]}, "203853": {"disasm": ["lea     tab, [tab+len-1]", "pop     ebx", "pop     esi", "mov     al, [eax]", "retn"], "preds": [203808], "succs": []}}, "prefetch_enc": {"203872": {"disasm": ["call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edx, 400h", "lea     eax, (encT - 0E2E98h)[eax]", "jmp     short prefetch_table"], "preds": [], "succs": [203792]}}, "prefetch_dec": {"203904": {"disasm": ["call    __x86_get_pc_thunk_ax", "add     eax, (offset _GLOBAL_OFFSET_TABLE_ - $)", "mov     edx, 500h", "lea     eax, (dec_tables.T - 0E2E98h)[eax]", "jmp     prefetch_table"], "preds": [], "succs": [203792]}}, "sign": {"295776": {"disasm": ["push    ebp", "mov     ebp, input_0", "push    edi", "mov     edi, r", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 58h", "mov     esi, [esp+68h+skey]", "mov     [esp+68h+s], s_0", "mov     [esp+68h+input], input_0", "mov     input_0, [esi+4]", "mov     r, large gs:14h", "mov     [esp+68h+var_20], r", "xor     r, r", "push    ecx; a", "call    _gcry_mpi_get_nbits", "mov     [esp+6Ch+qbits], eax", "add     esp, 0Ch", "push    qbits_0; qbits", "lea     qbits_0, [esp+64h+hash]", "push    eax; out", "push    input_0; input", "call    _gcry_dsa_normalize_hash", "mov     [esp+6Ch+rc], eax", "add     esp, 10h", "test    rc_0, rc_0", "jnz     loc_48557"], "preds": [], "succs": [295865, 296279]}, "295865": {"disasm": ["mov     edx, [esp+5Ch+hashalgo]", "mov     rc_0, [esp+5Ch+flags]", "shr     eax, 1", "test    edx, edx", "setnz   dl", "and     edx, eax", "lea     eax, [esp+5Ch+abits]", "mov     [esp+5Ch+nbits], eax", "lea     eax, [esp+5Ch+k]", "mov     [esp+5Ch+var_3D], dl", "mov     [esp+5Ch+extraloops], 0", "mov     [esp+5Ch+r_k], eax", "jmp     again"], "preds": [295776], "succs": [296150]}, "295920": {"disasm": ["push    eax", "push    eax", "push    1; security_level", "mov     eax, [esi+4]", "push    eax; q", "call    _gcry_dsa_gen_k", "mov     [esp+6Ch+k], eax", "add     esp, 10h"], "preds": [296150], "succs": [295940]}, "295940": {"disasm": ["push    edx", "mov     ecx, [esp+60h+qbits]", "mov     ebp, [esi+4]", "push    ecx; qbits", "push    ebp; q", "push    eax; k", "call    _gcry_dsa_modify_k", "mov     eax, [esi]", "push    eax; mod", "mov     eax, [esp+70h+k]", "push    eax; expo", "mov     eax, [esi+8]", "push    eax; base", "push    r; res", "call    _gcry_mpi_powm", "add     esp, 1Ch", "mov     eax, [esi+4]", "push    eax; divisor", "push    r; dividend", "push    r; rem", "call    _gcry_mpi_fdiv_r", "pop     eax", "mov     eax, [esp+68h+k]", "mov     edx, [eax+4]", "push    edx; nlimbs", "call    _gcry_mpi_alloc", "add     esp, 0Ch", "mov     ecx, [esi+4]", "push    ecx; n", "mov     ebp, [esp+64h+k]", "push    ebp; a", "push    kinv_0; x", "mov     [esp+6Ch+kinv], kinv_0", "call    _gcry_mpi_invm", "pop     eax", "mov     eax, [esi]", "mov     eax, [eax+4]", "push    eax; nlimbs", "call    _gcry_mpi_alloc", "add     esp, 0Ch", "mov     ebp, eax", "push    r; v", "mov     tmp, [esi+10h]", "push    eax; u", "push    tmp; w", "call    _gcry_mpi_mul", "add     esp, 0Ch", "mov     eax, [esp+60h+hash]", "push    eax; v", "push    tmp; u", "push    tmp; w", "call    _gcry_mpi_add", "mov     eax, [esi+4]", "push    eax; m", "push    tmp; v", "mov     edx, [esp+74h+kinv]", "push    edx; u", "mov     [esp+78h+kinv], edx", "mov     edx, [esp+78h+s]", "push    edx; w", "call    _gcry_mpi_mulm", "add     esp, 14h", "mov     ecx, [esp+68h+k]", "push    ecx; a", "call    _gcry_mpi_free", "mov     edx, [esp+6Ch+kinv]", "mov     [esp+6Ch+a], edx; a", "call    _gcry_mpi_free", "mov     [esp+6Ch+a], tmp; a", "call    _gcry_mpi_free", "pop     tmp", "pop     eax", "push    0; v", "push    r; u", "call    _gcry_mpi_cmp_ui", "add     esp, 10h", "test    eax, eax", "jnz     short leave"], "preds": [295920, 296244], "succs": [296141, 296257]}, "296141": {"disasm": ["mov     eax, [esp+5Ch+extraloops]", "inc     eax", "mov     [esp+5Ch+extraloops], eax"], "preds": [295940], "succs": [296150]}, "296150": {"disasm": ["cmp     [esp+5Ch+var_3D], 0", "jz      loc_483F0"], "preds": [295865, 296141], "succs": [295920, 296161]}, "296161": {"disasm": ["mov     eax, [esp+5Ch+input]", "test    eax, eax", "jz      loc_48570"], "preds": [296150], "succs": [296173, 296304]}, "296173": {"disasm": ["test    byte ptr [eax+0Ch], 4", "jz      short loc_48570"], "preds": [296161], "succs": [296179, 296304]}, "296179": {"disasm": ["push    edx", "push    edx", "mov     ecx, [esp+64h+nbits]", "push    ecx; nbits", "push    eax; a", "call    _gcry_mpi_get_opaque", "add     esp, 0Ch", "mov     ebp, [esp+60h+extraloops]", "mov     edx, eax", "push    ebp; extraloops", "mov     abuf, [esp+64h+hashalgo]", "push    eax; halgo", "mov     eax, [esp+68h+abits]", "add     eax, 7", "shr     eax, 3", "push    eax; hlen", "push    abuf; h1", "mov     eax, [esi+10h]", "push    eax; dsa_x", "mov     eax, [esi+4]", "push    eax; dsa_q", "mov     eax, [esp+78h+r_k]", "push    eax; r_k", "call    _gcry_dsa_gen_rfc6979_k", "add     esp, 20h", "test    rc_0, rc_0", "jnz     short loc_4853D"], "preds": [296173], "succs": [296244, 296253]}, "296244": {"disasm": ["mov     rc_0, [esp+5Ch+k]", "jmp     loc_48404"], "preds": [296179], "succs": [295940]}, "296253": {"disasm": ["mov     [esp+5Ch+rc], rc_0"], "preds": [296179], "succs": [296257]}, "296257": {"disasm": ["mov     eax, [esp+5Ch+hash]", "cmp     eax, [esp+5Ch+input]", "jz      short loc_48557"], "preds": [295940, 296253], "succs": [296267, 296279]}, "296267": {"disasm": ["sub     esp, 0Ch", "push    eax; a", "call    _gcry_mpi_free", "add     esp, 10h"], "preds": [296257, 296304], "succs": [296279]}, "296279": {"disasm": ["mov     eax, [esp+5Ch+var_20]", "xor     eax, large gs:14h", "jnz     short loc_48584"], "preds": [295776, 296257, 296267, 296322], "succs": [296292, 296324]}, "296292": {"disasm": ["mov     eax, [esp+5Ch+rc]", "add     esp, 4Ch", "pop     ebx", "pop     esi", "pop     r", "pop     ebp", "retn"], "preds": [296279], "succs": []}, "296304": {"disasm": ["mov     eax, [esp+5Ch+hash]", "mov     [esp+5Ch+rc], 46h ; 'F'", "cmp     eax, [esp+5Ch+input]", "jnz     short loc_4854B"], "preds": [296161, 296173], "succs": [296267, 296322]}, "296322": {"disasm": ["jmp     short loc_48557"], "preds": [296304], "succs": [296279]}, "296324": {"disasm": ["call    __stack_chk_fail_local"], "preds": [296279], "succs": []}}, "gen_k": {"318528": {"disasm": ["push    ebp", "push    edi", "mov     edi, p_0", "push    esi", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 28h", "mov     [esp+38h+small_k], small_k_0", "push    0; nlimbs", "call    _gcry_mpi_alloc_secure", "pop     edx", "mov     ecx, [p_0+4]", "mov     esi, eax", "push    ecx; nlimbs", "call    _gcry_mpi_alloc", "mov     [esp+3Ch+rndbuf], p_0", "mov     [esp+3Ch+a], p_0; a", "mov     ebp, eax", "call    _gcry_mpi_copy", "mov     p_0, eax", "pop     p_1", "mov     eax, [esp+38h+rndbuf]", "push    eax; a", "call    _gcry_mpi_get_nbits", "mov     edx, [esp+3Ch+small_k]", "add     esp, 10h", "test    edx, edx", "jz      loc_4DF3C"], "preds": [], "succs": [318613, 319292]}, "318613": {"disasm": ["xor     edx, edx", "mov     ecx, 200h", "jmp     short loc_4DCB0"], "preds": [318528], "succs": [318640]}, "318624": {"disasm": ["inc     edx", "mov     ecx, ds:(t_7965 - 0E2E98h)[ebx+edx*8]", "test    ecx, ecx", "jz      loc_4DF15"], "preds": [318640], "succs": [318640, 319253]}, "318640": {"disasm": ["cmp     orig_nbits, ecx", "ja      short loc_4DCA0"], "preds": [318613, 318624], "succs": [318624, 318644]}, "318644": {"disasm": ["mov     edx, ds:(dword_A9F24 - 0E2E98h)[ebx+edx*8]"], "preds": [318640], "succs": [318651]}, "318651": {"disasm": ["lea     edx, [edx+edx*2]", "shr     edx, 1", "mov     [esp+2Ch+nbits], edx", "cmp     orig_nbits, nbits_0", "jbe     loc_4DF45"], "preds": [318644, 319253], "succs": [318668, 319301]}, "318668": {"disasm": ["mov     orig_nbits, [esp+2Ch+nbits]", "sub     esp, 0Ch", "add     eax, 7", "shr     eax, 3", "mov     [esp+38h+small_k], eax", "push    1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jnz     loc_4DF25"], "preds": [318651, 319292], "succs": [318703, 319269]}, "318703": {"disasm": ["push    eax", "push    1; v", "mov     eax, [esp+34h+rndbuf]", "push    eax; u", "push    p_1; w", "call    _gcry_mpi_sub_ui", "add     esp, 10h", "lea     eax, (aPkElg - 0E2E98h)[ebx]; \"pk_elg\"", "mov     [esp+2Ch+rndbuf], 0", "mov     [esp+2Ch+var_20], eax", "cmp     [esp+2Ch+nbits], 1Fh", "setbe   byte ptr [esp+2Ch+nbits]"], "preds": [318668, 319269], "succs": [318747]}, "318747": {"disasm": ["mov     eax, [esp+2Ch+rndbuf]", "test    eax, eax", "jz      loc_4DE10"], "preds": [318703, 318914, 318935, 319032, 319053, 319067], "succs": [318758, 318992]}, "318758": {"disasm": ["cmp     byte ptr [esp+2Ch+nbits], 0", "jnz     loc_4DE10"], "preds": [318747, 318949], "succs": [318769, 318992]}, "318769": {"disasm": ["push    eax", "push    eax", "push    1; level", "push    4; nbytes", "call    _gcry_random_bytes_secure", "mov     ecx, [esp+3Ch+rndbuf]", "mov     edx, [pp]", "mov     [ecx], edx", "mov     [esp+3Ch+a], pp; p", "call    _gcry_free", "add     esp, 10h"], "preds": [318758], "succs": [318799]}, "318799": {"disasm": ["push    0; sign", "mov     eax, [esp+30h+small_k]", "push    eax; nbytes", "mov     eax, [esp+34h+rndbuf]", "push    eax; buffer_arg", "push    k; a", "call    _gcry_mpi_set_buffer", "add     esp, 10h", "jmp     short loc_4DDB2"], "preds": [318769, 318992], "succs": [318898]}, "318824": {"disasm": ["push    eax", "push    eax", "push    0; v", "push    k; u", "call    _gcry_mpi_cmp_ui", "add     esp, 10h", "test    eax, eax", "jle     loc_4DE38"], "preds": [318898], "succs": [318845, 319032]}, "318845": {"disasm": ["push    eax", "push    p_1; xb", "push    k; xa", "push    temp; g", "call    _gcry_mpi_gcd", "add     esp, 10h", "test    eax, eax", "jnz     found"], "preds": [318824], "succs": [318865, 319104]}, "318865": {"disasm": ["push    ecx", "push    1; v", "push    k; u", "push    k; w", "call    _gcry_mpi_add_ui", "mov     [esp+3Ch+a], 1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jnz     loc_4DEE8"], "preds": [318845], "succs": [318898, 319208]}, "318898": {"disasm": ["push    eax", "push    eax", "push    p_1; v", "push    k; u", "call    _gcry_mpi_cmp", "add     esp, 10h", "test    eax, eax", "js      short loc_4DD68"], "preds": [318799, 318865, 319208, 319222], "succs": [318824, 318914]}, "318914": {"disasm": ["sub     esp, 0Ch", "push    1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jz      loc_4DD1B"], "preds": [318898], "succs": [318747, 318935]}, "318935": {"disasm": ["mov     eax, ds:(progress_cb_1 - 0E2E98h)[ebx]", "test    eax, eax", "jz      loc_4DD1B"], "preds": [318914], "succs": [318747, 318949]}, "318949": {"disasm": ["sub     esp, 0Ch", "mov     ecx, ds:(progress_cb_data_1 - 0E2E98h)[ebx]", "push    0", "push    0", "push    2Bh ; '+'", "mov     edx, [esp+44h+var_20]", "push    edx", "push    ecx", "call    eax", "mov     eax, [esp+4Ch+rndbuf]", "add     esp, 20h", "test    rndbuf_0, rndbuf_0", "jnz     loc_4DD26"], "preds": [318935], "succs": [318758, 318987]}, "318987": {"disasm": ["lea     k, [k+0]", "nop"], "preds": [318949], "succs": [318992]}, "318992": {"disasm": ["sub     esp, 0Ch", "mov     eax, [esp+38h+rndbuf]", "push    eax; p", "call    _gcry_free", "pop     edx", "pop     ecx", "push    1; level", "mov     eax, [esp+38h+small_k]", "push    eax; nbytes", "call    _gcry_random_bytes_secure", "mov     [esp+3Ch+rndbuf], eax", "add     esp, 10h", "jmp     loc_4DD4F"], "preds": [318747, 318758, 318987], "succs": [318799]}, "319032": {"disasm": ["sub     esp, 0Ch", "push    1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jz      loc_4DD1B"], "preds": [318824], "succs": [318747, 319053]}, "319053": {"disasm": ["mov     eax, ds:(progress_cb_1 - 0E2E98h)[ebx]", "test    eax, eax", "jz      loc_4DD1B"], "preds": [319032], "succs": [318747, 319067]}, "319067": {"disasm": ["sub     esp, 0Ch", "mov     ecx, ds:(progress_cb_data_1 - 0E2E98h)[ebx]", "push    0", "push    0", "push    2Dh ; '-'", "mov     edx, [esp+44h+var_20]", "push    edx", "push    ecx", "call    eax", "add     esp, 20h", "jmp     loc_4DD1B"], "preds": [319053], "succs": [318747]}, "319104": {"disasm": ["sub     esp, 0Ch", "mov     eax, [esp+38h+rndbuf]", "push    eax; p", "call    _gcry_free", "mov     [esp+3Ch+a], 1; mask", "call    _gcry_get_debug_flag", "add     esp, 10h", "test    eax, eax", "jz      short loc_4DEC6"], "preds": [318845], "succs": [319136, 319174]}, "319136": {"disasm": ["mov     eax, ds:(progress_cb_1 - 0E2E98h)[ebx]", "test    eax, eax", "jz      short loc_4DEC6"], "preds": [319104], "succs": [319146, 319174]}, "319146": {"disasm": ["sub     esp, 0Ch", "lea     edx, (aPkElg - 0E2E98h)[ebx]; \"pk_elg\"", "push    0", "push    0", "push    0Ah", "push    edx", "mov     edx, ds:(progress_cb_data_1 - 0E2E98h)[ebx]", "push    edx", "call    eax", "add     esp, 20h"], "preds": [319136], "succs": [319174]}, "319174": {"disasm": ["sub     esp, 0Ch", "push    p_1; a", "call    _gcry_mpi_free", "mov     [esp+3Ch+a], temp; a", "call    _gcry_mpi_free", "add     esp, 2Ch", "mov     eax, k", "pop     ebx", "pop     k", "pop     p_1", "pop     temp", "retn"], "preds": [319104, 319136, 319146], "succs": []}, "319208": {"disasm": ["mov     eax, ds:(progress_cb_1 - 0E2E98h)[ebx]", "test    eax, eax", "jz      loc_4DDB2"], "preds": [318865], "succs": [318898, 319222]}, "319222": {"disasm": ["sub     esp, 0Ch", "mov     edx, ds:(progress_cb_data_1 - 0E2E98h)[ebx]", "push    0", "push    0", "push    2Eh ; '.'", "mov     ecx, [esp+44h+var_20]", "push    ecx", "push    edx", "call    eax", "add     esp, 20h", "jmp     loc_4DDB2"], "preds": [319208], "succs": [318898]}, "319253": {"disasm": ["mov     edx, orig_nbits", "shr     edx, 3", "add     edx, 0C8h", "jmp     loc_4DCBB"], "preds": [318624], "succs": [318651]}, "319269": {"disasm": ["sub     esp, 0Ch", "lea     eax, (aChoosingARando_1 - 0E2E98h)[ebx]; \"choosing a random k\\n\"", "push    eax; fmt", "call    _gcry_log_debug", "add     esp, 10h", "jmp     loc_4DCEF"], "preds": [318668], "succs": [318703]}, "319292": {"disasm": ["mov     [esp+2Ch+nbits], orig_nbits", "jmp     loc_4DCCC"], "preds": [318528], "succs": [318668]}, "319301": {"disasm": ["push    eax", "lea     eax, (__FUNCTION___7992 - 0E2E98h)[ebx]; \"gen_k\"", "push    eax; func", "lea     eax, (aLibgcrypt185Ci_9 - 0E2E98h)[ebx]; \"../../libgcrypt-1.8.5/cipher/elgamal.c\"", "push    0D4h; line", "push    eax; file", "call    _gcry_bug"], "preds": [318651], "succs": []}}, "decrypt": {"322176": {"disasm": ["push    ebp", "push    edi", "push    esi", "mov     esi, b_0", "push    ebx", "call    __x86_get_pc_thunk_bx", "add     ebx, (offset _GLOBAL_OFFSET_TABLE_ - $)", "sub     esp, 28h", "mov     ebp, [esp+38h+arg_0]", "mov     [esp+38h+output], output_0", "mov     [esp+38h+a], a_0", "mov     output_0, [ebp+0]", "push    eax; a", "call    _gcry_mpi_get_nbits", "pop     edx", "mov     edi, eax", "mov     ecx, [esp+38h+a]", "push    ecx; a", "call    _gcry_mpi_normalize", "mov     [esp+3Ch+var_3C], b_0; a", "mov     [esp+3Ch+b], b_0", "call    _gcry_mpi_normalize", "mov     [esp+3Ch+var_3C], nbits_0; nbits", "call    _gcry_mpi_snew", "mov     b_0, nbits_0", "mov     [esp+3Ch+nbits], esi", "mov     [esp+3Ch+var_3C], esi; nbits", "mov     nbits_0, eax", "call    _gcry_mpi_snew", "mov     nbits_0, eax", "pop     t2", "mov     eax, [esp+38h+nbits]", "push    eax; nbits", "call    _gcry_mpi_new", "add     esp, 0Ch", "push    0; level", "mov     edx, [esp+34h+nbits]", "push    edx; nbits", "mov     [esp+38h+nbits], r_0", "push    r_0; w", "call    _gcry_mpi_randomize", "mov     ecx, [ebp+0]", "push    ecx; mod", "mov     edx, [esp+40h+arg_4]", "mov     eax, [edx]", "push    eax; expo", "mov     eax, [esp+44h+nbits]", "push    eax; base", "push    t1; res", "call    _gcry_mpi_powm", "add     esp, 20h", "mov     eax, [ebp+0]", "push    eax; m", "mov     eax, [esp+30h+nbits]", "push    eax; v", "mov     eax, [esp+34h+a]", "push    eax; u", "push    t2; w", "call    _gcry_mpi_mulm", "mov     edx, [ebp+0]", "push    edx; mod", "mov     ecx, [esp+40h+arg_4]", "mov     ecx, [ecx]", "push    ecx; expo", "push    t2; base", "push    t2; res", "call    _gcry_mpi_powm", "add     esp, 1Ch", "mov     eax, [ebp+0]", "push    eax; n", "push    t2; a", "push    t2; x", "call    _gcry_mpi_invm", "mov     eax, [ebp+0]", "push    eax; m", "push    t2; v", "push    t1; u", "push    t1; w", "call    _gcry_mpi_mulm", "add     esp, 14h", "mov     eax, [esp+38h+nbits]", "push    eax; a", "call    _gcry_mpi_free", "mov     [esp+3Ch+var_3C], t2; a", "call    _gcry_mpi_free", "mov     eax, [ebp+0]", "push    eax; m", "push    t1; v", "mov     eax, [esp+44h+b]", "push    eax; u", "mov     edx, [esp+48h+output]", "push    edx; w", "call    _gcry_mpi_mulm", "add     esp, 14h", "push    t1; a", "call    _gcry_mpi_free", "add     esp, 2Ch", "pop     ebx", "pop     t2", "pop     t1", "pop     ebp", "retn"], "preds": [], "succs": []}}}